{"version":3,"sources":["node_modules/@babel/runtime/helpers/typeof.js","node_modules/fflate/esm/browser.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-loader.js","../src/libs/globalObject.js","../src/libs/console.js","../src/libs/FileSaver.js","../src/libs/AtobBtoa.js","../src/libs/rgbcolor.js","../src/libs/md5.js","../src/libs/rc4.js","../src/libs/pdfsecurity.js","../src/libs/pdfname.js","../src/jspdf.js","../src/modules/acroform.js","../src/libs/fontFace.js","../src/modules/addimage.js","../src/modules/annotations.js","../src/modules/arabic.js","../src/modules/autoprint.js","../src/modules/canvas.js","../src/modules/cell.js","../src/modules/javascript.js","../src/modules/context2d.js","../src/modules/filters.js","../src/modules/fileloading.js","../src/modules/html.js","../src/modules/outline.js","../src/modules/jpeg_support.js","../src/libs/png.js","../src/modules/split_text_to_size.js","../src/libs/omggif.js","../src/libs/JPEGEncoder.js","../src/libs/BMPDecoder.js","../src/libs/WebPDecoder.js","../src/modules/png_support.js","../src/modules/gif_support.js","../src/modules/bmp_support.js","../src/modules/webp_support.js","../src/modules/rgba_support.js","../src/modules/setlanguage.js","../src/modules/standard_fonts_metrics.js","../src/modules/ttfsupport.js","../src/modules/svg.js","../src/modules/total_pages.js","../src/modules/viewerpreferences.js","../src/modules/xmp_metadata.js","../src/modules/utf8.js","../src/modules/vfs.js","../src/libs/bidiEngine.js","../src/libs/ttffont.js","export.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["_typeof","o","module","exports","Symbol","iterator","constructor","prototype","__esModule","ch2","wk","c","id","msg","transfer","cb","u","URL","createObjectURL","Blob","type","w","Worker","onerror","e","error","onmessage","data","postMessage","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","length","l","le","co","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","d","p","bits16","shft","slc","n","set","subarray","inflt","dat","buf","st","sl","noBuf","noSt","cbuf","bl","nbuf","Math","final","f","pos","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","mxa","sym","add","dsym","end","wbits","wbits16","hTree","push","t2","slice","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","ll","dl","llm","lcts","it","clct","len","dst","deo","et","dflt","lvl","plvl","pre","post","lst","floor","opt","msk_1","prev","head","bs1_1","ceil","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","min","maxd","ml","nl","mmd","md","ti","pti","lin","din","crct","k","crc","cr","adler","dopt","level","mem","log","mrg","wcln","fn","fnStr","td","toString","ks","indexOf","lastIndexOf","replace","split","st_1","spInd","ch","cbfs","buffer","wrkr","fns","init","td_1","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","size","cbify","opts","err","terminate","consume","astrm","strm","ondata","ev","astrmify","call","b2","b4","filename","mtime","Date","now","charCodeAt","flg","zs","lv","AsyncCmpStrm","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","Compress","raw","AsyncGzip","AsyncCompress","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","Decompress","G","I","Z","_this_1","apply","arguments","AsyncDecompress","decompress","decompressSync","fltn","val","Array","isArray","strToU8","str","latin1","TextEncoder","encode","ar","ai","strFromU8","TextDecoder","decode","String","fromCharCode","slzh","zh","z","fnl","es","z64e","sc","su","off","wzh","cmp","ce","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","wzf","zip","Object","keys","tot","slft","files","term","tAll","cbf","oe","cdl","_loop_1","file","cbl","zipSync","unzip","_loop_2","c_1","no","infl","unzipSync","c_2","bundleURL","getBundleURLCached","getBundleURL","Error","matches","stack","match","getBaseURL","url","require","loadBundlesLazy","bundles","Promise","resolve","code","LazyPromise","reject","loadBundles","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","loader","load","register","bundle","substring","toLowerCase","bundleLoader","resolved","catch","executor","promise","onSuccess","onError","globalObject","window","global","self","this","consoleLog","console","warn","download","name","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","send","corsEnabled","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","atob","btoa","_global","HTMLAnchorElement","blob","webkitURL","createElement","rel","href","origin","location","target","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","test","bom","popup","title","body","innerText","force","isSafari","HTMLElement","safari","isChromeIOS","userAgent","FileReader","reader","onloadend","result","readAsDataURL","RGBColor","color_string","channels","ok","charAt","substr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","process","parseInt","processor","exec","g","isNaN","toRGB","toHex","md5cycle","ff","gg","hh","ii","add32","cmn","q","md51","state","md5blk","tail","md5blks","bind","hex_chr","rhex","singleToByteString","md5Bin","join","md5Check","hex","lsw","rc4","key","lastKey","lastState","num","permissionOptions","print","modify","copy","PDFSecurity","permissions","userPassword","ownerPassword","fileId","protection","forEach","perm","padding","paddedUserPassword","paddedOwnerPassword","O","processOwnerPassword","P","encryptionKey","lsbFirstWord","hexToBytes","U","toPDFName","strLength","charCode","PubSub","context","topics","subscribe","topic","callback","once","hasOwnProperty","token","random","unsubscribe","publish","args","tokens","sub","ex","message","getTopics","GState","parameters","supported","objectNumber","Pattern","gState","matrix","ShadingPattern","coords","colors","TilingPattern","boundingBox","xStep","yStep","stream","cloneIndex","jsPDF","options","precision","orientation","unit","format","compressPdf","filters","userUnit","floatPrecision","defaultPathOperation","encryptionOptions","compress","encryption","userPermissions","abs","putOnlyUsedFonts","usedFonts","API","internal","__private__","pdfVersion","getPdfVersion","setPdfVersion","value","pageFormats","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b3","b5","b6","b7","b8","b9","b10","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","letter","legal","ledger","tabloid","getPageFormats","getPageFormat","ApiMode","COMPAT","ADVANCED","apiMode","advancedAPI","saveGraphicsState","Matrix","scaleFactor","getPageHeight","setFontSize","getFontSize","compatAPI","restoreGraphicsState","combineFontStyleAndFontWeight","fontStyle","fontWeight","doSwitch","isAdvancedAPI","hpf","advancedApiModeTrap","methodName","roundToPrecision","number","parmPrecision","tmpPrecision","toFixed","f2","f3","scale","transformY","transformScaleY","setPrecision","creationDate","getFileId","setFileId","toUpperCase","convertDateToPDFDate","parmDate","tzoffset","getTimezoneOffset","tzsign","tzhour","tzmin","timeZoneString","padd2","convertPDFDateToDate","parmPDFDate","year","month","date","hour","minutes","seconds","setCreationDate","tmpCreationDateString","getCreationDate","currentPage","padd2Hex","hexString","offsets","content","contentLength","additionalObjects","pages","hasCustomDestination","outputDestination","resetDocument","rootDictionaryObjId","newObjectDeferred","resourceDictionaryObjId","setCustomOutputDestination","destination","setOutputDestination","resetCustomOutputDestination","string","write","getArrayBuffer","ab","ArrayBuffer","standardFonts","getStandardFonts","activeFontSize","fontSize","zoomMode","R2L","setR2L","getR2L","pageMode","setZoomMode","zoom","validZoomModes","undefined","getZoomMode","layoutMode","setPageMode","pmode","getPageMode","setLayoutMode","layout","getLayoutMode","setDisplayMode","documentProperties","subject","author","keywords","creator","getDocumentProperty","getDocumentProperties","setDocumentProperties","setProperties","properties","property","setDocumentProperty","activeFontKey","pageX","pageY","pageMatrix","fonts","fontmap","fontStateStack","patterns","patternMap","gStates","gStatesMap","activeGState","page","pagesContext","events","hotfixes","renderTargets","renderTargetMap","renderTargetStack","sx","shy","shx","sy","tx","ty","_matrix","defineProperty","get","atan2","decompose","separator","multiply","scaleX","sqrt","shear","scaleY","translate","rotate","skew","inversed","quot","aInv","bInv","cInv","dInv","applyToPoint","pt","Point","applyToRectangle","rect","pt1","pt2","h","Rectangle","clone","matrixMult","m1","m2","identityMatrix","unitMatrix","addPattern","pattern","patternKey","addShadingPattern","beginTilingPattern","beginNewRenderTarget","endTilingPattern","pop","restore","newObject","oid","newObjectDeferredBegin","doOutput","newAdditionalObject","obj","objId","decodeColorString","color","colorEncoded","floatVal","parseFloat","colorAsRGB","encodeColorString","ch1","ch3","ch4","letterArray","pdfColorType","rgbColor","getFilters","putStream","alreadyAppliedFilters","addLength1","valueOfLength1","objectId","encryptor","processedData","keyValues","additionalKeyValues","filterAsString","processDataByFilters","reverseChain","decodeParmsArray","putPage","pageNumber","pageObjectNumber","pageContentsObjId","contentsObjId","mediaBox","bottomLeftX","bottomLeftY","topRightX","topRightY","cropBox","bleedBox","trimBox","artBox","pageContext","pageContent","putPages","pageObjectNumbers","kids","putFont","font","isAlreadyPutted","postScriptName","encoding","putFonts","fontKey","putXObject","xObject","width","height","putXObjects","xObjectKey","interpolateAndEncodeRGBStream","numberSamples","tValues","dT","offset","unshift","index","aColor","bColor","round","trim","putShadingPattern","funcObjectNumber","putTilingPattern","deferredResourceDictionaryIds","resourcesObjectId","patternObjectId","resourcesOid","objectOid","putPatterns","putGState","putGStates","gStateKey","putXobjectDict","putEncryptionDict","toHexString","putFontDict","putShadingPatternDict","putTilingPatternDict","putGStatesDict","putResourceDictionary","objectIds","putResources","Number","MAX_SAFE_INTEGER","putAdditionalObjects","addFontToFontDictionary","fontName","addFont","isStandardFont","metadata","instance","addFonts","arrayOfFonts","parts","dictionary","SAFE","foo","alert","bar","to8bitStream","text","flags","sourceEncoding","encodingBlock","outputEncoding","newtext","isUnicode","bch","autoencode","codePages","noBOM","pdfEscape","beginPage","_setPage","_addPage","parmFormat","parmOrientation","dimensions","setLineWidth","lineWidth","strokeColor","lineCapID","lineJoinID","_deletePage","splice","setPage","getNumberOfPages","getFont","fontNameLowerCase","disableWarning","noFallback","putInfo","version","putCatalog","tmpRootDictionaryObjId","pcn","putTrailer","putHeader","putXRef","buildDocument","offsetOfXRef","getBlob","output","save","dataURI","pdfDocument","unescape","encodeURIComponent","pdfObjectUrl","integrity","htmlForNewWindow","JSON","stringify","nW","htmlForPDFjsNewWindow","pdfJsUrl","PDFjsNewWindow","scope","documentElement","querySelector","contentWindow","PDFViewerApplication","htmlForDataURLNewWindow","dataURLNewWindow","hasHotfix","hotfixName","getEncryptor","getPageInfo","pageNumberOneBased","getPageInfoByObjId","getCurrentPageInfo","addPage","insertPage","beforePage","movePage","targetPage","tmpPages","tmpPagesContext","deletePage","transform","payload","da","angle","align","charSpace","maxWidth","horizontalScale","transformationMatrix","tmp","xtra","isHex","lineHeight","lineHeightFactor","ESC","TabLen","transformTextToSpecialArray","curDa","sa","concat","shift","processTextByFunction","processingFunction","tmpResult","textIsOfTypeString","tmpTextIsOfTypeString","descent","baseline","splitTextToSize","reduce","acc","textLine","mutex","PI","rotationDirection","cos","sin","activeCharSpace","setCharSpace","getCharSpace","lang","renderingMode","parmRenderingMode","stroke","usedRenderingMode","lineWidths","leading","pageWidth","pageSize","getWidth","activeFont","assign","wordSpacingPerLine","newY","getStringUnitWidth","doKerning","newX","prevWidth","getHorizontalCoordinate","getVerticalCoordinate","doReversing","posX","posY","reverse","activeFontEncoding","STRING","ARRAY","variant","wordSpacing","generatePosition","parmPosX","parmPosY","parmTransformationMatrix","position","lineIndex","textColor","clip","rule","clipEvenOdd","discardPath","isValidStyle","style","setDefaultPathOperation","operator","getStyle","op","close","fill","fillWithOptionalPattern","fillEvenOdd","fillStroke","fillStrokeEvenOdd","fillWithPattern","putStyle","cloneTilingPattern","patternData","patternId","clipRuleFromStyle","setGState","moveTo","lineTo","curveTo","x1","y1","x2","y2","x3","y3","line","lines","closed","scalex","scaley","leg","x4","y4","path","triangle","roundedRect","rx","ry","MyArc","SQRT2","ellipse","lx","ly","circle","setFont","getFontEntry","getFontList","list","encodingOptions","getLineWidth","setLineDash","setLineDashPattern","dashArray","dashPhase","getLineHeight","setLineHeightFactor","getLineHeightFactor","getHorizontalCoordinateString","getVerticalCoordinateString","getStrokeColor","getDrawColor","setStrokeColor","setDrawColor","fillColor","getFillColor","setFillColor","getTextColor","setTextColor","CapJoinStyles","butt","but","miter","rounded","projecting","project","square","bevel","setLineCap","setLineJoin","setLineMiterLimit","setMiterLimit","addGState","equals","duplicate","fontState","setCurrentTransformationMatrix","comment","_x","enumerable","_y","_type","_w","_h","RenderTarget","getPageWidth","setPageWidth","setPageHeight","endFormObject","newXObject","xObjectId","plugin","beginFormObject","doFormObject","getFormObject","returnPromise","unload","newEvents","eventname","handler_and_args","getCoordinateString","collections","setWidth","getHeight","setHeight","getPDFVersion","configurable","byteString","byte","bytes","generation","other","ignore","count","jsPDFAPI","pdfUnescape","f5","__acroform__","inherit","child","parent","create","createFormXObject","formObject","xobj","AcroFormXObject","AcroFormAppearance","BBox","setBit","bitPosition","clearBit","getBit","getBitForPdf","setBitForPdf","clearBitForPdf","calculateCoordinates","coordinates","lowerLeft_X","lowerLeft_Y","upperRight_X","upperRight_Y","calculateAppearanceStream","appearanceStreamContent","V","DV","_V","calcRes","calculateX","maxFontSize","returnValue","textSplit","multiline","word","isSmallerThanWidth","lastLine","calculateFontSpace","FontSize","startX","lastLength","textHeight","startY","lastY","firstWordInLine","lastWordInLine","currWord","lineCount","isWithNewLine","nextLineIsSmaller","isLastWord","currLine","textAlign","acroformPluginTemplate","fields","xForms","acroFormDictionaryRoot","printedOut","isInitialized","createAnnotationReference","object","annotations","find","entry","createXFormObjectCallback","fieldArray","fieldObject","initializeAcroForm","acroformPlugin","AcroFormField","FieldNum","parse","AcroFormDictionary","_eventID","AcroFormDictionaryCallback","Fields","hasAnnotation","annotReferenceCallback","putCatalogCallback","standardFields","Kids","keyValueList","oldRect","Rect","DA","createDefaultAppearanceStream","getKeyValueListForStream","hasAppearanceStream","appearance","appearanceStreamString","createFieldCallback","arrayToPdfArray","array","toPdfString","AcroFormPDFObject","_objId","_scope","writable","getOwnPropertyNames","filter","getOwnPropertyDescriptor","_stream","_BBox","_DA","_Kids","_F","Boolean","F","_Ff","_Rect","_FT","_T","AcroFormChildClass","_fontName","_fontStyle","_fontSize","_maxFontSize","_color","AcroFormTextField","_DV","AcroFormButton","_page","_hasAppearanceStream","Ff","_Q","AcroFormChoiceField","FT","_TI","_Opt","regex","getMatches","getOptions","setOptions","addOption","removeOption","allEntries","combo","AcroFormListBox","AcroFormComboBox","AcroFormEditBox","edit","_AS","_MK","CA","AcroFormPushButton","pushButton","AcroFormRadioButton","radio","_parent","_optionName","caption","appearanceState","_AppearanceType","RadioButton","Circle","createAppearanceStream","optionName","setAppearance","getCA","createOption","Parent","addField","AcroFormCheckBox","CheckBox","_MaxLen","isInteger","AcroFormPasswordField","password","N","On","YesNormal","D","YesPushDown","Off","OffPushDown","encodedColor","DotRadius","Bezier_C","DotRadiusBezier","kc","dc","Cross","cross","calculateCross","AcroForm","ChoiceField","ListBox","ComboBox","EditBox","Button","PushButton","TextField","PasswordField","Appearance","toLookup","arr","lookup","__addimage__","UNKNOWN","imageFileTypeHeaders","PNG","TIFF","JPEG","JPEG2000","GIF87a","GIF89a","WEBP","BMP","getImageFileTypeByImageData","imageData","fallbackFormat","headerSchemata","compareResult","fileType","Uint8ClampedArray","isArrayBufferView","putImage","image","colorSpace","color_spaces","INDEXED","palette","sMask","DEVICE_CMYK","bitsPerComponent","decodeParameters","transparency","predictor","arrayBufferToBinaryString","putResourcesCallback","images","putXObjectsDictCallback","initialize","getImages","getImageIndex","isImageTypeSupported","isDOMElement","nodeType","getImageDataFromElement","element","nodeName","hasAttribute","src","getAttribute","tmpImageData","loadFile","mimeType","toDataURL","checkImagesForAlias","alias","determineWidthAndHeight","writeImageToPDF","rotation","dims","coord","vcoord","f4","rotationTransformationMatrix","DEVICE_RGB","DEVICE_GRAY","CAL_GREY","CAL_RGB","LAB","ICC_BASED","PATTERN","SEPARATION","DEVICE_N","DCT_DECODE","FLATE_DECODE","LZW_DECODE","JPX_DECODE","JBIG2_DECODE","ASCII85_DECODE","ASCII_HEX_DECODE","RUN_LENGTH_DECODE","CCITT_FAX_DECODE","image_compression","NONE","FAST","MEDIUM","SLOW","sHashCode","hash","byteLength","validateStringAsBase64","possibleBase64String","extractImageFromDataUrl","dataUrl","dataUrlParts","extractedInfo","charset","supportsArrayBuffer","isArrayBuffer","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","binaryStringToUint8Array","binary_string","addImage","compression","processImageData","dataAsBinaryString","convertBase64ToBinaryString","generateAliasFromImageData","checkCompressValue","stringData","throwError","base64Info","rawData","getImageProperties","notEmpty","addPageData","putPageData","anno","pageInfo","pageAnnos","found","escape","objText","objPopup","encryptorText","bounds","contents","loc","_nameMap","top","finalBounds","magFactor","left","createAnnotation","link","textWithLink","linkHeight","linkWidth","totalLineWidth","getTextWidth","numOfLines","arabicSubstitionA","ligatures","arabic_diacritics","alfletter","__arabicParser__","isInArabicSubstitutionA","isArabicLetter","isArabicEndLetter","isArabicAlfLetter","arabicLetterHasIsolatedForm","arabicLetterHasFinalForm","arabicLetterHasInitialForm","arabicLetterHasMedialForm","resolveLigatures","letters","tmpLigatures","effectedLetters","isArabicDiacritic","getCorrectForm","currentChar","beforeChar","nextChar","parseArabic","currentLetter","prevLetter","nextLetter","words","newWords","processArabic","tmpText","autoPrint","refAutoPrintTag","addJS","Canvas","jsPdfInstance","_width","getContext","pageWrapXEnabled","pageWrapX","_height","pageWrapYEnabled","pageWrapY","_childNodes","_style","contextType","contextAttributes","pdf","context2d","_canvas","canvas","NO_MARGINS","bottom","right","printingHeaderRow","_initialize","__cell__","headerFunction","margins","_reset","lastCell","Cell","_text","_lineNumber","_align","lineNumber","toArray","setHeaderFunction","func","getTextDimensions","amountOfLines","tempWidth","cellAddPage","cell","currentCell","tableHeaderRow","printHeaders","printHeaderRow","table","headers","config","column","headerName","headerNames","headerLabels","headerAligns","columnMatrix","columnWidths","columnMinWidths","tableHeaderConfigs","autoSize","css","headerBackgroundColor","headerTextColor","table_font_size","header","prompt","rec","row","rowHeight","calculateLineHeight","setTableHeaderRow","pv","cv","rowStart","Function","cellData","cellStart","col","table_x","table_y","model","new_page","tableHeaderCell","tempHeaderConf","currentTextColor","fontStyleOrder","italic","oblique","normal","fontStretchOrder","fontStretchLookup","fontWeights","fontWeightsLookup","normalizeFontFace","fontFace","family","normalizeFontStyle","weight","normalizeFontWeight","stretch","normalizeFontStretch","ref","searchFromPivot","matchingSet","order","pivot","dir","defaultGenericFontFamilies","fixed","monospace","terminal","cursive","fantasy","serif","systemFonts","icon","menu","ruleToString","resolveFontFace","fontFaceMap","rules","defaultFontFamily","genericFontFamilies","resolveFontStretch","ordering","resolveFontStyle","resolveFontWeight","eatWhiteSpace","input","trimLeft","parseQuotedFontFamily","quote","parseNonQuotedFontFamily","jsNamesObj","jsJsObj","defaultFont","_ctx","ContextLayer","ctx","isStrokeTransparent","strokeOpacity","strokeStyle","fillStyle","isFillTransparent","fillOpacity","textBaseline","lineJoin","lineCap","globalCompositeOperation","globalAlpha","clip_path","currentPoint","miterLimit","lastPoint","lineDashOffset","lineDash","margin","prevPageLastElemOffset","ignoreClearRect","Context2D","parentNode","_pdf","_pageWrapXEnabled","_pageWrapYEnabled","_posX","_posY","_autoPaging","lastBreak","pageBreaks","_ctxStack","rgba","getRGBA","_fontFaceMap","getFontFaceMap","fontFaces","convertedFontFaces","fontMap","convertToFontFaces","normalized","buildFontFaceMap","_fontFaces","fontFamily","fontSizeUnit","parsed","remaining","parseFontFamily","jsPdfFontName","fallbackFonts","arial","Arial","verdana","Verdana","helvetica","Helvetica","getLineDash","pathPreProcess","beginPath","closePath","pathBegin","quadraticCurveTo","cpx","cpy","pt0","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","arc","radius","startAngle","endAngle","counterclockwise","isIdentity","xpt","x_radPt","x_radPt0","pow","arcTo","fillRect","strokeRect","clearRect","doStackPush","tmpPageNumber","ctxStack","doStackPop","isCanvasGradient","getColor","fillText","degs","rad2deg","putText","strokeText","measureText","txtWidth","TextMetrics","scalewidth","scaleheight","setTransform","hasMargins","drawImage","img","swidth","sheight","imageProperties","factorX","factorY","clipFactorX","clipFactorY","clipPath","decomposedTransformationMatrix","xRect","pageArray","getPagesByPath","sortPages","autoPaging","pageWidthMinusMargins","topMargin","firstPageHeight","pageHeightMinusMargins","previousPageHeightSum","tmpPaths","pathPositionRedo","drawPaths","tmpRect","needsClipping","yOffset","rectOfQuadraticCurve","getQuadraticCurveBoundary","rectOfBezierCurve","getBezierCurveBoundary","paths","isClip","tmpPath","oldLineWidth","origPath","xPath","delta","moves","begin","deltas","iii","began","arcs","drawArc","drawLine","drawLines","doClip","getBaseline","getTextBottom","yBaseLine","createLinearGradient","canvasGradient","colorStops","addColorStop","createPattern","createRadialGradient","includeMove","curves","createArc","curve","doMove","drawCurve","textDimensions","yTop","oldSize","baselineRect","textBounds","pageHeightMinusBottomMargin","pageWidthMinusRightMargin","textBoundsOnPage","doSlice","croppedText","baseLineRectOnPage","prevX","prevY","anticlockwise","twoPi","halfPi","totalAngle","sgn","createSmallArc","q1","q2","k2","cos_ar","sin_ar","ey","midX1","midY1","midX2","midY2","resultX1","resultX2","resultY1","resultY2","ax","ay","bx","by","cx","cy","dx","dy","px","py","qx","qy","minx","miny","maxx","maxy","tobx","toby","tocx","tocy","todx","tody","prevLineDash","nextLineDash","ASCII85Encode","ASCII85Decode","ASCIIHexDecode","regexCheckIfHex","RegExp","FlateEncode","origData","filterChain","sync","request","sanitizeUnicode","dataLength","charArray","StringFromCharCode","overrideMimeType","responseText","browserRequest","loadImageFile","loadHtml2Canvas","import","html2canvas","default","loadDomPurify","dompurify","objType","tagName","el","className","innerHTML","sanitize","root","convert","template","setProgress","__proto__","prop","container","overlay","progress","enableLinks","backgroundColor","from","getType","to","toContainer","toCanvas","toImg","toPdf","thenList","setPageSize","containerCSS","display","windowWidth","clientWidth","scrollWidth","offsetWidth","source","cloneNode","javascriptEnabled","createTextNode","nodeValue","firstChild","nextSibling","appendChild","addEventListener","scrollTop","scrollLeft","scrollHeight","offsetHeight","clientHeight","overflow","zIndex","clear","border","float","prereqs","contains","onrendered","removeChild","toContext2d","async","allowTaint","scrollX","scrollY","imageTimeout","logging","proxy","removeContainer","foreignObjectRendering","useCORS","windowHeight","imgData","quality","outputImg","outputPdf","doCallback","setMargin","cbk","toPx","getPageSize","inner","ratio","updateProgress","onFulfilled","onRejected","thenCore","thenBase","selfPromise","returnVal","thenExternal","catchExternal","using","export","run","format_as_string","pageHeight","html","worker","javascript","namesOid","outline","children","render","createNamedDestinations","totalPages","dests","info","names2Oid","makeRef","item","genIds_r","renderRoot","renderItems","objStart","count_r","objEnd","makeString","markers","processJPEG","blockLength","numcomponents","getJpegInfo","getCharWidthsArray","splitLongWord","splitParagraphIntoLines","makeImage","scratchCanvas","scratchCtx","chunkSize","palLen","delayDen","delayNum","frame","section","palShort","_i","_j","_ref","animation","readUInt32","_results","colorType","compressionMethod","filterMethod","interlaceMethod","numFrames","numPlays","Infinity","frames","read","xOffset","readUInt16","delay","disposeOp","blendOp","indexed","grayscale","rgb","hasAlphaChannel","pixelBitlength","decodePixels","pixelBytes","fullPixels","_this","pass","x0","y0","abyte","pa","paeth","pb","pc","pixels","scanlineLength","upper","upperLeft","_k","_l","_m","isFull","fullPos","partPos","decodePalette","ret","_ref1","copyToImageData","alpha","_decodedPalette","hasBrowserCanvas","putImageData","Image","decodeFrames","_len","createImageData","renderFrame","animate","doFrame","frameNumber","_timeout","stopAnimation","clearTimeout","_png","GifReader","pf0","global_palette_flag","num_global_colors","global_palette_offset","global_palette_size","no_eof","transparent_index","disposal","loop_count","block_size","pf1","pf2","interlace_flag","num_local_colors","palette_offset","palette_size","has_local_palette","data_offset","data_length","interlaced","loopCount","frameInfo","frame_num","decodeAndBlitFrameBGRA","num_pixels","index_stream","GifReaderLZWOutputIndexStream","trans","framewidth","framestride","xleft","opbeg","opend","scanstride","interlaceskip","il","decodeAndBlitFrameRGBA","code_stream","output_length","min_code_size","clear_code","eoi_code","next_code","cur_code_size","code_mask","cur_shift","cur","subblock_size","code_table","prev_code","chase_code","chase_length","chase","JPEGEncoder","YDC_HT","UVDC_HT","YAC_HT","UVAC_HT","currentQuality","ffloor","YTable","UVTable","fdtbl_Y","fdtbl_UV","bitcode","category","outputfDCTQuant","DU","byteout","bytenew","bytepos","YDU","UDU","VDU","RGB_YUV_TABLE","ZigZag","std_dc_luminance_nrcodes","std_dc_luminance_values","std_ac_luminance_nrcodes","std_ac_luminance_values","std_dc_chrominance_nrcodes","std_dc_chrominance_values","std_ac_chrominance_nrcodes","std_ac_chrominance_values","computeHuffmanTbl","nrcodes","std_table","codevalue","pos_in_table","HT","writeBits","posval","writeByte","writeWord","processDU","CDU","fdtbl","DC","HTDC","HTAC","EOB","M16zeroes","DU_DCT","d0","d1","d2","d3","d4","d5","d6","d7","fDCTQuant","dataOff","tmp0","tmp7","tmp1","tmp6","tmp2","tmp5","tmp3","tmp4","tmp10","tmp13","tmp11","tmp12","z1","z5","z2","z4","z3","z11","z13","tmp0p2","tmp7p2","tmp1p2","tmp6p2","tmp2p2","tmp5p2","tmp3p2","tmp4p2","tmp10p2","tmp13p2","tmp11p2","tmp12p2","z1p2","z5p2","z2p2","z4p2","z3p2","z11p2","z13p2","Diff","end0pos","lng","startpos","nrzeroes","nrmarker","setQuality","sf","YQT","UVQT","aasf","initQuantTables","writeDQT","writeSOF0","writeDHT","DCY","DCU","DCV","displayName","quadWidth","fillbits","sfcc","initCharLookupTable","nrlower","nrupper","cat","nr","nrneg","initCategoryNumber","initRGBYUVTable","BmpDecoder","is_with_alpha","datav","DataView","bottom_up","flag","parseHeader","parseBGR","WebPDecoder","fa","L","J","H","M","wa","Ed","ma","_WebPDecoder","Fd","Ub","jc","Qb","qb","nd","pd","xb","Ca","Ka","oa","Jd","Yc","Zc","Qa","na","K","ca","Sb","Ra","bb","Vb","ob","db","Gd","Hd","Wb","Sa","Xb","Id","ra","Ta","Yb","Ha","Zb","X","Mb","Xa","$b","ac","bc","xa","yb","ud","hd","jd","aa","Ia","cc","Kd","Ld","ec","Ea","Md","Nd","Od","Pd","Qd","fb","gb","hb","zb","Ab","Ja","Bb","Rd","A","Sd","ea","Tc","Cd","lb","Db","W","Cb","S","RGBA","kb","sd","Td","Ud","ib","bd","Da","Vd","T","Wd","ba","ka","Mc","Nc","fc","Rc","Xd","ya","Kb","za","gc","Ua","Va","memory","Ib","Jb","hc","Oa","ic","Aa","Yd","Ba","Wa","Zd","$d","ae","ta","Eb","be","ga","Dc","mc","nc","de","ua","ub","ha","xc","vc","Ya","oc","C","ee","E","B","Q","fe","qc","Fb","rc","ge","va","Ma","Gb","tc","uc","Hb","wc","yc","zc","qd","rd","ia","tb","he","$","Pb","wd","xd","vb","ie","Ac","Bc","je","Cc","VP8LMapColor32b","ke","VP8LMapColor8b","rb","Oc","R","me","qa","Y","la","ja","Fa","ne","sb","La","Za","$a","jb","pe","nb","qe","Pa","Ga","Na","Ec","se","Fc","ue","yd","Rb","ve","we","Lb","Gc","wb","xe","Wc","Xc","ye","Pc","Tb","zd","vd","od","ld","dd","Hc","ze","Sc","Qc","ad","Ob","Ad","Dd","Ae","Nb","Ic","Be","Kc","ed","$c","Jc","Bd","gd","Uc","Vc","put","Ce","De","Ee","Fe","Ge","He","Ie","Lc","Me","Ne","Oe","Pe","Qe","Re","Se","Te","Ue","Ve","We","Xe","Ye","Ze","$e","af","bf","ef","gf","hf","jf","kf","mf","nf","of","pf","qf","rf","tf","uf","vf","wf","xf","yf","zf","Af","Bf","Ke","Le","Je","kd","Cf","Df","Ef","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Predictor0","Predictor1","Predictor2","Predictor3","Predictor4","Predictor5","Predictor6","Predictor7","Predictor8","Predictor9","Predictor10","Predictor11","Predictor12","Predictor13","PredictorAdd0","PredictorAdd1","PredictorAdd2","ColorIndexInverseTransform","MapARGB","VP8LColorIndexInverseTransformAlpha","MapAlpha","VP8LPredictorsAdd","VP8LPredictors","VP8LPredictorsAdd_C","VP8LPredictors_C","UpsampleRgbLinePair","UpsampleBgrLinePair","UpsampleRgbaLinePair","UpsampleBgraLinePair","UpsampleArgbLinePair","UpsampleRgba4444LinePair","UpsampleRgb565LinePair","Qf","WebPDecodeRGBA","te","GetTag","data_off","GetLE24","GetLE32","webpdecoder","imagearray","src_off","alpha_chunk","alpha_size","alpha_offset","memcmp","fourcc","payload_size","payload_size_padded","src_off_","temp","WebPRiffParser","hasCompressionJS","compressBytes","lineLength","colorsPerPixel","filter_method","filterUp","filterSub","filterAverage","filterPaeth","applyPngFilterMethod","prevLine","filter_methods","getFilterMethods","results","ind","getIndexOfSmallestSum","filterNone","up","upLeft","paethPredictor","pLeft","pUp","pUpLeft","arrays","sum","processPNG","trns","pal","smask","alphaData","hasColors","pixel","pbl","pDiff","total","getPredictorFromCompression","processGIF89A","rawImageData","processGIF87A","fileSize","getUint32","reserved","headerSize","getInt32","planes","getUint16","bitPP","rawSize","hr","vr","importantColors","getUint8","quad","bitn","bit1","xlen","mode","bit4","before","after","bit8","bit15","dif_w","_1_5","bit16","_1_6","bit24","bit32","getData","processBMP","processWEBP","processRGBA","imagePixels","rgbOut","alphaOut","outIndex","alphaIndex","rgbData","setLanguage","langCode","languageSettings","isSubscribed","sq","an","hy","as","ast","az","eu","bn","br","bg","my","cs","en","eo","fo","fj","fi","fr","fy","fur","gl","gu","ht","hi","hu","is","iu","kn","kk","km","ky","tlh","ko","mk","ms","mt","mi","mr","mo","nv","ng","nn","or","om","pl","qu","rm","ro","ru","sz","sg","si","sr","sk","so","sw","tt","th","tig","ts","tn","tk","uk","hsb","ur","vi","vo","xh","ji","zu","languageCode","char_code","widths","Unicode","widthsFractionOf","fof","kerning","kerningFractionOf","kerningValue","prior_char_code","default_char_width","widthOfString","widthOfGlyph","characterToGlyph","widths_array","firstLineMaxLen","maxLen","answer","workingLen","startOfLine","maxlen","lineIndent","postProcess","line_length","textIndent","separator_length","current_word_length","spaceCharWidth","pad","wrds","wrd","idx","paragraphs","fsize","newOptions","fontUnit_maxLen","__fontmetrics__","encoded","mappingUncompress","mappingCompress","keystring","valuestring","numberprefix","vals","uncompress","stringparts","parent_key_pair","sign","activeobject","parentchain","keyparts","valueparts","datalen","WinAnsiEncoding","encodings","Courier","fontMetrics","ZapfDingbats","metrics","existsFileInVFS","getFileFromVFS","TTFFont","glyIdsUsed","loadCanvg","canvg","addSvgAsImage","svg","ignoreMouse","ignoreAnimation","ignoreDimensions","doc","fromString","putTotalPages","pageExpression","replaceExpression","totalNumberOfPages","pdfEscape16","viewerPreferences","doReset","configuration","isValid","method","configurationTemplate","HideToolbar","defaultValue","explicitSet","valueSet","HideMenubar","HideWindowUI","FitWindow","CenterWindow","DisplayDocTitle","NonFullScreenPageMode","Direction","ViewArea","ViewClip","PrintArea","PrintClip","PrintScaling","Duplex","PickTrayByPDFSize","PrintPageRange","NumCopies","configurationKeys","rangeArray","arrayContainsElement","viewerpreferences","vPref","pdfDict","postPutResources","rdf_beginning","__metadata__","namespaceuri","utf8_xmpmeta_beginning","utf8_rdf_beginning","utf8_metadata","utf8_rdf_ending","utf8_xmpmeta_ending","total_len","metadata_object_number","addMetadata","padz","toUnicode","toUnicodeCmap","codes","range","unicode","unicodeMap","pdfOutput","subset","pdfOutput2","fontTable","cmap","fontDescriptor","PDFObject","bbox","stemV","italicAngle","ascender","decender","capHeight","DescendantFont","identityHFunction","hmtx","unitsPerEm","winAnsiEncodingFunction","utf8TextFunction","cmapConfirm","strText","codeMap","parms","_initializeVFS","vFS","addFileToVFS","filecontent","__bidiEngine__","_hasUbatB","_hasUbatS","_isInVisual","_isInRtl","_isOutVisual","_isOutRtl","_isSymmetricSwapping","_UNICODE_TYPES","_bidiUnicodeTypes","_STATE_TABLE_LTR","_STATE_TABLE_RTL","_TYPE_NAMES_MAP","EN","AN","_UNICODE_RANGES_MAP","_SWAP_TABLE","_LTR_RANGES_REG_EXPR","_lastArabic","_dir","_getCharType","rangeIdx","_isContextualDirRtl","charType","_resolveCharType","chars","types","resolvedTypes","wType","nType","cType","rtlCandidate","_invertString","sourceToTargetMap","levels","_computeLevels","hiLevel","params","action","newLevel","prevState","condPos","newState","stateTable","_handleUbatS","_invertByLevel","high","low","_reorder","_symmetricSwap","DIR_RTL","doBidiReorder","_init","isSymmetricSwappingOrig","isInputVisual","isOutputVisual","isInputRtl","isOutputRtl","isSymmetricSwapping","bidiEngine","Data","readString","Subset","registerTTF","directory","Directory","HeadTable","NameTable","CmapTable","hhea","HheaTable","maxp","MaxpTable","HmtxTable","PostTable","os2","OS2Table","loca","LocaTable","glyf","GlyfTable","exists","lineGap","xMin","yMin","xMax","yMax","italic_angle","xHeight","familyClass","isSerif","isScript","isFixedPitch","character","glyph","forGlyph","advance","includeGap","gap","Table","readByte","writeUInt32","readInt32","int","writeInt32","writeUInt16","readInt16","writeInt16","writeString","readShort","writeShort","readLongLong","writeLongLong","readInt","writeInt","checksum","scalarType","tableCount","searchRange","entrySelector","rangeShift","tables","tag","adjustment","directoryLength","headOffset","log2","tableData","__slice","__hasProp","__extends","ctor","__super__","_super","revision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","CmapEntry","endCode","glyphId","glyphIds","idDelta","idRangeOffset","saveOffset","segCount","segCountX2","startCode","platformID","encodingID","language","charmap","charMap","diff","endCodes","glyphIDs","indexes","last","nextID","old","rangeOffsets","startCodes","startGlyph","subtable","_len1","_len2","_len3","_len4","_len5","_len6","_len7","_n","_name","_o","_p","_q","new","maxGlyphID","LN2","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","averageCharWidth","weightClass","widthClass","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","panose","charRange","vendorID","selection","firstCharIndex","lastCharIndex","ascent","winAscent","winDescent","codePageRange","defaultChar","breakChar","maxContext","numberOfGlyphs","underlinePosition","underlineThickness","minMemType42","maxMemType42","minMemType1","maxMemType1","glyphNameIndex","names","_results1","numGlyphs","NameEntry","languageID","entries","stringOffset","strings","nameID","copyright","fontSubfamily","uniqueSubfamily","postscriptName","trademark","manufacturer","designer","description","vendorUrl","designerUrl","license","licenseUrl","preferredFamily","preferredSubfamily","compatibleFull","sampleText","maxPoints","maxContours","maxCompositePoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","lsbCount","lsb","leftSideBearings","cache","glyphFor","numberOfContours","lengthOf","CompoundGlyph","SimpleGlyph","glyphs","mapping","old2new","compound","glyphOffsets","activeGlyphs","glyfPtr","listGlyf","newLocaTable","unicodes","next","generateCmap","roman","unicodeCmap","glyphsFor","additionalIDs","glyID","ids","new2old","newIDs","nextGlyphID","oldID","oldIDs","invert","isString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_jspdf","filetype","button","getElementById","event","main","genPdf","genTxt","xPosition","yPosition","txtBlob","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","createErrorOverlay","remove","stackTrace","getParents","modules","parents","dep","deps","cached","some","loadJSBundle","script","getElementsByTagName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAOA,CAACC,CAAC,EAAE;EAClB,yBAAyB;;EAEzB,OAAO,CAACC,MAAM,CAACC,OAAO,GAAGH,OAAO,GAAG,UAAU,IAAI,OAAOI,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUJ,CAAC,EAAE;IAClH,OAAO,OAAOA,CAAC;EACjB,CAAC,GAAG,UAAUA,CAAC,EAAE;IACf,OAAOA,CAAC,IAAI,UAAU,IAAI,OAAOG,MAAM,IAAIH,CAAC,CAACK,WAAW,KAAKF,MAAM,IAAIH,CAAC,KAAKG,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAON,CAAC;EACrH,CAAC,EAAEC,MAAM,CAACC,OAAO,CAACK,UAAU,GAAG,IAAI,EAAEN,MAAM,CAACC,OAAO,CAAC,SAAS,CAAC,GAAGD,MAAM,CAACC,OAAO,GAAGH,OAAO,CAACC,CAAC,CAAC;AAC9F;AACAC,MAAM,CAACC,OAAO,GAAGH,OAAO,EAAEE,MAAM,CAACC,OAAO,CAACK,UAAU,GAAG,IAAI,EAAEN,MAAM,CAACC,OAAO,CAAC,SAAS,CAAC,GAAGD,MAAM,CAACC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,GAAG,GAAG,CAAC,CAAC;AACZ,IAAIC,EAAE,GAAI,SAAAA,CAAUC,CAAC,EAAEC,EAAE,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,EAAE,EAAE;EAC1C,IAAIC,CAAC,GAAGP,GAAG,CAACG,EAAE,CAAC,KAAKH,GAAG,CAACG,EAAE,CAAC,GAAGK,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACR,CAAC,CAAC,EAAE;IAAES,IAAI,EAAE;EAAkB,CAAC,CAAC,CAAC,CAAC;EAC9F,IAAIC,CAAC,GAAG,IAAIC,MAAM,CAACN,CAAC,CAAC;EACrBK,CAAC,CAACE,OAAO,GAAG,UAAUC,CAAC,EAAE;IAAE,OAAOT,EAAE,CAACS,CAAC,CAACC,KAAK,EAAE,IAAI,CAAC;EAAE,CAAC;EACtDJ,CAAC,CAACK,SAAS,GAAG,UAAUF,CAAC,EAAE;IAAE,OAAOT,EAAE,CAAC,IAAI,EAAES,CAAC,CAACG,IAAI,CAAC;EAAE,CAAC;EACvDN,CAAC,CAACO,WAAW,CAACf,GAAG,EAAEC,QAAQ,CAAC;EAC5B,OAAOO,CAAC;AACZ,CAAE;;AAEF;AACA,IAAIQ,EAAE,GAAGC,UAAU;EAAEC,GAAG,GAAGC,WAAW;EAAEC,GAAG,GAAGC,WAAW;AACzD;AACA,IAAIC,IAAI,GAAG,IAAIN,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAa,CAAC,EAAE,CAAC,EAAE,gBAAiB,CAAC,CAAC,CAAC;AACjJ;AACA;AACA,IAAIO,IAAI,GAAG,IAAIP,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAa,CAAC,EAAE,CAAC,CAAC,CAAC;AACxI;AACA,IAAIQ,IAAI,GAAG,IAAIR,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACrF;AACA,IAAIS,IAAI,GAAG,SAAAA,CAAUC,EAAE,EAAEC,KAAK,EAAE;EAC5B,IAAIC,CAAC,GAAG,IAAIV,GAAG,CAAC,EAAE,CAAC;EACnB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;IACzBD,CAAC,CAACC,CAAC,CAAC,GAAGF,KAAK,IAAI,CAAC,IAAID,EAAE,CAACG,CAAC,GAAG,CAAC,CAAC;EAClC;EACA;EACA,IAAIC,CAAC,GAAG,IAAIV,GAAG,CAACQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;IACzB,KAAK,IAAIE,CAAC,GAAGH,CAAC,CAACC,CAAC,CAAC,EAAEE,CAAC,GAAGH,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAEE,CAAC,EAAE;MAClCD,CAAC,CAACC,CAAC,CAAC,GAAKA,CAAC,GAAGH,CAAC,CAACC,CAAC,CAAC,IAAK,CAAC,GAAIA,CAAC;IAChC;EACJ;EACA,OAAO,CAACD,CAAC,EAAEE,CAAC,CAAC;AACjB,CAAC;AACD,IAAIE,EAAE,GAAGP,IAAI,CAACH,IAAI,EAAE,CAAC,CAAC;EAAEW,EAAE,GAAGD,EAAE,CAAC,CAAC,CAAC;EAAEE,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC;AACjD;AACAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAEC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AAC7B,IAAIC,EAAE,GAAGV,IAAI,CAACF,IAAI,EAAE,CAAC,CAAC;EAAEa,EAAE,GAAGD,EAAE,CAAC,CAAC,CAAC;EAAEE,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC;AACjD;AACA,IAAIG,GAAG,GAAG,IAAIpB,GAAG,CAAC,KAAK,CAAC;AACxB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,KAAK,EAAE,EAAEA,CAAC,EAAE;EAC5B;EACA,IAAIU,CAAC,GAAI,CAACV,CAAC,GAAG,MAAM,MAAM,CAAC,GAAK,CAACA,CAAC,GAAG,MAAM,KAAK,CAAE;EAClDU,CAAC,GAAI,CAACA,CAAC,GAAG,MAAM,MAAM,CAAC,GAAK,CAACA,CAAC,GAAG,MAAM,KAAK,CAAE;EAC9CA,CAAC,GAAI,CAACA,CAAC,GAAG,MAAM,MAAM,CAAC,GAAK,CAACA,CAAC,GAAG,MAAM,KAAK,CAAE;EAC9CD,GAAG,CAACT,CAAC,CAAC,GAAG,CAAE,CAACU,CAAC,GAAG,MAAM,MAAM,CAAC,GAAK,CAACA,CAAC,GAAG,MAAM,KAAK,CAAE,MAAM,CAAC;AAC/D;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAI,SAAAA,CAAUC,EAAE,EAAEC,EAAE,EAAEZ,CAAC,EAAE;EAC7B,IAAIa,CAAC,GAAGF,EAAE,CAACG,MAAM;EACjB;EACA,IAAIf,CAAC,GAAG,CAAC;EACT;EACA,IAAIgB,CAAC,GAAG,IAAI3B,GAAG,CAACwB,EAAE,CAAC;EACnB;EACA,OAAOb,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EACb,EAAEgB,CAAC,CAACJ,EAAE,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC;EAClB;EACA,IAAIiB,EAAE,GAAG,IAAI5B,GAAG,CAACwB,EAAE,CAAC;EACpB,KAAKb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,EAAE,EAAE,EAAEb,CAAC,EAAE;IACrBiB,EAAE,CAACjB,CAAC,CAAC,GAAIiB,EAAE,CAACjB,CAAC,GAAG,CAAC,CAAC,GAAGgB,CAAC,CAAChB,CAAC,GAAG,CAAC,CAAC,IAAK,CAAC;EACvC;EACA,IAAIkB,EAAE;EACN,IAAIjB,CAAC,EAAE;IACH;IACAiB,EAAE,GAAG,IAAI7B,GAAG,CAAC,CAAC,IAAIwB,EAAE,CAAC;IACrB;IACA,IAAIM,GAAG,GAAG,EAAE,GAAGN,EAAE;IACjB,KAAKb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EAAE;MACpB;MACA,IAAIY,EAAE,CAACZ,CAAC,CAAC,EAAE;QACP;QACA,IAAIoB,EAAE,GAAIpB,CAAC,IAAI,CAAC,GAAIY,EAAE,CAACZ,CAAC,CAAC;QACzB;QACA,IAAIqB,GAAG,GAAGR,EAAE,GAAGD,EAAE,CAACZ,CAAC,CAAC;QACpB;QACA,IAAIsB,CAAC,GAAGL,EAAE,CAACL,EAAE,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAIqB,GAAG;QAC9B;QACA,KAAK,IAAIE,CAAC,GAAGD,CAAC,GAAI,CAAC,CAAC,IAAID,GAAG,IAAI,CAAE,EAAEC,CAAC,IAAIC,CAAC,EAAE,EAAED,CAAC,EAAE;UAC5C;UACAJ,EAAE,CAACT,GAAG,CAACa,CAAC,CAAC,KAAKH,GAAG,CAAC,GAAGC,EAAE;QAC3B;MACJ;IACJ;EACJ,CAAC,MACI;IACDF,EAAE,GAAG,IAAI7B,GAAG,CAACyB,CAAC,CAAC;IACf,KAAKd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EAClBkB,EAAE,CAAClB,CAAC,CAAC,GAAGS,GAAG,CAACQ,EAAE,CAACL,EAAE,CAACZ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAM,EAAE,GAAGY,EAAE,CAACZ,CAAC,CAAE;EACrD;EACA,OAAOkB,EAAE;AACb,CAAE;AACF;AACA,IAAIM,GAAG,GAAG,IAAIrC,EAAE,CAAC,GAAG,CAAC;AACrB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EACxBwB,GAAG,CAACxB,CAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,CAAC,GAAG,GAAG,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAC1BwB,GAAG,CAACxB,CAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,CAAC,GAAG,GAAG,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAC1BwB,GAAG,CAACxB,CAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,CAAC,GAAG,GAAG,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAC1BwB,GAAG,CAACxB,CAAC,CAAC,GAAG,CAAC;AACd;AACA,IAAIyB,GAAG,GAAG,IAAItC,EAAE,CAAC,EAAE,CAAC;AACpB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EACvByB,GAAG,CAACzB,CAAC,CAAC,GAAG,CAAC;AACd;AACA,IAAI0B,GAAG,GAAG,aAAcf,IAAI,CAACa,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEG,IAAI,GAAG,aAAchB,IAAI,CAACa,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7E;AACA,IAAII,GAAG,GAAG,aAAcjB,IAAI,CAACc,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEI,IAAI,GAAG,aAAclB,IAAI,CAACc,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7E;AACA,IAAIK,GAAG,GAAG,SAAAA,CAAUC,CAAC,EAAE;EACnB,IAAIR,CAAC,GAAGQ,CAAC,CAAC,CAAC,CAAC;EACZ,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+B,CAAC,CAAChB,MAAM,EAAE,EAAEf,CAAC,EAAE;IAC/B,IAAI+B,CAAC,CAAC/B,CAAC,CAAC,GAAGuB,CAAC,EACRA,CAAC,GAAGQ,CAAC,CAAC/B,CAAC,CAAC;EAChB;EACA,OAAOuB,CAAC;AACZ,CAAC;AACD;AACA,IAAIS,IAAI,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAEX,CAAC,EAAE;EAC1B,IAAIhE,CAAC,GAAI2E,CAAC,GAAG,CAAC,IAAK,CAAC;EACpB,OAAQ,CAACD,CAAC,CAAC1E,CAAC,CAAC,GAAI0E,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,OAAO2E,CAAC,GAAG,CAAC,CAAC,GAAIX,CAAC;AACrD,CAAC;AACD;AACA,IAAIY,MAAM,GAAG,SAAAA,CAAUF,CAAC,EAAEC,CAAC,EAAE;EACzB,IAAI3E,CAAC,GAAI2E,CAAC,GAAG,CAAC,IAAK,CAAC;EACpB,OAAQ,CAACD,CAAC,CAAC1E,CAAC,CAAC,GAAI0E,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GAAI0E,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG,OAAO2E,CAAC,GAAG,CAAC,CAAC;AACnE,CAAC;AACD;AACA,IAAIE,IAAI,GAAG,SAAAA,CAAUF,CAAC,EAAE;EAAE,OAAO,CAAEA,CAAC,GAAG,CAAC,IAAK,CAAC,KAAKA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAAE,CAAC;AACjE;AACA;AACA,IAAIG,GAAG,GAAG,SAAAA,CAAUf,CAAC,EAAER,CAAC,EAAEhC,CAAC,EAAE;EACzB,IAAIgC,CAAC,IAAI,IAAI,IAAIA,CAAC,GAAG,CAAC,EAClBA,CAAC,GAAG,CAAC;EACT,IAAIhC,CAAC,IAAI,IAAI,IAAIA,CAAC,GAAGwC,CAAC,CAACP,MAAM,EACzBjC,CAAC,GAAGwC,CAAC,CAACP,MAAM;EAChB;EACA,IAAIuB,CAAC,GAAG,KAAKhB,CAAC,YAAYjC,GAAG,GAAGA,GAAG,GAAGiC,CAAC,YAAY/B,GAAG,GAAGA,GAAG,GAAGJ,EAAE,EAAEL,CAAC,GAAGgC,CAAC,CAAC;EACzEwB,CAAC,CAACC,GAAG,CAACjB,CAAC,CAACkB,QAAQ,CAAC1B,CAAC,EAAEhC,CAAC,CAAC,CAAC;EACvB,OAAOwD,CAAC;AACZ,CAAC;AACD;AACA,IAAIG,KAAK,GAAG,SAAAA,CAAUC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAE;EAChC;EACA,IAAIC,EAAE,GAAGH,GAAG,CAAC3B,MAAM;EACnB;EACA,IAAI+B,KAAK,GAAG,CAACH,GAAG,IAAIC,EAAE;EACtB;EACA,IAAIG,IAAI,GAAG,CAACH,EAAE,IAAIA,EAAE,CAAC5C,CAAC;EACtB,IAAI,CAAC4C,EAAE,EACHA,EAAE,GAAG,CAAC,CAAC;EACX;EACA,IAAI,CAACD,GAAG,EACJA,GAAG,GAAG,IAAIxD,EAAE,CAAC0D,EAAE,GAAG,CAAC,CAAC;EACxB;EACA,IAAIG,IAAI,GAAG,SAAAA,CAAUhC,CAAC,EAAE;IACpB,IAAIiC,EAAE,GAAGN,GAAG,CAAC5B,MAAM;IACnB;IACA,IAAIC,CAAC,GAAGiC,EAAE,EAAE;MACR;MACA,IAAIC,IAAI,GAAG,IAAI/D,EAAE,CAACgE,IAAI,CAACrB,GAAG,CAACmB,EAAE,GAAG,CAAC,EAAEjC,CAAC,CAAC,CAAC;MACtCkC,IAAI,CAACX,GAAG,CAACI,GAAG,CAAC;MACbA,GAAG,GAAGO,IAAI;IACd;EACJ,CAAC;EACD;EACA,IAAIE,KAAK,GAAGR,EAAE,CAACS,CAAC,IAAI,CAAC;IAAEC,GAAG,GAAGV,EAAE,CAACV,CAAC,IAAI,CAAC;IAAEqB,EAAE,GAAGX,EAAE,CAAC7C,CAAC,IAAI,CAAC;IAAEyD,EAAE,GAAGZ,EAAE,CAAC5B,CAAC;IAAEyC,EAAE,GAAGb,EAAE,CAACX,CAAC;IAAEyB,GAAG,GAAGd,EAAE,CAACrB,CAAC;IAAEoC,GAAG,GAAGf,EAAE,CAACN,CAAC;EACpG;EACA,IAAIsB,IAAI,GAAGf,EAAE,GAAG,CAAC;EACjB,GAAG;IACC,IAAI,CAACW,EAAE,EAAE;MACL;MACAZ,EAAE,CAACS,CAAC,GAAGD,KAAK,GAAGpB,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,CAAC,CAAC;MAChC;MACA,IAAI5E,IAAI,GAAGsD,IAAI,CAACU,GAAG,EAAEY,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;MAChCA,GAAG,IAAI,CAAC;MACR,IAAI,CAAC5E,IAAI,EAAE;QACP;QACA,IAAIoC,CAAC,GAAGsB,IAAI,CAACkB,GAAG,CAAC,GAAG,CAAC;UAAEtC,CAAC,GAAG0B,GAAG,CAAC5B,CAAC,GAAG,CAAC,CAAC,GAAI4B,GAAG,CAAC5B,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE;UAAE+C,CAAC,GAAG/C,CAAC,GAAGE,CAAC;QACpE,IAAI6C,CAAC,GAAGhB,EAAE,EAAE;UACR,IAAIE,IAAI,EACJ,MAAM,gBAAgB;UAC1B;QACJ;QACA;QACA,IAAID,KAAK,EACLE,IAAI,CAACO,EAAE,GAAGvC,CAAC,CAAC;QAChB;QACA2B,GAAG,CAACJ,GAAG,CAACG,GAAG,CAACF,QAAQ,CAAC1B,CAAC,EAAE+C,CAAC,CAAC,EAAEN,EAAE,CAAC;QAC/B;QACAX,EAAE,CAAC7C,CAAC,GAAGwD,EAAE,IAAIvC,CAAC,EAAE4B,EAAE,CAACV,CAAC,GAAGoB,GAAG,GAAGO,CAAC,GAAG,CAAC;QAClC;MACJ,CAAC,MACI,IAAInF,IAAI,IAAI,CAAC,EACd8E,EAAE,GAAG7B,IAAI,EAAE8B,EAAE,GAAG5B,IAAI,EAAE6B,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,CAAC,KACtC,IAAIjF,IAAI,IAAI,CAAC,EAAE;QAChB;QACA,IAAIoF,IAAI,GAAG9B,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG;UAAES,KAAK,GAAG/B,IAAI,CAACU,GAAG,EAAEY,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC;QACxE,IAAIU,EAAE,GAAGF,IAAI,GAAG9B,IAAI,CAACU,GAAG,EAAEY,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;QAC1CA,GAAG,IAAI,EAAE;QACT;QACA,IAAIW,GAAG,GAAG,IAAI9E,EAAE,CAAC6E,EAAE,CAAC;QACpB;QACA,IAAIE,GAAG,GAAG,IAAI/E,EAAE,CAAC,EAAE,CAAC;QACpB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+D,KAAK,EAAE,EAAE/D,CAAC,EAAE;UAC5B;UACAkE,GAAG,CAACvE,IAAI,CAACK,CAAC,CAAC,CAAC,GAAGgC,IAAI,CAACU,GAAG,EAAEY,GAAG,GAAGtD,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC5C;QACAsD,GAAG,IAAIS,KAAK,GAAG,CAAC;QAChB;QACA,IAAII,GAAG,GAAGrC,GAAG,CAACoC,GAAG,CAAC;UAAEE,MAAM,GAAG,CAAC,CAAC,IAAID,GAAG,IAAI,CAAC;QAC3C,IAAI,CAACpB,IAAI,IAAIO,GAAG,GAAGU,EAAE,IAAIG,GAAG,GAAG,CAAC,CAAC,GAAGP,IAAI,EACpC;QACJ;QACA,IAAIS,GAAG,GAAG1D,IAAI,CAACuD,GAAG,EAAEC,GAAG,EAAE,CAAC,CAAC;QAC3B,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgE,EAAE,GAAG;UACrB,IAAI/D,CAAC,GAAGoE,GAAG,CAACrC,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAEc,MAAM,CAAC,CAAC;UACnC;UACAd,GAAG,IAAIrD,CAAC,GAAG,EAAE;UACb;UACA,IAAIa,CAAC,GAAGb,CAAC,KAAK,CAAC;UACf;UACA,IAAIa,CAAC,GAAG,EAAE,EAAE;YACRmD,GAAG,CAACjE,CAAC,EAAE,CAAC,GAAGc,CAAC;UAChB,CAAC,MACI;YACD;YACA,IAAI7C,CAAC,GAAG,CAAC;cAAEqE,CAAC,GAAG,CAAC;YAChB,IAAIxB,CAAC,IAAI,EAAE,EACPwB,CAAC,GAAG,CAAC,GAAGN,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,CAAC,CAAC,EAAEA,GAAG,IAAI,CAAC,EAAErF,CAAC,GAAGgG,GAAG,CAACjE,CAAC,GAAG,CAAC,CAAC,CAAC,KACnD,IAAIc,CAAC,IAAI,EAAE,EACZwB,CAAC,GAAG,CAAC,GAAGN,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,CAAC,CAAC,EAAEA,GAAG,IAAI,CAAC,CAAC,KACnC,IAAIxC,CAAC,IAAI,EAAE,EACZwB,CAAC,GAAG,EAAE,GAAGN,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,GAAG,CAAC,EAAEA,GAAG,IAAI,CAAC;YAC1C,OAAOhB,CAAC,EAAE,EACN2B,GAAG,CAACjE,CAAC,EAAE,CAAC,GAAG/B,CAAC;UACpB;QACJ;QACA;QACA,IAAIqG,EAAE,GAAGL,GAAG,CAACzB,QAAQ,CAAC,CAAC,EAAEsB,IAAI,CAAC;UAAES,EAAE,GAAGN,GAAG,CAACzB,QAAQ,CAACsB,IAAI,CAAC;QACvD;QACAJ,GAAG,GAAG5B,GAAG,CAACwC,EAAE,CAAC;QACb;QACAX,GAAG,GAAG7B,GAAG,CAACyC,EAAE,CAAC;QACbf,EAAE,GAAG7C,IAAI,CAAC2D,EAAE,EAAEZ,GAAG,EAAE,CAAC,CAAC;QACrBD,EAAE,GAAG9C,IAAI,CAAC4D,EAAE,EAAEZ,GAAG,EAAE,CAAC,CAAC;MACzB,CAAC,MAEG,MAAM,oBAAoB;MAC9B,IAAIL,GAAG,GAAGM,IAAI,EACV,MAAM,gBAAgB;IAC9B;IACA;IACA;IACA,IAAId,KAAK,EACLE,IAAI,CAACO,EAAE,GAAG,MAAM,CAAC;IACrB,IAAIiB,GAAG,GAAG,CAAC,CAAC,IAAId,GAAG,IAAI,CAAC;MAAEe,GAAG,GAAG,CAAC,CAAC,IAAId,GAAG,IAAI,CAAC;IAC9C,IAAIe,GAAG,GAAGhB,GAAG,GAAGC,GAAG,GAAG,EAAE;IACxB,OAAOZ,IAAI,IAAIO,GAAG,GAAGoB,GAAG,GAAGd,IAAI,EAAE;MAC7B;MACA,IAAI3F,CAAC,GAAGuF,EAAE,CAACrB,MAAM,CAACO,GAAG,EAAEY,GAAG,CAAC,GAAGkB,GAAG,CAAC;QAAEG,GAAG,GAAG1G,CAAC,KAAK,CAAC;MACjDqF,GAAG,IAAIrF,CAAC,GAAG,EAAE;MACb,IAAIqF,GAAG,GAAGM,IAAI,EACV,MAAM,gBAAgB;MAC1B,IAAI,CAAC3F,CAAC,EACF,MAAM,wBAAwB;MAClC,IAAI0G,GAAG,GAAG,GAAG,EACThC,GAAG,CAACY,EAAE,EAAE,CAAC,GAAGoB,GAAG,CAAC,KACf,IAAIA,GAAG,IAAI,GAAG,EAAE;QACjBnB,EAAE,GAAG,IAAI;QACT;MACJ,CAAC,MACI;QACD,IAAIoB,GAAG,GAAGD,GAAG,GAAG,GAAG;QACnB;QACA,IAAIA,GAAG,GAAG,GAAG,EAAE;UACX;UACA,IAAI3E,CAAC,GAAG2E,GAAG,GAAG,GAAG;YAAE5E,CAAC,GAAGN,IAAI,CAACO,CAAC,CAAC;UAC9B4E,GAAG,GAAG5C,IAAI,CAACU,GAAG,EAAEY,GAAG,EAAE,CAAC,CAAC,IAAIvD,CAAC,IAAI,CAAC,CAAC,GAAGK,EAAE,CAACJ,CAAC,CAAC;UAC1CsD,GAAG,IAAIvD,CAAC;QACZ;QACA;QACA,IAAIkC,CAAC,GAAGwB,EAAE,CAACtB,MAAM,CAACO,GAAG,EAAEY,GAAG,CAAC,GAAGmB,GAAG,CAAC;UAAEI,IAAI,GAAG5C,CAAC,KAAK,CAAC;QAClD,IAAI,CAACA,CAAC,EACF,MAAM,kBAAkB;QAC5BqB,GAAG,IAAIrB,CAAC,GAAG,EAAE;QACb,IAAIsC,EAAE,GAAGhE,EAAE,CAACsE,IAAI,CAAC;QACjB,IAAIA,IAAI,GAAG,CAAC,EAAE;UACV,IAAI9E,CAAC,GAAGL,IAAI,CAACmF,IAAI,CAAC;UAClBN,EAAE,IAAIpC,MAAM,CAACO,GAAG,EAAEY,GAAG,CAAC,GAAI,CAAC,CAAC,IAAIvD,CAAC,IAAI,CAAE,EAAEuD,GAAG,IAAIvD,CAAC;QACrD;QACA,IAAIuD,GAAG,GAAGM,IAAI,EACV,MAAM,gBAAgB;QAC1B,IAAId,KAAK,EACLE,IAAI,CAACO,EAAE,GAAG,MAAM,CAAC;QACrB,IAAIuB,GAAG,GAAGvB,EAAE,GAAGqB,GAAG;QAClB,OAAOrB,EAAE,GAAGuB,GAAG,EAAEvB,EAAE,IAAI,CAAC,EAAE;UACtBZ,GAAG,CAACY,EAAE,CAAC,GAAGZ,GAAG,CAACY,EAAE,GAAGgB,EAAE,CAAC;UACtB5B,GAAG,CAACY,EAAE,GAAG,CAAC,CAAC,GAAGZ,GAAG,CAACY,EAAE,GAAG,CAAC,GAAGgB,EAAE,CAAC;UAC9B5B,GAAG,CAACY,EAAE,GAAG,CAAC,CAAC,GAAGZ,GAAG,CAACY,EAAE,GAAG,CAAC,GAAGgB,EAAE,CAAC;UAC9B5B,GAAG,CAACY,EAAE,GAAG,CAAC,CAAC,GAAGZ,GAAG,CAACY,EAAE,GAAG,CAAC,GAAGgB,EAAE,CAAC;QAClC;QACAhB,EAAE,GAAGuB,GAAG;MACZ;IACJ;IACAlC,EAAE,CAAC5B,CAAC,GAAGwC,EAAE,EAAEZ,EAAE,CAACV,CAAC,GAAGoB,GAAG,EAAEV,EAAE,CAAC7C,CAAC,GAAGwD,EAAE;IAChC,IAAIC,EAAE,EACFJ,KAAK,GAAG,CAAC,EAAER,EAAE,CAACrB,CAAC,GAAGmC,GAAG,EAAEd,EAAE,CAACX,CAAC,GAAGwB,EAAE,EAAEb,EAAE,CAACN,CAAC,GAAGqB,GAAG;EACpD,CAAC,QAAQ,CAACP,KAAK;EACf,OAAOG,EAAE,IAAIZ,GAAG,CAAC5B,MAAM,GAAG4B,GAAG,GAAGN,GAAG,CAACM,GAAG,EAAE,CAAC,EAAEY,EAAE,CAAC;AACnD,CAAC;AACD;AACA,IAAIwB,KAAK,GAAG,SAAAA,CAAU9C,CAAC,EAAEC,CAAC,EAAEZ,CAAC,EAAE;EAC3BA,CAAC,KAAKY,CAAC,GAAG,CAAC;EACX,IAAI3E,CAAC,GAAI2E,CAAC,GAAG,CAAC,IAAK,CAAC;EACpBD,CAAC,CAAC1E,CAAC,CAAC,IAAI+D,CAAC;EACTW,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI+D,CAAC,KAAK,CAAC;AACvB,CAAC;AACD;AACA,IAAI0D,OAAO,GAAG,SAAAA,CAAU/C,CAAC,EAAEC,CAAC,EAAEZ,CAAC,EAAE;EAC7BA,CAAC,KAAKY,CAAC,GAAG,CAAC;EACX,IAAI3E,CAAC,GAAI2E,CAAC,GAAG,CAAC,IAAK,CAAC;EACpBD,CAAC,CAAC1E,CAAC,CAAC,IAAI+D,CAAC;EACTW,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI+D,CAAC,KAAK,CAAC;EACnBW,CAAC,CAAC1E,CAAC,GAAG,CAAC,CAAC,IAAI+D,CAAC,KAAK,EAAE;AACxB,CAAC;AACD;AACA,IAAI2D,KAAK,GAAG,SAAAA,CAAUhD,CAAC,EAAEpB,EAAE,EAAE;EACzB;EACA,IAAIgD,CAAC,GAAG,EAAE;EACV,KAAK,IAAI7D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,CAAC,CAAClB,MAAM,EAAE,EAAEf,CAAC,EAAE;IAC/B,IAAIiC,CAAC,CAACjC,CAAC,CAAC,EACJ6D,CAAC,CAACqB,IAAI,CAAC;MAAEpE,CAAC,EAAEd,CAAC;MAAEqD,CAAC,EAAEpB,CAAC,CAACjC,CAAC;IAAE,CAAC,CAAC;EACjC;EACA,IAAIc,CAAC,GAAG+C,CAAC,CAAC9C,MAAM;EAChB,IAAIoE,EAAE,GAAGtB,CAAC,CAACuB,KAAK,CAAC,CAAC;EAClB,IAAI,CAACtE,CAAC,EACF,OAAO,CAAC,IAAI3B,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,IAAI2B,CAAC,IAAI,CAAC,EAAE;IACR,IAAIQ,CAAC,GAAG,IAAInC,EAAE,CAAC0E,CAAC,CAAC,CAAC,CAAC,CAAC/C,CAAC,GAAG,CAAC,CAAC;IAC1BQ,CAAC,CAACuC,CAAC,CAAC,CAAC,CAAC,CAAC/C,CAAC,CAAC,GAAG,CAAC;IACb,OAAO,CAACQ,CAAC,EAAE,CAAC,CAAC;EACjB;EACAuC,CAAC,CAACwB,IAAI,CAAC,UAAUtD,CAAC,EAAEhC,CAAC,EAAE;IAAE,OAAOgC,CAAC,CAACsB,CAAC,GAAGtD,CAAC,CAACsD,CAAC;EAAE,CAAC,CAAC;EAC7C;EACA;EACAQ,CAAC,CAACqB,IAAI,CAAC;IAAEpE,CAAC,EAAE,CAAC,CAAC;IAAEuC,CAAC,EAAE;EAAM,CAAC,CAAC;EAC3B,IAAIrC,CAAC,GAAG6C,CAAC,CAAC,CAAC,CAAC;IAAE5D,CAAC,GAAG4D,CAAC,CAAC,CAAC,CAAC;IAAEyB,EAAE,GAAG,CAAC;IAAEC,EAAE,GAAG,CAAC;IAAEC,EAAE,GAAG,CAAC;EAC9C3B,CAAC,CAAC,CAAC,CAAC,GAAG;IAAE/C,CAAC,EAAE,CAAC,CAAC;IAAEuC,CAAC,EAAErC,CAAC,CAACqC,CAAC,GAAGpD,CAAC,CAACoD,CAAC;IAAErC,CAAC,EAAEA,CAAC;IAAEf,CAAC,EAAEA;EAAE,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA,OAAOsF,EAAE,IAAIzE,CAAC,GAAG,CAAC,EAAE;IAChBE,CAAC,GAAG6C,CAAC,CAACA,CAAC,CAACyB,EAAE,CAAC,CAACjC,CAAC,GAAGQ,CAAC,CAAC2B,EAAE,CAAC,CAACnC,CAAC,GAAGiC,EAAE,EAAE,GAAGE,EAAE,EAAE,CAAC;IACtCvF,CAAC,GAAG4D,CAAC,CAACyB,EAAE,IAAIC,EAAE,IAAI1B,CAAC,CAACyB,EAAE,CAAC,CAACjC,CAAC,GAAGQ,CAAC,CAAC2B,EAAE,CAAC,CAACnC,CAAC,GAAGiC,EAAE,EAAE,GAAGE,EAAE,EAAE,CAAC;IAClD3B,CAAC,CAAC0B,EAAE,EAAE,CAAC,GAAG;MAAEzE,CAAC,EAAE,CAAC,CAAC;MAAEuC,CAAC,EAAErC,CAAC,CAACqC,CAAC,GAAGpD,CAAC,CAACoD,CAAC;MAAErC,CAAC,EAAEA,CAAC;MAAEf,CAAC,EAAEA;IAAE,CAAC;EACjD;EACA,IAAIwF,MAAM,GAAGN,EAAE,CAAC,CAAC,CAAC,CAACrE,CAAC;EACpB,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EAAE;IACxB,IAAImF,EAAE,CAACnF,CAAC,CAAC,CAACc,CAAC,GAAG2E,MAAM,EAChBA,MAAM,GAAGN,EAAE,CAACnF,CAAC,CAAC,CAACc,CAAC;EACxB;EACA;EACA,IAAI4E,EAAE,GAAG,IAAIrG,GAAG,CAACoG,MAAM,GAAG,CAAC,CAAC;EAC5B;EACA,IAAIE,GAAG,GAAGC,EAAE,CAAC/B,CAAC,CAAC0B,EAAE,GAAG,CAAC,CAAC,EAAEG,EAAE,EAAE,CAAC,CAAC;EAC9B,IAAIC,GAAG,GAAG9E,EAAE,EAAE;IACV;IACA;IACA;IACA,IAAIb,CAAC,GAAG,CAAC;MAAEuE,EAAE,GAAG,CAAC;IACjB;IACA,IAAIsB,GAAG,GAAGF,GAAG,GAAG9E,EAAE;MAAEiF,GAAG,GAAG,CAAC,IAAID,GAAG;IAClCV,EAAE,CAACE,IAAI,CAAC,UAAUtD,CAAC,EAAEhC,CAAC,EAAE;MAAE,OAAO2F,EAAE,CAAC3F,CAAC,CAACe,CAAC,CAAC,GAAG4E,EAAE,CAAC3D,CAAC,CAACjB,CAAC,CAAC,IAAIiB,CAAC,CAACsB,CAAC,GAAGtD,CAAC,CAACsD,CAAC;IAAE,CAAC,CAAC;IACnE,OAAOrD,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EAAE;MACf,IAAI+F,IAAI,GAAGZ,EAAE,CAACnF,CAAC,CAAC,CAACc,CAAC;MAClB,IAAI4E,EAAE,CAACK,IAAI,CAAC,GAAGlF,EAAE,EAAE;QACf0D,EAAE,IAAIuB,GAAG,IAAI,CAAC,IAAKH,GAAG,GAAGD,EAAE,CAACK,IAAI,CAAE,CAAC;QACnCL,EAAE,CAACK,IAAI,CAAC,GAAGlF,EAAE;MACjB,CAAC,MAEG;IACR;IACA0D,EAAE,MAAMsB,GAAG;IACX,OAAOtB,EAAE,GAAG,CAAC,EAAE;MACX,IAAIyB,IAAI,GAAGb,EAAE,CAACnF,CAAC,CAAC,CAACc,CAAC;MAClB,IAAI4E,EAAE,CAACM,IAAI,CAAC,GAAGnF,EAAE,EACb0D,EAAE,IAAI,CAAC,IAAK1D,EAAE,GAAG6E,EAAE,CAACM,IAAI,CAAC,EAAE,GAAG,CAAE,CAAC,KAEjC,EAAEhG,CAAC;IACX;IACA,OAAOA,CAAC,IAAI,CAAC,IAAIuE,EAAE,EAAE,EAAEvE,CAAC,EAAE;MACtB,IAAIiG,IAAI,GAAGd,EAAE,CAACnF,CAAC,CAAC,CAACc,CAAC;MAClB,IAAI4E,EAAE,CAACO,IAAI,CAAC,IAAIpF,EAAE,EAAE;QAChB,EAAE6E,EAAE,CAACO,IAAI,CAAC;QACV,EAAE1B,EAAE;MACR;IACJ;IACAoB,GAAG,GAAG9E,EAAE;EACZ;EACA,OAAO,CAAC,IAAI1B,EAAE,CAACuG,EAAE,CAAC,EAAEC,GAAG,CAAC;AAC5B,CAAC;AACD;AACA,IAAIC,EAAE,GAAG,SAAAA,CAAUtD,CAAC,EAAEtB,CAAC,EAAEiB,CAAC,EAAE;EACxB,OAAOK,CAAC,CAACxB,CAAC,IAAI,CAAC,CAAC,GACVqC,IAAI,CAACrB,GAAG,CAAC8D,EAAE,CAACtD,CAAC,CAACtB,CAAC,EAAEA,CAAC,EAAEiB,CAAC,GAAG,CAAC,CAAC,EAAE2D,EAAE,CAACtD,CAAC,CAACrC,CAAC,EAAEe,CAAC,EAAEiB,CAAC,GAAG,CAAC,CAAC,CAAC,GAC7CjB,CAAC,CAACsB,CAAC,CAACxB,CAAC,CAAC,GAAGmB,CAAE;AACtB,CAAC;AACD;AACA,IAAIiE,EAAE,GAAG,SAAAA,CAAUjI,CAAC,EAAE;EAClB,IAAI6C,CAAC,GAAG7C,CAAC,CAAC8C,MAAM;EAChB;EACA,OAAOD,CAAC,IAAI,CAAC7C,CAAC,CAAC,EAAE6C,CAAC,CAAC,CACf;EACJ,IAAIqF,EAAE,GAAG,IAAI9G,GAAG,CAAC,EAAEyB,CAAC,CAAC;EACrB;EACA,IAAIsF,GAAG,GAAG,CAAC;IAAEC,GAAG,GAAGpI,CAAC,CAAC,CAAC,CAAC;IAAEqI,GAAG,GAAG,CAAC;EAChC,IAAI3H,CAAC,GAAG,SAAAA,CAAU2C,CAAC,EAAE;IAAE6E,EAAE,CAACC,GAAG,EAAE,CAAC,GAAG9E,CAAC;EAAE,CAAC;EACvC,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIc,CAAC,EAAE,EAAEd,CAAC,EAAE;IACzB,IAAI/B,CAAC,CAAC+B,CAAC,CAAC,IAAIqG,GAAG,IAAIrG,CAAC,IAAIc,CAAC,EACrB,EAAEwF,GAAG,CAAC,KACL;MACD,IAAI,CAACD,GAAG,IAAIC,GAAG,GAAG,CAAC,EAAE;QACjB,OAAOA,GAAG,GAAG,GAAG,EAAEA,GAAG,IAAI,GAAG,EACxB3H,CAAC,CAAC,KAAK,CAAC;QACZ,IAAI2H,GAAG,GAAG,CAAC,EAAE;UACT3H,CAAC,CAAC2H,GAAG,GAAG,EAAE,GAAKA,GAAG,GAAG,EAAE,IAAK,CAAC,GAAI,KAAK,GAAKA,GAAG,GAAG,CAAC,IAAK,CAAC,GAAI,KAAK,CAAC;UAClEA,GAAG,GAAG,CAAC;QACX;MACJ,CAAC,MACI,IAAIA,GAAG,GAAG,CAAC,EAAE;QACd3H,CAAC,CAAC0H,GAAG,CAAC,EAAE,EAAEC,GAAG;QACb,OAAOA,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI,CAAC,EACpB3H,CAAC,CAAC,IAAI,CAAC;QACX,IAAI2H,GAAG,GAAG,CAAC,EACP3H,CAAC,CAAG2H,GAAG,GAAG,CAAC,IAAK,CAAC,GAAI,IAAI,CAAC,EAAEA,GAAG,GAAG,CAAC;MAC3C;MACA,OAAOA,GAAG,EAAE,EACR3H,CAAC,CAAC0H,GAAG,CAAC;MACVC,GAAG,GAAG,CAAC;MACPD,GAAG,GAAGpI,CAAC,CAAC+B,CAAC,CAAC;IACd;EACJ;EACA,OAAO,CAACmG,EAAE,CAAC3D,QAAQ,CAAC,CAAC,EAAE4D,GAAG,CAAC,EAAEtF,CAAC,CAAC;AACnC,CAAC;AACD;AACA,IAAIyF,IAAI,GAAG,SAAAA,CAAUC,EAAE,EAAEL,EAAE,EAAE;EACzB,IAAInF,CAAC,GAAG,CAAC;EACT,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmG,EAAE,CAACpF,MAAM,EAAE,EAAEf,CAAC,EAC9BgB,CAAC,IAAIwF,EAAE,CAACxG,CAAC,CAAC,GAAGmG,EAAE,CAACnG,CAAC,CAAC;EACtB,OAAOgB,CAAC;AACZ,CAAC;AACD;AACA;AACA,IAAIyF,KAAK,GAAG,SAAAA,CAAUC,GAAG,EAAEpD,GAAG,EAAEZ,GAAG,EAAE;EACjC;EACA,IAAI5B,CAAC,GAAG4B,GAAG,CAAC3B,MAAM;EAClB,IAAIxD,CAAC,GAAG6E,IAAI,CAACkB,GAAG,GAAG,CAAC,CAAC;EACrBoD,GAAG,CAACnJ,CAAC,CAAC,GAAGuD,CAAC,GAAG,GAAG;EAChB4F,GAAG,CAACnJ,CAAC,GAAG,CAAC,CAAC,GAAGuD,CAAC,KAAK,CAAC;EACpB4F,GAAG,CAACnJ,CAAC,GAAG,CAAC,CAAC,GAAGmJ,GAAG,CAACnJ,CAAC,CAAC,GAAG,GAAG;EACzBmJ,GAAG,CAACnJ,CAAC,GAAG,CAAC,CAAC,GAAGmJ,GAAG,CAACnJ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;EAC7B,KAAK,IAAIyC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EACtB0G,GAAG,CAACnJ,CAAC,GAAGyC,CAAC,GAAG,CAAC,CAAC,GAAG0C,GAAG,CAAC1C,CAAC,CAAC;EAC3B,OAAO,CAACzC,CAAC,GAAG,CAAC,GAAGuD,CAAC,IAAI,CAAC;AAC1B,CAAC;AACD;AACA,IAAI6F,IAAI,GAAG,SAAAA,CAAUjE,GAAG,EAAEgE,GAAG,EAAEtD,KAAK,EAAEwD,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEjH,EAAE,EAAEkH,EAAE,EAAEC,EAAE,EAAE/D,EAAE,EAAEf,CAAC,EAAE;EACnE6C,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAE,EAAEkB,KAAK,CAAC;EACtB,EAAEyD,EAAE,CAAC,GAAG,CAAC;EACT,IAAI1G,EAAE,GAAG8E,KAAK,CAAC4B,EAAE,EAAE,EAAE,CAAC;IAAEI,GAAG,GAAG9G,EAAE,CAAC,CAAC,CAAC;IAAE+G,GAAG,GAAG/G,EAAE,CAAC,CAAC,CAAC;EAChD,IAAIG,EAAE,GAAG2E,KAAK,CAAC6B,EAAE,EAAE,EAAE,CAAC;IAAEK,GAAG,GAAG7G,EAAE,CAAC,CAAC,CAAC;IAAE8G,GAAG,GAAG9G,EAAE,CAAC,CAAC,CAAC;EAChD,IAAI+G,EAAE,GAAGnB,EAAE,CAACe,GAAG,CAAC;IAAEK,IAAI,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,GAAG,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC3C,IAAIG,EAAE,GAAGtB,EAAE,CAACiB,GAAG,CAAC;IAAEM,IAAI,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,GAAG,GAAGF,EAAE,CAAC,CAAC,CAAC;EAC3C,IAAIG,MAAM,GAAG,IAAItI,GAAG,CAAC,EAAE,CAAC;EACxB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsH,IAAI,CAACvG,MAAM,EAAE,EAAEf,CAAC,EAChC2H,MAAM,CAACL,IAAI,CAACtH,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;EAC1B,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyH,IAAI,CAAC1G,MAAM,EAAE,EAAEf,CAAC,EAChC2H,MAAM,CAACF,IAAI,CAACzH,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;EAC1B,IAAI4H,EAAE,GAAG3C,KAAK,CAAC0C,MAAM,EAAE,CAAC,CAAC;IAAEE,GAAG,GAAGD,EAAE,CAAC,CAAC,CAAC;IAAEE,IAAI,GAAGF,EAAE,CAAC,CAAC,CAAC;EACpD,IAAIG,IAAI,GAAG,EAAE;EACb,OAAOA,IAAI,GAAG,CAAC,IAAI,CAACF,GAAG,CAAClI,IAAI,CAACoI,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,EAAEA,IAAI,CAC3C;EACJ,IAAIC,IAAI,GAAI/E,EAAE,GAAG,CAAC,IAAK,CAAC;EACxB,IAAIgF,KAAK,GAAG1B,IAAI,CAACM,EAAE,EAAErF,GAAG,CAAC,GAAG+E,IAAI,CAACO,EAAE,EAAErF,GAAG,CAAC,GAAG5B,EAAE;EAC9C,IAAIqI,KAAK,GAAG3B,IAAI,CAACM,EAAE,EAAEI,GAAG,CAAC,GAAGV,IAAI,CAACO,EAAE,EAAEK,GAAG,CAAC,GAAGtH,EAAE,GAAG,EAAE,GAAG,CAAC,GAAGkI,IAAI,GAAGxB,IAAI,CAACoB,MAAM,EAAEE,GAAG,CAAC,IAAI,CAAC,GAAGF,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAGA,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAGA,MAAM,CAAC,EAAE,CAAC,CAAC;EACvI,IAAIK,IAAI,IAAIC,KAAK,IAAID,IAAI,IAAIE,KAAK,EAC9B,OAAOzB,KAAK,CAACC,GAAG,EAAExE,CAAC,EAAEQ,GAAG,CAACF,QAAQ,CAACwE,EAAE,EAAEA,EAAE,GAAG/D,EAAE,CAAC,CAAC;EACnD,IAAIO,EAAE,EAAE2E,EAAE,EAAE1E,EAAE,EAAE2E,EAAE;EAClBrD,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAE,CAAC,IAAIgG,KAAK,GAAGD,KAAK,CAAC,CAAC,EAAE/F,CAAC,IAAI,CAAC;EAC1C,IAAIgG,KAAK,GAAGD,KAAK,EAAE;IACfzE,EAAE,GAAG7C,IAAI,CAACsG,GAAG,EAAEC,GAAG,EAAE,CAAC,CAAC,EAAEiB,EAAE,GAAGlB,GAAG,EAAExD,EAAE,GAAG9C,IAAI,CAACwG,GAAG,EAAEC,GAAG,EAAE,CAAC,CAAC,EAAEgB,EAAE,GAAGjB,GAAG;IAClE,IAAIkB,GAAG,GAAG1H,IAAI,CAACkH,GAAG,EAAEC,IAAI,EAAE,CAAC,CAAC;IAC5B/C,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAEqF,GAAG,GAAG,GAAG,CAAC;IACxBxC,KAAK,CAAC2B,GAAG,EAAExE,CAAC,GAAG,CAAC,EAAEwF,GAAG,GAAG,CAAC,CAAC;IAC1B3C,KAAK,CAAC2B,GAAG,EAAExE,CAAC,GAAG,EAAE,EAAE6F,IAAI,GAAG,CAAC,CAAC;IAC5B7F,CAAC,IAAI,EAAE;IACP,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,IAAI,EAAE,EAAE/H,CAAC,EACzB+E,KAAK,CAAC2B,GAAG,EAAExE,CAAC,GAAG,CAAC,GAAGlC,CAAC,EAAE6H,GAAG,CAAClI,IAAI,CAACK,CAAC,CAAC,CAAC,CAAC;IACvCkC,CAAC,IAAI,CAAC,GAAG6F,IAAI;IACb,IAAIO,IAAI,GAAG,CAAChB,IAAI,EAAEG,IAAI,CAAC;IACvB,KAAK,IAAIc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAE,EAAEA,EAAE,EAAE;MAC3B,IAAIC,IAAI,GAAGF,IAAI,CAACC,EAAE,CAAC;MACnB,KAAK,IAAIvI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwI,IAAI,CAACzH,MAAM,EAAE,EAAEf,CAAC,EAAE;QAClC,IAAIyI,GAAG,GAAGD,IAAI,CAACxI,CAAC,CAAC,GAAG,EAAE;QACtB+E,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAEmG,GAAG,CAACI,GAAG,CAAC,CAAC,EAAEvG,CAAC,IAAI2F,GAAG,CAACY,GAAG,CAAC;QACtC,IAAIA,GAAG,GAAG,EAAE,EACR1D,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAGsG,IAAI,CAACxI,CAAC,CAAC,KAAK,CAAC,GAAI,GAAG,CAAC,EAAEkC,CAAC,IAAIsG,IAAI,CAACxI,CAAC,CAAC,KAAK,EAAE;MACjE;IACJ;EACJ,CAAC,MACI;IACDwD,EAAE,GAAG9B,GAAG,EAAEyG,EAAE,GAAG3G,GAAG,EAAEiC,EAAE,GAAG7B,GAAG,EAAEwG,EAAE,GAAG3G,GAAG;EAC1C;EACA,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+G,EAAE,EAAE,EAAE/G,CAAC,EAAE;IACzB,IAAI4G,IAAI,CAAC5G,CAAC,CAAC,GAAG,GAAG,EAAE;MACf,IAAIyI,GAAG,GAAI7B,IAAI,CAAC5G,CAAC,CAAC,KAAK,EAAE,GAAI,EAAE;MAC/BgF,OAAO,CAAC0B,GAAG,EAAExE,CAAC,EAAEsB,EAAE,CAACiF,GAAG,GAAG,GAAG,CAAC,CAAC,EAAEvG,CAAC,IAAIiG,EAAE,CAACM,GAAG,GAAG,GAAG,CAAC;MAClD,IAAIA,GAAG,GAAG,CAAC,EACP1D,KAAK,CAAC2B,GAAG,EAAExE,CAAC,EAAG0E,IAAI,CAAC5G,CAAC,CAAC,KAAK,EAAE,GAAI,EAAE,CAAC,EAAEkC,CAAC,IAAIzC,IAAI,CAACgJ,GAAG,CAAC;MACxD,IAAIC,GAAG,GAAG9B,IAAI,CAAC5G,CAAC,CAAC,GAAG,EAAE;MACtBgF,OAAO,CAAC0B,GAAG,EAAExE,CAAC,EAAEuB,EAAE,CAACiF,GAAG,CAAC,CAAC,EAAExG,CAAC,IAAIkG,EAAE,CAACM,GAAG,CAAC;MACtC,IAAIA,GAAG,GAAG,CAAC,EACP1D,OAAO,CAAC0B,GAAG,EAAExE,CAAC,EAAG0E,IAAI,CAAC5G,CAAC,CAAC,KAAK,CAAC,GAAI,IAAI,CAAC,EAAEkC,CAAC,IAAIxC,IAAI,CAACgJ,GAAG,CAAC;IAC/D,CAAC,MACI;MACD1D,OAAO,CAAC0B,GAAG,EAAExE,CAAC,EAAEsB,EAAE,CAACoD,IAAI,CAAC5G,CAAC,CAAC,CAAC,CAAC,EAAEkC,CAAC,IAAIiG,EAAE,CAACvB,IAAI,CAAC5G,CAAC,CAAC,CAAC;IAClD;EACJ;EACAgF,OAAO,CAAC0B,GAAG,EAAExE,CAAC,EAAEsB,EAAE,CAAC,GAAG,CAAC,CAAC;EACxB,OAAOtB,CAAC,GAAGiG,EAAE,CAAC,GAAG,CAAC;AACtB,CAAC;AACD;AACA,IAAIQ,GAAG,GAAG,aAAc,IAAIpJ,GAAG,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5G;AACA,IAAIqJ,EAAE,GAAG,aAAc,IAAIzJ,EAAE,CAAC,CAAC,CAAC;AAChC;AACA,IAAI0J,IAAI,GAAG,SAAAA,CAAUnG,GAAG,EAAEoG,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAE;EACjD,IAAIpI,CAAC,GAAG4B,GAAG,CAAC3B,MAAM;EAClB,IAAIxD,CAAC,GAAG,IAAI4B,EAAE,CAAC6J,GAAG,GAAGlI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAGqC,IAAI,CAACgG,KAAK,CAACrI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAGmI,IAAI,CAAC;EAC/D;EACA,IAAItK,CAAC,GAAGpB,CAAC,CAACiF,QAAQ,CAACwG,GAAG,EAAEzL,CAAC,CAACwD,MAAM,GAAGkI,IAAI,CAAC;EACxC,IAAI3F,GAAG,GAAG,CAAC;EACX,IAAI,CAACwF,GAAG,IAAIhI,CAAC,GAAG,CAAC,EAAE;IACf,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIc,CAAC,EAAEd,CAAC,IAAI,KAAK,EAAE;MAChC;MACA,IAAIlB,CAAC,GAAGkB,CAAC,GAAG,KAAK;MACjB,IAAIlB,CAAC,GAAGgC,CAAC,EAAE;QACP;QACAwC,GAAG,GAAGmD,KAAK,CAAC9H,CAAC,EAAE2E,GAAG,EAAEZ,GAAG,CAACF,QAAQ,CAACxC,CAAC,EAAElB,CAAC,CAAC,CAAC;MAC3C,CAAC,MACI;QACD;QACAH,CAAC,CAACqB,CAAC,CAAC,GAAGkJ,GAAG;QACV5F,GAAG,GAAGmD,KAAK,CAAC9H,CAAC,EAAE2E,GAAG,EAAEZ,GAAG,CAACF,QAAQ,CAACxC,CAAC,EAAEc,CAAC,CAAC,CAAC;MAC3C;IACJ;EACJ,CAAC,MACI;IACD,IAAIsI,GAAG,GAAGT,GAAG,CAACG,GAAG,GAAG,CAAC,CAAC;IACtB,IAAIxG,CAAC,GAAG8G,GAAG,KAAK,EAAE;MAAEnL,CAAC,GAAGmL,GAAG,GAAG,IAAI;IAClC,IAAIC,KAAK,GAAG,CAAC,CAAC,IAAIN,IAAI,IAAI,CAAC;IAC3B;IACA,IAAIO,IAAI,GAAG,IAAIjK,GAAG,CAAC,KAAK,CAAC;MAAEkK,IAAI,GAAG,IAAIlK,GAAG,CAACgK,KAAK,GAAG,CAAC,CAAC;IACpD,IAAIG,KAAK,GAAGrG,IAAI,CAACsG,IAAI,CAACV,IAAI,GAAG,CAAC,CAAC;MAAEW,KAAK,GAAG,CAAC,GAAGF,KAAK;IAClD,IAAIG,GAAG,GAAG,SAAAA,CAAU3J,CAAC,EAAE;MAAE,OAAO,CAAC0C,GAAG,CAAC1C,CAAC,CAAC,GAAI0C,GAAG,CAAC1C,CAAC,GAAG,CAAC,CAAC,IAAIwJ,KAAM,GAAI9G,GAAG,CAAC1C,CAAC,GAAG,CAAC,CAAC,IAAI0J,KAAM,IAAIL,KAAK;IAAE,CAAC;IACnG;IACA;IACA,IAAIzC,IAAI,GAAG,IAAIrH,GAAG,CAAC,KAAK,CAAC;IACzB;IACA,IAAIsH,EAAE,GAAG,IAAIxH,GAAG,CAAC,GAAG,CAAC;MAAEyH,EAAE,GAAG,IAAIzH,GAAG,CAAC,EAAE,CAAC;IACvC;IACA,IAAIuK,IAAI,GAAG,CAAC;MAAE/J,EAAE,GAAG,CAAC;MAAEG,CAAC,GAAG,CAAC;MAAE+G,EAAE,GAAG,CAAC;MAAE8C,EAAE,GAAG,CAAC;MAAE7C,EAAE,GAAG,CAAC;IACnD,OAAOhH,CAAC,GAAGc,CAAC,EAAE,EAAEd,CAAC,EAAE;MACf;MACA,IAAI8J,EAAE,GAAGH,GAAG,CAAC3J,CAAC,CAAC;MACf;MACA,IAAI+J,IAAI,GAAG/J,CAAC,GAAG,KAAK;MACpB;MACA,IAAIgK,KAAK,GAAGT,IAAI,CAACO,EAAE,CAAC;MACpBR,IAAI,CAACS,IAAI,CAAC,GAAGC,KAAK;MAClBT,IAAI,CAACO,EAAE,CAAC,GAAGC,IAAI;MACf;MACA;MACA,IAAIF,EAAE,IAAI7J,CAAC,EAAE;QACT;QACA,IAAIiK,GAAG,GAAGnJ,CAAC,GAAGd,CAAC;QACf,IAAI,CAAC4J,IAAI,GAAG,IAAI,IAAI7C,EAAE,GAAG,KAAK,KAAKkD,GAAG,GAAG,GAAG,EAAE;UAC1C3G,GAAG,GAAGqD,IAAI,CAACjE,GAAG,EAAE/D,CAAC,EAAE,CAAC,EAAEiI,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEjH,EAAE,EAAEkH,EAAE,EAAEC,EAAE,EAAEhH,CAAC,GAAGgH,EAAE,EAAE1D,GAAG,CAAC;UAC5DyD,EAAE,GAAG6C,IAAI,GAAG/J,EAAE,GAAG,CAAC,EAAEmH,EAAE,GAAGhH,CAAC;UAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EACxB2G,EAAE,CAAC3G,CAAC,CAAC,GAAG,CAAC;UACb,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EACvB4G,EAAE,CAAC5G,CAAC,CAAC,GAAG,CAAC;QACjB;QACA;QACA,IAAIc,CAAC,GAAG,CAAC;UAAEiB,CAAC,GAAG,CAAC;UAAEiI,IAAI,GAAGjM,CAAC;UAAEkM,GAAG,GAAIJ,IAAI,GAAGC,KAAK,GAAI,KAAK;QACxD,IAAIC,GAAG,GAAG,CAAC,IAAIH,EAAE,IAAIH,GAAG,CAAC3J,CAAC,GAAGmK,GAAG,CAAC,EAAE;UAC/B,IAAIC,IAAI,GAAGjH,IAAI,CAACkH,GAAG,CAAC/H,CAAC,EAAE2H,GAAG,CAAC,GAAG,CAAC;UAC/B,IAAIK,IAAI,GAAGnH,IAAI,CAACkH,GAAG,CAAC,KAAK,EAAErK,CAAC,CAAC;UAC7B;UACA;UACA,IAAIuK,EAAE,GAAGpH,IAAI,CAACkH,GAAG,CAAC,GAAG,EAAEJ,GAAG,CAAC;UAC3B,OAAOE,GAAG,IAAIG,IAAI,IAAI,EAAEJ,IAAI,IAAIH,IAAI,IAAIC,KAAK,EAAE;YAC3C,IAAItH,GAAG,CAAC1C,CAAC,GAAGgB,CAAC,CAAC,IAAI0B,GAAG,CAAC1C,CAAC,GAAGgB,CAAC,GAAGmJ,GAAG,CAAC,EAAE;cAChC,IAAIK,EAAE,GAAG,CAAC;cACV,OAAOA,EAAE,GAAGD,EAAE,IAAI7H,GAAG,CAAC1C,CAAC,GAAGwK,EAAE,CAAC,IAAI9H,GAAG,CAAC1C,CAAC,GAAGwK,EAAE,GAAGL,GAAG,CAAC,EAAE,EAAEK,EAAE,CACpD;cACJ,IAAIA,EAAE,GAAGxJ,CAAC,EAAE;gBACRA,CAAC,GAAGwJ,EAAE,EAAEvI,CAAC,GAAGkI,GAAG;gBACf;gBACA,IAAIK,EAAE,GAAGJ,IAAI,EACT;gBACJ;gBACA;gBACA;gBACA,IAAIK,GAAG,GAAGtH,IAAI,CAACkH,GAAG,CAACF,GAAG,EAAEK,EAAE,GAAG,CAAC,CAAC;gBAC/B,IAAIE,EAAE,GAAG,CAAC;gBACV,KAAK,IAAIxK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuK,GAAG,EAAE,EAAEvK,CAAC,EAAE;kBAC1B,IAAIyK,EAAE,GAAI3K,CAAC,GAAGmK,GAAG,GAAGjK,CAAC,GAAG,KAAK,GAAI,KAAK;kBACtC,IAAI0K,GAAG,GAAGtB,IAAI,CAACqB,EAAE,CAAC;kBAClB,IAAI/J,EAAE,GAAI+J,EAAE,GAAGC,GAAG,GAAG,KAAK,GAAI,KAAK;kBACnC,IAAIhK,EAAE,GAAG8J,EAAE,EACPA,EAAE,GAAG9J,EAAE,EAAEoJ,KAAK,GAAGW,EAAE;gBAC3B;cACJ;YACJ;YACA;YACAZ,IAAI,GAAGC,KAAK,EAAEA,KAAK,GAAGV,IAAI,CAACS,IAAI,CAAC;YAChCI,GAAG,IAAKJ,IAAI,GAAGC,KAAK,GAAG,KAAK,GAAI,KAAK;UACzC;QACJ;QACA;QACA,IAAI/H,CAAC,EAAE;UACH;UACA;UACA2E,IAAI,CAACG,EAAE,EAAE,CAAC,GAAG,SAAS,GAAI1G,KAAK,CAACW,CAAC,CAAC,IAAI,EAAG,GAAGR,KAAK,CAACyB,CAAC,CAAC;UACpD,IAAI4I,GAAG,GAAGxK,KAAK,CAACW,CAAC,CAAC,GAAG,EAAE;YAAE8J,GAAG,GAAGtK,KAAK,CAACyB,CAAC,CAAC,GAAG,EAAE;UAC5CpC,EAAE,IAAIJ,IAAI,CAACoL,GAAG,CAAC,GAAGnL,IAAI,CAACoL,GAAG,CAAC;UAC3B,EAAEjE,EAAE,CAAC,GAAG,GAAGgE,GAAG,CAAC;UACf,EAAE/D,EAAE,CAACgE,GAAG,CAAC;UACTjB,EAAE,GAAG7J,CAAC,GAAGgB,CAAC;UACV,EAAE4I,IAAI;QACV,CAAC,MACI;UACDhD,IAAI,CAACG,EAAE,EAAE,CAAC,GAAGrE,GAAG,CAAC1C,CAAC,CAAC;UACnB,EAAE6G,EAAE,CAACnE,GAAG,CAAC1C,CAAC,CAAC,CAAC;QAChB;MACJ;IACJ;IACAsD,GAAG,GAAGqD,IAAI,CAACjE,GAAG,EAAE/D,CAAC,EAAEuK,GAAG,EAAEtC,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEjH,EAAE,EAAEkH,EAAE,EAAEC,EAAE,EAAEhH,CAAC,GAAGgH,EAAE,EAAE1D,GAAG,CAAC;IAC9D;IACA,IAAI,CAAC4F,GAAG,EACJ5F,GAAG,GAAGmD,KAAK,CAAC9H,CAAC,EAAE2E,GAAG,EAAEsF,EAAE,CAAC;EAC/B;EACA,OAAOvG,GAAG,CAAC9E,CAAC,EAAE,CAAC,EAAEyL,GAAG,GAAG5G,IAAI,CAACkB,GAAG,CAAC,GAAG2F,IAAI,CAAC;AAC5C,CAAC;AACD;AACA,IAAI8B,IAAI,GAAG,aAAe,YAAY;EAClC,IAAIlH,CAAC,GAAG,IAAItE,GAAG,CAAC,GAAG,CAAC;EACpB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAAE;IAC1B,IAAI/B,CAAC,GAAG+B,CAAC;MAAEgL,CAAC,GAAG,CAAC;IAChB,OAAO,EAAEA,CAAC,EACN/M,CAAC,GAAG,CAAEA,CAAC,GAAG,CAAC,IAAK,UAAU,IAAKA,CAAC,KAAK,CAAE;IAC3C4F,CAAC,CAAC7D,CAAC,CAAC,GAAG/B,CAAC;EACZ;EACA,OAAO4F,CAAC;AACZ,CAAC,CAAE,CAAC;AACJ;AACA,IAAIoH,GAAG,GAAG,SAAAA,CAAA,EAAY;EAClB,IAAIhN,CAAC,GAAG,UAAU;EAClB,OAAO;IACHiE,CAAC,EAAE,SAAAA,CAAUD,CAAC,EAAE;MACZ;MACA,IAAIiJ,EAAE,GAAGjN,CAAC;MACV,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,CAAC,CAAClB,MAAM,EAAE,EAAEf,CAAC,EAC7BkL,EAAE,GAAGH,IAAI,CAAEG,EAAE,GAAG,GAAG,GAAIjJ,CAAC,CAACjC,CAAC,CAAC,CAAC,GAAIkL,EAAE,KAAK,CAAE;MAC7CjN,CAAC,GAAGiN,EAAE;IACV,CAAC;IACDjJ,CAAC,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOhE,CAAC,GAAG,UAAU;IAAE;EAC5C,CAAC;AACL,CAAC;AACD;AACA,IAAIkN,KAAK,GAAG,SAAAA,CAAA,EAAY;EACpB,IAAIpJ,CAAC,GAAG,CAAC;IAAEhC,CAAC,GAAG,CAAC;EAChB,OAAO;IACHmC,CAAC,EAAE,SAAAA,CAAUD,CAAC,EAAE;MACZ;MACA,IAAIK,CAAC,GAAGP,CAAC;QAAER,CAAC,GAAGxB,CAAC;MAChB,IAAIiB,CAAC,GAAGiB,CAAC,CAAClB,MAAM;MAChB,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIgB,CAAC,GAAG;QACrB,IAAIlC,CAAC,GAAGqE,IAAI,CAACkH,GAAG,CAACrK,CAAC,GAAG,IAAI,EAAEgB,CAAC,CAAC;QAC7B,OAAOhB,CAAC,GAAGlB,CAAC,EAAE,EAAEkB,CAAC,EACbsC,CAAC,IAAIL,CAAC,CAACjC,CAAC,CAAC,EAAEuB,CAAC,IAAIe,CAAC;QACrBA,CAAC,IAAI,KAAK,EAAEf,CAAC,IAAI,KAAK;MAC1B;MACAQ,CAAC,GAAGO,CAAC,EAAEvC,CAAC,GAAGwB,CAAC;IAChB,CAAC;IACDU,CAAC,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAO,CAAEF,CAAC,KAAK,CAAC,IAAK,EAAE,GAAG,CAAChC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAIA,CAAC,KAAK,CAAE,IAAI,CAAC,CAACgC,CAAC,GAAG,GAAG,KAAK,EAAE,IAAI,CAAC;IAAE;EACpG,CAAC;AACL,CAAC;AACD;AACA;AACA,IAAIqJ,IAAI,GAAG,SAAAA,CAAU1I,GAAG,EAAE0G,GAAG,EAAEJ,GAAG,EAAEC,IAAI,EAAErG,EAAE,EAAE;EAC1C,OAAOiG,IAAI,CAACnG,GAAG,EAAE0G,GAAG,CAACiC,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGjC,GAAG,CAACiC,KAAK,EAAEjC,GAAG,CAACkC,GAAG,IAAI,IAAI,GAAGnI,IAAI,CAACsG,IAAI,CAACtG,IAAI,CAACrB,GAAG,CAAC,CAAC,EAAEqB,IAAI,CAACkH,GAAG,CAAC,EAAE,EAAElH,IAAI,CAACoI,GAAG,CAAC7I,GAAG,CAAC3B,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAI,EAAE,GAAGqI,GAAG,CAACkC,GAAI,EAAEtC,GAAG,EAAEC,IAAI,EAAE,CAACrG,EAAE,CAAC;AAC5K,CAAC;AACD;AACA,IAAI4I,GAAG,GAAG,SAAAA,CAAUzJ,CAAC,EAAEhC,CAAC,EAAE;EACtB,IAAIxC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIyN,CAAC,IAAIjJ,CAAC,EACXxE,CAAC,CAACyN,CAAC,CAAC,GAAGjJ,CAAC,CAACiJ,CAAC,CAAC;EACf,KAAK,IAAIA,CAAC,IAAIjL,CAAC,EACXxC,CAAC,CAACyN,CAAC,CAAC,GAAGjL,CAAC,CAACiL,CAAC,CAAC;EACf,OAAOzN,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIkO,IAAI,GAAG,SAAAA,CAAUC,EAAE,EAAEC,KAAK,EAAEC,EAAE,EAAE;EAChC,IAAIrH,EAAE,GAAGmH,EAAE,CAAC,CAAC;EACb,IAAI9I,EAAE,GAAG8I,EAAE,CAACG,QAAQ,CAAC,CAAC;EACtB,IAAIC,EAAE,GAAGlJ,EAAE,CAACwC,KAAK,CAACxC,EAAE,CAACmJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEnJ,EAAE,CAACoJ,WAAW,CAAC,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACxF,KAAK,IAAIlM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuE,EAAE,CAACxD,MAAM,EAAE,EAAEf,CAAC,EAAE;IAChC,IAAIsB,CAAC,GAAGiD,EAAE,CAACvE,CAAC,CAAC;MAAEgL,CAAC,GAAGc,EAAE,CAAC9L,CAAC,CAAC;IACxB,IAAI,OAAOsB,CAAC,IAAI,UAAU,EAAE;MACxBqK,KAAK,IAAI,GAAG,GAAGX,CAAC,GAAG,GAAG;MACtB,IAAImB,IAAI,GAAG7K,CAAC,CAACuK,QAAQ,CAAC,CAAC;MACvB,IAAIvK,CAAC,CAACzD,SAAS,EAAE;QACb;QACA,IAAIsO,IAAI,CAACJ,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE;UACrC,IAAIK,KAAK,GAAGD,IAAI,CAACJ,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;UACpCJ,KAAK,IAAIQ,IAAI,CAAC/G,KAAK,CAACgH,KAAK,EAAED,IAAI,CAACJ,OAAO,CAAC,GAAG,EAAEK,KAAK,CAAC,CAAC;QACxD,CAAC,MACI;UACDT,KAAK,IAAIQ,IAAI;UACb,KAAK,IAAItI,CAAC,IAAIvC,CAAC,CAACzD,SAAS,EACrB8N,KAAK,IAAI,GAAG,GAAGX,CAAC,GAAG,aAAa,GAAGnH,CAAC,GAAG,GAAG,GAAGvC,CAAC,CAACzD,SAAS,CAACgG,CAAC,CAAC,CAACgI,QAAQ,CAAC,CAAC;QAC9E;MACJ,CAAC,MAEGF,KAAK,IAAIQ,IAAI;IACrB,CAAC,MAEGP,EAAE,CAACZ,CAAC,CAAC,GAAG1J,CAAC;EACjB;EACA,OAAO,CAACqK,KAAK,EAAEC,EAAE,CAAC;AACtB,CAAC;AACD,IAAIS,EAAE,GAAG,EAAE;AACX;AACA,IAAIC,IAAI,GAAG,SAAAA,CAAUhL,CAAC,EAAE;EACpB,IAAI0C,EAAE,GAAG,EAAE;EACX,KAAK,IAAIgH,CAAC,IAAI1J,CAAC,EAAE;IACb,IAAIA,CAAC,CAAC0J,CAAC,CAAC,YAAY7L,EAAE,IAAImC,CAAC,CAAC0J,CAAC,CAAC,YAAY3L,GAAG,IAAIiC,CAAC,CAAC0J,CAAC,CAAC,YAAYzL,GAAG,EAChEyE,EAAE,CAACkB,IAAI,CAAC,CAAC5D,CAAC,CAAC0J,CAAC,CAAC,GAAG,IAAI1J,CAAC,CAAC0J,CAAC,CAAC,CAACpN,WAAW,CAAC0D,CAAC,CAAC0J,CAAC,CAAC,CAAC,EAAEuB,MAAM,CAAC;EAC3D;EACA,OAAOvI,EAAE;AACb,CAAC;AACD;AACA,IAAIwI,IAAI,GAAG,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAExO,EAAE,EAAEG,EAAE,EAAE;EACpC,IAAI8B,EAAE;EACN,IAAI,CAACkM,EAAE,CAACnO,EAAE,CAAC,EAAE;IACT,IAAIyN,KAAK,GAAG,EAAE;MAAEgB,IAAI,GAAG,CAAC,CAAC;MAAEpL,CAAC,GAAGkL,GAAG,CAAC1L,MAAM,GAAG,CAAC;IAC7C,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,CAAC,EAAE,EAAEvB,CAAC,EACtBG,EAAE,GAAGsL,IAAI,CAACgB,GAAG,CAACzM,CAAC,CAAC,EAAE2L,KAAK,EAAEgB,IAAI,CAAC,EAAEhB,KAAK,GAAGxL,EAAE,CAAC,CAAC,CAAC,EAAEwM,IAAI,GAAGxM,EAAE,CAAC,CAAC,CAAC;IAC/DkM,EAAE,CAACnO,EAAE,CAAC,GAAGuN,IAAI,CAACgB,GAAG,CAAClL,CAAC,CAAC,EAAEoK,KAAK,EAAEgB,IAAI,CAAC;EACtC;EACA,IAAIf,EAAE,GAAGJ,GAAG,CAAC,CAAC,CAAC,EAAEa,EAAE,CAACnO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,OAAOF,EAAE,CAACqO,EAAE,CAACnO,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,yEAAyE,GAAGwO,IAAI,CAACb,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAE3N,EAAE,EAAE0N,EAAE,EAAEU,IAAI,CAACV,EAAE,CAAC,EAAEvN,EAAE,CAAC;AAClJ,CAAC;AACD;AACA,IAAIuO,MAAM,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAACzN,EAAE,EAAEE,GAAG,EAAEE,GAAG,EAAEE,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAES,EAAE,EAAEG,EAAE,EAAEoB,IAAI,EAAEE,IAAI,EAAEpB,GAAG,EAAEE,IAAI,EAAEmB,GAAG,EAAEE,IAAI,EAAEG,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEI,KAAK,EAAEoK,WAAW,EAAEC,GAAG,EAAEC,GAAG,CAAC;AAAE,CAAC;AAChK,IAAIC,KAAK,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAAC7N,EAAE,EAAEE,GAAG,EAAEE,GAAG,EAAEE,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEU,KAAK,EAAEG,KAAK,EAAEkB,GAAG,EAAEF,GAAG,EAAEI,GAAG,EAAEH,GAAG,EAAEhB,GAAG,EAAEkI,GAAG,EAAEC,EAAE,EAAEjI,IAAI,EAAEoE,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEW,EAAE,EAAEM,EAAE,EAAEK,IAAI,EAAEE,KAAK,EAAEE,IAAI,EAAEvE,IAAI,EAAEC,GAAG,EAAEwG,IAAI,EAAEuC,IAAI,EAAE6B,WAAW,EAAEH,GAAG,CAAC;AAAE,CAAC;AACrN;AACA,IAAII,GAAG,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAACC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEpC,GAAG,EAAEF,IAAI,CAAC;AAAE,CAAC;AAChE;AACA,IAAIuC,IAAI,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAACC,GAAG,EAAEC,GAAG,CAAC;AAAE,CAAC;AAC7C;AACA,IAAIC,GAAG,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAACC,GAAG,EAAEL,MAAM,EAAElC,KAAK,CAAC;AAAE,CAAC;AACtD;AACA,IAAIwC,IAAI,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,CAACC,GAAG,CAAC;AAAE,CAAC;AACxC;AACA,IAAId,GAAG,GAAG,SAAAA,CAAU3O,GAAG,EAAE;EAAE,OAAOe,WAAW,CAACf,GAAG,EAAE,CAACA,GAAG,CAACoO,MAAM,CAAC,CAAC;AAAE,CAAC;AACnE;AACA,IAAIQ,GAAG,GAAG,SAAAA,CAAUxP,CAAC,EAAE;EAAE,OAAOA,CAAC,IAAIA,CAAC,CAACsQ,IAAI,IAAI,IAAI1O,EAAE,CAAC5B,CAAC,CAACsQ,IAAI,CAAC;AAAE,CAAC;AAChE;AACA,IAAIC,KAAK,GAAG,SAAAA,CAAUpL,GAAG,EAAEqL,IAAI,EAAEtB,GAAG,EAAEC,IAAI,EAAExO,EAAE,EAAEG,EAAE,EAAE;EAChD,IAAIM,CAAC,GAAG6N,IAAI,CAACC,GAAG,EAAEC,IAAI,EAAExO,EAAE,EAAE,UAAU8P,GAAG,EAAEtL,GAAG,EAAE;IAC5C/D,CAAC,CAACsP,SAAS,CAAC,CAAC;IACb5P,EAAE,CAAC2P,GAAG,EAAEtL,GAAG,CAAC;EAChB,CAAC,CAAC;EACF,IAAI,CAACqL,IAAI,CAACG,OAAO,EACbxL,GAAG,GAAG,IAAIvD,EAAE,CAACuD,GAAG,CAAC;EACrB/D,CAAC,CAACO,WAAW,CAAC,CAACwD,GAAG,EAAEqL,IAAI,CAAC,EAAE,CAACrL,GAAG,CAAC6J,MAAM,CAAC,CAAC;EACxC,OAAO,YAAY;IAAE5N,CAAC,CAACsP,SAAS,CAAC,CAAC;EAAE,CAAC;AACzC,CAAC;AACD;AACA,IAAIE,KAAK,GAAG,SAAAA,CAAUC,IAAI,EAAE;EACxBA,IAAI,CAACC,MAAM,GAAG,UAAU3L,GAAG,EAAEU,KAAK,EAAE;IAAE,OAAOlE,WAAW,CAAC,CAACwD,GAAG,EAAEU,KAAK,CAAC,EAAE,CAACV,GAAG,CAAC6J,MAAM,CAAC,CAAC;EAAE,CAAC;EACvF,OAAO,UAAU+B,EAAE,EAAE;IAAE,OAAOF,IAAI,CAAClJ,IAAI,CAACoJ,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAEqP,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC;AACtE,CAAC;AACD;AACA,IAAIsP,QAAQ,GAAG,SAAAA,CAAU9B,GAAG,EAAE2B,IAAI,EAAEL,IAAI,EAAErB,IAAI,EAAExO,EAAE,EAAE;EAChD,IAAI2F,CAAC;EACL,IAAIlF,CAAC,GAAG6N,IAAI,CAACC,GAAG,EAAEC,IAAI,EAAExO,EAAE,EAAE,UAAU8P,GAAG,EAAEtL,GAAG,EAAE;IAC5C,IAAIsL,GAAG,EACHrP,CAAC,CAACsP,SAAS,CAAC,CAAC,EAAEG,IAAI,CAACC,MAAM,CAACG,IAAI,CAACJ,IAAI,EAAEJ,GAAG,CAAC,CAAC,KAC1C;MACD,IAAItL,GAAG,CAAC,CAAC,CAAC,EACN/D,CAAC,CAACsP,SAAS,CAAC,CAAC;MACjBG,IAAI,CAACC,MAAM,CAACG,IAAI,CAACJ,IAAI,EAAEJ,GAAG,EAAEtL,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/C;EACJ,CAAC,CAAC;EACF/D,CAAC,CAACO,WAAW,CAAC6O,IAAI,CAAC;EACnBK,IAAI,CAAClJ,IAAI,GAAG,UAAUjD,CAAC,EAAEoB,CAAC,EAAE;IACxB,IAAIQ,CAAC,EACD,MAAM,iBAAiB;IAC3B,IAAI,CAACuK,IAAI,CAACC,MAAM,EACZ,MAAM,mBAAmB;IAC7B1P,CAAC,CAACO,WAAW,CAAC,CAAC+C,CAAC,EAAE4B,CAAC,GAAGR,CAAC,CAAC,EAAE,CAACpB,CAAC,CAACsK,MAAM,CAAC,CAAC;EACzC,CAAC;EACD6B,IAAI,CAACH,SAAS,GAAG,YAAY;IAAEtP,CAAC,CAACsP,SAAS,CAAC,CAAC;EAAE,CAAC;AACnD,CAAC;AACD;AACA,IAAIQ,EAAE,GAAG,SAAAA,CAAUxM,CAAC,EAAElC,CAAC,EAAE;EAAE,OAAOkC,CAAC,CAAClC,CAAC,CAAC,GAAIkC,CAAC,CAAClC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE;AAAE,CAAC;AAC3D;AACA,IAAI2O,EAAE,GAAG,SAAAA,CAAUzM,CAAC,EAAElC,CAAC,EAAE;EAAE,OAAO,CAACkC,CAAC,CAAClC,CAAC,CAAC,GAAIkC,CAAC,CAAClC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GAAIkC,CAAC,CAAClC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG,IAAI,CAACkC,CAAC,CAAClC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC;AACvG;AACA,IAAIsN,MAAM,GAAG,SAAAA,CAAUpL,CAAC,EAAElC,CAAC,EAAEuB,CAAC,EAAE;EAC5B,OAAOA,CAAC,EAAE,EAAEvB,CAAC,EACTkC,CAAC,CAAClC,CAAC,CAAC,GAAGuB,CAAC,EAAEA,CAAC,MAAM,CAAC;AAC1B,CAAC;AACD;AACA,IAAI6L,GAAG,GAAG,SAAAA,CAAUlP,CAAC,EAAEV,CAAC,EAAE;EACtB,IAAImO,EAAE,GAAGnO,CAAC,CAACoR,QAAQ;EACnB1Q,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAGV,CAAC,CAAC8N,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG9N,CAAC,CAAC8N,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEpN,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1F,IAAIV,CAAC,CAACqR,KAAK,IAAI,CAAC,EACZvB,MAAM,CAACpP,CAAC,EAAE,CAAC,EAAEkF,IAAI,CAACgG,KAAK,CAAC,IAAI0F,IAAI,CAACtR,CAAC,CAACqR,KAAK,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;EACpE,IAAIpD,EAAE,EAAE;IACJzN,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACR,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0L,EAAE,CAAC3K,MAAM,EAAE,EAAEf,CAAC,EAC/B/B,CAAC,CAAC+B,CAAC,GAAG,EAAE,CAAC,GAAG0L,EAAE,CAACqD,UAAU,CAAC/O,CAAC,CAAC;EACpC;AACJ,CAAC;AACD;AACA;AACA,IAAIuN,GAAG,GAAG,SAAAA,CAAUtL,CAAC,EAAE;EACnB,IAAIA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAIA,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACtC,MAAM,mBAAmB;EAC7B,IAAI+M,GAAG,GAAG/M,CAAC,CAAC,CAAC,CAAC;EACd,IAAIW,EAAE,GAAG,EAAE;EACX,IAAIoM,GAAG,GAAG,CAAC,EACPpM,EAAE,IAAIX,CAAC,CAAC,EAAE,CAAC,GAAG,CAACA,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;EAClC,KAAK,IAAIgN,EAAE,GAAG,CAACD,GAAG,IAAI,CAAC,GAAG,CAAC,KAAKA,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI,CAAChN,CAAC,CAACW,EAAE,EAAE,CAAC,CACjE;EACJ,OAAOA,EAAE,IAAIoM,GAAG,GAAG,CAAC,CAAC;AACzB,CAAC;AACD;AACA,IAAIxB,GAAG,GAAG,SAAAA,CAAUvL,CAAC,EAAE;EACnB,IAAIjB,CAAC,GAAGiB,CAAC,CAAClB,MAAM;EAChB,OAAO,CAACkB,CAAC,CAACjB,CAAC,GAAG,CAAC,CAAC,GAAGiB,CAAC,CAACjB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAGiB,CAAC,CAACjB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAK,CAAC,IAAIiB,CAAC,CAACjB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAE;AAC/E,CAAC;AACD;AACA,IAAIoM,IAAI,GAAG,SAAAA,CAAU7P,CAAC,EAAE;EAAE,OAAO,EAAE,IAAKA,CAAC,CAACoR,QAAQ,IAAKpR,CAAC,CAACoR,QAAQ,CAAC5N,MAAM,GAAG,CAAE,IAAK,CAAC,CAAC;AAAE,CAAC;AACvF;AACA,IAAI2M,GAAG,GAAG,SAAAA,CAAUzP,CAAC,EAAEV,CAAC,EAAE;EACtB,IAAI2R,EAAE,GAAG3R,CAAC,CAAC8N,KAAK;IAAEjL,EAAE,GAAG8O,EAAE,IAAI,CAAC,GAAG,CAAC,GAAGA,EAAE,GAAG,CAAC,GAAG,CAAC,GAAGA,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EACjEjR,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,CAAC,CAAC,CAAC,CAAC,GAAImC,EAAE,IAAI,CAAC,IAAKA,EAAE,GAAI,EAAE,GAAG,CAAC,GAAGA,EAAE,GAAI,CAAC,CAAC;AAC3D,CAAC;AACD;AACA,IAAIwN,GAAG,GAAG,SAAAA,CAAU3L,CAAC,EAAE;EACnB,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAI,CAAC,IAAK,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAG,EACjE,MAAM,mBAAmB;EAC7B,IAAIA,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EACT,MAAM,sDAAsD;AACpE,CAAC;AACD,SAASkN,YAAYA,CAACpB,IAAI,EAAE1P,EAAE,EAAE;EAC5B,IAAI,CAACA,EAAE,IAAI,OAAO0P,IAAI,IAAI,UAAU,EAChC1P,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,CAACM,MAAM,GAAGhQ,EAAE;EAChB,OAAO0P,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAIqB,OAAO,GAAA3R,OAAA,CAAA2R,OAAA,GAAG,aAAe,YAAY;EACrC,SAASA,OAAOA,CAACrB,IAAI,EAAE1P,EAAE,EAAE;IACvB,IAAI,CAACA,EAAE,IAAI,OAAO0P,IAAI,IAAI,UAAU,EAChC1P,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;IACxB,IAAI,CAACM,MAAM,GAAGhQ,EAAE;IAChB,IAAI,CAACd,CAAC,GAAGwQ,IAAI,IAAI,CAAC,CAAC;EACvB;EACAqB,OAAO,CAACvR,SAAS,CAACqE,CAAC,GAAG,UAAUjE,CAAC,EAAEoF,CAAC,EAAE;IAClC,IAAI,CAACgL,MAAM,CAACjD,IAAI,CAACnN,CAAC,EAAE,IAAI,CAACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC8F,CAAC,CAAC,EAAEA,CAAC,CAAC;EAC7C,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI+L,OAAO,CAACvR,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC7C,IAAI,IAAI,CAACnB,CAAC,EACN,MAAM,iBAAiB;IAC3B,IAAI,CAAC,IAAI,CAACoM,MAAM,EACZ,MAAM,mBAAmB;IAC7B,IAAI,CAACpM,CAAC,GAAGmB,KAAK;IACd,IAAI,CAAClB,CAAC,CAACmN,KAAK,EAAEjM,KAAK,IAAI,KAAK,CAAC;EACjC,CAAC;EACD,OAAOgM,OAAO;AAClB,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIE,YAAY,GAAA7R,OAAA,CAAA6R,YAAA,GAAG,aAAe,YAAY;EAC1C,SAASA,YAAYA,CAACvB,IAAI,EAAE1P,EAAE,EAAE;IAC5BkQ,QAAQ,CAAC,CACLvB,KAAK,EACL,YAAY;MAAE,OAAO,CAACmB,KAAK,EAAEiB,OAAO,CAAC;IAAE,CAAC,CAC3C,EAAE,IAAI,EAAED,YAAY,CAACX,IAAI,CAAC,IAAI,EAAET,IAAI,EAAE1P,EAAE,CAAC,EAAE,UAAUiQ,EAAE,EAAE;MACtD,IAAIF,IAAI,GAAG,IAAIgB,OAAO,CAACd,EAAE,CAACrP,IAAI,CAAC;MAC/BD,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACT;EACA,OAAOkB,YAAY;AACvB,CAAC,CAAC,CAAE;AAEG,SAASC,OAAOA,CAACtQ,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACpC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBf,KAAK,CACR,EAAE,UAAUsB,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAACG,WAAW,CAACqB,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAEqP,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4O,WAAWA,CAAChO,IAAI,EAAE8O,IAAI,EAAE;EACpC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,OAAO3C,IAAI,CAACnM,IAAI,EAAE8O,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACA,IAAIyB,OAAO,GAAA/R,OAAA,CAAA+R,OAAA,GAAG,aAAe,YAAY;EACrC;AACJ;AACA;AACA;EACI,SAASA,OAAOA,CAACnR,EAAE,EAAE;IACjB,IAAI,CAACyC,CAAC,GAAG,CAAC,CAAC;IACX,IAAI,CAACoB,CAAC,GAAG,IAAI/C,EAAE,CAAC,CAAC,CAAC;IAClB,IAAI,CAACkP,MAAM,GAAGhQ,EAAE;EACpB;EACAmR,OAAO,CAAC3R,SAAS,CAACiB,CAAC,GAAG,UAAUb,CAAC,EAAE;IAC/B,IAAI,IAAI,CAACgE,CAAC,EACN,MAAM,iBAAiB;IAC3B,IAAI,CAAC,IAAI,CAACoM,MAAM,EACZ,MAAM,mBAAmB;IAC7B,IAAIrN,CAAC,GAAG,IAAI,CAACkB,CAAC,CAACnB,MAAM;IACrB,IAAIuB,CAAC,GAAG,IAAInD,EAAE,CAAC6B,CAAC,GAAG/C,CAAC,CAAC8C,MAAM,CAAC;IAC5BuB,CAAC,CAACC,GAAG,CAAC,IAAI,CAACL,CAAC,CAAC,EAAEI,CAAC,CAACC,GAAG,CAACtE,CAAC,EAAE+C,CAAC,CAAC,EAAE,IAAI,CAACkB,CAAC,GAAGI,CAAC;EAC1C,CAAC;EACDkN,OAAO,CAAC3R,SAAS,CAACI,CAAC,GAAG,UAAUmF,KAAK,EAAE;IACnC,IAAI,CAACnB,CAAC,GAAG,IAAI,CAACnB,CAAC,CAACd,CAAC,GAAGoD,KAAK,IAAI,KAAK;IAClC,IAAIqM,GAAG,GAAG,IAAI,CAAC3O,CAAC,CAACf,CAAC;IAClB,IAAIwE,EAAE,GAAG9B,KAAK,CAAC,IAAI,CAACP,CAAC,EAAE,IAAI,CAAC3E,CAAC,EAAE,IAAI,CAACuD,CAAC,CAAC;IACtC,IAAI,CAACuN,MAAM,CAAChM,GAAG,CAACkC,EAAE,EAAEkL,GAAG,EAAE,IAAI,CAAC3O,CAAC,CAACf,CAAC,CAAC,EAAE,IAAI,CAACkC,CAAC,CAAC;IAC3C,IAAI,CAAC1E,CAAC,GAAG8E,GAAG,CAACkC,EAAE,EAAE,IAAI,CAACzD,CAAC,CAACf,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,CAACe,CAAC,CAACf,CAAC,GAAG,IAAI,CAACxC,CAAC,CAACwD,MAAM;IAC5D,IAAI,CAACmB,CAAC,GAAGG,GAAG,CAAC,IAAI,CAACH,CAAC,EAAG,IAAI,CAACpB,CAAC,CAACoB,CAAC,GAAG,CAAC,IAAK,CAAC,CAAC,EAAE,IAAI,CAACpB,CAAC,CAACoB,CAAC,IAAI,CAAC;EAC5D,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIsN,OAAO,CAAC3R,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC7C,IAAI,CAACtE,CAAC,CAACuQ,KAAK,CAAC,EAAE,IAAI,CAACpR,CAAC,CAACmF,KAAK,CAAC;EAChC,CAAC;EACD,OAAOoM,OAAO;AAClB,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIE,YAAY,GAAAjS,OAAA,CAAAiS,YAAA,GAAG,aAAe,YAAY;EAC1C;AACJ;AACA;AACA;EACI,SAASA,YAAYA,CAACrR,EAAE,EAAE;IACtB,IAAI,CAACgQ,MAAM,GAAGhQ,EAAE;IAChBkQ,QAAQ,CAAC,CACL3B,MAAM,EACN,YAAY;MAAE,OAAO,CAACuB,KAAK,EAAEqB,OAAO,CAAC;IAAE,CAAC,CAC3C,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY;MACpB,IAAIpB,IAAI,GAAG,IAAIoB,OAAO,CAAC,CAAC;MACxBxQ,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACT;EACA,OAAOsB,YAAY;AACvB,CAAC,CAAC,CAAE;AAEG,SAASC,OAAOA,CAAC1Q,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACpC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBnB,MAAM,CACT,EAAE,UAAU0B,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAACD,WAAW,CAACyB,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAE8N,GAAG,CAACuB,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASwO,WAAWA,CAAC5N,IAAI,EAAEyH,GAAG,EAAE;EACnC,OAAOjE,KAAK,CAACxD,IAAI,EAAEyH,GAAG,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAIkJ,IAAI,GAAAnS,OAAA,CAAAoS,QAAA,GAAApS,OAAA,CAAAmS,IAAA,GAAG,aAAe,YAAY;EAClC,SAASA,IAAIA,CAAC7B,IAAI,EAAE1P,EAAE,EAAE;IACpB,IAAI,CAACJ,CAAC,GAAGgN,GAAG,CAAC,CAAC;IACd,IAAI,CAACjK,CAAC,GAAG,CAAC;IACV,IAAI,CAACM,CAAC,GAAG,CAAC;IACV8N,OAAO,CAACZ,IAAI,CAAC,IAAI,EAAET,IAAI,EAAE1P,EAAE,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;EACIuR,IAAI,CAAC/R,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC1CgM,OAAO,CAACvR,SAAS,CAACqH,IAAI,CAACsJ,IAAI,CAAC,IAAI,EAAEa,KAAK,EAAEjM,KAAK,CAAC;EACnD,CAAC;EACDwM,IAAI,CAAC/R,SAAS,CAACqE,CAAC,GAAG,UAAUjE,CAAC,EAAEoF,CAAC,EAAE;IAC/B,IAAI,CAACpF,CAAC,CAACiE,CAAC,CAACjE,CAAC,CAAC;IACX,IAAI,CAAC+C,CAAC,IAAI/C,CAAC,CAAC8C,MAAM;IAClB,IAAI+O,GAAG,GAAG1E,IAAI,CAACnN,CAAC,EAAE,IAAI,CAACV,CAAC,EAAE,IAAI,CAAC+D,CAAC,IAAI8L,IAAI,CAAC,IAAI,CAAC7P,CAAC,CAAC,EAAE8F,CAAC,IAAI,CAAC,EAAE,CAACA,CAAC,CAAC;IAC7D,IAAI,IAAI,CAAC/B,CAAC,EACN6L,GAAG,CAAC2C,GAAG,EAAE,IAAI,CAACvS,CAAC,CAAC,EAAE,IAAI,CAAC+D,CAAC,GAAG,CAAC;IAChC,IAAI+B,CAAC,EACDgK,MAAM,CAACyC,GAAG,EAAEA,GAAG,CAAC/O,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC9C,CAAC,CAACgE,CAAC,CAAC,CAAC,CAAC,EAAEoL,MAAM,CAACyC,GAAG,EAAEA,GAAG,CAAC/O,MAAM,GAAG,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;IAChF,IAAI,CAACqN,MAAM,CAACyB,GAAG,EAAEzM,CAAC,CAAC;EACvB,CAAC;EACD,OAAOuM,IAAI;AACf,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIG,SAAS,GAAAtS,OAAA,CAAAuS,aAAA,GAAAvS,OAAA,CAAAsS,SAAA,GAAG,aAAe,YAAY;EACvC,SAASA,SAASA,CAAChC,IAAI,EAAE1P,EAAE,EAAE;IACzBkQ,QAAQ,CAAC,CACLvB,KAAK,EACLE,GAAG,EACH,YAAY;MAAE,OAAO,CAACiB,KAAK,EAAEiB,OAAO,EAAEQ,IAAI,CAAC;IAAE,CAAC,CACjD,EAAE,IAAI,EAAET,YAAY,CAACX,IAAI,CAAC,IAAI,EAAET,IAAI,EAAE1P,EAAE,CAAC,EAAE,UAAUiQ,EAAE,EAAE;MACtD,IAAIF,IAAI,GAAG,IAAIwB,IAAI,CAACtB,EAAE,CAACrP,IAAI,CAAC;MAC5BD,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACT;EACA,OAAO2B,SAAS;AACpB,CAAC,CAAC,CAAE;AAEG,SAASE,IAAIA,CAAChR,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACjC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBf,KAAK,EACLE,GAAG,EACH,YAAY;IAAE,OAAO,CAACgD,QAAQ,CAAC;EAAE,CAAC,CACrC,EAAE,UAAU5B,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAACoD,QAAQ,CAAC5B,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAEqP,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6R,QAAQA,CAACjR,IAAI,EAAE8O,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,IAAI9P,CAAC,GAAGgN,GAAG,CAAC,CAAC;IAAEjK,CAAC,GAAG/B,IAAI,CAAC8B,MAAM;EAC9B9C,CAAC,CAACiE,CAAC,CAACjD,IAAI,CAAC;EACT,IAAIgD,CAAC,GAAGmJ,IAAI,CAACnM,IAAI,EAAE8O,IAAI,EAAEX,IAAI,CAACW,IAAI,CAAC,EAAE,CAAC,CAAC;IAAEjN,CAAC,GAAGmB,CAAC,CAAClB,MAAM;EACrD,OAAOoM,GAAG,CAAClL,CAAC,EAAE8L,IAAI,CAAC,EAAEV,MAAM,CAACpL,CAAC,EAAEnB,CAAC,GAAG,CAAC,EAAE7C,CAAC,CAACgE,CAAC,CAAC,CAAC,CAAC,EAAEoL,MAAM,CAACpL,CAAC,EAAEnB,CAAC,GAAG,CAAC,EAAEE,CAAC,CAAC,EAAEiB,CAAC;AACxE;AACA;AACA;AACA;AACA,IAAIkO,MAAM,GAAA1S,OAAA,CAAA0S,MAAA,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;EACI,SAASA,MAAMA,CAAC9R,EAAE,EAAE;IAChB,IAAI,CAACiD,CAAC,GAAG,CAAC;IACVkO,OAAO,CAAChB,IAAI,CAAC,IAAI,EAAEnQ,EAAE,CAAC;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI8R,MAAM,CAACtS,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC5CoM,OAAO,CAAC3R,SAAS,CAACiB,CAAC,CAAC0P,IAAI,CAAC,IAAI,EAAEa,KAAK,CAAC;IACrC,IAAI,IAAI,CAAC/N,CAAC,EAAE;MACR,IAAIR,CAAC,GAAGyM,GAAG,CAAC,IAAI,CAACrL,CAAC,CAAC;MACnB,IAAIpB,CAAC,IAAI,IAAI,CAACoB,CAAC,CAACnB,MAAM,IAAI,CAACqC,KAAK,EAC5B;MACJ,IAAI,CAAClB,CAAC,GAAG,IAAI,CAACA,CAAC,CAACM,QAAQ,CAAC1B,CAAC,CAAC,EAAE,IAAI,CAACQ,CAAC,GAAG,CAAC;IAC3C;IACA,IAAI8B,KAAK,EAAE;MACP,IAAI,IAAI,CAAClB,CAAC,CAACnB,MAAM,GAAG,CAAC,EACjB,MAAM,qBAAqB;MAC/B,IAAI,CAACmB,CAAC,GAAG,IAAI,CAACA,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC;IACA;IACA;IACAgN,OAAO,CAAC3R,SAAS,CAACI,CAAC,CAACuQ,IAAI,CAAC,IAAI,EAAEpL,KAAK,CAAC;EACzC,CAAC;EACD,OAAO+M,MAAM;AACjB,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIC,WAAW,GAAA3S,OAAA,CAAA2S,WAAA,GAAG,aAAe,YAAY;EACzC;AACJ;AACA;AACA;EACI,SAASA,WAAWA,CAAC/R,EAAE,EAAE;IACrB,IAAI,CAACgQ,MAAM,GAAGhQ,EAAE;IAChBkQ,QAAQ,CAAC,CACL3B,MAAM,EACNU,IAAI,EACJ,YAAY;MAAE,OAAO,CAACa,KAAK,EAAEqB,OAAO,EAAEW,MAAM,CAAC;IAAE,CAAC,CACnD,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY;MACpB,IAAI/B,IAAI,GAAG,IAAI+B,MAAM,CAAC,CAAC;MACvBnR,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC;EACT;EACA,OAAOgC,WAAW;AACtB,CAAC,CAAC,CAAE;AAEG,SAASC,MAAMA,CAACpR,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACnC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBnB,MAAM,EACNU,IAAI,EACJ,YAAY;IAAE,OAAO,CAACgD,UAAU,CAAC;EAAE,CAAC,CACvC,EAAE,UAAUhC,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAACwD,UAAU,CAAChC,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiS,UAAUA,CAACrR,IAAI,EAAEyH,GAAG,EAAE;EAClC,OAAOjE,KAAK,CAACxD,IAAI,CAACuD,QAAQ,CAAC+K,GAAG,CAACtO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEyH,GAAG,IAAI,IAAIvH,EAAE,CAACqO,GAAG,CAACvO,IAAI,CAAC,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA,IAAIsR,IAAI,GAAA9S,OAAA,CAAA8S,IAAA,GAAG,aAAe,YAAY;EAClC,SAASA,IAAIA,CAACxC,IAAI,EAAE1P,EAAE,EAAE;IACpB,IAAI,CAACJ,CAAC,GAAGkN,KAAK,CAAC,CAAC;IAChB,IAAI,CAAC7J,CAAC,GAAG,CAAC;IACV8N,OAAO,CAACZ,IAAI,CAAC,IAAI,EAAET,IAAI,EAAE1P,EAAE,CAAC;EAChC;EACA;AACJ;AACA;AACA;AACA;EACIkS,IAAI,CAAC1S,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC1CgM,OAAO,CAACvR,SAAS,CAACqH,IAAI,CAACsJ,IAAI,CAAC,IAAI,EAAEa,KAAK,EAAEjM,KAAK,CAAC;EACnD,CAAC;EACDmN,IAAI,CAAC1S,SAAS,CAACqE,CAAC,GAAG,UAAUjE,CAAC,EAAEoF,CAAC,EAAE;IAC/B,IAAI,CAACpF,CAAC,CAACiE,CAAC,CAACjE,CAAC,CAAC;IACX,IAAI6R,GAAG,GAAG1E,IAAI,CAACnN,CAAC,EAAE,IAAI,CAACV,CAAC,EAAE,IAAI,CAAC+D,CAAC,IAAI,CAAC,EAAE+B,CAAC,IAAI,CAAC,EAAE,CAACA,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC/B,CAAC,EACNoM,GAAG,CAACoC,GAAG,EAAE,IAAI,CAACvS,CAAC,CAAC,EAAE,IAAI,CAAC+D,CAAC,GAAG,CAAC;IAChC,IAAI+B,CAAC,EACDgK,MAAM,CAACyC,GAAG,EAAEA,GAAG,CAAC/O,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC9C,CAAC,CAACgE,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,CAACoM,MAAM,CAACyB,GAAG,EAAEzM,CAAC,CAAC;EACvB,CAAC;EACD,OAAOkN,IAAI;AACf,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIC,SAAS,GAAA/S,OAAA,CAAA+S,SAAA,GAAG,aAAe,YAAY;EACvC,SAASA,SAASA,CAACzC,IAAI,EAAE1P,EAAE,EAAE;IACzBkQ,QAAQ,CAAC,CACLvB,KAAK,EACLS,GAAG,EACH,YAAY;MAAE,OAAO,CAACU,KAAK,EAAEiB,OAAO,EAAEmB,IAAI,CAAC;IAAE,CAAC,CACjD,EAAE,IAAI,EAAEpB,YAAY,CAACX,IAAI,CAAC,IAAI,EAAET,IAAI,EAAE1P,EAAE,CAAC,EAAE,UAAUiQ,EAAE,EAAE;MACtD,IAAIF,IAAI,GAAG,IAAImC,IAAI,CAACjC,EAAE,CAACrP,IAAI,CAAC;MAC5BD,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC;EACV;EACA,OAAOoC,SAAS;AACpB,CAAC,CAAC,CAAE;AAEG,SAASC,IAAIA,CAACxR,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACjC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBf,KAAK,EACLS,GAAG,EACH,YAAY;IAAE,OAAO,CAACiD,QAAQ,CAAC;EAAE,CAAC,CACrC,EAAE,UAAUpC,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAAC4D,QAAQ,CAACpC,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAEqP,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqS,QAAQA,CAACzR,IAAI,EAAE8O,IAAI,EAAE;EACjC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,IAAIhM,CAAC,GAAGoJ,KAAK,CAAC,CAAC;EACfpJ,CAAC,CAACG,CAAC,CAACjD,IAAI,CAAC;EACT,IAAIgD,CAAC,GAAGmJ,IAAI,CAACnM,IAAI,EAAE8O,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B,OAAOL,GAAG,CAACzL,CAAC,EAAE8L,IAAI,CAAC,EAAEV,MAAM,CAACpL,CAAC,EAAEA,CAAC,CAAClB,MAAM,GAAG,CAAC,EAAEgB,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC;AAC1D;AACA;AACA;AACA;AACA,IAAI0O,MAAM,GAAAlT,OAAA,CAAAkT,MAAA,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;EACI,SAASA,MAAMA,CAACtS,EAAE,EAAE;IAChB,IAAI,CAACiD,CAAC,GAAG,CAAC;IACVkO,OAAO,CAAChB,IAAI,CAAC,IAAI,EAAEnQ,EAAE,CAAC;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACIsS,MAAM,CAAC9S,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAC5CoM,OAAO,CAAC3R,SAAS,CAACiB,CAAC,CAAC0P,IAAI,CAAC,IAAI,EAAEa,KAAK,CAAC;IACrC,IAAI,IAAI,CAAC/N,CAAC,EAAE;MACR,IAAI,IAAI,CAACY,CAAC,CAACnB,MAAM,GAAG,CAAC,IAAI,CAACqC,KAAK,EAC3B;MACJ,IAAI,CAAClB,CAAC,GAAG,IAAI,CAACA,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClB,CAAC,GAAG,CAAC;IAC3C;IACA,IAAI8B,KAAK,EAAE;MACP,IAAI,IAAI,CAAClB,CAAC,CAACnB,MAAM,GAAG,CAAC,EACjB,MAAM,qBAAqB;MAC/B,IAAI,CAACmB,CAAC,GAAG,IAAI,CAACA,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC;IACA;IACA;IACAgN,OAAO,CAAC3R,SAAS,CAACI,CAAC,CAACuQ,IAAI,CAAC,IAAI,EAAEpL,KAAK,CAAC;EACzC,CAAC;EACD,OAAOuN,MAAM;AACjB,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIC,WAAW,GAAAnT,OAAA,CAAAmT,WAAA,GAAG,aAAe,YAAY;EACzC;AACJ;AACA;AACA;EACI,SAASA,WAAWA,CAACvS,EAAE,EAAE;IACrB,IAAI,CAACgQ,MAAM,GAAGhQ,EAAE;IAChBkQ,QAAQ,CAAC,CACL3B,MAAM,EACNe,IAAI,EACJ,YAAY;MAAE,OAAO,CAACQ,KAAK,EAAEqB,OAAO,EAAEmB,MAAM,CAAC;IAAE,CAAC,CACnD,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY;MACpB,IAAIvC,IAAI,GAAG,IAAIuC,MAAM,CAAC,CAAC;MACvB3R,SAAS,GAAGmP,KAAK,CAACC,IAAI,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC;EACV;EACA,OAAOwC,WAAW;AACtB,CAAC,CAAC,CAAE;AAEG,SAASC,MAAMA,CAAC5R,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACnC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAOyP,KAAK,CAAC7O,IAAI,EAAE8O,IAAI,EAAE,CACrBnB,MAAM,EACNe,IAAI,EACJ,YAAY;IAAE,OAAO,CAACmD,UAAU,CAAC;EAAE,CAAC,CACvC,EAAE,UAAUxC,EAAE,EAAE;IAAE,OAAOxB,GAAG,CAACgE,UAAU,CAACxC,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,EAAE8N,GAAG,CAACuB,EAAE,CAACrP,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC,EAAEZ,EAAE,CAAC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyS,UAAUA,CAAC7R,IAAI,EAAEyH,GAAG,EAAE;EAClC,OAAOjE,KAAK,EAAEmL,GAAG,CAAC3O,IAAI,CAAC,EAAEA,IAAI,CAACuD,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAGkE,GAAG,CAAC;AACxD;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAIqK,UAAU,GAAAtT,OAAA,CAAAsT,UAAA,GAAG,aAAe,YAAY;EACxC;AACJ;AACA;AACA;EACI,SAASA,UAAUA,CAAC1S,EAAE,EAAE;IACpB,IAAI,CAAC2S,CAAC,GAAGb,MAAM;IACf,IAAI,CAACc,CAAC,GAAGzB,OAAO;IAChB,IAAI,CAAC0B,CAAC,GAAGP,MAAM;IACf,IAAI,CAACtC,MAAM,GAAGhQ,EAAE;EACpB;EACA;AACJ;AACA;AACA;AACA;EACI0S,UAAU,CAAClT,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IAChD,IAAI,CAAC,IAAI,CAACiL,MAAM,EACZ,MAAM,mBAAmB;IAC7B,IAAI,CAAC,IAAI,CAACvN,CAAC,EAAE;MACT,IAAI,IAAI,CAACoB,CAAC,IAAI,IAAI,CAACA,CAAC,CAACnB,MAAM,EAAE;QACzB,IAAIuB,CAAC,GAAG,IAAInD,EAAE,CAAC,IAAI,CAAC+C,CAAC,CAACnB,MAAM,GAAGsO,KAAK,CAACtO,MAAM,CAAC;QAC5CuB,CAAC,CAACC,GAAG,CAAC,IAAI,CAACL,CAAC,CAAC,EAAEI,CAAC,CAACC,GAAG,CAAC8M,KAAK,EAAE,IAAI,CAACnN,CAAC,CAACnB,MAAM,CAAC;MAC9C,CAAC,MAEG,IAAI,CAACmB,CAAC,GAAGmN,KAAK;MAClB,IAAI,IAAI,CAACnN,CAAC,CAACnB,MAAM,GAAG,CAAC,EAAE;QACnB,IAAIoQ,OAAO,GAAG,IAAI;QAClB,IAAI9S,EAAE,GAAG,SAAAA,CAAA,EAAY;UAAE8S,OAAO,CAAC9C,MAAM,CAAC+C,KAAK,CAACD,OAAO,EAAEE,SAAS,CAAC;QAAE,CAAC;QAClE,IAAI,CAACvQ,CAAC,GAAI,IAAI,CAACoB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GACzD,IAAI,IAAI,CAAC8O,CAAC,CAAC3S,EAAE,CAAC,GACb,CAAC,IAAI,CAAC6D,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAK,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAI,CAAC,IAAK,CAAC,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAG,GACjF,IAAI,IAAI,CAAC+O,CAAC,CAAC5S,EAAE,CAAC,GACd,IAAI,IAAI,CAAC6S,CAAC,CAAC7S,EAAE,CAAC;QACxB,IAAI,CAACyC,CAAC,CAACoE,IAAI,CAAC,IAAI,CAAChD,CAAC,EAAEkB,KAAK,CAAC;QAC1B,IAAI,CAAClB,CAAC,GAAG,IAAI;MACjB;IACJ,CAAC,MAEG,IAAI,CAACpB,CAAC,CAACoE,IAAI,CAACmK,KAAK,EAAEjM,KAAK,CAAC;EACjC,CAAC;EACD,OAAO2N,UAAU;AACrB,CAAC,CAAC,CAAE;AAEJ;AACA;AACA;AACA,IAAIO,eAAe,GAAA7T,OAAA,CAAA6T,eAAA,GAAG,aAAe,YAAY;EAC7C;AACJ;AACA;AACA;EACI,SAASA,eAAeA,CAACjT,EAAE,EAAE;IACzB,IAAI,CAAC2S,CAAC,GAAGZ,WAAW;IACpB,IAAI,CAACa,CAAC,GAAGvB,YAAY;IACrB,IAAI,CAACwB,CAAC,GAAGN,WAAW;IACpB,IAAI,CAACvC,MAAM,GAAGhQ,EAAE;EACpB;EACA;AACJ;AACA;AACA;AACA;EACIiT,eAAe,CAACzT,SAAS,CAACqH,IAAI,GAAG,UAAUmK,KAAK,EAAEjM,KAAK,EAAE;IACrD2N,UAAU,CAAClT,SAAS,CAACqH,IAAI,CAACsJ,IAAI,CAAC,IAAI,EAAEa,KAAK,EAAEjM,KAAK,CAAC;EACtD,CAAC;EACD,OAAOkO,eAAe;AAC1B,CAAC,CAAC,CAAE;AAEG,SAASC,UAAUA,CAACtS,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EACvC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,OAAQY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GACjDoR,MAAM,CAACpR,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,CAAC,GACrB,CAACY,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAKA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAI,CAAC,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,IAAI,EAAG,GACzE0Q,OAAO,CAAC1Q,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,CAAC,GACvBwS,MAAM,CAAC5R,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmT,cAAcA,CAACvS,IAAI,EAAEyH,GAAG,EAAE;EACtC,OAAQzH,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GACjDqR,UAAU,CAACrR,IAAI,EAAEyH,GAAG,CAAC,GACpB,CAACzH,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAKA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAI,CAAC,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,IAAI,EAAG,GACzE4N,WAAW,CAAC5N,IAAI,EAAEyH,GAAG,CAAC,GACtBoK,UAAU,CAAC7R,IAAI,EAAEyH,GAAG,CAAC;AACnC;AACA;AACA,IAAI+K,IAAI,GAAG,SAAAA,CAAUxP,CAAC,EAAEC,CAAC,EAAE2B,CAAC,EAAEtG,CAAC,EAAE;EAC7B,KAAK,IAAIyN,CAAC,IAAI/I,CAAC,EAAE;IACb,IAAIyP,GAAG,GAAGzP,CAAC,CAAC+I,CAAC,CAAC;MAAE1I,CAAC,GAAGJ,CAAC,GAAG8I,CAAC;IACzB,IAAI0G,GAAG,YAAYvS,EAAE,EACjB0E,CAAC,CAACvB,CAAC,CAAC,GAAG,CAACoP,GAAG,EAAEnU,CAAC,CAAC,CAAC,KACf,IAAIoU,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EACvB7N,CAAC,CAACvB,CAAC,CAAC,GAAG,CAACoP,GAAG,CAAC,CAAC,CAAC,EAAElG,GAAG,CAACjO,CAAC,EAAEmU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAEhCD,IAAI,CAACC,GAAG,EAAEpP,CAAC,GAAG,GAAG,EAAEuB,CAAC,EAAEtG,CAAC,CAAC;EAChC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASsU,OAAOA,CAACC,GAAG,EAAEC,MAAM,EAAE;EACjC,IAAI/Q,CAAC,GAAG8Q,GAAG,CAAC/Q,MAAM;EAClB,IAAI,CAACgR,MAAM,IAAI,OAAOC,WAAW,IAAI,WAAW,EAC5C,OAAO,IAAIA,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,GAAG,CAAC;EACxC,IAAII,EAAE,GAAG,IAAI/S,EAAE,CAAC2S,GAAG,CAAC/Q,MAAM,IAAI+Q,GAAG,CAAC/Q,MAAM,KAAK,CAAC,CAAC,CAAC;EAChD,IAAIoR,EAAE,GAAG,CAAC;EACV,IAAIxT,CAAC,GAAG,SAAAA,CAAU2C,CAAC,EAAE;IAAE4Q,EAAE,CAACC,EAAE,EAAE,CAAC,GAAG7Q,CAAC;EAAE,CAAC;EACtC,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,CAAC,EAAE,EAAEhB,CAAC,EAAE;IACxB,IAAImS,EAAE,GAAG,CAAC,GAAGD,EAAE,CAACnR,MAAM,EAAE;MACpB,IAAIuB,CAAC,GAAG,IAAInD,EAAE,CAACgT,EAAE,GAAG,CAAC,IAAKnR,CAAC,GAAGhB,CAAC,IAAK,CAAC,CAAC,CAAC;MACvCsC,CAAC,CAACC,GAAG,CAAC2P,EAAE,CAAC;MACTA,EAAE,GAAG5P,CAAC;IACV;IACA,IAAIrE,CAAC,GAAG6T,GAAG,CAAC/C,UAAU,CAAC/O,CAAC,CAAC;IACzB,IAAI/B,CAAC,GAAG,GAAG,IAAI8T,MAAM,EACjBpT,CAAC,CAACV,CAAC,CAAC,CAAC,KACJ,IAAIA,CAAC,GAAG,IAAI,EACbU,CAAC,CAAC,GAAG,GAAIV,CAAC,KAAK,CAAE,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAIV,CAAC,GAAG,EAAG,CAAC,CAAC,KACrC,IAAIA,CAAC,GAAG,KAAK,IAAIA,CAAC,GAAG,KAAK,EAC3BA,CAAC,GAAG,KAAK,IAAIA,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,GAAI6T,GAAG,CAAC/C,UAAU,CAAC,EAAE/O,CAAC,CAAC,GAAG,IAAK,EACvDrB,CAAC,CAAC,GAAG,GAAIV,CAAC,KAAK,EAAG,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAKV,CAAC,KAAK,EAAE,GAAI,EAAG,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAKV,CAAC,KAAK,CAAC,GAAI,EAAG,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAIV,CAAC,GAAG,EAAG,CAAC,CAAC,KAElGU,CAAC,CAAC,GAAG,GAAIV,CAAC,KAAK,EAAG,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAKV,CAAC,KAAK,CAAC,GAAI,EAAG,CAAC,EAAEU,CAAC,CAAC,GAAG,GAAIV,CAAC,GAAG,EAAG,CAAC;EACzE;EACA,OAAOoE,GAAG,CAAC6P,EAAE,EAAE,CAAC,EAAEC,EAAE,CAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,SAASA,CAAC1P,GAAG,EAAEqP,MAAM,EAAE;EACnC,IAAI9R,CAAC,GAAG,EAAE;EACV,IAAI,CAAC8R,MAAM,IAAI,OAAOM,WAAW,IAAI,WAAW,EAC5C,OAAO,IAAIA,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC5P,GAAG,CAAC;EACxC,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0C,GAAG,CAAC3B,MAAM,GAAG;IAC7B,IAAI9C,CAAC,GAAGyE,GAAG,CAAC1C,CAAC,EAAE,CAAC;IAChB,IAAI/B,CAAC,GAAG,GAAG,IAAI8T,MAAM,EACjB9R,CAAC,IAAIsS,MAAM,CAACC,YAAY,CAACvU,CAAC,CAAC,CAAC,KAC3B,IAAIA,CAAC,GAAG,GAAG,EACZgC,CAAC,IAAIsS,MAAM,CAACC,YAAY,CAAC,CAACvU,CAAC,GAAG,EAAE,KAAK,CAAC,GAAIyE,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC,CAAC,KACzD,IAAI/B,CAAC,GAAG,GAAG,EACZgC,CAAC,IAAIsS,MAAM,CAACC,YAAY,CAAC,CAACvU,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAACyE,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAI0C,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAG,CAAC,CAAC,KAElF/B,CAAC,GAAG,CAAC,CAACA,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAACyE,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC0C,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAI0C,GAAG,CAAC1C,CAAC,EAAE,CAAC,GAAG,EAAG,IAAI,KAAK,EACzFC,CAAC,IAAIsS,MAAM,CAACC,YAAY,CAAC,KAAK,GAAIvU,CAAC,IAAI,EAAG,EAAE,KAAK,GAAIA,CAAC,GAAG,IAAK,CAAC;EAC3E;EACA,OAAOgC,CAAC;AACZ;AACA;AACA;AACA,IAAIwS,IAAI,GAAG,SAAAA,CAAUxQ,CAAC,EAAElC,CAAC,EAAE;EAAE,OAAOA,CAAC,GAAG,EAAE,GAAG0O,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,GAAG0O,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC;AAAE,CAAC;AAC7E;AACA,IAAI2S,EAAE,GAAG,SAAAA,CAAUzQ,CAAC,EAAElC,CAAC,EAAE4S,CAAC,EAAE;EACxB,IAAIC,GAAG,GAAGnE,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC;IAAE2L,EAAE,GAAG0G,SAAS,CAACnQ,CAAC,CAACO,QAAQ,CAACzC,CAAC,GAAG,EAAE,EAAEA,CAAC,GAAG,EAAE,GAAG6S,GAAG,CAAC,EAAE,EAAEnE,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAAE8S,EAAE,GAAG9S,CAAC,GAAG,EAAE,GAAG6S,GAAG;EACpH,IAAIzS,EAAE,GAAGwS,CAAC,GAAGG,IAAI,CAAC7Q,CAAC,EAAE4Q,EAAE,CAAC,GAAG,CAACnE,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,EAAE2O,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,EAAE2O,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,CAAC;IAAEgT,EAAE,GAAG5S,EAAE,CAAC,CAAC,CAAC;IAAE6S,EAAE,GAAG7S,EAAE,CAAC,CAAC,CAAC;IAAE8S,GAAG,GAAG9S,EAAE,CAAC,CAAC,CAAC;EAC7G,OAAO,CAACsO,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,EAAEgT,EAAE,EAAEC,EAAE,EAAEtH,EAAE,EAAEmH,EAAE,GAAGpE,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,GAAG0O,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,EAAEkT,GAAG,CAAC;AAC/E,CAAC;AACD;AACA,IAAIH,IAAI,GAAG,SAAAA,CAAU7Q,CAAC,EAAElC,CAAC,EAAE;EACvB,OAAO0O,EAAE,CAACxM,CAAC,EAAElC,CAAC,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,GAAG0O,EAAE,CAACxM,CAAC,EAAElC,CAAC,GAAG,CAAC,CAAC,CACvC;EACJ,OAAO,CAAC2O,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,EAAE2O,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,CAAC,CAAC,EAAE2O,EAAE,CAACzM,CAAC,EAAElC,CAAC,GAAG,EAAE,CAAC,CAAC;AACvD,CAAC;AACD;AACA,IAAImT,GAAG,GAAG,SAAAA,CAAUjR,CAAC,EAAElC,CAAC,EAAE9B,CAAC,EAAEkV,GAAG,EAAEH,EAAE,EAAEtH,EAAE,EAAEpN,CAAC,EAAEf,CAAC,EAAE6V,EAAE,EAAEvP,CAAC,EAAE;EACnD,IAAIzD,EAAE,GAAGsL,EAAE,CAAC3K,MAAM;IAAEC,CAAC,GAAGmS,GAAG,CAACpS,MAAM;EAClCsM,MAAM,CAACpL,CAAC,EAAElC,CAAC,EAAEqT,EAAE,IAAI,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC,EAAErT,CAAC,IAAI,CAAC;EACxD,IAAIqT,EAAE,IAAI,IAAI,EACVnR,CAAC,CAAClC,CAAC,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC;EACrBkC,CAAC,CAAClC,CAAC,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,CAAC,CAAC;EACnBkC,CAAC,CAAClC,CAAC,EAAE,CAAC,GAAI8D,CAAC,IAAI,CAAC,KAAKtG,CAAC,CAAC8N,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG9N,CAAC,CAAC8N,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG9N,CAAC,CAAC8N,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,EAAEpJ,CAAC,CAAClC,CAAC,EAAE,CAAC,GAAGzB,CAAC,IAAI,CAAC;EACjG2D,CAAC,CAAClC,CAAC,CAAC,GAAG8D,CAAC,EAAE9D,CAAC,IAAI,CAAC;EAChB,IAAIwE,EAAE,GAAG,IAAIsK,IAAI,CAACtR,CAAC,CAACqR,KAAK,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAAEuE,CAAC,GAAG9O,EAAE,CAAC+O,WAAW,CAAC,CAAC,GAAG,IAAI;EACrE,IAAID,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,GAAG,EAChB,MAAM,6BAA6B;EACvChG,MAAM,CAACpL,CAAC,EAAElC,CAAC,EAAG,CAACsT,CAAC,IAAI,EAAE,IAAI,CAAC,GAAM9O,EAAE,CAACgP,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAK,EAAG,GAAIhP,EAAE,CAACiP,OAAO,CAAC,CAAC,IAAI,EAAG,GAAIjP,EAAE,CAACkP,QAAQ,CAAC,CAAC,IAAI,EAAG,GAAIlP,EAAE,CAACmP,UAAU,CAAC,CAAC,IAAI,CAAE,GAAInP,EAAE,CAACoP,UAAU,CAAC,CAAC,KAAK,CAAE,CAAC;EAC7J5T,CAAC,IAAI,CAAC;EACNsN,MAAM,CAACpL,CAAC,EAAElC,CAAC,EAAE9B,CAAC,CAAC;EACfoP,MAAM,CAACpL,CAAC,EAAElC,CAAC,GAAG,CAAC,EAAEiB,CAAC,CAAC;EACnBqM,MAAM,CAACpL,CAAC,EAAElC,CAAC,GAAG,CAAC,EAAEiT,EAAE,CAAC;EACpB3F,MAAM,CAACpL,CAAC,EAAElC,CAAC,GAAG,EAAE,EAAEK,EAAE,CAAC,EAAEL,CAAC,IAAI,EAAE,CAAC,CAAC;EAChC,IAAIqT,EAAE,IAAI,IAAI,EACV/F,MAAM,CAACpL,CAAC,EAAElC,CAAC,IAAI,EAAE,EAAEqT,EAAE,CAAC,EAAErT,CAAC,IAAI,CAAC;EAClCkC,CAAC,CAACM,GAAG,CAACmJ,EAAE,EAAE3L,CAAC,CAAC;EACZA,CAAC,IAAIK,EAAE;EACP,IAAIgT,EAAE,IAAI,IAAI,EACVnR,CAAC,CAACM,GAAG,CAAC4Q,GAAG,EAAEpT,CAAC,CAAC;AACrB,CAAC;AACD;AACA,IAAI6T,GAAG,GAAG,SAAAA,CAAUrW,CAAC,EAAEwC,CAAC,EAAE9B,CAAC,EAAEgE,CAAC,EAAEnD,CAAC,EAAE;EAC/BuO,MAAM,CAAC9P,CAAC,EAAEwC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;EACzBsN,MAAM,CAAC9P,CAAC,EAAEwC,CAAC,GAAG,CAAC,EAAE9B,CAAC,CAAC;EACnBoP,MAAM,CAAC9P,CAAC,EAAEwC,CAAC,GAAG,EAAE,EAAE9B,CAAC,CAAC;EACpBoP,MAAM,CAAC9P,CAAC,EAAEwC,CAAC,GAAG,EAAE,EAAEkC,CAAC,CAAC;EACpBoL,MAAM,CAAC9P,CAAC,EAAEwC,CAAC,GAAG,EAAE,EAAEjB,CAAC,CAAC;AACxB,CAAC;AACM,SAAS+U,GAAGA,CAAC5U,IAAI,EAAE8O,IAAI,EAAE1P,EAAE,EAAE;EAChC,IAAI,CAACA,EAAE,EACHA,EAAE,GAAG0P,IAAI,EAAEA,IAAI,GAAG,CAAC,CAAC;EACxB,IAAI,OAAO1P,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,IAAI4B,CAAC,GAAG,CAAC,CAAC;EACVwR,IAAI,CAACxS,IAAI,EAAE,EAAE,EAAEgB,CAAC,EAAE8N,IAAI,CAAC;EACvB,IAAI/C,CAAC,GAAG8I,MAAM,CAACC,IAAI,CAAC9T,CAAC,CAAC;EACtB,IAAI4F,GAAG,GAAGmF,CAAC,CAACjK,MAAM;IAAExD,CAAC,GAAG,CAAC;IAAEyW,GAAG,GAAG,CAAC;EAClC,IAAIC,IAAI,GAAGpO,GAAG;IAAEqO,KAAK,GAAG,IAAIvC,KAAK,CAAC9L,GAAG,CAAC;EACtC,IAAIsO,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,KAAK,IAAIpU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmU,IAAI,CAACpT,MAAM,EAAE,EAAEf,CAAC,EAChCmU,IAAI,CAACnU,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EACD,IAAIqU,GAAG,GAAG,SAAAA,CAAA,EAAY;IAClB,IAAI3N,GAAG,GAAG,IAAIvH,EAAE,CAAC6U,GAAG,GAAG,EAAE,CAAC;MAAEM,EAAE,GAAG/W,CAAC;MAAEgX,GAAG,GAAGP,GAAG,GAAGzW,CAAC;IACjDyW,GAAG,GAAG,CAAC;IACP,KAAK,IAAIhU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiU,IAAI,EAAE,EAAEjU,CAAC,EAAE;MAC3B,IAAIqD,CAAC,GAAG6Q,KAAK,CAAClU,CAAC,CAAC;MAChB,IAAI;QACAkT,GAAG,CAACxM,GAAG,EAAEsN,GAAG,EAAE3Q,CAAC,CAACpF,CAAC,EAAEoF,CAAC,CAACpB,CAAC,EAAEoB,CAAC,CAAC9B,CAAC,EAAE8B,CAAC,CAACf,CAAC,EAAEe,CAAC,CAAC/E,CAAC,EAAE+E,CAAC,CAACnB,CAAC,EAAE,IAAI,EAAEmB,CAAC,CAACQ,CAAC,CAAC;QACtDqP,GAAG,CAACxM,GAAG,EAAEnJ,CAAC,EAAE8F,CAAC,CAACpF,CAAC,EAAEoF,CAAC,CAACpB,CAAC,EAAEoB,CAAC,CAAC9B,CAAC,EAAE8B,CAAC,CAACf,CAAC,EAAEe,CAAC,CAAC/E,CAAC,EAAE+E,CAAC,CAACnB,CAAC,EAAE8R,GAAG,EAAE3Q,CAAC,CAACQ,CAAC,CAAC,EAAEtG,CAAC,IAAI,EAAE,GAAG8F,CAAC,CAACf,CAAC,CAACvB,MAAM,EAAEiT,GAAG,IAAI,EAAE,GAAG3Q,CAAC,CAACf,CAAC,CAACvB,MAAM,GAAGsC,CAAC,CAACpB,CAAC,CAAClB,MAAM;MAClH,CAAC,CACD,OAAOjC,CAAC,EAAE;QACN,OAAOT,EAAE,CAACS,CAAC,EAAE,IAAI,CAAC;MACtB;IACJ;IACA8U,GAAG,CAAClN,GAAG,EAAEnJ,CAAC,EAAE2W,KAAK,CAACnT,MAAM,EAAEwT,GAAG,EAAED,EAAE,CAAC;IAClCjW,EAAE,CAAC,IAAI,EAAEqI,GAAG,CAAC;EACjB,CAAC;EACD,IAAI,CAACb,GAAG,EACJwO,GAAG,CAAC,CAAC;EACT,IAAIG,OAAO,GAAG,SAAAA,CAAUxU,CAAC,EAAE;IACvB,IAAI0L,EAAE,GAAGV,CAAC,CAAChL,CAAC,CAAC;IACb,IAAIG,EAAE,GAAGF,CAAC,CAACyL,EAAE,CAAC;MAAE+I,IAAI,GAAGtU,EAAE,CAAC,CAAC,CAAC;MAAE+B,CAAC,GAAG/B,EAAE,CAAC,CAAC,CAAC;IACvC,IAAIlC,CAAC,GAAGgN,GAAG,CAAC,CAAC;MAAE1J,CAAC,GAAGkT,IAAI,CAAC1T,MAAM;IAC9B9C,CAAC,CAACiE,CAAC,CAACuS,IAAI,CAAC;IACT,IAAInS,CAAC,GAAGuP,OAAO,CAACnG,EAAE,CAAC;MAAE5K,CAAC,GAAGwB,CAAC,CAACvB,MAAM;IACjC,IAAI8C,CAAC,GAAG3B,CAAC,CAACmJ,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAC5B,IAAIqJ,GAAG,GAAG,SAAAA,CAAU5V,CAAC,EAAEmD,CAAC,EAAE;MACtB,IAAInD,CAAC,EAAE;QACHsV,IAAI,CAAC,CAAC;QACN/V,EAAE,CAACS,CAAC,EAAE,IAAI,CAAC;MACf,CAAC,MACI;QACD,IAAIkC,CAAC,GAAGiB,CAAC,CAAClB,MAAM;QAChBmT,KAAK,CAAClU,CAAC,CAAC,GAAG;UACP6D,CAAC,EAAEA,CAAC;UACJ5B,CAAC,EAAEA,CAAC;UACJV,CAAC,EAAEA,CAAC;UACJtD,CAAC,EAAEA,CAAC,CAACgE,CAAC,CAAC,CAAC;UACR3D,CAAC,EAAEoN,EAAE,CAAC3K,MAAM,IAAIC,CAAC;UACjBsB,CAAC,EAAEA,CAAC;UACJJ,CAAC,EAAEA;QACP,CAAC;QACD3E,CAAC,IAAI,EAAE,GAAGuD,CAAC,GAAGE,CAAC;QACfgT,GAAG,IAAI,EAAE,GAAG,CAAC,GAAGlT,CAAC,GAAGE,CAAC;QACrB,IAAI,CAAC,GAAE6E,GAAG,EACNwO,GAAG,CAAC,CAAC;MACb;IACJ,CAAC;IACD,IAAI/R,CAAC,CAACvB,MAAM,GAAG,KAAK,EAChB2T,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC;IAClC,IAAI,CAAC7Q,CAAC,EACF6Q,GAAG,CAAC,IAAI,EAAED,IAAI,CAAC,CAAC,KACf,IAAIlT,CAAC,GAAG,MAAM,EAAE;MACjB,IAAI;QACAmT,GAAG,CAAC,IAAI,EAAEzH,WAAW,CAACwH,IAAI,EAAEvS,CAAC,CAAC,CAAC;MACnC,CAAC,CACD,OAAOpD,CAAC,EAAE;QACN4V,GAAG,CAAC5V,CAAC,EAAE,IAAI,CAAC;MAChB;IACJ,CAAC,MAEGqV,IAAI,CAACjP,IAAI,CAACqK,OAAO,CAACkF,IAAI,EAAEvS,CAAC,EAAEwS,GAAG,CAAC,CAAC;EACxC,CAAC;EACD;EACA,KAAK,IAAI1U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiU,IAAI,EAAE,EAAEjU,CAAC,EAAE;IAC3BwU,OAAO,CAACxU,CAAC,CAAC;EACd;EACA,OAAOoU,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,OAAOA,CAAC1V,IAAI,EAAE8O,IAAI,EAAE;EAChC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAG,CAAC,CAAC;EAAE;EAClC,IAAI9N,CAAC,GAAG,CAAC,CAAC;EACV,IAAIiU,KAAK,GAAG,EAAE;EACdzC,IAAI,CAACxS,IAAI,EAAE,EAAE,EAAEgB,CAAC,EAAE8N,IAAI,CAAC;EACvB,IAAIxQ,CAAC,GAAG,CAAC;EACT,IAAIyW,GAAG,GAAG,CAAC;EACX,KAAK,IAAItI,EAAE,IAAIzL,CAAC,EAAE;IACd,IAAIE,EAAE,GAAGF,CAAC,CAACyL,EAAE,CAAC;MAAE+I,IAAI,GAAGtU,EAAE,CAAC,CAAC,CAAC;MAAE+B,CAAC,GAAG/B,EAAE,CAAC,CAAC,CAAC;IACvC,IAAI0D,CAAC,GAAG3B,CAAC,CAACmJ,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAC5B,IAAI/I,CAAC,GAAGuP,OAAO,CAACnG,EAAE,CAAC;MAAE5K,CAAC,GAAGwB,CAAC,CAACvB,MAAM;IACjC,IAAIuB,CAAC,CAACvB,MAAM,GAAG,KAAK,EAChB,MAAM,mBAAmB;IAC7B,IAAIkB,CAAC,GAAG4B,CAAC,GAAGoJ,WAAW,CAACwH,IAAI,EAAEvS,CAAC,CAAC,GAAGuS,IAAI;MAAEzT,CAAC,GAAGiB,CAAC,CAAClB,MAAM;IACrD,IAAI9C,CAAC,GAAGgN,GAAG,CAAC,CAAC;IACbhN,CAAC,CAACiE,CAAC,CAACuS,IAAI,CAAC;IACTP,KAAK,CAAChP,IAAI,CAAC;MACPrB,CAAC,EAAEA,CAAC;MACJ5B,CAAC,EAAEA,CAAC;MACJV,CAAC,EAAEkT,IAAI,CAAC1T,MAAM;MACd9C,CAAC,EAAEA,CAAC,CAACgE,CAAC,CAAC,CAAC;MACR3D,CAAC,EAAEoN,EAAE,CAAC3K,MAAM,IAAID,CAAC;MACjBwB,CAAC,EAAEA,CAAC;MACJ/E,CAAC,EAAEA,CAAC;MACJ2E,CAAC,EAAEA;IACP,CAAC,CAAC;IACF3E,CAAC,IAAI,EAAE,GAAGuD,CAAC,GAAGE,CAAC;IACfgT,GAAG,IAAI,EAAE,GAAG,CAAC,GAAGlT,CAAC,GAAGE,CAAC;EACzB;EACA,IAAI0F,GAAG,GAAG,IAAIvH,EAAE,CAAC6U,GAAG,GAAG,EAAE,CAAC;IAAEM,EAAE,GAAG/W,CAAC;IAAEgX,GAAG,GAAGP,GAAG,GAAGzW,CAAC;EACjD,KAAK,IAAIyC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkU,KAAK,CAACnT,MAAM,EAAE,EAAEf,CAAC,EAAE;IACnC,IAAIqD,CAAC,GAAG6Q,KAAK,CAAClU,CAAC,CAAC;IAChBkT,GAAG,CAACxM,GAAG,EAAErD,CAAC,CAAC9F,CAAC,EAAE8F,CAAC,CAACpF,CAAC,EAAEoF,CAAC,CAACpB,CAAC,EAAEoB,CAAC,CAAC9B,CAAC,EAAE8B,CAAC,CAACf,CAAC,EAAEe,CAAC,CAAC/E,CAAC,EAAE+E,CAAC,CAACnB,CAAC,EAAE,IAAI,EAAEmB,CAAC,CAACQ,CAAC,CAAC;IACtDqP,GAAG,CAACxM,GAAG,EAAEnJ,CAAC,EAAE8F,CAAC,CAACpF,CAAC,EAAEoF,CAAC,CAACpB,CAAC,EAAEoB,CAAC,CAAC9B,CAAC,EAAE8B,CAAC,CAACf,CAAC,EAAEe,CAAC,CAAC/E,CAAC,EAAE+E,CAAC,CAACnB,CAAC,EAAEmB,CAAC,CAAC9F,CAAC,EAAE8F,CAAC,CAACQ,CAAC,CAAC,EAAEtG,CAAC,IAAI,EAAE,GAAG8F,CAAC,CAACf,CAAC,CAACvB,MAAM;EAC7E;EACA6S,GAAG,CAAClN,GAAG,EAAEnJ,CAAC,EAAE2W,KAAK,CAACnT,MAAM,EAAEwT,GAAG,EAAED,EAAE,CAAC;EAClC,OAAO5N,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkO,KAAKA,CAAC3V,IAAI,EAAEZ,EAAE,EAAE;EAC5B,IAAI,OAAOA,EAAE,IAAI,UAAU,EACvB,MAAM,aAAa;EACvB,IAAI8V,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,KAAK,IAAIpU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmU,IAAI,CAACpT,MAAM,EAAE,EAAEf,CAAC,EAChCmU,IAAI,CAACnU,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EACD,IAAIkU,KAAK,GAAG,CAAC,CAAC;EACd,IAAIpV,CAAC,GAAGG,IAAI,CAAC8B,MAAM,GAAG,EAAE;EACxB,OAAO2N,EAAE,CAACzP,IAAI,EAAEH,CAAC,CAAC,IAAI,SAAS,EAAE,EAAEA,CAAC,EAAE;IAClC,IAAI,CAACA,CAAC,IAAIG,IAAI,CAAC8B,MAAM,GAAGjC,CAAC,GAAG,KAAK,EAAE;MAC/BT,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAAC;MAC5B;IACJ;EACJ;EACA;EACA,IAAIwH,GAAG,GAAG4I,EAAE,CAACxP,IAAI,EAAEH,CAAC,GAAG,CAAC,CAAC;EACzB,IAAI,CAAC+G,GAAG,EACJxH,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EAChB,IAAIJ,CAAC,GAAG4H,GAAG;EACX,IAAItI,CAAC,GAAGmR,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;EACxB,IAAI6T,CAAC,GAAGpV,CAAC,IAAI,UAAU;EACvB,IAAIoV,CAAC,EAAE;IACH7T,CAAC,GAAG4P,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;IACpB,IAAI4P,EAAE,CAACzP,IAAI,EAAEH,CAAC,CAAC,IAAI,SAAS,EACxB,MAAM,kBAAkB;IAC5Bb,CAAC,GAAG4H,GAAG,GAAG6I,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;IAC1BvB,CAAC,GAAGmR,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;EACxB;EACA,IAAI+V,OAAO,GAAG,SAAAA,CAAU7U,CAAC,EAAE;IACvB,IAAIG,EAAE,GAAGuS,EAAE,CAACzT,IAAI,EAAE1B,CAAC,EAAEoV,CAAC,CAAC;MAAEmC,GAAG,GAAG3U,EAAE,CAAC,CAAC,CAAC;MAAE4S,EAAE,GAAG5S,EAAE,CAAC,CAAC,CAAC;MAAE6S,EAAE,GAAG7S,EAAE,CAAC,CAAC,CAAC;MAAEuL,EAAE,GAAGvL,EAAE,CAAC,CAAC,CAAC;MAAE4U,EAAE,GAAG5U,EAAE,CAAC,CAAC,CAAC;MAAE8S,GAAG,GAAG9S,EAAE,CAAC,CAAC,CAAC;MAAEJ,CAAC,GAAG0S,IAAI,CAACxT,IAAI,EAAEgU,GAAG,CAAC;IACtH1V,CAAC,GAAGwX,EAAE;IACN,IAAIL,GAAG,GAAG,SAAAA,CAAU5V,CAAC,EAAEmD,CAAC,EAAE;MACtB,IAAInD,CAAC,EAAE;QACHsV,IAAI,CAAC,CAAC;QACN/V,EAAE,CAACS,CAAC,EAAE,IAAI,CAAC;MACf,CAAC,MACI;QACDoV,KAAK,CAACxI,EAAE,CAAC,GAAGzJ,CAAC;QACb,IAAI,CAAC,GAAE4D,GAAG,EACNxH,EAAE,CAAC,IAAI,EAAE6V,KAAK,CAAC;MACvB;IACJ,CAAC;IACD,IAAI,CAACY,GAAG,EACJJ,GAAG,CAAC,IAAI,EAAErS,GAAG,CAACpD,IAAI,EAAEc,CAAC,EAAEA,CAAC,GAAGgT,EAAE,CAAC,CAAC,CAAC,KAC/B,IAAI+B,GAAG,IAAI,CAAC,EAAE;MACf,IAAIE,IAAI,GAAG/V,IAAI,CAACuD,QAAQ,CAACzC,CAAC,EAAEA,CAAC,GAAGgT,EAAE,CAAC;MACnC,IAAIA,EAAE,GAAG,MAAM,EAAE;QACb,IAAI;UACA2B,GAAG,CAAC,IAAI,EAAE7H,WAAW,CAACmI,IAAI,EAAE,IAAI7V,EAAE,CAAC6T,EAAE,CAAC,CAAC,CAAC;QAC5C,CAAC,CACD,OAAOlU,CAAC,EAAE;UACN4V,GAAG,CAAC5V,CAAC,EAAE,IAAI,CAAC;QAChB;MACJ,CAAC,MAEGqV,IAAI,CAACjP,IAAI,CAACyK,OAAO,CAACqF,IAAI,EAAE;QAAEnH,IAAI,EAAEmF;MAAG,CAAC,EAAE0B,GAAG,CAAC,CAAC;IACnD,CAAC,MAEGA,GAAG,CAAC,2BAA2B,GAAGI,GAAG,EAAE,IAAI,CAAC;EACpD,CAAC;EACD,KAAK,IAAI9U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,CAAC,EAAE,EAAE+B,CAAC,EAAE;IACxB6U,OAAO,CAAC7U,CAAC,CAAC;EACd;EACA,OAAOoU,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASa,SAASA,CAAChW,IAAI,EAAE;EAC5B,IAAIiV,KAAK,GAAG,CAAC,CAAC;EACd,IAAIpV,CAAC,GAAGG,IAAI,CAAC8B,MAAM,GAAG,EAAE;EACxB,OAAO2N,EAAE,CAACzP,IAAI,EAAEH,CAAC,CAAC,IAAI,SAAS,EAAE,EAAEA,CAAC,EAAE;IAClC,IAAI,CAACA,CAAC,IAAIG,IAAI,CAAC8B,MAAM,GAAGjC,CAAC,GAAG,KAAK,EAC7B,MAAM,kBAAkB;EAChC;EACA;EACA,IAAIb,CAAC,GAAGwQ,EAAE,CAACxP,IAAI,EAAEH,CAAC,GAAG,CAAC,CAAC;EACvB,IAAI,CAACb,CAAC,EACF,OAAO,CAAC,CAAC;EACb,IAAIV,CAAC,GAAGmR,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;EACxB,IAAI6T,CAAC,GAAGpV,CAAC,IAAI,UAAU;EACvB,IAAIoV,CAAC,EAAE;IACH7T,CAAC,GAAG4P,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;IACpB,IAAI4P,EAAE,CAACzP,IAAI,EAAEH,CAAC,CAAC,IAAI,SAAS,EACxB,MAAM,kBAAkB;IAC5Bb,CAAC,GAAGyQ,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;IACpBvB,CAAC,GAAGmR,EAAE,CAACzP,IAAI,EAAEH,CAAC,GAAG,EAAE,CAAC;EACxB;EACA,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,CAAC,EAAE,EAAE+B,CAAC,EAAE;IACxB,IAAIG,EAAE,GAAGuS,EAAE,CAACzT,IAAI,EAAE1B,CAAC,EAAEoV,CAAC,CAAC;MAAEuC,GAAG,GAAG/U,EAAE,CAAC,CAAC,CAAC;MAAE4S,EAAE,GAAG5S,EAAE,CAAC,CAAC,CAAC;MAAE6S,EAAE,GAAG7S,EAAE,CAAC,CAAC,CAAC;MAAEuL,EAAE,GAAGvL,EAAE,CAAC,CAAC,CAAC;MAAE4U,EAAE,GAAG5U,EAAE,CAAC,CAAC,CAAC;MAAE8S,GAAG,GAAG9S,EAAE,CAAC,CAAC,CAAC;MAAEJ,CAAC,GAAG0S,IAAI,CAACxT,IAAI,EAAEgU,GAAG,CAAC;IACtH1V,CAAC,GAAGwX,EAAE;IACN,IAAI,CAACG,GAAG,EACJhB,KAAK,CAACxI,EAAE,CAAC,GAAGrJ,GAAG,CAACpD,IAAI,EAAEc,CAAC,EAAEA,CAAC,GAAGgT,EAAE,CAAC,CAAC,KAChC,IAAImC,GAAG,IAAI,CAAC,EACbhB,KAAK,CAACxI,EAAE,CAAC,GAAGmB,WAAW,CAAC5N,IAAI,CAACuD,QAAQ,CAACzC,CAAC,EAAEA,CAAC,GAAGgT,EAAE,CAAC,EAAE,IAAI5T,EAAE,CAAC6T,EAAE,CAAC,CAAC,CAAC,KAE9D,MAAM,2BAA2B,GAAGkC,GAAG;EAC/C;EACA,OAAOhB,KAAK;AAChB;;ACzwDA,IAAIiB,SAAS,GAAG,IAAI;AACpB,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,IAAI,CAACD,SAAS,EAAE;IACdA,SAAS,GAAGE,YAAY,CAAC,CAAC;EAC5B;EAEA,OAAOF,SAAS;AAClB;AAEA,SAASE,YAAYA,CAAA,EAAG;EACtB;EACA,IAAI;IACF,MAAM,IAAIC,KAAK,CAAD,CAAC;EACjB,CAAC,CAAC,OAAOtH,GAAG,EAAE;IACZ,IAAIuH,OAAO,GAAG,CAAC,EAAE,GAAGvH,GAAG,CAACwH,KAAK,EAAEC,KAAK,CAAC,+DAA+D,CAAC;IACrG,IAAIF,OAAO,EAAE;MACX,OAAOG,UAAU,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF;EAEA,OAAO,GAAG;AACZ;AAEA,SAASG,UAAUA,CAACC,GAAG,EAAE;EACvB,OAAO,CAAC,EAAE,GAAGA,GAAG,EAAE1J,OAAO,CAAC,gFAAgF,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH;AAEAxO,OAAO,CAAC4X,YAAY,GAAGD,kBAAkB;AACzC3X,OAAO,CAACiY,UAAU,GAAGA,UAAU;;AC5B/B,IAAIL,YAAY,GAAGO,OAAO,CAAC,cAAc,CAAC,CAACP,YAAY;AAEvD,SAASQ,eAAeA,CAACC,OAAO,EAAE;EAChC,IAAI,CAACnE,KAAK,CAACC,OAAO,CAACkE,OAAO,CAAC,EAAE;IAC3BA,OAAO,GAAG,CAACA,OAAO,CAAC;EACrB;EAEA,IAAI5X,EAAE,GAAG4X,OAAO,CAACA,OAAO,CAAC/U,MAAM,GAAG,CAAC,CAAC;EAEpC,IAAI;IACF,OAAOgV,OAAO,CAACC,OAAO,CAACJ,OAAO,CAAC1X,EAAE,CAAC,CAAC;EACrC,CAAC,CAAC,OAAO8P,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACiI,IAAI,KAAK,kBAAkB,EAAE;MACnC,OAAO,IAAIC,WAAW,CAAC,UAAUF,OAAO,EAAEG,MAAM,EAAE;QAChDC,WAAW,CAACN,OAAO,CAAC1Q,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAC9BiR,IAAI,CAAC,YAAY;UAChB,OAAOT,OAAO,CAAC1X,EAAE,CAAC;QACpB,CAAC,CAAC,CACDmY,IAAI,CAACL,OAAO,EAAEG,MAAM,CAAC;MAC1B,CAAC,CAAC;IACJ;IAEA,MAAMnI,GAAG;EACX;AACF;AAEA,SAASoI,WAAWA,CAACN,OAAO,EAAE;EAC5B,OAAOC,OAAO,CAACO,GAAG,CAACR,OAAO,CAACS,GAAG,CAACC,UAAU,CAAC,CAAC;AAC7C;AAEA,IAAIC,aAAa,GAAG,CAAC,CAAC;AACtB,SAASC,oBAAoBA,CAAChY,IAAI,EAAEiY,MAAM,EAAE;EAC1CF,aAAa,CAAC/X,IAAI,CAAC,GAAGiY,MAAM;AAC9B;AAEAnZ,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAGoY,eAAe;AAC1CpY,OAAO,CAACmZ,IAAI,GAAGR,WAAW;AAC1B3Y,OAAO,CAACoZ,QAAQ,GAAGH,oBAAoB;AAEvC,IAAIZ,OAAO,GAAG,CAAC,CAAC;AAChB,SAASU,UAAUA,CAACM,MAAM,EAAE;EAC1B,IAAI5Y,EAAE;EACN,IAAIyT,KAAK,CAACC,OAAO,CAACkF,MAAM,CAAC,EAAE;IACzB5Y,EAAE,GAAG4Y,MAAM,CAAC,CAAC,CAAC;IACdA,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC;EACpB;EAEA,IAAIhB,OAAO,CAACgB,MAAM,CAAC,EAAE;IACnB,OAAOhB,OAAO,CAACgB,MAAM,CAAC;EACxB;EAEA,IAAIpY,IAAI,GAAG,CAACoY,MAAM,CAACC,SAAS,CAACD,MAAM,CAAC9K,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE8K,MAAM,CAAC/V,MAAM,CAAC,IAAI+V,MAAM,EAAEE,WAAW,CAAC,CAAC;EACjG,IAAIC,YAAY,GAAGR,aAAa,CAAC/X,IAAI,CAAC;EACtC,IAAIuY,YAAY,EAAE;IAChB,OAAOnB,OAAO,CAACgB,MAAM,CAAC,GAAGG,YAAY,CAAC5B,YAAY,CAAC,CAAC,GAAGyB,MAAM,CAAC,CAC3DT,IAAI,CAAC,UAAUa,QAAQ,EAAE;MACxB,IAAIA,QAAQ,EAAE;QACZ1Z,MAAM,CAACsZ,MAAM,CAACD,QAAQ,CAAC3Y,EAAE,EAAEgZ,QAAQ,CAAC;MACtC;MAEA,OAAOA,QAAQ;IACjB,CAAC,CAAC,CAACC,KAAK,CAAC,UAASrY,CAAC,EAAE;MACnB,OAAOgX,OAAO,CAACgB,MAAM,CAAC;MAEtB,MAAMhY,CAAC;IACT,CAAC,CAAC;EACN;AACF;AAEA,SAASoX,WAAWA,CAACkB,QAAQ,EAAE;EAC7B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACC,OAAO,GAAG,IAAI;AACrB;AAEAnB,WAAW,CAACrY,SAAS,CAACwY,IAAI,GAAG,UAAUiB,SAAS,EAAEC,OAAO,EAAE;EACzD,IAAI,IAAI,CAACF,OAAO,KAAK,IAAI,EAAE,IAAI,CAACA,OAAO,GAAG,IAAItB,OAAO,CAAC,IAAI,CAACqB,QAAQ,CAAC;EACpE,OAAO,IAAI,CAACC,OAAO,CAAChB,IAAI,CAACiB,SAAS,EAAEC,OAAO,CAAC;AAC9C,CAAC;AAEDrB,WAAW,CAACrY,SAAS,CAACsZ,KAAK,GAAG,UAAUI,OAAO,EAAE;EAC/C,IAAI,IAAI,CAACF,OAAO,KAAK,IAAI,EAAE,IAAI,CAACA,OAAO,GAAG,IAAItB,OAAO,CAAC,IAAI,CAACqB,QAAQ,CAAC;EACpE,OAAO,IAAI,CAACC,OAAO,CAACF,KAAK,CAACI,OAAO,CAAC;AACpC,CAAC;;;;;;;;;;;;;;;;AClFM,SAAA,uBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,UAAA,GAAA,CAAA,KAAA,OAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIC,CAAAA,GAAgB,YAAA;EAAA,OAClB,WAAA,IAAA,OAAuBC,MAAAA,GAC1BA,MAAAA,GACA,WAAA,IAAA,OAAuBC,MAAAA,GACvBA,MAAAA,GACA,WAAA,IAAA,OAAuBC,IAAAA,GACvBA,IAAAA,GACAC,IAAAA;AAAAA,CAPqB,CAAA,CAAA;ACE3B,SAASC,CAAAA,CAAAA,EAAAA;EACHL,CAAAA,CAAaM,OAAAA,IAA+C,UAAA,IAAA,OAA7BN,CAAAA,CAAaM,OAAAA,CAAQvM,GAAAA,IACtDiM,CAAAA,CAAaM,OAAAA,CAAQvM,GAAAA,CAAI6F,KAAAA,CAAMoG,CAAAA,CAAaM,OAAAA,EAASzG,SAAAA,CAAAA;AAAAA;AAuBlD,IAAIyG,CAAAA,GAAU;EACnBvM,GAAAA,EAAKsM,CAAAA;EACLE,IAAAA,EArBF,SAAA,CAAqBjG,CAAAA,EAAAA;IACf0F,CAAAA,CAAaM,OAAAA,KAC0B,UAAA,IAAA,OAA9BN,CAAAA,CAAaM,OAAAA,CAAQC,IAAAA,GAC9BP,CAAAA,CAAaM,OAAAA,CAAQC,IAAAA,CAAK3G,KAAAA,CAAMoG,CAAAA,CAAaM,OAAAA,EAASzG,SAAAA,CAAAA,GAEtDwG,CAAAA,CAAWrJ,IAAAA,CAAK,IAAA,EAAM6C,SAAAA,CAAAA,CAAAA;EAAAA,CAAAA;EAiB1BtS,KAAAA,EAZF,SAAA,CAAsB+S,CAAAA,EAAAA;IAChB0F,CAAAA,CAAaM,OAAAA,KAC2B,UAAA,IAAA,OAA/BN,CAAAA,CAAaM,OAAAA,CAAQ/Y,KAAAA,GAC9ByY,CAAAA,CAAaM,OAAAA,CAAQ/Y,KAAAA,CAAMqS,KAAAA,CAAMoG,CAAAA,CAAaM,OAAAA,EAASzG,SAAAA,CAAAA,GAEvDwG,CAAAA,CAAW/F,CAAAA,CAAAA,CAAAA;EAAAA;AAAAA,CAAAA;ACWjB,SAASkG,CAAAA,CAASrC,CAAAA,EAAKsC,CAAAA,EAAMlK,CAAAA,EAAAA;EAAAA,IACvBmK,CAAAA,GAAM,IAAIC,cAAAA,CAAAA,CAAAA;EACdD,CAAAA,CAAIE,IAAAA,CAAK,KAAA,EAAOzC,CAAAA,CAAAA,EAChBuC,CAAAA,CAAIG,YAAAA,GAAe,MAAA,EACnBH,CAAAA,CAAII,MAAAA,GAAS,YAAA;IACXC,CAAAA,CAAOL,CAAAA,CAAIM,QAAAA,EAAUP,CAAAA,EAAMlK,CAAAA,CAAAA;EAAAA,CAAAA,EAE7BmK,CAAAA,CAAIrZ,OAAAA,GAAU,YAAA;IACZiZ,CAAAA,CAAQ/Y,KAAAA,CAAM,yBAAA,CAAA;EAAA,CAAA,EAEhBmZ,CAAAA,CAAIO,IAAAA,CAAAA,CAAAA;AAAAA;AAGN,SAASC,CAAAA,CAAY/C,CAAAA,EAAAA;EAAAA,IACfuC,CAAAA,GAAM,IAAIC,cAAAA,CAAAA,CAAAA;EAEdD,CAAAA,CAAIE,IAAAA,CAAK,MAAA,EAAQzC,CAAAA,EAAAA,CAAK,CAAA,CAAA;EAAA,IAAA;IAEpBuC,CAAAA,CAAIO,IAAAA,CAAAA,CAAAA;EAAAA,CACJ,QAAO3Z,CAAAA,EAAAA,CAAAA;EAAAA,OACFoZ,CAAAA,CAAIS,MAAAA,IAAU,GAAA,IAAOT,CAAAA,CAAIS,MAAAA,IAAU,GAAA;AAAA;AAI5C,SAASC,CAAAA,CAAMC,CAAAA,EAAAA;EAAAA,IAAAA;IAEXA,CAAAA,CAAKC,aAAAA,CAAc,IAAIC,UAAAA,CAAW,OAAA,CAAA,CAAA;EAAA,CAClC,QAAOja,CAAAA,EAAAA;IAAAA,IACHka,CAAAA,GAAMC,QAAAA,CAASC,WAAAA,CAAY,aAAA,CAAA;IAC/BF,CAAAA,CAAIG,cAAAA,CACF,OAAA,EAAA,CACA,CAAA,EAAA,CACA,CAAA,EACA1B,MAAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EAAA,CACA,CAAA,EAAA,CACA,CAAA,EAAA,CACA,CAAA,EAAA,CACA,CAAA,EACA,CAAA,EACA,IAAA,CAAA,EAEFoB,CAAAA,CAAKC,aAAAA,CAAcE,CAAAA,CAAAA;EAAAA;AAAAA;AAIvB,IClFII,CAAAA;EAAMC,CAAAA;EDkFNd,CAAAA,GACFe,CAAAA,CAAQf,MAAAA,KAEW,QAAA,MAAA,WAAA,IAAA,OAAXd,MAAAA,GAAAA,WAAAA,GAAAA,IAAAA,eAAAA,EAAAA,MAAAA,CAAAA,CAAAA,IAAuBA,MAAAA,KAAW6B,CAAAA,GACtC,YAAA,CAAA,CAAA,GAI2B,WAAA,IAAA,OAAtBC,iBAAAA,IACL,UAAA,IAAcA,iBAAAA,CAAkB1b,SAAAA,GAChC,UAAgB2b,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,EAAAA;IAAAA,IACtBxP,CAAAA,GAAM+a,CAAAA,CAAQ/a,GAAAA,IAAO+a,CAAAA,CAAQG,SAAAA;MAC7B1X,CAAAA,GAAIkX,QAAAA,CAASS,aAAAA,CAAc,GAAA,CAAA;IAC/BzB,CAAAA,GAAOA,CAAAA,IAAQuB,CAAAA,CAAKvB,IAAAA,IAAQ,UAAA,EAE5BlW,CAAAA,CAAEiW,QAAAA,GAAWC,CAAAA,EACblW,CAAAA,CAAE4X,GAAAA,GAAM,UAAA,EAKY,QAAA,IAAA,OAATH,CAAAA,IAETzX,CAAAA,CAAE6X,IAAAA,GAAOJ,CAAAA,EACLzX,CAAAA,CAAE8X,MAAAA,KAAWC,QAAAA,CAASD,MAAAA,GACxBnB,CAAAA,CAAY3W,CAAAA,CAAE6X,IAAAA,CAAAA,GACV5B,CAAAA,CAASwB,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,CAAAA,GACrB6K,CAAAA,CAAM7W,CAAAA,EAAIA,CAAAA,CAAEgY,MAAAA,GAAS,QAAA,CAAA,GAEzBnB,CAAAA,CAAM7W,CAAAA,CAAAA,KAIRA,CAAAA,CAAE6X,IAAAA,GAAOrb,CAAAA,CAAIC,eAAAA,CAAgBgb,CAAAA,CAAAA,EAC7BQ,UAAAA,CAAW,YAAA;MACTzb,CAAAA,CAAI0b,eAAAA,CAAgBlY,CAAAA,CAAE6X,IAAAA,CAAAA;IAAAA,CAAAA,EACrB,GAAA,CAAA,EACHI,UAAAA,CAAW,YAAA;MACTpB,CAAAA,CAAM7W,CAAAA,CAAAA;IAAAA,CAAAA,EACL,CAAA,CAAA,CAAA;EAAA,CAAA,GAIT,kBAAA,IAAsBmY,SAAAA,GACpB,UAAgBV,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,EAAAA;IAAAA,IAC1BkK,CAAAA,GAAOA,CAAAA,IAAQuB,CAAAA,CAAKvB,IAAAA,IAAQ,UAAA,EAER,QAAA,IAAA,OAATuB,CAAAA;MAAAA,IACLd,CAAAA,CAAYc,CAAAA,CAAAA,EACdxB,CAAAA,CAASwB,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,CAAAA,CAAAA,KAChB;QAAA,IACDhM,CAAAA,GAAIkX,QAAAA,CAASS,aAAAA,CAAc,GAAA,CAAA;QAC/B3X,CAAAA,CAAE6X,IAAAA,GAAOJ,CAAAA,EACTzX,CAAAA,CAAEgY,MAAAA,GAAS,QAAA,EACXC,UAAAA,CAAW,YAAA;UACTpB,CAAAA,CAAM7W,CAAAA,CAAAA;QAAAA,CAAAA,CAAAA;MAAAA;IAAAA,OAIVmY,SAAAA,CAAUC,gBAAAA,CAjIpB,UAAaX,CAAAA,EAAMzL,CAAAA,EAAAA;MAAAA,OAAAA,KACG,CAAA,KAATA,CAAAA,GAAsBA,CAAAA,GAAO;QAAEqM,OAAAA,EAAAA,CAAS;MAAA,CAAA,GAC1B,QAAA,KAAhB9c,IAAAA,eAAAA,EAAOyQ,CAAAA,CAAAA,KACd+J,CAAAA,CAAQC,IAAAA,CAAK,oDAAA,CAAA,EACbhK,CAAAA,GAAO;QAAEqM,OAAAA,EAAAA,CAAUrM;MAAAA,CAAAA,CAAAA,EAMnBA,CAAAA,CAAKqM,OAAAA,IACL,4EAAA,CAA6EC,IAAAA,CAC3Eb,CAAAA,CAAK9a,IAAAA,CAAAA,GAGA,IAAID,IAAAA,CAAK,CAAC8T,MAAAA,CAAOC,YAAAA,CAAa,KAAA,CAAA,EAASgH,CAAAA,CAAAA,EAAO;QAAE9a,IAAAA,EAAM8a,CAAAA,CAAK9a;MAAAA,CAAAA,CAAAA,GAE7D8a,CAAAA;IAAAA,CAgH4Bc,CAAId,CAAAA,EAAMzL,CAAAA,CAAAA,EAAOkK,CAAAA,CAAAA;EAAAA,CAAAA,GAIhD,UAAgBuB,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,EAAMwM,CAAAA,EAAAA;IAAAA,IAAAA,CAGhCA,CAAAA,GAAQA,CAAAA,IAASnC,IAAAA,CAAK,EAAA,EAAI,QAAA,CAAA,MAExBmC,CAAAA,CAAMtB,QAAAA,CAASuB,KAAAA,GAAQD,CAAAA,CAAMtB,QAAAA,CAASwB,IAAAA,CAAKC,SAAAA,GACzC,gBAAA,CAAA,EAGgB,QAAA,IAAA,OAATlB,CAAAA,EAAmB,OAAOxB,CAAAA,CAASwB,CAAAA,EAAMvB,CAAAA,EAAMlK,CAAAA,CAAAA;IAAAA,IAEtD4M,CAAAA,GAAsB,0BAAA,KAAdnB,CAAAA,CAAK9a,IAAAA;MACbkc,CAAAA,GACF,cAAA,CAAeP,IAAAA,CAAKf,CAAAA,CAAQuB,WAAAA,CAAAA,IAAgBvB,CAAAA,CAAQwB,MAAAA;MAClDC,CAAAA,GAAc,cAAA,CAAeV,IAAAA,CAAKH,SAAAA,CAAUc,SAAAA,CAAAA;IAAAA,IAAAA,CAG7CD,CAAAA,IAAgBJ,CAAAA,IAASC,CAAAA,KACJ,QAAA,MAAA,WAAA,IAAA,OAAfK,UAAAA,GAAAA,WAAAA,GAAAA,IAAAA,eAAAA,EAAAA,UAAAA,CAAAA,CAAAA,EACP;MAAA,IAEIC,CAAAA,GAAS,IAAID,UAAAA,CAAAA,CAAAA;MACjBC,CAAAA,CAAOC,SAAAA,GAAY,YAAA;QAAA,IACbxF,CAAAA,GAAMuF,CAAAA,CAAOE,MAAAA;QACjBzF,CAAAA,GAAMoF,CAAAA,GACFpF,CAAAA,GACAA,CAAAA,CAAI1J,OAAAA,CAAQ,cAAA,EAAgB,uBAAA,CAAA,EAC5BsO,CAAAA,GAAOA,CAAAA,CAAMT,QAAAA,CAASF,IAAAA,GAAOjE,CAAAA,GAC5BmE,QAAAA,GAAWnE,CAAAA,EAChB4E,CAAAA,GAAQ,IAAA;MAAA,CAAA,EAEVW,CAAAA,CAAOG,aAAAA,CAAc7B,CAAAA,CAAAA;IAAAA,CAAAA,MAChB;MAAA,IACDjb,CAAAA,GAAM+a,CAAAA,CAAQ/a,GAAAA,IAAO+a,CAAAA,CAAQG,SAAAA;QAC7B9D,CAAAA,GAAMpX,CAAAA,CAAIC,eAAAA,CAAgBgb,CAAAA,CAAAA;MAC1Be,CAAAA,GAAOA,CAAAA,CAAMT,QAAAA,GAAWnE,CAAAA,GACvBmE,QAAAA,CAASF,IAAAA,GAAOjE,CAAAA,EACrB4E,CAAAA,GAAQ,IAAA,EACRP,UAAAA,CAAW,YAAA;QACTzb,CAAAA,CAAI0b,eAAAA,CAAgBtE,CAAAA,CAAAA;MAAAA,CAAAA,EACnB,GAAA,CAAA;IAAA;EAAA,CAAA,CAAA;;;;;;;AEpLb,SAAS2F,CAAAA,CAASC,CAAAA,EAAAA;EAAAA,IAaZC,CAAAA;EAZJD,CAAAA,GAAeA,CAAAA,IAAgB,EAAA,EAAA,IAAA,CAC1BE,EAAAA,GAAAA,CAAK,CAAA,EAGoB,GAAA,IAA1BF,CAAAA,CAAaG,MAAAA,CAAO,CAAA,CAAA,KAEtBH,CAAAA,GAAeA,CAAAA,CAAaI,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,CAAA;EA2JxCJ,CAAAA,GAjJoB;IAClBK,SAAAA,EAAW,QAAA;IACXC,YAAAA,EAAc,QAAA;IACdC,IAAAA,EAAM,QAAA;IACNC,UAAAA,EAAY,QAAA;IACZC,KAAAA,EAAO,QAAA;IACPC,KAAAA,EAAO,QAAA;IACPC,MAAAA,EAAQ,QAAA;IACRC,KAAAA,EAAO,QAAA;IACPC,cAAAA,EAAgB,QAAA;IAChBC,IAAAA,EAAM,QAAA;IACNC,UAAAA,EAAY,QAAA;IACZC,KAAAA,EAAO,QAAA;IACPC,SAAAA,EAAW,QAAA;IACXC,SAAAA,EAAW,QAAA;IACXC,UAAAA,EAAY,QAAA;IACZC,SAAAA,EAAW,QAAA;IACXC,KAAAA,EAAO,QAAA;IACPC,cAAAA,EAAgB,QAAA;IAChBC,QAAAA,EAAU,QAAA;IACVC,OAAAA,EAAS,QAAA;IACTC,IAAAA,EAAM,QAAA;IACNC,QAAAA,EAAU,QAAA;IACVC,QAAAA,EAAU,QAAA;IACVC,aAAAA,EAAe,QAAA;IACfC,QAAAA,EAAU,QAAA;IACVC,SAAAA,EAAW,QAAA;IACXC,SAAAA,EAAW,QAAA;IACXC,WAAAA,EAAa,QAAA;IACbC,cAAAA,EAAgB,QAAA;IAChBC,UAAAA,EAAY,QAAA;IACZC,UAAAA,EAAY,QAAA;IACZC,OAAAA,EAAS,QAAA;IACTC,UAAAA,EAAY,QAAA;IACZC,YAAAA,EAAc,QAAA;IACdC,aAAAA,EAAe,QAAA;IACfC,aAAAA,EAAe,QAAA;IACfC,aAAAA,EAAe,QAAA;IACfC,UAAAA,EAAY,QAAA;IACZC,QAAAA,EAAU,QAAA;IACVC,WAAAA,EAAa,QAAA;IACbC,OAAAA,EAAS,QAAA;IACTC,UAAAA,EAAY,QAAA;IACZC,QAAAA,EAAU,QAAA;IACVC,SAAAA,EAAW,QAAA;IACXC,WAAAA,EAAa,QAAA;IACbC,WAAAA,EAAa,QAAA;IACbC,OAAAA,EAAS,QAAA;IACTC,SAAAA,EAAW,QAAA;IACXC,UAAAA,EAAY,QAAA;IACZC,IAAAA,EAAM,QAAA;IACNC,SAAAA,EAAW,QAAA;IACXC,IAAAA,EAAM,QAAA;IACNC,KAAAA,EAAO,QAAA;IACPC,WAAAA,EAAa,QAAA;IACbC,QAAAA,EAAU,QAAA;IACVC,OAAAA,EAAS,QAAA;IACTC,SAAAA,EAAW,QAAA;IACXC,MAAAA,EAAQ,QAAA;IACRC,KAAAA,EAAO,QAAA;IACPC,KAAAA,EAAO,QAAA;IACPC,QAAAA,EAAU,QAAA;IACVC,aAAAA,EAAe,QAAA;IACfC,SAAAA,EAAW,QAAA;IACXC,YAAAA,EAAc,QAAA;IACdC,SAAAA,EAAW,QAAA;IACXC,UAAAA,EAAY,QAAA;IACZC,SAAAA,EAAW,QAAA;IACXC,oBAAAA,EAAsB,QAAA;IACtBC,SAAAA,EAAW,QAAA;IACXC,UAAAA,EAAY,QAAA;IACZC,SAAAA,EAAW,QAAA;IACXC,WAAAA,EAAa,QAAA;IACbC,aAAAA,EAAe,QAAA;IACfC,YAAAA,EAAc,QAAA;IACdC,cAAAA,EAAgB,QAAA;IAChBC,cAAAA,EAAgB,QAAA;IAChBC,cAAAA,EAAgB,QAAA;IAChBC,WAAAA,EAAa,QAAA;IACbC,IAAAA,EAAM,QAAA;IACNC,SAAAA,EAAW,QAAA;IACXC,KAAAA,EAAO,QAAA;IACPC,OAAAA,EAAS,QAAA;IACTC,MAAAA,EAAQ,QAAA;IACRC,gBAAAA,EAAkB,QAAA;IAClBC,UAAAA,EAAY,QAAA;IACZC,YAAAA,EAAc,QAAA;IACdC,YAAAA,EAAc,QAAA;IACdC,cAAAA,EAAgB,QAAA;IAChBC,eAAAA,EAAiB,QAAA;IACjBC,iBAAAA,EAAmB,QAAA;IACnBC,eAAAA,EAAiB,QAAA;IACjBC,eAAAA,EAAiB,QAAA;IACjBC,YAAAA,EAAc,QAAA;IACdC,SAAAA,EAAW,QAAA;IACXC,SAAAA,EAAW,QAAA;IACXC,QAAAA,EAAU,QAAA;IACVC,WAAAA,EAAa,QAAA;IACbC,IAAAA,EAAM,QAAA;IACNC,OAAAA,EAAS,QAAA;IACTC,KAAAA,EAAO,QAAA;IACPC,SAAAA,EAAW,QAAA;IACXC,MAAAA,EAAQ,QAAA;IACRC,SAAAA,EAAW,QAAA;IACXC,MAAAA,EAAQ,QAAA;IACRC,aAAAA,EAAe,QAAA;IACfC,SAAAA,EAAW,QAAA;IACXC,aAAAA,EAAe,QAAA;IACfC,aAAAA,EAAe,QAAA;IACfC,UAAAA,EAAY,QAAA;IACZC,SAAAA,EAAW,QAAA;IACXC,IAAAA,EAAM,QAAA;IACNC,IAAAA,EAAM,QAAA;IACNC,IAAAA,EAAM,QAAA;IACNC,UAAAA,EAAY,QAAA;IACZC,MAAAA,EAAQ,QAAA;IACRC,GAAAA,EAAK,QAAA;IACLC,SAAAA,EAAW,QAAA;IACXC,SAAAA,EAAW,QAAA;IACXC,WAAAA,EAAa,QAAA;IACbC,MAAAA,EAAQ,QAAA;IACRC,UAAAA,EAAY,QAAA;IACZC,QAAAA,EAAU,QAAA;IACVC,QAAAA,EAAU,QAAA;IACVC,MAAAA,EAAQ,QAAA;IACRC,MAAAA,EAAQ,QAAA;IACRC,OAAAA,EAAS,QAAA;IACTC,SAAAA,EAAW,QAAA;IACXC,SAAAA,EAAW,QAAA;IACXC,IAAAA,EAAM,QAAA;IACNC,WAAAA,EAAa,QAAA;IACbC,SAAAA,EAAW,QAAA;IACXC,GAAAA,EAAK,QAAA;IACLC,IAAAA,EAAM,QAAA;IACNC,OAAAA,EAAS,QAAA;IACTC,MAAAA,EAAQ,QAAA;IACRC,SAAAA,EAAW,QAAA;IACXC,MAAAA,EAAQ,QAAA;IACRC,SAAAA,EAAW,QAAA;IACXC,KAAAA,EAAO,QAAA;IACPC,KAAAA,EAAO,QAAA;IACPC,UAAAA,EAAY,QAAA;IACZC,MAAAA,EAAQ,QAAA;IACRC,WAAAA,EAAa;EAAA,CAAA,CArJfnJ,CAAAA,GAAAA,CADAA,CAAAA,GAAeA,CAAAA,CAAatP,OAAAA,CAAQ,IAAA,EAAM,EAAA,CAAA,EACd+K,WAAAA,CAAAA,CAAAA,CAAAA,IAuJkBuE,CAAAA;EAAAA,KAAAA,IAG1CoJ,CAAAA,GAAa,CACf;MACEC,EAAAA,EAAI,8CAAA;MACJC,OAAAA,EAAS,CAAC,mBAAA,EAAqB,kBAAA,CAAA;MAC/BC,OAAAA,EAAS,SAAA,CAAS9iB,CAAAA,EAAAA;QAAAA,OACT,CAAC+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,CAAA,EAAK+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,CAAA,EAAK+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,CAAA,CAAA;MAAA;IAAA,CAAA,EAGhE;MACE4iB,EAAAA,EAAI,yBAAA;MACJC,OAAAA,EAAS,CAAC,SAAA,EAAW,QAAA,CAAA;MACrBC,OAAAA,EAAS,SAAA,CAAS9iB,CAAAA,EAAAA;QAAAA,OACT,CACL+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,EAClB+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,EAClB+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,CAAA;MAAA;IAAA,CAAA,EAIxB;MACE4iB,EAAAA,EAAI,yBAAA;MACJC,OAAAA,EAAS,CAAC,MAAA,EAAQ,KAAA,CAAA;MAClBC,OAAAA,EAAS,SAAA,CAAS9iB,CAAAA,EAAAA;QAAAA,OACT,CACL+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,GAAKA,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,EAC5B+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,GAAKA,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,EAC5B+iB,QAAAA,CAAS/iB,CAAAA,CAAK,CAAA,CAAA,GAAKA,CAAAA,CAAK,CAAA,CAAA,EAAI,EAAA,CAAA,CAAA;MAAA;IAAA,CAAA,CAAA,EAO3BhC,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI2kB,CAAAA,CAAW5jB,MAAAA,EAAQf,CAAAA,EAAAA,EAAK;IAAA,IACtC4kB,CAAAA,GAAKD,CAAAA,CAAW3kB,CAAAA,CAAAA,CAAG4kB,EAAAA;MACnBI,CAAAA,GAAYL,CAAAA,CAAW3kB,CAAAA,CAAAA,CAAG8kB,OAAAA;MAC1B9iB,CAAAA,GAAO4iB,CAAAA,CAAGK,IAAAA,CAAK1J,CAAAA,CAAAA;IACfvZ,CAAAA,KACFwZ,CAAAA,GAAWwJ,CAAAA,CAAUhjB,CAAAA,CAAAA,EAAAA,IAAAA,CAChB/B,CAAAA,GAAIub,CAAAA,CAAS,CAAA,CAAA,EAAA,IAAA,CACb0J,CAAAA,GAAI1J,CAAAA,CAAS,CAAA,CAAA,EAAA,IAAA,CACbzb,CAAAA,GAAIyb,CAAAA,CAAS,CAAA,CAAA,EAAA,IAAA,CACbC,EAAAA,GAAAA,CAAK,CAAA,CAAA;EAAA;EAAA,IAAA,CAKTxb,CAAAA,GAAI2X,IAAAA,CAAK3X,CAAAA,GAAI,CAAA,IAAKklB,KAAAA,CAAMvN,IAAAA,CAAK3X,CAAAA,CAAAA,GAAK,CAAA,GAAI2X,IAAAA,CAAK3X,CAAAA,GAAI,GAAA,GAAM,GAAA,GAAM2X,IAAAA,CAAK3X,CAAAA,EAAAA,IAAAA,CAChEilB,CAAAA,GAAItN,IAAAA,CAAKsN,CAAAA,GAAI,CAAA,IAAKC,KAAAA,CAAMvN,IAAAA,CAAKsN,CAAAA,CAAAA,GAAK,CAAA,GAAItN,IAAAA,CAAKsN,CAAAA,GAAI,GAAA,GAAM,GAAA,GAAMtN,IAAAA,CAAKsN,CAAAA,EAAAA,IAAAA,CAChEnlB,CAAAA,GAAI6X,IAAAA,CAAK7X,CAAAA,GAAI,CAAA,IAAKolB,KAAAA,CAAMvN,IAAAA,CAAK7X,CAAAA,CAAAA,GAAK,CAAA,GAAI6X,IAAAA,CAAK7X,CAAAA,GAAI,GAAA,GAAM,GAAA,GAAM6X,IAAAA,CAAK7X,CAAAA,EAAAA,IAAAA,CAGhEqlB,KAAAA,GAAQ,YAAA;IAAA,OACJ,MAAA,GAASxN,IAAAA,CAAK3X,CAAAA,GAAI,IAAA,GAAO2X,IAAAA,CAAKsN,CAAAA,GAAI,IAAA,GAAOtN,IAAAA,CAAK7X,CAAAA,GAAI,GAAA;EAAA,CAAA,EAAA,IAAA,CAEtDslB,KAAAA,GAAQ,YAAA;IAAA,IACPplB,CAAAA,GAAI2X,IAAAA,CAAK3X,CAAAA,CAAE4L,QAAAA,CAAS,EAAA,CAAA;MACpBqZ,CAAAA,GAAItN,IAAAA,CAAKsN,CAAAA,CAAErZ,QAAAA,CAAS,EAAA,CAAA;MACpB9L,CAAAA,GAAI6X,IAAAA,CAAK7X,CAAAA,CAAE8L,QAAAA,CAAS,EAAA,CAAA;IAAA,OACR,CAAA,IAAZ5L,CAAAA,CAAEc,MAAAA,KAAad,CAAAA,GAAI,GAAA,GAAMA,CAAAA,CAAAA,EACb,CAAA,IAAZilB,CAAAA,CAAEnkB,MAAAA,KAAamkB,CAAAA,GAAI,GAAA,GAAMA,CAAAA,CAAAA,EACb,CAAA,IAAZnlB,CAAAA,CAAEgB,MAAAA,KAAahB,CAAAA,GAAI,GAAA,GAAMA,CAAAA,CAAAA,EACtB,GAAA,GAAME,CAAAA,GAAIilB,CAAAA,GAAInlB,CAAAA;EAAAA,CAAAA;AAAAA;;;;;;;;;;AChOzB,SAASulB,CAAAA,CAAS5kB,CAAAA,EAAGsK,CAAAA,EAAAA;EAAAA,IACfjJ,CAAAA,GAAIrB,CAAAA,CAAE,CAAA,CAAA;IACRX,CAAAA,GAAIW,CAAAA,CAAE,CAAA,CAAA;IACNzC,CAAAA,GAAIyC,CAAAA,CAAE,CAAA,CAAA;IACNuB,CAAAA,GAAIvB,CAAAA,CAAE,CAAA,CAAA;EAERqB,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIsjB,CAAAA,CAAGtjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9B/M,CAAAA,GAAIsnB,CAAAA,CAAGtnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,SAAA,CAAA,EAC7BjL,CAAAA,GAAIwlB,CAAAA,CAAGxlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9BjJ,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIsjB,CAAAA,CAAGtjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,UAAA,CAAA,EAC7B/M,CAAAA,GAAIsnB,CAAAA,CAAGtnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9BjL,CAAAA,GAAIwlB,CAAAA,CAAGxlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,QAAA,CAAA,EAC9BjJ,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAG,UAAA,CAAA,EAC5B/I,CAAAA,GAAIsjB,CAAAA,CAAGtjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9B/M,CAAAA,GAAIsnB,CAAAA,CAAGtnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,KAAA,CAAA,EAC/BjL,CAAAA,GAAIwlB,CAAAA,CAAGxlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAC/BjJ,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAG,UAAA,CAAA,EAC7B/I,CAAAA,GAAIsjB,CAAAA,CAAGtjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,QAAA,CAAA,EAC/B/M,CAAAA,GAAIsnB,CAAAA,CAAGtnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAG/BjJ,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAFPhC,CAAAA,GAAIwlB,CAAAA,CAAGxlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAI,UAAA,CAAA,EAEjB/M,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIujB,CAAAA,CAAGvjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,UAAA,CAAA,EAC7B/M,CAAAA,GAAIunB,CAAAA,CAAGvnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAI,SAAA,CAAA,EAC9BjL,CAAAA,GAAIylB,CAAAA,CAAGzlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9BjJ,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIujB,CAAAA,CAAGvjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAG,QAAA,CAAA,EAC7B/M,CAAAA,GAAIunB,CAAAA,CAAGvnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,SAAA,CAAA,EAC/BjL,CAAAA,GAAIylB,CAAAA,CAAGzlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9BjJ,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAG,SAAA,CAAA,EAC5B/I,CAAAA,GAAIujB,CAAAA,CAAGvjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAA,CAAI,UAAA,CAAA,EAC9B/M,CAAAA,GAAIunB,CAAAA,CAAGvnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9BjL,CAAAA,GAAIylB,CAAAA,CAAGzlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,UAAA,CAAA,EAC7BjJ,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAA,CAAI,UAAA,CAAA,EAC9B/I,CAAAA,GAAIujB,CAAAA,CAAGvjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,QAAA,CAAA,EAC7B/M,CAAAA,GAAIunB,CAAAA,CAAGvnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,UAAA,CAAA,EAG7BjJ,CAAAA,GAAI0jB,CAAAA,CAAG1jB,CAAAA,EAFPhC,CAAAA,GAAIylB,CAAAA,CAAGzlB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAElB/M,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,MAAA,CAAA,EAC7B/I,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9B/M,CAAAA,GAAIwnB,CAAAA,CAAGxnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAI,UAAA,CAAA,EAC9BjL,CAAAA,GAAI0lB,CAAAA,CAAG1lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,QAAA,CAAA,EAC/BjJ,CAAAA,GAAI0jB,CAAAA,CAAG1jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,UAAA,CAAA,EAC7B/I,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,UAAA,CAAA,EAC7B/M,CAAAA,GAAIwnB,CAAAA,CAAGxnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9BjL,CAAAA,GAAI0lB,CAAAA,CAAG1lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAC/BjJ,CAAAA,GAAI0jB,CAAAA,CAAG1jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAG,SAAA,CAAA,EAC7B/I,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9B/M,CAAAA,GAAIwnB,CAAAA,CAAGxnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAC9BjL,CAAAA,GAAI0lB,CAAAA,CAAG1lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,QAAA,CAAA,EAC7BjJ,CAAAA,GAAI0jB,CAAAA,CAAG1jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIwjB,CAAAA,CAAGxjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,SAAA,CAAA,EAC/B/M,CAAAA,GAAIwnB,CAAAA,CAAGxnB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAI,SAAA,CAAA,EAG9BjJ,CAAAA,GAAI2jB,CAAAA,CAAG3jB,CAAAA,EAFPhC,CAAAA,GAAI0lB,CAAAA,CAAG1lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAEjB/M,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,UAAA,CAAA,EAC7B/M,CAAAA,GAAIynB,CAAAA,CAAGznB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAC/BjL,CAAAA,GAAI2lB,CAAAA,CAAG3lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,QAAA,CAAA,EAC9BjJ,CAAAA,GAAI2jB,CAAAA,CAAG3jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,EAAA,CAAA,EAAK,CAAA,EAAG,UAAA,CAAA,EAC7B/I,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9B/M,CAAAA,GAAIynB,CAAAA,CAAGznB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,OAAA,CAAA,EAC/BjL,CAAAA,GAAI2lB,CAAAA,CAAG3lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9BjJ,CAAAA,GAAI2jB,CAAAA,CAAG3jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAG,UAAA,CAAA,EAC5B/I,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,QAAA,CAAA,EAC/B/M,CAAAA,GAAIynB,CAAAA,CAAGznB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,UAAA,CAAA,EAC9BjL,CAAAA,GAAI2lB,CAAAA,CAAG3lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAI,UAAA,CAAA,EAC9BjJ,CAAAA,GAAI2jB,CAAAA,CAAG3jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAG+I,CAAAA,CAAE,CAAA,CAAA,EAAI,CAAA,EAAA,CAAI,SAAA,CAAA,EAC7B/I,CAAAA,GAAIyjB,CAAAA,CAAGzjB,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAG+M,CAAAA,CAAE,EAAA,CAAA,EAAK,EAAA,EAAA,CAAK,UAAA,CAAA,EAC/B/M,CAAAA,GAAIynB,CAAAA,CAAGznB,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGiL,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAI,SAAA,CAAA,EAC7BjL,CAAAA,GAAI2lB,CAAAA,CAAG3lB,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGF,CAAAA,EAAGiJ,CAAAA,CAAE,CAAA,CAAA,EAAI,EAAA,EAAA,CAAK,SAAA,CAAA,EAE9BtK,CAAAA,CAAE,CAAA,CAAA,GAAKilB,CAAAA,CAAM5jB,CAAAA,EAAGrB,CAAAA,CAAE,CAAA,CAAA,CAAA,EAClBA,CAAAA,CAAE,CAAA,CAAA,GAAKilB,CAAAA,CAAM5lB,CAAAA,EAAGW,CAAAA,CAAE,CAAA,CAAA,CAAA,EAClBA,CAAAA,CAAE,CAAA,CAAA,GAAKilB,CAAAA,CAAM1nB,CAAAA,EAAGyC,CAAAA,CAAE,CAAA,CAAA,CAAA,EAClBA,CAAAA,CAAE,CAAA,CAAA,GAAKilB,CAAAA,CAAM1jB,CAAAA,EAAGvB,CAAAA,CAAE,CAAA,CAAA,CAAA;AAAA;AAGpB,SAASklB,CAAAA,CAAIC,CAAAA,EAAG9jB,CAAAA,EAAGhC,CAAAA,EAAGW,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,EAAAA;EAAAA,OAC1B9B,CAAAA,GAAI4jB,CAAAA,CAAMA,CAAAA,CAAM5jB,CAAAA,EAAG8jB,CAAAA,CAAAA,EAAIF,CAAAA,CAAMjlB,CAAAA,EAAGmD,CAAAA,CAAAA,CAAAA,EACzB8hB,CAAAA,CAAO5jB,CAAAA,IAAKjB,CAAAA,GAAMiB,CAAAA,KAAO,EAAA,GAAKjB,CAAAA,EAAKf,CAAAA,CAAAA;AAAAA;AAG5C,SAASwlB,CAAAA,CAAGxjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGvB,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,EAAAA;EAAAA,OACrB+hB,CAAAA,CAAK7lB,CAAAA,GAAI9B,CAAAA,GAAAA,CAAO8B,CAAAA,GAAIkC,CAAAA,EAAIF,CAAAA,EAAGhC,CAAAA,EAAGW,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,CAAAA;AAAAA;AAG7C,SAAS2hB,CAAAA,CAAGzjB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGvB,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,EAAAA;EAAAA,OACrB+hB,CAAAA,CAAK7lB,CAAAA,GAAIkC,CAAAA,GAAMhE,CAAAA,GAAAA,CAAKgE,CAAAA,EAAIF,CAAAA,EAAGhC,CAAAA,EAAGW,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,CAAAA;AAAAA;AAG7C,SAAS4hB,CAAAA,CAAG1jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGvB,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,EAAAA;EAAAA,OACrB+hB,CAAAA,CAAI7lB,CAAAA,GAAI9B,CAAAA,GAAIgE,CAAAA,EAAGF,CAAAA,EAAGhC,CAAAA,EAAGW,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,CAAAA;AAAAA;AAGpC,SAAS6hB,CAAAA,CAAG3jB,CAAAA,EAAGhC,CAAAA,EAAG9B,CAAAA,EAAGgE,CAAAA,EAAGvB,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,EAAAA;EAAAA,OACrB+hB,CAAAA,CAAI3nB,CAAAA,IAAK8B,CAAAA,GAAAA,CAAKkC,CAAAA,CAAAA,EAAIF,CAAAA,EAAGhC,CAAAA,EAAGW,CAAAA,EAAGI,CAAAA,EAAG+C,CAAAA,CAAAA;AAAAA;AAGvC,SAASiiB,CAAAA,CAAKhlB,CAAAA,EAAAA;EAAAA,IAIVd,CAAAA;IAFEsC,CAAAA,GAAIxB,CAAAA,CAAEC,MAAAA;IACRglB,CAAAA,GAAQ,CAAC,UAAA,EAAA,CAAa,SAAA,EAAA,CAAY,UAAA,EAAY,SAAA,CAAA;EAAA,KAE3C/lB,CAAAA,GAAI,EAAA,EAAIA,CAAAA,IAAKc,CAAAA,CAAEC,MAAAA,EAAQf,CAAAA,IAAK,EAAA,EAC/BslB,CAAAA,CAASS,CAAAA,EAAOC,CAAAA,CAAOllB,CAAAA,CAAEiW,SAAAA,CAAU/W,CAAAA,GAAI,EAAA,EAAIA,CAAAA,CAAAA,CAAAA,CAAAA;EAE7Cc,CAAAA,GAAIA,CAAAA,CAAEiW,SAAAA,CAAU/W,CAAAA,GAAI,EAAA,CAAA;EAAA,IAChBimB,CAAAA,GAAO,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA;EAAA,KACpDjmB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIc,CAAAA,CAAEC,MAAAA,EAAQf,CAAAA,EAAAA,EACxBimB,CAAAA,CAAKjmB,CAAAA,IAAK,CAAA,CAAA,IAAMc,CAAAA,CAAEiO,UAAAA,CAAW/O,CAAAA,CAAAA,KAAOA,CAAAA,GAAI,CAAA,IAAK,CAAA,CAAA;EAAA,IAC/CimB,CAAAA,CAAKjmB,CAAAA,IAAK,CAAA,CAAA,IAAM,GAAA,KAASA,CAAAA,GAAI,CAAA,IAAK,CAAA,CAAA,EAC9BA,CAAAA,GAAI,EAAA,EAAA,KACNslB,CAAAA,CAASS,CAAAA,EAAOE,CAAAA,CAAAA,EACXjmB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI,EAAA,EAAIA,CAAAA,EAAAA,EAAKimB,CAAAA,CAAKjmB,CAAAA,CAAAA,GAAK,CAAA;EAAA,OAErCimB,CAAAA,CAAK,EAAA,CAAA,GAAU,CAAA,GAAJ3jB,CAAAA,EACXgjB,CAAAA,CAASS,CAAAA,EAAOE,CAAAA,CAAAA,EACTF,CAAAA;AAAAA;AAkBT,SAASC,CAAAA,CAAOllB,CAAAA,EAAAA;EAAAA,IAGZd,CAAAA;IADEkmB,CAAAA,GAAU,EAAA;EAAA,KAETlmB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI,EAAA,EAAIA,CAAAA,IAAK,CAAA,EACvBkmB,CAAAA,CAAQlmB,CAAAA,IAAK,CAAA,CAAA,GACXc,CAAAA,CAAEiO,UAAAA,CAAW/O,CAAAA,CAAAA,IACZc,CAAAA,CAAEiO,UAAAA,CAAW/O,CAAAA,GAAI,CAAA,CAAA,IAAM,CAAA,CAAA,IACvBc,CAAAA,CAAEiO,UAAAA,CAAW/O,CAAAA,GAAI,CAAA,CAAA,IAAM,EAAA,CAAA,IACvBc,CAAAA,CAAEiO,UAAAA,CAAW/O,CAAAA,GAAI,CAAA,CAAA,IAAM,EAAA,CAAA;EAAA,OAErBkmB,CAAAA;AAAAA;AF1JP9M,CAAAA,GAAO5B,CAAAA,CAAa4B,IAAAA,CAAK+M,IAAAA,CAAK3O,CAAAA,CAAAA,EAC9B6B,CAAAA,GAAO7B,CAAAA,CAAa6B,IAAAA,CAAK8M,IAAAA,CAAK3O,CAAAA,CAAAA;AE4JhC,IAAI4O,CAAAA,GAAU,kBAAA,CAAmBla,KAAAA,CAAM,EAAA,CAAA;AAEvC,SAASma,CAAAA,CAAK/jB,CAAAA,EAAAA;EAAAA,KAAAA,IACRxB,CAAAA,GAAI,EAAA,EACNZ,CAAAA,GAAI,CAAA,EACCA,CAAAA,GAAI,CAAA,EAAGA,CAAAA,EAAAA,EACZY,CAAAA,IAAKslB,CAAAA,CAAS9jB,CAAAA,IAAU,CAAA,GAAJpC,CAAAA,GAAQ,CAAA,GAAM,EAAA,CAAA,GAAQkmB,CAAAA,CAAS9jB,CAAAA,IAAU,CAAA,GAAJpC,CAAAA,GAAU,EAAA,CAAA;EAAA,OAC9DY,CAAAA;AAAAA;AAST,SAASwlB,CAAAA,CAAmBhkB,CAAAA,EAAAA;EAAAA,OACnBiQ,MAAAA,CAAOC,YAAAA,CAAAA,CACP,GAAA,GAAJlQ,CAAAA,KAAa,CAAA,EAAA,CACT,KAAA,GAAJA,CAAAA,KAAe,CAAA,EAAA,CACX,QAAA,GAAJA,CAAAA,KAAiB,EAAA,EAAA,CACb,UAAA,GAAJA,CAAAA,KAAmB,EAAA,CAAA;AAAA;AAUxB,SAASikB,CAAAA,CAAOzlB,CAAAA,EAAAA;EAAAA,OACMglB,CAAAA,CAAKhlB,CAAAA,CAAAA,CALhByV,GAAAA,CAAI+P,CAAAA,CAAAA,CAAoBE,IAAAA,CAAK,EAAA,CAAA;AAAA;AAaxC,IAAIC,CAAAA,GAA2B,kCAAA,IA9B/B,UAAa/lB,CAAAA,EAAAA;EAAAA,KACN,IAAIV,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIU,CAAAA,CAAEK,MAAAA,EAAQf,CAAAA,EAAAA,EAAKU,CAAAA,CAAEV,CAAAA,CAAAA,GAAKqmB,CAAAA,CAAK3lB,CAAAA,CAAEV,CAAAA,CAAAA,CAAAA;EAAAA,OAC1CU,CAAAA,CAAE8lB,IAAAA,CAAK,EAAA,CAAA;AAAA,CAyBPE,CAAIZ,CAAAA,CAGM,OAAA,CAAA,CAAA;AAEnB,SAASH,CAAAA,CAAM5jB,CAAAA,EAAGhC,CAAAA,EAAAA;EAAAA,IACZ0mB,CAAAA,EAAU;IAAA,IAKRE,CAAAA,GAAAA,CAAW,KAAA,GAAJ5kB,CAAAA,KAAmB,KAAA,GAAJhC,CAAAA,CAAAA;IAAAA,OAAAA,CACjBgC,CAAAA,IAAK,EAAA,KAAOhC,CAAAA,IAAK,EAAA,CAAA,IAAO4mB,CAAAA,IAAO,EAAA,CAAA,IACzB,EAAA,GAAa,KAAA,GAANA,CAAAA;EAAAA;EAAAA,OAOd5kB,CAAAA,GAAIhC,CAAAA,GAAK,UAAA;AAAA;;;;;;;;;ACrMrB,SAAS6mB,CAAAA,CAAIC,CAAAA,EAAK5nB,CAAAA,EAAAA;EAAAA,IACZ6nB,CAAAA,EAASC,CAAAA,EAdCjV,CAAAA,EAAKkV,CAAAA;EAAAA,IAefH,CAAAA,KAAQC,CAAAA,EAAS;IAAA,KAAA,IACf9b,CAAAA,IAhBQ8G,CAAAA,GAgBG+U,CAAAA,EAhBEG,CAAAA,GAgB+B,CAAA,IAA1B,GAAA,GAAMH,CAAAA,CAAI9lB,MAAAA,IAAW,CAAA,CAAA,EAftC,IAAI4Q,KAAAA,CAAMqV,CAAAA,GAAM,CAAA,CAAA,CAAGR,IAAAA,CAAK1U,CAAAA,CAAAA,CAAAA,EAgBzBiU,CAAAA,GAAQ,EAAA,EACH/lB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI,GAAA,EAAKA,CAAAA,EAAAA,EACvB+lB,CAAAA,CAAM/lB,CAAAA,CAAAA,GAAKA,CAAAA;IAAAA,IAETE,CAAAA,GAAI,CAAA;IAAA,KACCF,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI,GAAA,EAAKA,CAAAA,EAAAA,EAAK;MAAA,IACxB6D,CAAAA,GAAIkiB,CAAAA,CAAM/lB,CAAAA,CAAAA;MACdE,CAAAA,GAAAA,CAAKA,CAAAA,GAAI2D,CAAAA,GAAImH,CAAAA,CAAE+D,UAAAA,CAAW/O,CAAAA,CAAAA,IAAM,GAAA,EAChC+lB,CAAAA,CAAM/lB,CAAAA,CAAAA,GAAK+lB,CAAAA,CAAM7lB,CAAAA,CAAAA,EACjB6lB,CAAAA,CAAM7lB,CAAAA,CAAAA,GAAK2D,CAAAA;IAAAA;IAEbijB,CAAAA,GAAUD,CAAAA,EACVE,CAAAA,GAAYhB,CAAAA;EAAAA,CAAAA,MAEZA,CAAAA,GAAQgB,CAAAA;EAAAA,IAENhmB,CAAAA,GAAS9B,CAAAA,CAAK8B,MAAAA;IACdgB,CAAAA,GAAI,CAAA;IACJhC,CAAAA,GAAI,CAAA;IACJ2G,CAAAA,GAAM,EAAA;EAAA,KACD1G,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIe,CAAAA,EAAQf,CAAAA,EAAAA,EAG1BD,CAAAA,GAAAA,CAAKA,CAAAA,IADL8D,CAAAA,GAAIkiB,CAAAA,CADJhkB,CAAAA,GAAAA,CAAKA,CAAAA,GAAI,CAAA,IAAK,GAAA,CAAA,CAAA,IAEA,GAAA,EACdgkB,CAAAA,CAAMhkB,CAAAA,CAAAA,GAAKgkB,CAAAA,CAAMhmB,CAAAA,CAAAA,EACjBgmB,CAAAA,CAAMhmB,CAAAA,CAAAA,GAAK8D,CAAAA,EACXmH,CAAAA,GAAI+a,CAAAA,CAAAA,CAAOA,CAAAA,CAAMhkB,CAAAA,CAAAA,GAAKgkB,CAAAA,CAAMhmB,CAAAA,CAAAA,IAAM,GAAA,CAAA,EAClC2G,CAAAA,IAAO6L,MAAAA,CAAOC,YAAAA,CAAavT,CAAAA,CAAK8P,UAAAA,CAAW/O,CAAAA,CAAAA,GAAKgL,CAAAA,CAAAA;EAAAA,OAE3CtE,CAAAA;AAAAA;;;;;;;;;;;;ACxCT,IAAIugB,CAAAA,GAAoB;EACtBC,KAAAA,EAAO,CAAA;EACPC,MAAAA,EAAQ,CAAA;EACRC,IAAAA,EAAM,EAAA;EAAA,aAAA,EACS;AAAA,CAAA;AAgBjB,SAASC,CAAAA,CAAYC,CAAAA,EAAaC,CAAAA,EAAcC,CAAAA,EAAeC,CAAAA,EAAAA;EAAAA,IAAAA,CACxDnmB,CAAAA,GAAI,CAAA,EAAA,IAAA,CACJrB,CAAAA,GAAI,CAAA;EAAA,IAGLynB,CAAAA,GAAa,GAAA;EACjBJ,CAAAA,CAAYK,OAAAA,CAAQ,UAASC,CAAAA,EAAAA;IAAAA,IAAAA,KACW,CAAA,KAA3BX,CAAAA,CAAkBW,IAAAA,EAAAA,MACrB,IAAItS,KAAAA,CAAM,sBAAA,GAAyBsS,CAAAA,CAAAA;IAE3CF,CAAAA,IAAcT,CAAAA,CAAkBW,CAAAA,CAAAA;EAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAI7BC,OAAAA,GACH,sCAAA;EAAA,IAEEC,CAAAA,GAAAA,CAAsBP,CAAAA,GAAe3P,IAAAA,CAAKiQ,OAAAA,EAASlM,MAAAA,CAAO,CAAA,EAAG,EAAA,CAAA;IAC7DoM,CAAAA,GAAAA,CAAuBP,CAAAA,GAAgB5P,IAAAA,CAAKiQ,OAAAA,EAASlM,MAAAA,CAAO,CAAA,EAAG,EAAA,CAAA;EAAA,IAAA,CAE9DqM,CAAAA,GAAIpQ,IAAAA,CAAKqQ,oBAAAA,CAAqBH,CAAAA,EAAoBC,CAAAA,CAAAA,EAAAA,IAAAA,CAClDG,CAAAA,GAAAA,EAA2B,CAAA,IAAP,GAAA,GAAbR,CAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CACPS,aAAAA,GAAgB5B,CAAAA,CACnBuB,CAAAA,GACElQ,IAAAA,CAAKoQ,CAAAA,GACLpQ,IAAAA,CAAKwQ,YAAAA,CAAaxQ,IAAAA,CAAKsQ,CAAAA,CAAAA,GACvBtQ,IAAAA,CAAKyQ,UAAAA,CAAWZ,CAAAA,CAAAA,CAAAA,CAClB9L,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EAAA,IAAA,CACP2M,CAAAA,GAAI1B,CAAAA,CAAIhP,IAAAA,CAAKuQ,aAAAA,EAAevQ,IAAAA,CAAKiQ,OAAAA,CAAAA;AAAAA;AC1DxC,SAASU,CAAAA,CAAUzW,CAAAA,EAAAA;EAAAA,IAEb,kBAAA,CAAmBuI,IAAAA,CAAKvI,CAAAA,CAAAA,EAAAA,MAEpB,IAAIwD,KAAAA,CACR,2BAAA,GAA8BxD,CAAAA,GAAM,iCAAA,CAAA;EAAA,KAAA,IAGpCsJ,CAAAA,GAAS,EAAA,EACXoN,CAAAA,GAAY1W,CAAAA,CAAI/Q,MAAAA,EACTf,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIwoB,CAAAA,EAAWxoB,CAAAA,EAAAA,EAAK;IAAA,IAC9ByoB,CAAAA,GAAW3W,CAAAA,CAAI/C,UAAAA,CAAW/O,CAAAA,CAAAA;IAAAA,IAE5ByoB,CAAAA,GAAW,EAAA,IACE,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,EAAA,KAAbA,CAAAA,IACa,GAAA,KAAbA,CAAAA,IACa,GAAA,KAAbA,CAAAA,IACAA,CAAAA,GAAW,GAAA,EASXrN,CAAAA,IAAU,GAAA,GAAA,CAFS,GAAA,GADNqN,CAAAA,CAAS5c,QAAAA,CAAS,EAAA,CAAA,EACEzG,KAAAA,CAAAA,CAAO,CAAA,CAAA,CAAA,KAKxCgW,CAAAA,IAAUtJ,CAAAA,CAAI9R,CAAAA,CAAAA;EAAAA;EAAAA,OAGXob,CAAAA;AAAAA;AC3BT,SAASsN,CAAAA,CAAOC,CAAAA,EAAAA;EAAAA,IACS,QAAA,KAAnBrrB,IAAAA,eAAAA,EAAOqrB,CAAAA,CAAAA,EAAAA,MACH,IAAIrT,KAAAA,CACR,4DAAA,CAAA;EAAA,IAGAsT,CAAAA,GAAS,CAAA,CAAA;EAAA,IAAA,CAERC,SAAAA,GAAY,UAASC,CAAAA,EAAOC,CAAAA,EAAUC,CAAAA,EAAAA;IAAAA,IACzCA,CAAAA,GAAOA,CAAAA,IAAAA,CAAQ,CAAA,EAEI,QAAA,IAAA,OAAVF,CAAAA,IACa,UAAA,IAAA,OAAbC,CAAAA,IACS,SAAA,IAAA,OAATC,CAAAA,EAAAA,MAED,IAAI1T,KAAAA,CACR,6DAAA,CAAA;IAICsT,CAAAA,CAAOK,cAAAA,CAAeH,CAAAA,CAAAA,KACzBF,CAAAA,CAAOE,CAAAA,CAAAA,GAAS,CAAA,CAAA,CAAA;IAAA,IAGdI,CAAAA,GAAQ/lB,IAAAA,CAAKgmB,MAAAA,CAAAA,CAAAA,CAAStd,QAAAA,CAAS,EAAA,CAAA;IAAA,OACnC+c,CAAAA,CAAOE,CAAAA,CAAAA,CAAOI,CAAAA,CAAAA,GAAS,CAACH,CAAAA,EAAAA,CAAAA,CAAYC,CAAAA,CAAAA,EAE7BE,CAAAA;EAAAA,CAAAA,EAAAA,IAAAA,CAGJE,WAAAA,GAAc,UAASF,CAAAA,EAAAA;IAAAA,KACrB,IAAIJ,CAAAA,IAASF,CAAAA,EAAAA,IACZA,CAAAA,CAAOE,CAAAA,CAAAA,CAAOI,CAAAA,CAAAA,EAAAA,OAAAA,OACTN,CAAAA,CAAOE,CAAAA,CAAAA,CAAOI,CAAAA,CAAAA,EACqB,CAAA,KAAtCpV,MAAAA,CAAOC,IAAAA,CAAK6U,CAAAA,CAAOE,CAAAA,CAAAA,CAAAA,CAAQ/nB,MAAAA,IAAAA,OACtB6nB,CAAAA,CAAOE,CAAAA,CAAAA,EAAAA,CAET,CAAA;IAAA,OAAA,CAGJ,CAAA;EAAA,CAAA,EAAA,IAAA,CAGJO,OAAAA,GAAU,UAASP,CAAAA,EAAAA;IAAAA,IAClBF,CAAAA,CAAOK,cAAAA,CAAeH,CAAAA,CAAAA,EAAQ;MAAA,IAC5BQ,CAAAA,GAAO3X,KAAAA,CAAM9T,SAAAA,CAAUuH,KAAAA,CAAMoJ,IAAAA,CAAK6C,SAAAA,EAAW,CAAA,CAAA;QAC/CkY,CAAAA,GAAS,EAAA;MAAA,KAEN,IAAIL,CAAAA,IAASN,CAAAA,CAAOE,CAAAA,CAAAA,EAAQ;QAAA,IAC3BU,CAAAA,GAAMZ,CAAAA,CAAOE,CAAAA,CAAAA,CAAOI,CAAAA,CAAAA;QAAAA,IAAAA;UAEtBM,CAAAA,CAAI,CAAA,CAAA,CAAGpY,KAAAA,CAAMuX,CAAAA,EAASW,CAAAA,CAAAA;QAAAA,CACtB,QAAOG,CAAAA,EAAAA;UACHjS,CAAAA,CAAaM,OAAAA,IACfA,CAAAA,CAAQ/Y,KAAAA,CAAM,oBAAA,EAAsB0qB,CAAAA,CAAGC,OAAAA,EAASD,CAAAA,CAAAA;QAAAA;QAGhDD,CAAAA,CAAI,CAAA,CAAA,IAAID,CAAAA,CAAOrkB,IAAAA,CAAKgkB,CAAAA,CAAAA;MAAAA;MAEtBK,CAAAA,CAAOxoB,MAAAA,IAAQwoB,CAAAA,CAAO5B,OAAAA,CAAQ/P,IAAAA,CAAKwR,WAAAA,CAAAA;IAAAA;EAAAA,CAAAA,EAAAA,IAAAA,CAItCO,SAAAA,GAAY,YAAA;IAAA,OACRf,CAAAA;EAAAA,CAAAA;AAAAA;AAIX,SAASgB,CAAAA,CAAOC,CAAAA,EAAAA;EAAAA,IAAAA,EACRjS,IAAAA,YAAgBgS,CAAAA,CAAAA,EAAAA,OACb,IAAIA,CAAAA,CAAOC,CAAAA,CAAAA;EAAAA,IAWhBC,CAAAA,GAAY,wBAAA,CAAyB5d,KAAAA,CAAM,GAAA,CAAA;EAAA,KAC1C,IAAIhK,CAAAA,IAAK2nB,CAAAA,EACRA,CAAAA,CAAWZ,cAAAA,CAAe/mB,CAAAA,CAAAA,IAAM4nB,CAAAA,CAAU/d,OAAAA,CAAQ7J,CAAAA,CAAAA,IAAM,CAAA,KAAA,IAAA,CACrDA,CAAAA,CAAAA,GAAK2nB,CAAAA,CAAW3nB,CAAAA,CAAAA,CAAAA;EAAAA,IAAAA,CAOpBhE,EAAAA,GAAK,EAAA,EAAA,IAAA,CAKL6rB,YAAAA,GAAAA,CAAgB,CAAA;AAAA;AAoBvB,SAASC,CAAAA,CAAQC,CAAAA,EAAQC,CAAAA,EAAAA;EAAAA,IAAAA,CAClBD,MAAAA,GAASA,CAAAA,EAAAA,IAAAA,CACTC,MAAAA,GAASA,CAAAA,EAAAA,IAAAA,CAEThsB,EAAAA,GAAK,EAAA,EAAA,IAAA,CACL6rB,YAAAA,GAAAA,CAAgB,CAAA;AAAA;AAGvB,SAASI,CAAAA,CAAezrB,CAAAA,EAAM0rB,CAAAA,EAAQC,CAAAA,EAAQJ,CAAAA,EAAQC,CAAAA,EAAAA;EAAAA,IAAAA,EAC9CtS,IAAAA,YAAgBuS,CAAAA,CAAAA,EAAAA,OACb,IAAIA,CAAAA,CAAezrB,CAAAA,EAAM0rB,CAAAA,EAAQC,CAAAA,EAAQJ,CAAAA,EAAQC,CAAAA,CAAAA;EAAAA,IAAAA,CAIrDxrB,IAAAA,GAAgB,OAAA,KAATA,CAAAA,GAAmB,CAAA,GAAI,CAAA,EAAA,IAAA,CAC9B0rB,MAAAA,GAASA,CAAAA,EAAAA,IAAAA,CACTC,MAAAA,GAASA,CAAAA,EAEdL,CAAAA,CAAQxb,IAAAA,CAAKoJ,IAAAA,EAAMqS,CAAAA,EAAQC,CAAAA,CAAAA;AAAAA;AAG7B,SAASI,CAAAA,CAAcC,CAAAA,EAAaC,CAAAA,EAAOC,CAAAA,EAAOR,CAAAA,EAAQC,CAAAA,EAAAA;EAAAA,IAAAA,EAClDtS,IAAAA,YAAgB0S,CAAAA,CAAAA,EAAAA,OACb,IAAIA,CAAAA,CAAcC,CAAAA,EAAaC,CAAAA,EAAOC,CAAAA,EAAOR,CAAAA,EAAQC,CAAAA,CAAAA;EAAAA,IAAAA,CAGzDK,WAAAA,GAAcA,CAAAA,EAAAA,IAAAA,CACdC,KAAAA,GAAQA,CAAAA,EAAAA,IAAAA,CACRC,KAAAA,GAAQA,CAAAA,EAAAA,IAAAA,CAERC,MAAAA,GAAS,EAAA,EAAA,IAAA,CAETC,UAAAA,GAAa,CAAA,EAElBX,CAAAA,CAAQxb,IAAAA,CAAKoJ,IAAAA,EAAMqS,CAAAA,EAAQC,CAAAA,CAAAA;AAAAA;AAsC7B,SAASU,CAAAA,CAAMC,CAAAA,EAAAA;EAAAA,IAOTC,CAAAA;IANAC,CAAAA,GAAsC,QAAA,IAAA,OAAjB1Z,SAAAA,CAAU,CAAA,CAAA,GAAkBA,SAAAA,CAAU,CAAA,CAAA,GAAK,GAAA;IAChE2Z,CAAAA,GAAO3Z,SAAAA,CAAU,CAAA,CAAA;IACjB4Z,CAAAA,GAAS5Z,SAAAA,CAAU,CAAA,CAAA;IACnB6Z,CAAAA,GAAc7Z,SAAAA,CAAU,CAAA,CAAA;IACxB8Z,CAAAA,GAAU,EAAA;IACVC,CAAAA,GAAW,CAAA;IAEXC,CAAAA,GAAiB,EAAA;IACjBC,CAAAA,GAAuB,GAAA;IACvBC,CAAAA,GAAoB,IAAA;EAID,QAAA,KAAnBjuB,IAAAA,eAAAA,EAFJutB,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,CAAA,KAGnBE,CAAAA,GAAcF,CAAAA,CAAQE,WAAAA,EACtBC,CAAAA,GAAOH,CAAAA,CAAQG,IAAAA,IAAQA,CAAAA,EACvBC,CAAAA,GAASJ,CAAAA,CAAQI,MAAAA,IAAUA,CAAAA,EAC3BC,CAAAA,GAAcL,CAAAA,CAAQW,QAAAA,IAAYX,CAAAA,CAAQK,WAAAA,IAAeA,CAAAA,EAE/B,IAAA,MAD1BK,CAAAA,GAAoBV,CAAAA,CAAQY,UAAAA,IAAc,IAAA,CAAA,KAExCF,CAAAA,CAAkBhE,YAAAA,GAAegE,CAAAA,CAAkBhE,YAAAA,IAAgB,EAAA,EACnEgE,CAAAA,CAAkB/D,aAAAA,GAAgB+D,CAAAA,CAAkB/D,aAAAA,IAAiB,EAAA,EACrE+D,CAAAA,CAAkBG,eAAAA,GAChBH,CAAAA,CAAkBG,eAAAA,IAAmB,EAAA,CAAA,EAEzCN,CAAAA,GAC8B,QAAA,IAAA,OAArBP,CAAAA,CAAQO,QAAAA,GAAwBjoB,IAAAA,CAAKwoB,GAAAA,CAAId,CAAAA,CAAQO,QAAAA,CAAAA,GAAY,CAAA,EAAA,KACrC,CAAA,KAAtBP,CAAAA,CAAQC,SAAAA,KACjBA,CAAAA,GAAYD,CAAAA,CAAQC,SAAAA,CAAAA,EAAAA,KAEgB,CAAA,KAA3BD,CAAAA,CAAQQ,cAAAA,KACjBA,CAAAA,GAAiBR,CAAAA,CAAQQ,cAAAA,CAAAA,EAE3BC,CAAAA,GAAuBT,CAAAA,CAAQS,oBAAAA,IAAwB,GAAA,CAAA,EAGzDH,CAAAA,GACEN,CAAAA,CAAQM,OAAAA,KAAAA,CAA4B,CAAA,KAAhBD,CAAAA,GAAuB,CAAC,aAAA,CAAA,GAAiBC,CAAAA,CAAAA,EAE/DH,CAAAA,GAAOA,CAAAA,IAAQ,IAAA,EACfD,CAAAA,GAAAA,CAAe,EAAA,IAAMA,CAAAA,IAAe,GAAA,CAAA,EAAM/T,WAAAA,CAAAA,CAAAA;EAAAA,IACtC4U,CAAAA,GAAmBf,CAAAA,CAAQe,gBAAAA,IAAAA,CAAoB,CAAA;IAC/CC,CAAAA,GAAY,CAAA,CAAA;IAEZC,CAAAA,GAAM;MACRC,QAAAA,EAAU,CAAA,CAAA;MACVC,WAAAA,EAAa,CAAA;IAAA,CAAA;EAGfF,CAAAA,CAAIE,WAAAA,CAAYtD,MAAAA,GAASA,CAAAA;EAAAA,IAErBuD,CAAAA,GAAa,KAAA;IACbC,CAAAA,GAAiBJ,CAAAA,CAAIE,WAAAA,CAAYE,aAAAA,GAAgB,YAAA;MAAA,OAC5CD,CAAAA;IAAAA,CAAAA;EAGTH,CAAAA,CAAIE,WAAAA,CAAYG,aAAAA,GAAgB,UAASC,CAAAA,EAAAA;IACvCH,CAAAA,GAAaG,CAAAA;EAAAA,CAAAA;EAAAA,IAIXC,CAAAA,GAAc;IAChBC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,MAAA,EAAQ,OAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,KAAA,EAAO,MAAA,CAAA;IACZC,EAAAA,EAAI,CAAC,MAAA,EAAQ,KAAA,CAAA;IACbC,GAAAA,EAAK,CAAC,IAAA,EAAM,MAAA,CAAA;IACZC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdze,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACd0e,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdze,EAAAA,EAAI,CAAC,MAAA,EAAQ,OAAA,CAAA;IACb0e,EAAAA,EAAI,CAAC,KAAA,EAAO,MAAA,CAAA;IACZC,EAAAA,EAAI,CAAC,MAAA,EAAQ,KAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,GAAAA,EAAK,CAAC,KAAA,EAAO,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,OAAA,EAAS,OAAA,CAAA;IACdC,EAAAA,EAAI,CAAC,MAAA,EAAQ,OAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbC,GAAAA,EAAK,CAAC,KAAA,EAAO,MAAA,CAAA;IACbhmB,EAAAA,EAAI,CAAC,MAAA,EAAQ,MAAA,CAAA;IACbimB,MAAAA,EAAQ,CAAC,GAAA,EAAK,GAAA,CAAA;IAAA,mBAAA,EACO,CAAC,GAAA,EAAK,GAAA,CAAA;IAC3BC,KAAAA,EAAO,CAAC,GAAA,EAAK,IAAA,CAAA;IAAA,cAAA,EACG,CAAC,GAAA,EAAK,GAAA,CAAA;IACtBC,MAAAA,EAAQ,CAAC,IAAA,EAAM,GAAA,CAAA;IACfC,OAAAA,EAAS,CAAC,GAAA,EAAK,IAAA,CAAA;IAAA,aAAA,EACA,CAAC,GAAA,EAAK,GAAA;EAAA,CAAA;EAGvB1C,CAAAA,CAAIE,WAAAA,CAAYyC,cAAAA,GAAiB,YAAA;IAAA,OACxBpC,CAAAA;EAAAA,CAAAA;EAAAA,IAGLqC,CAAAA,GAAiB5C,CAAAA,CAAIE,WAAAA,CAAY0C,aAAAA,GAAgB,UAAStC,CAAAA,EAAAA;IAAAA,OACrDC,CAAAA,CAAYD,CAAAA,CAAAA;EAAAA,CAAAA;EAGrBnB,CAAAA,GAASA,CAAAA,IAAU,IAAA;EAAA,IAEf0D,CAAAA,GAAU;MACZC,MAAAA,EAAQ,QAAA;MACRC,QAAAA,EAAU;IAAA,CAAA;IAERC,CAAAA,GAAUH,CAAAA,CAAQC,MAAAA;EAAAA,SAEbG,CAAAA,CAAAA,EAAAA;IAAAA,IAAAA,CAIFC,iBAAAA,CAAAA,CAAAA,EACLtoB,EAAAA,CACE,IAAIuoB,EAAAA,CACFC,EAAAA,EACA,CAAA,EACA,CAAA,EAAA,CACCA,EAAAA,EACD,CAAA,EACAC,EAAAA,CAAAA,CAAAA,GAAkBD,EAAAA,CAAAA,CAClBrjB,QAAAA,CAAAA,CAAAA,GAAa,KAAA,CAAA,EAAA,IAAA,CAEZujB,WAAAA,CAAYxX,IAAAA,CAAKyX,WAAAA,CAAAA,CAAAA,GAAgBH,EAAAA,CAAAA,EAItC5D,CAAAA,GAAuB,GAAA,EAEvBwD,CAAAA,GAAUH,CAAAA,CAAQE,QAAAA;EAAAA;EAAAA,SAGXS,CAAAA,CAAAA,EAAAA;IAAAA,IAAAA,CACFC,oBAAAA,CAAAA,CAAAA,EACLjE,CAAAA,GAAuB,GAAA,EACvBwD,CAAAA,GAAUH,CAAAA,CAAQC,MAAAA;EAAAA;EAAAA,IAUhBY,CAAAA,GAAiC1D,CAAAA,CAAIE,WAAAA,CAAYwD,6BAAAA,GAAgC,UACnFC,CAAAA,EACAC,CAAAA,EAAAA;IAAAA,IAGgB,MAAA,IAAbD,CAAAA,IAAqC,QAAA,IAAdC,CAAAA,IACV,MAAA,IAAbD,CAAAA,IAAqC,GAAA,IAAdC,CAAAA,IACV,QAAA,IAAbD,CAAAA,IAAuC,QAAA,IAAdC,CAAAA,IACZ,MAAA,IAAbD,CAAAA,IAAqC,QAAA,IAAdC,CAAAA,EAAAA,MAElB,IAAIpa,KAAAA,CAAM,iDAAA,CAAA;IAAA,OAEdoa,CAAAA,KACFD,CAAAA,GACgB,GAAA,IAAdC,CAAAA,IAAoC,QAAA,KAAfA,CAAAA,GACH,QAAA,KAAdD,CAAAA,GACE,QAAA,GACA,QAAA,GACa,GAAA,IAAdC,CAAAA,IAAoC,MAAA,KAAfA,CAAAA,IACR,QAAA,KAAdD,CAAAA,GAAAA,CAEe,GAAA,IAAdC,CAAAA,GAAoB,MAAA,GAASA,CAAAA,IAAc,EAAA,GAAKD,CAAAA,GADjD,MAAA,CAAA,EAGDA,CAAAA;EAAAA,CAAAA;EA6BT3D,CAAAA,CAAIiD,WAAAA,GAAc,UAAStU,CAAAA,EAAAA;IAAAA,IACrBkV,CAAAA,GAAWb,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA;IAAAA,OAE/Be,CAAAA,IACFZ,CAAAA,CAAYvgB,IAAAA,CAAKoJ,IAAAA,CAAAA,EAGC,UAAA,IAAA,OAAT6C,CAAAA,KAIXA,CAAAA,CAAK7C,IAAAA,CAAAA,EAED+X,CAAAA,IACFL,CAAAA,CAAU9gB,IAAAA,CAAKoJ,IAAAA,CAAAA,CAAAA,EANRA,IAAAA;EAAAA,CAAAA,EAqBXkU,CAAAA,CAAIwD,SAAAA,GAAY,UAAS7U,CAAAA,EAAAA;IAAAA,IACnBkV,CAAAA,GAAWb,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA;IAAAA,OAE/Bc,CAAAA,IACFL,CAAAA,CAAU9gB,IAAAA,CAAKoJ,IAAAA,CAAAA,EAGG,UAAA,IAAA,OAAT6C,CAAAA,KAIXA,CAAAA,CAAK7C,IAAAA,CAAAA,EAED+X,CAAAA,IACFZ,CAAAA,CAAYvgB,IAAAA,CAAKoJ,IAAAA,CAAAA,CAAAA,EANVA,IAAAA;EAAAA,CAAAA,EAiBXkU,CAAAA,CAAI8D,aAAAA,GAAgB,YAAA;IAAA,OACXd,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA;EAAAA,CAAAA;EAAAA,IAyBzBgB,CAAAA;IAtBAC,CAAAA,GAAsB,SAAA,CAASC,CAAAA,EAAAA;MAAAA,IAC7BjB,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,EAAAA,MAChB,IAAIvZ,KAAAA,CACRya,CAAAA,GAAAA,kFAAAA,CAAAA;IAAAA,CAAAA;IAOFC,CAAAA,GAAoBlE,CAAAA,CAAIkE,gBAAAA,GAAmBlE,CAAAA,CAAIE,WAAAA,CAAYgE,gBAAAA,GAAmB,UAChFC,CAAAA,EACAC,CAAAA,EAAAA;MAAAA,IAEIC,CAAAA,GAAerF,CAAAA,IAAaoF,CAAAA;MAAAA,IAC5B/K,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAMgL,CAAAA,CAAAA,EAAAA,MACnB,IAAI7a,KAAAA,CAAM,mDAAA,CAAA;MAAA,OAEX2a,CAAAA,CAAOG,OAAAA,CAAQD,CAAAA,CAAAA,CAAclkB,OAAAA,CAAQ,KAAA,EAAO,EAAA,CAAA;IAAA,CAAA;EAMnD4jB,CAAAA,GAAM/D,CAAAA,CAAI+D,GAAAA,GAAM/D,CAAAA,CAAIE,WAAAA,CAAY6D,GAAAA,GADJ,QAAA,IAAA,OAAnBxE,CAAAA,GAC6B,UAAS4E,CAAAA,EAAAA;IAAAA,IACzC9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,sCAAA,CAAA;IAAA,OAEX0a,CAAAA,CAAiBC,CAAAA,EAAQ5E,CAAAA,CAAAA;EAAAA,CAAAA,GAEN,OAAA,KAAnBA,CAAAA,GAC6B,UAAS4E,CAAAA,EAAAA;IAAAA,IACzC9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,sCAAA,CAAA;IAAA,OAGT0a,CAAAA,CAAiBC,CAAAA,EADtBA,CAAAA,GAAAA,CAAU,CAAA,IAAKA,CAAAA,GAAS,CAAA,GACM,EAAA,GAEA,CAAA,CAAA;EAAA,CAAA,GAIE,UAASA,CAAAA,EAAAA;IAAAA,IACzC9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,sCAAA,CAAA;IAAA,OAEX0a,CAAAA,CAAiBC,CAAAA,EAAQ,EAAA,CAAA;EAAA,CAAA;EAAA,IAGhCI,CAAAA,GAAMvE,CAAAA,CAAIuE,EAAAA,GAAKvE,CAAAA,CAAIE,WAAAA,CAAYqE,EAAAA,GAAK,UAASJ,CAAAA,EAAAA;MAAAA,IAC3C9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,qCAAA,CAAA;MAAA,OAEX0a,CAAAA,CAAiBC,CAAAA,EAAQ,CAAA,CAAA;IAAA,CAAA;IAG9BK,CAAAA,GAAMxE,CAAAA,CAAIE,WAAAA,CAAYsE,EAAAA,GAAK,UAASL,CAAAA,EAAAA;MAAAA,IAClC9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,qCAAA,CAAA;MAAA,OAEX0a,CAAAA,CAAiBC,CAAAA,EAAQ,CAAA,CAAA;IAAA,CAAA;IAG9BM,CAAAA,GAASzE,CAAAA,CAAIyE,KAAAA,GAAQzE,CAAAA,CAAIE,WAAAA,CAAYuE,KAAAA,GAAQ,UAASN,CAAAA,EAAAA;MAAAA,IACpD9K,KAAAA,CAAM8K,CAAAA,CAAAA,EAAAA,MACF,IAAI3a,KAAAA,CAAM,wCAAA,CAAA;MAAA,OAEdwZ,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA,GACfqB,CAAAA,GAASf,EAAAA,GACPJ,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,GACtBoB,CAAAA,GAAAA,KADF,CAAA;IAAA,CAAA;IAKLO,CAAAA,GAAa,SAAA,CAASnd,CAAAA,EAAAA;MAAAA,OACpByb,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA,GACfO,EAAAA,CAAAA,CAAAA,GAAkB9b,CAAAA,GAChByb,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,GACtBxb,CAAAA,GAAAA,KADF,CAAA;IAAA,CAAA;IAKLod,CAAAA,GAAkB,SAAA,CAASpd,CAAAA,EAAAA;MAAAA,OACtBkd,CAAAA,CAAMC,CAAAA,CAAWnd,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;EAW1ByY,CAAAA,CAAIE,WAAAA,CAAY0E,YAAAA,GAAe5E,CAAAA,CAAI4E,YAAAA,GAAe,UAAStE,CAAAA,EAAAA;IACtB,QAAA,IAAA,OAAxBrH,QAAAA,CAASqH,CAAAA,EAAO,EAAA,CAAA,KACzBtB,CAAAA,GAAY/F,QAAAA,CAASqH,CAAAA,EAAO,EAAA,CAAA,CAAA;EAAA,CAAA;EAAA,IA0D5BuE,CAAAA;IAtDAlJ,CAAAA,GAAS,kCAAA;IAETmJ,CAAAA,GAAa9E,CAAAA,CAAIE,WAAAA,CAAY4E,SAAAA,GAAY,YAAA;MAAA,OACpCnJ,CAAAA;IAAAA,CAAAA;IAGLoJ,CAAAA,GAAa/E,CAAAA,CAAIE,WAAAA,CAAY6E,SAAAA,GAAY,UAASzE,CAAAA,EAAAA;MAAAA,OAElD3E,CAAAA,GAAAA,KADmB,CAAA,KAAV2E,CAAAA,IAAyB,mBAAA,CAAoB/R,IAAAA,CAAK+R,CAAAA,CAAAA,GAClDA,CAAAA,CAAM0E,WAAAA,CAAAA,CAAAA,GAENrJ,CAAAA,CACNvb,KAAAA,CAAM,EAAA,CAAA,CACNqK,GAAAA,CAAI,YAAA;QAAA,OACI,kBAAA,CAAmBmF,MAAAA,CAAOvY,IAAAA,CAAKgG,KAAAA,CAAsB,EAAA,GAAhBhG,IAAAA,CAAKgmB,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,CAElD3C,IAAAA,CAAK,EAAA,CAAA,EAGgB,IAAA,KAAtB+E,CAAAA,KACFE,EAAAA,GAAa,IAAIpE,CAAAA,CACfkE,CAAAA,CAAkBG,eAAAA,EAClBH,CAAAA,CAAkBhE,YAAAA,EAClBgE,CAAAA,CAAkB/D,aAAAA,EAClBC,CAAAA,CAAAA,CAAAA,EAGGA,CAAAA;IAAAA,CAAAA;EAWTqE,CAAAA,CAAI+E,SAAAA,GAAY,UAASzE,CAAAA,EAAAA;IAAAA,OACvByE,CAAAA,CAAUzE,CAAAA,CAAAA,EACHxU,IAAAA;EAAAA,CAAAA,EAWTkU,CAAAA,CAAI8E,SAAAA,GAAY,YAAA;IAAA,OACPA,CAAAA,CAAAA,CAAAA;EAAAA,CAAAA;EAAAA,IAKLG,CAAAA,GAAwBjF,CAAAA,CAAIE,WAAAA,CAAY+E,oBAAAA,GAAuB,UACjEC,CAAAA,EAAAA;MAAAA,IAGIC,CAAAA,GAAWD,CAAAA,CAASE,iBAAAA,CAAAA,CAAAA;QACtBC,CAAAA,GAASF,CAAAA,GAAW,CAAA,GAAI,GAAA,GAAM,GAAA;QAC9BG,CAAAA,GAASjuB,IAAAA,CAAKgG,KAAAA,CAAMhG,IAAAA,CAAKwoB,GAAAA,CAAIsF,CAAAA,GAAW,EAAA,CAAA,CAAA;QACxCI,CAAAA,GAAQluB,IAAAA,CAAKwoB,GAAAA,CAAIsF,CAAAA,GAAW,EAAA,CAAA;QAC5BK,CAAAA,GAAiB,CAACH,CAAAA,EAAQI,CAAAA,CAAMH,CAAAA,CAAAA,EAAS,GAAA,EAAKG,CAAAA,CAAMF,CAAAA,CAAAA,EAAQ,GAAA,CAAA,CAAK7K,IAAAA,CAAK,EAAA,CAAA;MAAA,OAE/D,CACP,IAAA,EACAwK,CAAAA,CAAS1d,WAAAA,CAAAA,CAAAA,EACTie,CAAAA,CAAMP,CAAAA,CAASzd,QAAAA,CAAAA,CAAAA,GAAa,CAAA,CAAA,EAC5Bge,CAAAA,CAAMP,CAAAA,CAASxd,OAAAA,CAAAA,CAAAA,CAAAA,EACf+d,CAAAA,CAAMP,CAAAA,CAASvd,QAAAA,CAAAA,CAAAA,CAAAA,EACf8d,CAAAA,CAAMP,CAAAA,CAAStd,UAAAA,CAAAA,CAAAA,CAAAA,EACf6d,CAAAA,CAAMP,CAAAA,CAASrd,UAAAA,CAAAA,CAAAA,CAAAA,EACf2d,CAAAA,CAAAA,CACA9K,IAAAA,CAAK,EAAA,CAAA;IAAA,CAAA;IAILgL,CAAAA,GAAwB1F,CAAAA,CAAIE,WAAAA,CAAYwF,oBAAAA,GAAuB,UACjEC,CAAAA,EAAAA;MAAAA,IAEIC,CAAAA,GAAO3M,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EAAI,EAAA,CAAA;QAC1CgW,CAAAA,GAAQ5M,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EAAI,EAAA,CAAA,GAAM,CAAA;QACjDiW,CAAAA,GAAO7M,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EAAI,EAAA,CAAA;QAC1CkW,CAAAA,GAAO9M,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,EAAA,EAAI,CAAA,CAAA,EAAI,EAAA,CAAA;QAC3CmW,CAAAA,GAAU/M,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,EAAA,EAAI,CAAA,CAAA,EAAI,EAAA,CAAA;QAC9CoW,CAAAA,GAAUhN,QAAAA,CAAS0M,CAAAA,CAAY9V,MAAAA,CAAO,EAAA,EAAI,CAAA,CAAA,EAAI,EAAA,CAAA;MAAA,OAI9B,IAAI9M,IAAAA,CAAK6iB,CAAAA,EAAMC,CAAAA,EAAOC,CAAAA,EAAMC,CAAAA,EAAMC,CAAAA,EAASC,CAAAA,EAAS,CAAA,CAAA;IAAA,CAAA;IAItEC,CAAAA,GAAmBlG,CAAAA,CAAIE,WAAAA,CAAYgG,eAAAA,GAAkB,UAASJ,CAAAA,EAAAA;MAAAA,IAC5DK,CAAAA;MAAAA,IAAAA,KAEgB,CAAA,KAATL,CAAAA,KACTA,CAAAA,GAAO,IAAI/iB,IAAAA,CAAAA,CAAAA,CAAAA,EAGT+iB,CAAAA,YAAgB/iB,IAAAA,EAClBojB,CAAAA,GAAwBlB,CAAAA,CAAqBa,CAAAA,CAAAA,CAAAA,KACxC;QAAA,IAAA,CAPoB,iMAAA,CAOKvX,IAAAA,CAAKuX,CAAAA,CAAAA,EAAAA,MAG7B,IAAItc,KAAAA,CAAM,kDAAA,CAAA;QAFhB2c,CAAAA,GAAwBL,CAAAA;MAAAA;MAAAA,OAI1BjB,CAAAA,GAAesB,CAAAA;IAAAA,CAAAA;IAIbC,CAAAA,GAAmBpG,CAAAA,CAAIE,WAAAA,CAAYkG,eAAAA,GAAkB,UAASxzB,CAAAA,EAAAA;MAAAA,IAC5D0c,CAAAA,GAASuV,CAAAA;MAAAA,OACA,QAAA,KAATjyB,CAAAA,KACF0c,CAAAA,GAASoW,CAAAA,CAAqBb,CAAAA,CAAAA,CAAAA,EAEzBvV,CAAAA;IAAAA,CAAAA;EAWT0Q,CAAAA,CAAIkG,eAAAA,GAAkB,UAASJ,CAAAA,EAAAA;IAAAA,OAC7BI,CAAAA,CAAgBJ,CAAAA,CAAAA,EACTha,IAAAA;EAAAA,CAAAA,EAWTkU,CAAAA,CAAIoG,eAAAA,GAAkB,UAASxzB,CAAAA,EAAAA;IAAAA,OACtBwzB,CAAAA,CAAgBxzB,CAAAA,CAAAA;EAAAA,CAAAA;EAAAA,IAmBrByzB,CAAAA;IAhBAZ,CAAAA,GAASzF,CAAAA,CAAIE,WAAAA,CAAYuF,KAAAA,GAAQ,UAAStB,CAAAA,EAAAA;MAAAA,OAAAA,CACpC,GAAA,GAAMlL,QAAAA,CAASkL,CAAAA,CAAAA,EAAS7qB,KAAAA,CAAAA,CAAO,CAAA,CAAA;IAAA,CAAA;IAGrCgtB,EAAAA,GAAYtG,CAAAA,CAAIE,WAAAA,CAAYoG,QAAAA,GAAW,UAASC,CAAAA,EAAAA;MAAAA,OAAAA,CAE1C,IAAA,IADRA,CAAAA,GAAYA,CAAAA,CAAUxmB,QAAAA,CAAAA,CAAAA,CAAAA,EACI8P,MAAAA,CAAO0W,CAAAA,CAAUtxB,MAAAA,CAAAA;IAAAA,CAAAA;IAGzCgpB,EAAAA,GAAe,CAAA;IACfuI,EAAAA,GAAU,EAAA;IACVC,EAAAA,GAAU,EAAA;IACVC,EAAAA,GAAgB,CAAA;IAChBC,EAAAA,GAAoB,EAAA;IAEpBC,EAAAA,GAAQ,EAAA;IAERC,EAAAA,GAAAA,CAAuB,CAAA;IACvBC,EAAAA,GAAoBL,EAAAA;IAEpBM,EAAAA,GAAgB,SAAA,CAAA,EAAA;MAElB9I,EAAAA,GAAe,CAAA,EACfyI,EAAAA,GAAgB,CAAA,EAChBD,EAAAA,GAAU,EAAA,EACVD,EAAAA,GAAU,EAAA,EACVG,EAAAA,GAAoB,EAAA,EAEpBK,EAAAA,GAAsBC,EAAAA,CAAAA,CAAAA,EACtBC,EAAAA,GAA0BD,EAAAA,CAAAA,CAAAA;IAAAA,CAAAA;EAG5BjH,CAAAA,CAAIE,WAAAA,CAAYiH,0BAAAA,GAA6B,UAASC,CAAAA,EAAAA;IACpDP,EAAAA,GAAAA,CAAuB,CAAA,EACvBC,EAAAA,GAAoBM,CAAAA;EAAAA,CAAAA;EAAAA,IAElBC,EAAAA,GAAuB,SAAA,CAASD,CAAAA,EAAAA;IAC7BP,EAAAA,KACHC,EAAAA,GAAoBM,CAAAA,CAAAA;EAAAA,CAAAA;EAIxBpH,CAAAA,CAAIE,WAAAA,CAAYoH,4BAAAA,GAA+B,YAAA;IAC7CT,EAAAA,GAAAA,CAAuB,CAAA,EACvBC,EAAAA,GAAoBL,EAAAA;EAAAA,CAAAA;EAAAA,IAGlB7rB,EAAAA,GAAOolB,CAAAA,CAAIE,WAAAA,CAAYtlB,GAAAA,GAAM,UAAS2sB,CAAAA,EAAAA;MAAAA,OACxCA,CAAAA,GAASA,CAAAA,CAAOxnB,QAAAA,CAAAA,CAAAA,EAChB2mB,EAAAA,IAAiBa,CAAAA,CAAOtyB,MAAAA,GAAS,CAAA,EACjC6xB,EAAAA,CAAkB1tB,IAAAA,CAAKmuB,CAAAA,CAAAA,EAEhBT,EAAAA;IAAAA,CAAAA;IAGLU,EAAAA,GAASxH,CAAAA,CAAIE,WAAAA,CAAYsH,KAAAA,GAAQ,UAASlH,CAAAA,EAAAA;MAAAA,OACrC1lB,EAAAA,CACgB,CAAA,KAArB2K,SAAAA,CAAUtQ,MAAAA,GACNqrB,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,GACN8F,KAAAA,CAAM9T,SAAAA,CAAU2oB,IAAAA,CAAKhY,IAAAA,CAAK6C,SAAAA,EAAW,GAAA,CAAA,CAAA;IAAA,CAAA;IAIzCkiB,EAAAA,GAAkBzH,CAAAA,CAAIE,WAAAA,CAAYuH,cAAAA,GAAiB,UAASt0B,CAAAA,EAAAA;MAAAA,KAAAA,IAC1DwJ,CAAAA,GAAMxJ,CAAAA,CAAK8B,MAAAA,EACbyyB,CAAAA,GAAK,IAAIC,WAAAA,CAAYhrB,CAAAA,CAAAA,EACrBtJ,CAAAA,GAAK,IAAIC,UAAAA,CAAWo0B,CAAAA,CAAAA,EAEf/qB,CAAAA,EAAAA,GAAOtJ,CAAAA,CAAGsJ,CAAAA,CAAAA,GAAOxJ,CAAAA,CAAK8P,UAAAA,CAAWtG,CAAAA,CAAAA;MAAAA,OACjC+qB,CAAAA;IAAAA,CAAAA;IAGLE,EAAAA,GAAgB,CAClB,CAAC,WAAA,EAAa,WAAA,EAAa,QAAA,EAAU,iBAAA,CAAA,EACrC,CAAC,gBAAA,EAAkB,WAAA,EAAa,MAAA,EAAQ,iBAAA,CAAA,EACxC,CAAC,mBAAA,EAAqB,WAAA,EAAa,QAAA,EAAU,iBAAA,CAAA,EAC7C,CAAC,uBAAA,EAAyB,WAAA,EAAa,YAAA,EAAc,iBAAA,CAAA,EACrD,CAAC,SAAA,EAAW,SAAA,EAAW,QAAA,EAAU,iBAAA,CAAA,EACjC,CAAC,cAAA,EAAgB,SAAA,EAAW,MAAA,EAAQ,iBAAA,CAAA,EACpC,CAAC,iBAAA,EAAmB,SAAA,EAAW,QAAA,EAAU,iBAAA,CAAA,EACzC,CAAC,qBAAA,EAAuB,SAAA,EAAW,YAAA,EAAc,iBAAA,CAAA,EACjD,CAAC,aAAA,EAAe,OAAA,EAAS,QAAA,EAAU,iBAAA,CAAA,EACnC,CAAC,YAAA,EAAc,OAAA,EAAS,MAAA,EAAQ,iBAAA,CAAA,EAChC,CAAC,cAAA,EAAgB,OAAA,EAAS,QAAA,EAAU,iBAAA,CAAA,EACpC,CAAC,kBAAA,EAAoB,OAAA,EAAS,YAAA,EAAc,iBAAA,CAAA,EAC5C,CAAC,cAAA,EAAgB,cAAA,EAAgB,QAAA,EAAU,IAAA,CAAA,EAC3C,CAAC,QAAA,EAAU,QAAA,EAAU,QAAA,EAAU,IAAA,CAAA,CAAA;EAGjC5H,CAAAA,CAAIE,WAAAA,CAAY2H,gBAAAA,GAAmB,YAAA;IAAA,OAC1BD,EAAAA;EAAAA,CAAAA;EAAAA,IAGLE,EAAAA,GAAiB/I,CAAAA,CAAQgJ,QAAAA,IAAY,EAAA;EAYzC/H,CAAAA,CAAIE,WAAAA,CAAYoD,WAAAA,GAActD,CAAAA,CAAIsD,WAAAA,GAAc,UAASvhB,CAAAA,EAAAA;IAAAA,OAErD+lB,EAAAA,GADE9E,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,GACLhhB,CAAAA,GAAOqhB,EAAAA,GAEPrhB,CAAAA,EAEZ+J,IAAAA;EAAAA,CAAAA;EAAAA,IAkDLkc,EAAAA;IAtCAzE,EAAAA,GAAevD,CAAAA,CAAIE,WAAAA,CAAYqD,WAAAA,GAAcvD,CAAAA,CAAIuD,WAAAA,GAAc,YAAA;MAAA,OAC7DP,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA,GACfgF,EAAAA,GAEAA,EAAAA,GAAiB1E,EAAAA;IAAAA,CAAAA;IAIxB6E,EAAAA,GAAMlJ,CAAAA,CAAQkJ,GAAAA,IAAAA,CAAO,CAAA;EAYzBjI,CAAAA,CAAIE,WAAAA,CAAYgI,MAAAA,GAASlI,CAAAA,CAAIkI,MAAAA,GAAS,UAAS5H,CAAAA,EAAAA;IAAAA,OAC7C2H,EAAAA,GAAM3H,CAAAA,EACCxU,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIE,WAAAA,CAAYiI,MAAAA,GAASnI,CAAAA,CAAImI,MAAAA,GAAS,YAAA;IAAA,OAC7BF,EAAAA;EAAAA,CAAAA;EAAAA,IAkCLG,EAAAA;IA7BAC,EAAAA,GAAerI,CAAAA,CAAIE,WAAAA,CAAYmI,WAAAA,GAAc,UAASC,CAAAA,EAAAA;MAAAA,IACpDC,CAAAA,GAAiB,CAAA,KACnBC,CAAAA,EACA,IAAA,EACA,WAAA,EACA,YAAA,EACA,UAAA,EACA,UAAA,CAAA;MAAA,IAGE,8BAAA,CAA+Bja,IAAAA,CAAK+Z,CAAAA,CAAAA,EACtCN,EAAAA,GAAWM,CAAAA,CAAAA,KACN,IAAKjP,KAAAA,CAAMiP,CAAAA,CAAAA,EAEX;QAAA,IAAA,CAAsC,CAAA,KAAlCC,CAAAA,CAAetoB,OAAAA,CAAQqoB,CAAAA,CAAAA,EAAAA,MAG1B,IAAI9e,KAAAA,CACR,+GAAA,GACE8e,CAAAA,GACA,sBAAA,CAAA;QALJN,EAAAA,GAAWM,CAAAA;MAAAA,CAAAA,MAFXN,EAAAA,GAAW/O,QAAAA,CAASqP,CAAAA,EAAM,EAAA,CAAA;IAAA,CAAA;EAY9BtI,CAAAA,CAAIE,WAAAA,CAAYuI,WAAAA,GAAc,YAAA;IAAA,OACrBT,EAAAA;EAAAA,CAAAA;EAAAA,IA4BLU,EAAAA;IAxBAC,EAAAA,GAAe3I,CAAAA,CAAIE,WAAAA,CAAYyI,WAAAA,GAAc,UAASC,CAAAA,EAAAA;MAAAA,IAAAA,CAUlB,CAAA,IATjB,CAAA,KACnBJ,CAAAA,EACA,IAAA,EACA,SAAA,EACA,aAAA,EACA,WAAA,EACA,YAAA,CAAA,CAGiBvoB,OAAAA,CAAQ2oB,CAAAA,CAAAA,EAAAA,MACnB,IAAIpf,KAAAA,CACR,4EAAA,GACEof,CAAAA,GACA,sBAAA,CAAA;MAGNR,EAAAA,GAAWQ,CAAAA;IAAAA,CAAAA;EAGb5I,CAAAA,CAAIE,WAAAA,CAAY2I,WAAAA,GAAc,YAAA;IAAA,OACrBT,EAAAA;EAAAA,CAAAA;EAAAA,IAILU,EAAAA,GAAiB9I,CAAAA,CAAIE,WAAAA,CAAY4I,aAAAA,GAAgB,UAASC,CAAAA,EAAAA;IAAAA,IAAAA,CAWnB,CAAA,IAVlB,CAAA,KACrBP,CAAAA,EACA,IAAA,EACA,YAAA,EACA,QAAA,EACA,SAAA,EACA,UAAA,EACA,KAAA,CAAA,CAGmBvoB,OAAAA,CAAQ8oB,CAAAA,CAAAA,EAAAA,MACrB,IAAIvf,KAAAA,CACR,qEAAA,GACEuf,CAAAA,GACA,sBAAA,CAAA;IAGNL,EAAAA,GAAaK,CAAAA;EAAAA,CAAAA;EAGf/I,CAAAA,CAAIE,WAAAA,CAAY8I,aAAAA,GAAgB,YAAA;IAAA,OACvBN,EAAAA;EAAAA,CAAAA,EA4BT1I,CAAAA,CAAIE,WAAAA,CAAY+I,cAAAA,GAAiBjJ,CAAAA,CAAIiJ,cAAAA,GAAiB,UACpDX,CAAAA,EACAS,CAAAA,EACAH,CAAAA,EAAAA;IAAAA,OAEAP,EAAAA,CAAYC,CAAAA,CAAAA,EACZQ,EAAAA,CAAcC,CAAAA,CAAAA,EACdJ,EAAAA,CAAYC,CAAAA,CAAAA,EACL9c,IAAAA;EAAAA,CAAAA;EAAAA,IAGLod,EAAAA,GAAqB;IACvBxa,KAAAA,EAAO,EAAA;IACPya,OAAAA,EAAS,EAAA;IACTC,MAAAA,EAAQ,EAAA;IACRC,QAAAA,EAAU,EAAA;IACVC,OAAAA,EAAS;EAAA,CAAA;EAGXtJ,CAAAA,CAAIE,WAAAA,CAAYqJ,mBAAAA,GAAsB,UAASxO,CAAAA,EAAAA;IAAAA,IAAAA,CACS,CAAA,KAAlD/S,MAAAA,CAAOC,IAAAA,CAAKihB,EAAAA,CAAAA,CAAoBjpB,OAAAA,CAAQ8a,CAAAA,CAAAA,EAAAA,MACpC,IAAIvR,KAAAA,CAAM,sDAAA,CAAA;IAAA,OAEX0f,EAAAA,CAAmBnO,CAAAA,CAAAA;EAAAA,CAAAA,EAG5BiF,CAAAA,CAAIE,WAAAA,CAAYsJ,qBAAAA,GAAwB,YAAA;IAAA,OAC/BN,EAAAA;EAAAA,CAAAA,EAaTlJ,CAAAA,CAAIE,WAAAA,CAAYuJ,qBAAAA,GAAwBzJ,CAAAA,CAAI0J,aAAAA,GAAgB1J,CAAAA,CAAIyJ,qBAAAA,GAAwB,UACtFE,CAAAA,EAAAA;IAAAA,KAGK,IAAIC,CAAAA,IAAYV,EAAAA,EACfA,EAAAA,CAAmB/L,cAAAA,CAAeyM,CAAAA,CAAAA,IAAaD,CAAAA,CAAWC,CAAAA,CAAAA,KAC5DV,EAAAA,CAAmBU,CAAAA,CAAAA,GAAYD,CAAAA,CAAWC,CAAAA,CAAAA,CAAAA;IAAAA,OAGvC9d,IAAAA;EAAAA,CAAAA,EAGTkU,CAAAA,CAAIE,WAAAA,CAAY2J,mBAAAA,GAAsB,UAAS9O,CAAAA,EAAKuF,CAAAA,EAAAA;IAAAA,IAAAA,CACI,CAAA,KAAlDtY,MAAAA,CAAOC,IAAAA,CAAKihB,EAAAA,CAAAA,CAAoBjpB,OAAAA,CAAQ8a,CAAAA,CAAAA,EAAAA,MACpC,IAAIvR,KAAAA,CAAM,uDAAA,CAAA;IAAA,OAEV0f,EAAAA,CAAmBnO,CAAAA,CAAAA,GAAOuF,CAAAA;EAAAA,CAAAA;EAAAA,IAKhCwJ,EAAAA;IAOA1G,EAAAA;IASA2G,EAAAA;IACAC,EAAAA;IACAC,EAAAA;IApBAC,EAAAA,GAAQ,CAAA,CAAA;IACRC,EAAAA,GAAU,CAAA,CAAA;IAEVC,EAAAA,GAAiB,EAAA;IACjBC,EAAAA,GAAW,CAAA,CAAA;IACXC,EAAAA,GAAa,CAAA,CAAA;IACbC,EAAAA,GAAU,CAAA,CAAA;IACVC,EAAAA,GAAa,CAAA,CAAA;IACbC,EAAAA,GAAe,IAAA;IAEfC,EAAAA,GAAO,CAAA;IACPC,EAAAA,GAAe,EAAA;IACfC,EAAAA,GAAS,IAAIhO,CAAAA,CAAOoD,CAAAA,CAAAA;IACpB6K,EAAAA,GAAW9L,CAAAA,CAAQ8L,QAAAA,IAAY,EAAA;IAE/BC,EAAAA,GAAgB,CAAA,CAAA;IAChBC,EAAAA,GAAkB,CAAA,CAAA;IAClBC,EAAAA,GAAoB,EAAA;IAsBpB7H,EAAAA,GAAS,SAATA,CAAAA,CAAkB8H,CAAAA,EAAIC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAAA;MAAAA,IAAAA,EACpCxf,IAAAA,YAAgBqX,CAAAA,CAAAA,EAAAA,OACb,IAAIA,CAAAA,CAAO8H,CAAAA,EAAIC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,CAAAA;MAGtCjS,KAAAA,CAAM4R,CAAAA,CAAAA,KAAKA,CAAAA,GAAK,CAAA,CAAA,EAChB5R,KAAAA,CAAM6R,CAAAA,CAAAA,KAAMA,CAAAA,GAAM,CAAA,CAAA,EAClB7R,KAAAA,CAAM8R,CAAAA,CAAAA,KAAMA,CAAAA,GAAM,CAAA,CAAA,EAClB9R,KAAAA,CAAM+R,CAAAA,CAAAA,KAAKA,CAAAA,GAAK,CAAA,CAAA,EAChB/R,KAAAA,CAAMgS,CAAAA,CAAAA,KAAKA,CAAAA,GAAK,CAAA,CAAA,EAChBhS,KAAAA,CAAMiS,CAAAA,CAAAA,KAAKA,CAAAA,GAAK,CAAA,CAAA,EAAA,IAAA,CAEfC,OAAAA,GAAU,CAACN,CAAAA,EAAIC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,CAAAA;IAAAA,CAAAA;EAOxCtjB,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,IAAA,EAAM;IAC5C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,KAAA,EAAO;IAC7C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,KAAA,EAAO;IAC7C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,IAAA,EAAM;IAC5C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,IAAA,EAAM;IAC5C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,IAAA,EAAM;IAC5C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAItBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,GAAA,EAAK;IAC3C05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKyf,OAAAA,CAAQ,CAAA,CAAA;IAAA,CAAA;IAEtB90B,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACPiL,OAAAA,CAAQ,CAAA,CAAA,GAAKjL,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQtBtY,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,UAAA,EAAY;IAClD05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIp0B,IAAAA,CAAKq0B,KAAAA,CAAM5f,IAAAA,CAAKqf,GAAAA,EAAKrf,IAAAA,CAAKmf,EAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQrCjjB,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,QAAA,EAAU;IAChD05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAK6f,SAAAA,CAAAA,CAAAA,CAAYlH,KAAAA,CAAMwG,EAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQlCjjB,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,QAAA,EAAU;IAChD05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAK6f,SAAAA,CAAAA,CAAAA,CAAYlH,KAAAA,CAAM2G,EAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAQlCpjB,MAAAA,CAAOwjB,cAAAA,CAAerI,EAAAA,CAAOpxB,SAAAA,EAAW,YAAA,EAAc;IACpD05B,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACa,CAAA,KAAZ3f,IAAAA,CAAKmf,EAAAA,IAGQ,CAAA,KAAbnf,IAAAA,CAAKof,GAAAA,IAGQ,CAAA,KAAbpf,IAAAA,CAAKqf,GAAAA,IAGO,CAAA,KAAZrf,IAAAA,CAAKsf,EAAAA,IAGO,CAAA,KAAZtf,IAAAA,CAAKuf,EAAAA,IAGO,CAAA,KAAZvf,IAAAA,CAAKwf,EAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAebnI,EAAAA,CAAOpxB,SAAAA,CAAU2oB,IAAAA,GAAO,UAASkR,CAAAA,EAAAA;IAAAA,OACxB,CAAC9f,IAAAA,CAAKmf,EAAAA,EAAInf,IAAAA,CAAKof,GAAAA,EAAKpf,IAAAA,CAAKqf,GAAAA,EAAKrf,IAAAA,CAAKsf,EAAAA,EAAItf,IAAAA,CAAKuf,EAAAA,EAAIvf,IAAAA,CAAKwf,EAAAA,CAAAA,CACzD7gB,GAAAA,CAAIsZ,CAAAA,CAAAA,CACJrJ,IAAAA,CAAKkR,CAAAA,CAAAA;EAAAA,CAAAA,EAWVzI,EAAAA,CAAOpxB,SAAAA,CAAU85B,QAAAA,GAAW,UAASzN,CAAAA,EAAAA;IAAAA,IAC/B6M,CAAAA,GAAK7M,CAAAA,CAAO6M,EAAAA,GAAKnf,IAAAA,CAAKmf,EAAAA,GAAK7M,CAAAA,CAAO8M,GAAAA,GAAMpf,IAAAA,CAAKqf,GAAAA;MAC7CD,CAAAA,GAAM9M,CAAAA,CAAO6M,EAAAA,GAAKnf,IAAAA,CAAKof,GAAAA,GAAM9M,CAAAA,CAAO8M,GAAAA,GAAMpf,IAAAA,CAAKsf,EAAAA;MAC/CD,CAAAA,GAAM/M,CAAAA,CAAO+M,GAAAA,GAAMrf,IAAAA,CAAKmf,EAAAA,GAAK7M,CAAAA,CAAOgN,EAAAA,GAAKtf,IAAAA,CAAKqf,GAAAA;MAC9CC,CAAAA,GAAKhN,CAAAA,CAAO+M,GAAAA,GAAMrf,IAAAA,CAAKof,GAAAA,GAAM9M,CAAAA,CAAOgN,EAAAA,GAAKtf,IAAAA,CAAKsf,EAAAA;MAC9CC,CAAAA,GAAKjN,CAAAA,CAAOiN,EAAAA,GAAKvf,IAAAA,CAAKmf,EAAAA,GAAK7M,CAAAA,CAAOkN,EAAAA,GAAKxf,IAAAA,CAAKqf,GAAAA,GAAMrf,IAAAA,CAAKuf,EAAAA;MACvDC,CAAAA,GAAKlN,CAAAA,CAAOiN,EAAAA,GAAKvf,IAAAA,CAAKof,GAAAA,GAAM9M,CAAAA,CAAOkN,EAAAA,GAAKxf,IAAAA,CAAKsf,EAAAA,GAAKtf,IAAAA,CAAKwf,EAAAA;IAAAA,OAEpD,IAAInI,EAAAA,CAAO8H,CAAAA,EAAIC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,CAAAA;EAAAA,CAAAA,EAO1CnI,EAAAA,CAAOpxB,SAAAA,CAAU45B,SAAAA,GAAY,YAAA;IAAA,IACvB11B,CAAAA,GAAI6V,IAAAA,CAAKmf,EAAAA;MACTh3B,CAAAA,GAAI6X,IAAAA,CAAKof,GAAAA;MACT/4B,CAAAA,GAAI2Z,IAAAA,CAAKqf,GAAAA;MACTh1B,CAAAA,GAAI2V,IAAAA,CAAKsf,EAAAA;MACTp4B,CAAAA,GAAI8Y,IAAAA,CAAKuf,EAAAA;MACT9zB,CAAAA,GAAIuU,IAAAA,CAAKwf,EAAAA;MAETQ,CAAAA,GAASz0B,IAAAA,CAAK00B,IAAAA,CAAK91B,CAAAA,GAAIA,CAAAA,GAAIhC,CAAAA,GAAIA,CAAAA,CAAAA;MAI/B+3B,CAAAA,GAAAA,CAHJ/1B,CAAAA,IAAK61B,CAAAA,IAGW35B,CAAAA,GAAAA,CAFhB8B,CAAAA,IAAK63B,CAAAA,IAEmB31B,CAAAA;IACxBhE,CAAAA,IAAK8D,CAAAA,GAAI+1B,CAAAA,EACT71B,CAAAA,IAAKlC,CAAAA,GAAI+3B,CAAAA;IAAAA,IAELC,CAAAA,GAAS50B,IAAAA,CAAK00B,IAAAA,CAAK55B,CAAAA,GAAIA,CAAAA,GAAIgE,CAAAA,GAAIA,CAAAA,CAAAA;IAAAA,OAGnC61B,CAAAA,IAASC,CAAAA,EAELh2B,CAAAA,IAHJE,CAAAA,IAAK81B,CAAAA,CAAAA,GAGOh4B,CAAAA,IAJZ9B,CAAAA,IAAK85B,CAAAA,CAAAA,KAKHh2B,CAAAA,GAAAA,CAAKA,CAAAA,EACLhC,CAAAA,GAAAA,CAAKA,CAAAA,EACL+3B,CAAAA,GAAAA,CAASA,CAAAA,EACTF,CAAAA,GAAAA,CAAUA,CAAAA,CAAAA,EAGL;MACLrH,KAAAA,EAAO,IAAItB,EAAAA,CAAO2I,CAAAA,EAAQ,CAAA,EAAG,CAAA,EAAGG,CAAAA,EAAQ,CAAA,EAAG,CAAA,CAAA;MAC3CC,SAAAA,EAAW,IAAI/I,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAGnwB,CAAAA,EAAGuE,CAAAA,CAAAA;MACrC40B,MAAAA,EAAQ,IAAIhJ,EAAAA,CAAOltB,CAAAA,EAAGhC,CAAAA,EAAAA,CAAIA,CAAAA,EAAGgC,CAAAA,EAAG,CAAA,EAAG,CAAA,CAAA;MACnCm2B,IAAAA,EAAM,IAAIjJ,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG6I,CAAAA,EAAO,CAAA,EAAG,CAAA,EAAG,CAAA;IAAA,CAAA;EAAA,CAAA,EAQxC7I,EAAAA,CAAOpxB,SAAAA,CAAUgO,QAAAA,GAAW,UAASqkB,CAAAA,EAAAA;IAAAA,OAC5BtY,IAAAA,CAAK4O,IAAAA,CAAK,GAAA,CAAA;EAAA,CAAA,EAOnByI,EAAAA,CAAOpxB,SAAAA,CAAUs6B,QAAAA,GAAW,YAAA;IAAA,IACtBp2B,CAAAA,GAAI6V,IAAAA,CAAKmf,EAAAA;MACXh3B,CAAAA,GAAI6X,IAAAA,CAAKof,GAAAA;MACT/4B,CAAAA,GAAI2Z,IAAAA,CAAKqf,GAAAA;MACTh1B,CAAAA,GAAI2V,IAAAA,CAAKsf,EAAAA;MACTp4B,CAAAA,GAAI8Y,IAAAA,CAAKuf,EAAAA;MACT9zB,CAAAA,GAAIuU,IAAAA,CAAKwf,EAAAA;MAEPgB,CAAAA,GAAO,CAAA,IAAKr2B,CAAAA,GAAIE,CAAAA,GAAIlC,CAAAA,GAAI9B,CAAAA,CAAAA;MAExBo6B,CAAAA,GAAOp2B,CAAAA,GAAIm2B,CAAAA;MACXE,CAAAA,GAAAA,CAAQv4B,CAAAA,GAAIq4B,CAAAA;MACZG,CAAAA,GAAAA,CAAQt6B,CAAAA,GAAIm6B,CAAAA;MACZI,CAAAA,GAAOz2B,CAAAA,GAAIq2B,CAAAA;IAAAA,OAIR,IAAInJ,EAAAA,CAAOoJ,CAAAA,EAAMC,CAAAA,EAAMC,CAAAA,EAAMC,CAAAA,EAAAA,CAHxBH,CAAAA,GAAOv5B,CAAAA,GAAIy5B,CAAAA,GAAOl1B,CAAAA,EAAAA,CAClBi1B,CAAAA,GAAOx5B,CAAAA,GAAI05B,CAAAA,GAAOn1B,CAAAA,CAAAA;EAAAA,CAAAA,EAShC4rB,EAAAA,CAAOpxB,SAAAA,CAAU46B,YAAAA,GAAe,UAASC,CAAAA,EAAAA;IAAAA,IACnCh4B,CAAAA,GAAIg4B,CAAAA,CAAGh4B,CAAAA,GAAIkX,IAAAA,CAAKmf,EAAAA,GAAK2B,CAAAA,CAAGrlB,CAAAA,GAAIuE,IAAAA,CAAKqf,GAAAA,GAAMrf,IAAAA,CAAKuf,EAAAA;MAC5C9jB,CAAAA,GAAIqlB,CAAAA,CAAGh4B,CAAAA,GAAIkX,IAAAA,CAAKof,GAAAA,GAAM0B,CAAAA,CAAGrlB,CAAAA,GAAIuE,IAAAA,CAAKsf,EAAAA,GAAKtf,IAAAA,CAAKwf,EAAAA;IAAAA,OACzC,IAAIuB,EAAAA,CAAMj4B,CAAAA,EAAG2S,CAAAA,CAAAA;EAAAA,CAAAA,EAOtB4b,EAAAA,CAAOpxB,SAAAA,CAAU+6B,gBAAAA,GAAmB,UAASC,CAAAA,EAAAA;IAAAA,IACvCC,CAAAA,GAAMlhB,IAAAA,CAAK6gB,YAAAA,CAAaI,CAAAA,CAAAA;MACxBE,CAAAA,GAAMnhB,IAAAA,CAAK6gB,YAAAA,CAAa,IAAIE,EAAAA,CAAME,CAAAA,CAAKn4B,CAAAA,GAAIm4B,CAAAA,CAAKl6B,CAAAA,EAAGk6B,CAAAA,CAAKxlB,CAAAA,GAAIwlB,CAAAA,CAAKG,CAAAA,CAAAA,CAAAA;IAAAA,OAC9D,IAAIC,EAAAA,CAAUH,CAAAA,CAAIp4B,CAAAA,EAAGo4B,CAAAA,CAAIzlB,CAAAA,EAAG0lB,CAAAA,CAAIr4B,CAAAA,GAAIo4B,CAAAA,CAAIp4B,CAAAA,EAAGq4B,CAAAA,CAAI1lB,CAAAA,GAAIylB,CAAAA,CAAIzlB,CAAAA,CAAAA;EAAAA,CAAAA,EAWhE4b,EAAAA,CAAOpxB,SAAAA,CAAUq7B,KAAAA,GAAQ,YAAA;IAAA,IACnBnC,CAAAA,GAAKnf,IAAAA,CAAKmf,EAAAA;MACVC,CAAAA,GAAMpf,IAAAA,CAAKof,GAAAA;MACXC,CAAAA,GAAMrf,IAAAA,CAAKqf,GAAAA;MACXC,CAAAA,GAAKtf,IAAAA,CAAKsf,EAAAA;MACVC,CAAAA,GAAKvf,IAAAA,CAAKuf,EAAAA;MACVC,CAAAA,GAAKxf,IAAAA,CAAKwf,EAAAA;IAAAA,OAEP,IAAInI,EAAAA,CAAO8H,CAAAA,EAAIC,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,CAAAA;EAAAA,CAAAA,EAG1CtL,CAAAA,CAAImD,MAAAA,GAASA,EAAAA;EAAAA,IASTkK,EAAAA,GAAcrN,CAAAA,CAAIqN,UAAAA,GAAa,UAASC,CAAAA,EAAIC,CAAAA,EAAAA;MAAAA,OACvCA,CAAAA,CAAG1B,QAAAA,CAASyB,CAAAA,CAAAA;IAAAA,CAAAA;IASjBE,EAAAA,GAAiB,IAAIrK,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA;EAC/CnD,CAAAA,CAAIyN,UAAAA,GAAazN,CAAAA,CAAIwN,cAAAA,GAAiBA,EAAAA;EAAAA,IAOlCE,EAAAA,GAAa,SAAA,CAAS3S,CAAAA,EAAK4S,CAAAA,EAAAA;IAAAA,IAAAA,CAEzBrD,EAAAA,CAAWvP,CAAAA,CAAAA,EAAAA;MAAAA,IAGX6S,CAAAA,GAAAA,CADSD,CAAAA,YAAmBtP,CAAAA,GAAiB,IAAA,GAAO,GAAA,IAAA,CAC7BrW,MAAAA,CAAOC,IAAAA,CAAKoiB,EAAAA,CAAAA,CAAUp1B,MAAAA,GAAS,CAAA,EAAG8K,QAAAA,CAAS,EAAA,CAAA;MACtE4tB,CAAAA,CAAQv7B,EAAAA,GAAKw7B,CAAAA,EAEbtD,EAAAA,CAAWvP,CAAAA,CAAAA,GAAO6S,CAAAA,EAClBvD,EAAAA,CAASuD,CAAAA,CAAAA,GAAcD,CAAAA,EAEvB/C,EAAAA,CAAOrN,OAAAA,CAAQ,YAAA,EAAcoQ,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA;EAmB/B3N,CAAAA,CAAI3B,cAAAA,GAAiBA,CAAAA,EAgBrB2B,CAAAA,CAAIxB,aAAAA,GAAgBA,CAAAA,EAWpBwB,CAAAA,CAAI6N,iBAAAA,GAAoB,UAAS9S,CAAAA,EAAK4S,CAAAA,EAAAA;IAAAA,OACpC3J,CAAAA,CAAoB,qBAAA,CAAA,EAEpB0J,EAAAA,CAAW3S,CAAAA,EAAK4S,CAAAA,CAAAA,EACT7hB,IAAAA;EAAAA,CAAAA,EAUTkU,CAAAA,CAAI8N,kBAAAA,GAAqB,UAASH,CAAAA,EAAAA;IAChC3J,CAAAA,CAAoB,sBAAA,CAAA,EAEpB+J,EAAAA,CACEJ,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,EACpBkP,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,EACpBkP,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,GAAKkP,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,EAC7CkP,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,GAAKkP,CAAAA,CAAQlP,WAAAA,CAAY,CAAA,CAAA,EAC7CkP,CAAAA,CAAQvP,MAAAA,CAAAA;EAAAA,CAAAA,EAcZ4B,CAAAA,CAAIgO,gBAAAA,GAAmB,UAASjT,CAAAA,EAAK4S,CAAAA,EAAAA;IACnC3J,CAAAA,CAAoB,oBAAA,CAAA,EAGpB2J,CAAAA,CAAQ/O,MAAAA,GAASgI,EAAAA,CAAMP,CAAAA,CAAAA,CAAa3L,IAAAA,CAAK,IAAA,CAAA,EAEzCgT,EAAAA,CAAW3S,CAAAA,EAAK4S,CAAAA,CAAAA,EAEhB/C,EAAAA,CAAOrN,OAAAA,CAAQ,kBAAA,EAAoBoQ,CAAAA,CAAAA,EAGnC3C,EAAAA,CAAkBiD,GAAAA,CAAAA,CAAAA,CAAMC,OAAAA,CAAAA,CAAAA;EAAAA,CAAAA;EAAAA,IAGtBC,EAAAA,GAAanO,CAAAA,CAAIE,WAAAA,CAAYiO,SAAAA,GAAY,YAAA;MAAA,IACvCC,CAAAA,GAAMnH,EAAAA,CAAAA,CAAAA;MAAAA,OACVoH,EAAAA,CAAuBD,CAAAA,EAAAA,CAAK,CAAA,CAAA,EACrBA,CAAAA;IAAAA,CAAAA;IAILnH,EAAAA,GAAqBjH,CAAAA,CAAIE,WAAAA,CAAY+G,iBAAAA,GAAoB,YAAA;MAAA,OAC3DhJ,EAAAA,EAAAA,EACAuI,EAAAA,CAAQvI,EAAAA,CAAAA,GAAgB,YAAA;QAAA,OACfyI,EAAAA;MAAAA,CAAAA,EAEFzI,EAAAA;IAAAA,CAAAA;IAGLoQ,EAAAA,GAAyB,SAAA,CAASD,CAAAA,EAAKE,CAAAA,EAAAA;MAAAA,OACzCA,CAAAA,GAA+B,SAAA,IAAA,OAAbA,CAAAA,IAAyBA,CAAAA,EAC3C9H,EAAAA,CAAQ4H,CAAAA,CAAAA,GAAO1H,EAAAA,EACX4H,CAAAA,IACF1zB,EAAAA,CAAIwzB,CAAAA,GAAM,QAAA,CAAA,EAELA,CAAAA;IAAAA,CAAAA;IAMLG,EAAAA,GAAuBvO,CAAAA,CAAIE,WAAAA,CAAYqO,mBAAAA,GAAsB,YAAA;MAAA,IAE3DC,CAAAA,GAAM;QACRC,KAAAA,EAFUxH,EAAAA,CAAAA,CAAAA;QAGVR,OAAAA,EAAS;MAAA,CAAA;MAAA,OAEXE,EAAAA,CAAkBvtB,IAAAA,CAAKo1B,CAAAA,CAAAA,EAChBA,CAAAA;IAAAA,CAAAA;IAGLxH,EAAAA,GAAsBC,EAAAA,CAAAA,CAAAA;IACtBC,EAAAA,GAA0BD,EAAAA,CAAAA,CAAAA;IAM1ByH,EAAAA,GAAqB1O,CAAAA,CAAIE,WAAAA,CAAYwO,iBAAAA,GAAoB,UAASC,CAAAA,EAAAA;MAAAA,IAChEC,CAAAA,GAAeD,CAAAA,CAAMvuB,KAAAA,CAAM,GAAA,CAAA;MAAA,IAEL,CAAA,KAAxBwuB,CAAAA,CAAa35B,MAAAA,IACQ,GAAA,KAApB25B,CAAAA,CAAa,CAAA,CAAA,IAAkC,GAAA,KAApBA,CAAAA,CAAa,CAAA,CAAA,EAAA;QAKpC,IACmB,CAAA,KAAxBA,CAAAA,CAAa35B,MAAAA,KACQ,GAAA,KAApB25B,CAAAA,CAAa,CAAA,CAAA,IAAkC,GAAA,KAApBA,CAAAA,CAAa,CAAA,CAAA,CAAA,EACzC;UAMAA,CAAAA,GAAe,CAAA,CAJJ,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,KAAO,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,CAAA,EAAA,CAC3C,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,KAAO,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,CAAA,EAAA,CAC9C,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,KAAO,CAAA,GAAMA,CAAAA,CAAa,CAAA,CAAA,CAAA,EAEvB,GAAA,CAAA;QAAA;MAAA,CAAA,MAblC;QAAA,IAEIC,CAAAA,GAAWC,UAAAA,CAAWF,CAAAA,CAAa,CAAA,CAAA,CAAA;QACvCA,CAAAA,GAAe,CAACC,CAAAA,EAAUA,CAAAA,EAAUA,CAAAA,EAAU,GAAA,CAAA;MAAA;MAAA,KAAA,IAY5CE,CAAAA,GAAa,GAAA,EACR76B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI,CAAA,EAAGA,CAAAA,EAAAA,EACrB66B,CAAAA,IAAAA,CACE,GAAA,GAAM13B,IAAAA,CAAKgG,KAAAA,CAAoC,GAAA,GAA9ByxB,UAAAA,CAAWF,CAAAA,CAAa16B,CAAAA,CAAAA,CAAAA,CAAAA,CAAW6L,QAAAA,CAAS,EAAA,CAAA,EAC7DzG,KAAAA,CAAAA,CAAO,CAAA,CAAA;MAAA,OAEJy1B,CAAAA;IAAAA,CAAAA;IAGLC,EAAAA,GAAqBhP,CAAAA,CAAIE,WAAAA,CAAY8O,iBAAAA,GAAoB,UAC3DjQ,CAAAA,EAAAA;MAAAA,IAEI4P,CAAAA;MAEmB,QAAA,IAAA,OAAZ5P,CAAAA,KACTA,CAAAA,GAAU;QACRkQ,GAAAA,EAAKlQ;MAAAA,CAAAA,CAAAA;MAAAA,IAGLkQ,CAAAA,GAAMlQ,CAAAA,CAAQkQ,GAAAA;QACdh9B,CAAAA,GAAM8sB,CAAAA,CAAQ9sB,GAAAA;QACdi9B,CAAAA,GAAMnQ,CAAAA,CAAQmQ,GAAAA;QACdC,CAAAA,GAAMpQ,CAAAA,CAAQoQ,GAAAA;QACdC,CAAAA,GACuB,MAAA,KAAzBrQ,CAAAA,CAAQsQ,YAAAA,GAA0B,CAAC,GAAA,EAAK,IAAA,EAAM,GAAA,CAAA,GAAO,CAAC,GAAA,EAAK,IAAA,EAAM,GAAA,CAAA;MAAA,IAEhD,QAAA,IAAA,OAARJ,CAAAA,IAAsC,GAAA,KAAlBA,CAAAA,CAAIrf,MAAAA,CAAO,CAAA,CAAA,EAAY;QAAA,IAChD0f,CAAAA,GAAW,IAAI9f,CAAAA,CAASyf,CAAAA,CAAAA;QAAAA,IACxBK,CAAAA,CAAS3f,EAAAA,EACXsf,CAAAA,GAAMK,CAAAA,CAAS/V,KAAAA,CAAAA,CAAAA,CAAAA,KACV,IAAA,CAAK,aAAA,CAAchL,IAAAA,CAAK0gB,CAAAA,CAAAA,EAAAA,MACvB,IAAIzlB,KAAAA,CACR,iBAAA,GAAoBylB,CAAAA,GAAM,sCAAA,CAAA;MAAA;MAAA,IAKb,QAAA,IAAA,OAARA,CAAAA,IAAoB,mBAAA,CAAoB1gB,IAAAA,CAAK0gB,CAAAA,CAAAA,KACtDA,CAAAA,GAAM,GAAA,GAAMA,CAAAA,CAAI,CAAA,CAAA,GAAKA,CAAAA,CAAI,CAAA,CAAA,GAAKA,CAAAA,CAAI,CAAA,CAAA,GAAKA,CAAAA,CAAI,CAAA,CAAA,GAAKA,CAAAA,CAAI,CAAA,CAAA,GAAKA,CAAAA,CAAI,CAAA,CAAA,CAAA,EAG5C,QAAA,IAAA,OAARA,CAAAA,IAAoB,mBAAA,CAAoB1gB,IAAAA,CAAK0gB,CAAAA,CAAAA,EAAM;QAAA,IACxDrU,CAAAA,GAAM3B,QAAAA,CAASgW,CAAAA,CAAIpf,MAAAA,CAAO,CAAA,CAAA,EAAI,EAAA,CAAA;QAClCof,CAAAA,GAAOrU,CAAAA,IAAO,EAAA,GAAM,GAAA,EACpB3oB,CAAAA,GAAO2oB,CAAAA,IAAO,CAAA,GAAK,GAAA,EACnBsU,CAAAA,GAAY,GAAA,GAANtU,CAAAA;MAAAA;MAAAA,IAAAA,KAIS,CAAA,KAAR3oB,CAAAA,IAAAA,KACS,CAAA,KAARk9B,CAAAA,IAAuBF,CAAAA,KAAQh9B,CAAAA,IAAOA,CAAAA,KAAQi9B,CAAAA;QAAAA,IAGnC,QAAA,IAAA,OAARD,CAAAA,EACTN,CAAAA,GAAQM,CAAAA,GAAM,GAAA,GAAMG,CAAAA,CAAY,CAAA,CAAA,CAAA,KAAA,QAExBrQ,CAAAA,CAAQC,SAAAA;UAAAA,KACT,CAAA;YACH2P,CAAAA,GAAQpK,CAAAA,CAAG0K,CAAAA,GAAM,GAAA,CAAA,GAAO,GAAA,GAAMG,CAAAA,CAAY,CAAA,CAAA;YAAA;UAAA,KAEvC,CAAA;UAAA;YAEHT,CAAAA,GAAQnK,CAAAA,CAAGyK,CAAAA,GAAM,GAAA,CAAA,GAAO,GAAA,GAAMG,CAAAA,CAAY,CAAA,CAAA;QAAA;MAAA,OAG3C,IAAA,KAAmB,CAAA,KAARD,CAAAA,IAAsC,QAAA,KAAf39B,IAAAA,eAAAA,EAAO29B,CAAAA,CAAAA,EAAkB;QAAA,IAE5DA,CAAAA,IAAAA,CAAQ9V,KAAAA,CAAM8V,CAAAA,CAAIl5B,CAAAA,CAAAA,IAGN,CAAA,KAAVk5B,CAAAA,CAAIl5B,CAAAA,EAAAA,OACN04B,CAAAA,GAAQ,CAAC,IAAA,EAAM,IAAA,EAAM,IAAA,EAAMS,CAAAA,CAAY,CAAA,CAAA,CAAA,CAAI1U,IAAAA,CAAK,GAAA,CAAA;QAAA,IAKjC,QAAA,IAAA,OAARuU,CAAAA,EACTN,CAAAA,GAAQ,CAACM,CAAAA,EAAKh9B,CAAAA,EAAKi9B,CAAAA,EAAKE,CAAAA,CAAY,CAAA,CAAA,CAAA,CAAI1U,IAAAA,CAAK,GAAA,CAAA,CAAA,KAAA,QAErCqE,CAAAA,CAAQC,SAAAA;UAAAA,KACT,CAAA;YACH2P,CAAAA,GAAQ,CACNpK,CAAAA,CAAG0K,CAAAA,GAAM,GAAA,CAAA,EACT1K,CAAAA,CAAGtyB,CAAAA,GAAM,GAAA,CAAA,EACTsyB,CAAAA,CAAG2K,CAAAA,GAAM,GAAA,CAAA,EACTE,CAAAA,CAAY,CAAA,CAAA,CAAA,CACZ1U,IAAAA,CAAK,GAAA,CAAA;YAAA;UAAA;UAAA,KAGJ,CAAA;YACHiU,CAAAA,GAAQ,CACNnK,CAAAA,CAAGyK,CAAAA,GAAM,GAAA,CAAA,EACTzK,CAAAA,CAAGvyB,CAAAA,GAAM,GAAA,CAAA,EACTuyB,CAAAA,CAAG0K,CAAAA,GAAM,GAAA,CAAA,EACTE,CAAAA,CAAY,CAAA,CAAA,CAAA,CACZ1U,IAAAA,CAAK,GAAA,CAAA;QAAA;MAAA,CAAA,MAAA,IAKM,QAAA,IAAA,OAARuU,CAAAA,EACTN,CAAAA,GAAQ,CAACM,CAAAA,EAAKh9B,CAAAA,EAAKi9B,CAAAA,EAAKC,CAAAA,EAAKC,CAAAA,CAAY,CAAA,CAAA,CAAA,CAAI1U,IAAAA,CAAK,GAAA,CAAA,CAAA,KAAA,QAE1CqE,CAAAA,CAAQC,SAAAA;QAAAA,KACT,CAAA;UACH2P,CAAAA,GAAQ,CAACpK,CAAAA,CAAG0K,CAAAA,CAAAA,EAAM1K,CAAAA,CAAGtyB,CAAAA,CAAAA,EAAMsyB,CAAAA,CAAG2K,CAAAA,CAAAA,EAAM3K,CAAAA,CAAG4K,CAAAA,CAAAA,EAAMC,CAAAA,CAAY,CAAA,CAAA,CAAA,CAAI1U,IAAAA,CAC3D,GAAA,CAAA;UAAA;QAAA,KAGC,CAAA;QAAA;UAEHiU,CAAAA,GAAQ,CAACnK,CAAAA,CAAGyK,CAAAA,CAAAA,EAAMzK,CAAAA,CAAGvyB,CAAAA,CAAAA,EAAMuyB,CAAAA,CAAG0K,CAAAA,CAAAA,EAAM1K,CAAAA,CAAG2K,CAAAA,CAAAA,EAAMC,CAAAA,CAAY,CAAA,CAAA,CAAA,CAAI1U,IAAAA,CAC3D,GAAA,CAAA;MAAA;MAAA,OAKHiU,CAAAA;IAAAA,CAAAA;IAGLY,EAAAA,GAAcvP,CAAAA,CAAIE,WAAAA,CAAYqP,UAAAA,GAAa,YAAA;MAAA,OACtClQ,CAAAA;IAAAA,CAAAA;IAGLmQ,EAAAA,GAAaxP,CAAAA,CAAIE,WAAAA,CAAYsP,SAAAA,GAAY,UAASzQ,CAAAA,EAAAA;MAAAA,IAEhD5rB,CAAAA,GAAAA,CADJ4rB,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,EACF5rB,IAAAA,IAAQ,EAAA;QACvBksB,CAAAA,GAAUN,CAAAA,CAAQM,OAAAA,IAAWkQ,EAAAA,CAAAA,CAAAA;QAC7BE,CAAAA,GAAwB1Q,CAAAA,CAAQ0Q,qBAAAA,IAAyB,EAAA;QACzDC,CAAAA,GAAa3Q,CAAAA,CAAQ2Q,UAAAA,IAAAA,CAAc,CAAA;QACnCC,CAAAA,GAAiBx8B,CAAAA,CAAK8B,MAAAA;QACtB26B,CAAAA,GAAW7Q,CAAAA,CAAQ6Q,QAAAA;QACnBC,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;UAAAA,OAChBA,CAAAA;QAAAA,CAAAA;MAAAA,IAEiB,IAAA,KAAtBssB,CAAAA,IAAAA,KAAiD,CAAA,KAAZmQ,CAAAA,EAAAA,MACjC,IAAIpmB,KAAAA,CACR,0DAAA,CAAA;MAGsB,IAAA,KAAtBiW,CAAAA,KACFoQ,CAAAA,GAAYlQ,EAAAA,CAAWkQ,SAAAA,CAAUD,CAAAA,EAAU,CAAA,CAAA,CAAA;MAAA,IAGzCE,CAAAA,GAAgB,CAAA,CAAA;MAAA,CACJ,CAAA,KAAZzQ,CAAAA,KACFA,CAAAA,GAAU,CAAC,aAAA,CAAA,CAAA;MAAA,IAET0Q,CAAAA,GAAYhR,CAAAA,CAAQiR,mBAAAA,IAAuB,EAAA;QAM3CC,CAAAA,GAAAA,CAJFH,CAAAA,GAAAA,KAD4C,CAAA,KAAnChR,CAAAA,CAAMkB,GAAAA,CAAIkQ,oBAAAA,GACHpR,CAAAA,CAAMkB,GAAAA,CAAIkQ,oBAAAA,CAAqB/8B,CAAAA,EAAMksB,CAAAA,CAAAA,GAErC;UAAElsB,IAAAA,EAAMA,CAAAA;UAAMg9B,YAAAA,EAAc;QAAA,CAAA,EAG9BA,YAAAA,IACbtqB,KAAAA,CAAMC,OAAAA,CAAQ2pB,CAAAA,CAAAA,GACXA,CAAAA,CAAsB/U,IAAAA,CAAK,GAAA,CAAA,GAC3B+U,CAAAA,CAAsB1vB,QAAAA,CAAAA,CAAAA,CAAAA;MAAAA,IAEM,CAAA,KAA9B+vB,CAAAA,CAAc38B,IAAAA,CAAK8B,MAAAA,KACrB86B,CAAAA,CAAU32B,IAAAA,CAAK;QACb2hB,GAAAA,EAAK,QAAA;QACLuF,KAAAA,EAAOwP,CAAAA,CAAc38B,IAAAA,CAAK8B;MAAAA,CAAAA,CAAAA,EAAAA,CAET,CAAA,KAAfy6B,CAAAA,IACFK,CAAAA,CAAU32B,IAAAA,CAAK;QACb2hB,GAAAA,EAAK,SAAA;QACLuF,KAAAA,EAAOqP;MAAAA,CAAAA,CAAAA,CAAAA,EAKgB,CAAA,IAAzBM,CAAAA,CAAeh7B,MAAAA,EAAAA,IACbg7B,CAAAA,CAAe7vB,KAAAA,CAAM,GAAA,CAAA,CAAKnL,MAAAA,GAAS,CAAA,IAAM,CAAA,EAC3C86B,CAAAA,CAAU32B,IAAAA,CAAK;QACb2hB,GAAAA,EAAK,QAAA;QACLuF,KAAAA,EAAO2P;MAAAA,CAAAA,CAAAA,CAAAA,KAEJ;QACLF,CAAAA,CAAU32B,IAAAA,CAAK;UACb2hB,GAAAA,EAAK,QAAA;UACLuF,KAAAA,EAAO,GAAA,GAAM2P,CAAAA,GAAiB;QAAA,CAAA,CAAA;QAAA,KAG3B,IAAI77B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI27B,CAAAA,CAAU96B,MAAAA,EAAQb,CAAAA,IAAK,CAAA,EAAA,IAChB,aAAA,KAArB27B,CAAAA,CAAU37B,CAAAA,CAAAA,CAAG2mB,GAAAA,EAAuB;UAAA,KAAA,IAClCqV,CAAAA,GAAmB,EAAA,EAGjBl8B,CAAAA,GAAI,CAAA,EACRA,CAAAA,GAAI47B,CAAAA,CAAcK,YAAAA,CAAa/vB,KAAAA,CAAM,GAAA,CAAA,CAAKnL,MAAAA,GAAS,CAAA,EACnDf,CAAAA,IAAK,CAAA,EAELk8B,CAAAA,CAAiBh3B,IAAAA,CAAK,MAAA,CAAA;UAGxBg3B,CAAAA,CAAiBh3B,IAAAA,CAAK22B,CAAAA,CAAU37B,CAAAA,CAAAA,CAAGksB,KAAAA,CAAAA,EACnCyP,CAAAA,CAAU37B,CAAAA,CAAAA,CAAGksB,KAAAA,GAAQ,GAAA,GAAM8P,CAAAA,CAAiB1V,IAAAA,CAAK,GAAA,CAAA,GAAO,GAAA;QAAA;MAAA;MAMhE9f,EAAAA,CAAI,IAAA,CAAA;MAAA,KACC,IAAIsE,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI6wB,CAAAA,CAAU96B,MAAAA,EAAQiK,CAAAA,EAAAA,EACpCtE,EAAAA,CAAI,GAAA,GAAMm1B,CAAAA,CAAU7wB,CAAAA,CAAAA,CAAG6b,GAAAA,GAAM,GAAA,GAAMgV,CAAAA,CAAU7wB,CAAAA,CAAAA,CAAGohB,KAAAA,CAAAA;MAElD1lB,EAAAA,CAAI,IAAA,CAAA,EAC8B,CAAA,KAA9Bk1B,CAAAA,CAAc38B,IAAAA,CAAK8B,MAAAA,KACrB2F,EAAAA,CAAI,QAAA,CAAA,EACJA,EAAAA,CAAIi1B,CAAAA,CAAUC,CAAAA,CAAc38B,IAAAA,CAAAA,CAAAA,EAC5ByH,EAAAA,CAAI,WAAA,CAAA,CAAA;IAAA,CAAA;IAIJy1B,EAAAA,GAAWrQ,CAAAA,CAAIE,WAAAA,CAAYmQ,OAAAA,GAAU,UAAS3F,CAAAA,EAAAA;MAAAA,IAC5C4F,CAAAA,GAAa5F,CAAAA,CAAKvG,MAAAA;QAClBhxB,CAAAA,GAAOu3B,CAAAA,CAAKv3B,IAAAA;QACZo9B,CAAAA,GAAmB7F,CAAAA,CAAK+D,KAAAA;QACxB+B,CAAAA,GAAoB9F,CAAAA,CAAK+F,aAAAA;MAE7BpC,EAAAA,CAAuBkC,CAAAA,EAAAA,CAAkB,CAAA,CAAA,EACzC31B,EAAAA,CAAI,eAAA,CAAA,EACJA,EAAAA,CAAI,UAAA,GAAa8vB,CAAAA,CAAK1D,mBAAAA,GAAsB,MAAA,CAAA,EAC5CpsB,EAAAA,CAAI,aAAA,GAAgB8vB,CAAAA,CAAKxD,uBAAAA,GAA0B,MAAA,CAAA,EACnDtsB,EAAAA,CACE,aAAA,GACEk0B,UAAAA,CAAW/K,CAAAA,CAAI2G,CAAAA,CAAKgG,QAAAA,CAASC,WAAAA,CAAAA,CAAAA,GAC7B,GAAA,GACA7B,UAAAA,CAAW/K,CAAAA,CAAI2G,CAAAA,CAAKgG,QAAAA,CAASE,WAAAA,CAAAA,CAAAA,GAC7B,GAAA,GACA7M,CAAAA,CAAI2G,CAAAA,CAAKgG,QAAAA,CAASG,SAAAA,CAAAA,GAClB,GAAA,GACA9M,CAAAA,CAAI2G,CAAAA,CAAKgG,QAAAA,CAASI,SAAAA,CAAAA,GAClB,GAAA,CAAA,EAEiB,IAAA,KAAjBpG,CAAAA,CAAKqG,OAAAA,IACPn2B,EAAAA,CACE,YAAA,GACEmpB,CAAAA,CAAI2G,CAAAA,CAAKqG,OAAAA,CAAQJ,WAAAA,CAAAA,GACjB,GAAA,GACA5M,CAAAA,CAAI2G,CAAAA,CAAKqG,OAAAA,CAAQH,WAAAA,CAAAA,GACjB,GAAA,GACA7M,CAAAA,CAAI2G,CAAAA,CAAKqG,OAAAA,CAAQF,SAAAA,CAAAA,GACjB,GAAA,GACA9M,CAAAA,CAAI2G,CAAAA,CAAKqG,OAAAA,CAAQD,SAAAA,CAAAA,GACjB,GAAA,CAAA,EAIgB,IAAA,KAAlBpG,CAAAA,CAAKsG,QAAAA,IACPp2B,EAAAA,CACE,aAAA,GACEmpB,CAAAA,CAAI2G,CAAAA,CAAKsG,QAAAA,CAASL,WAAAA,CAAAA,GAClB,GAAA,GACA5M,CAAAA,CAAI2G,CAAAA,CAAKsG,QAAAA,CAASJ,WAAAA,CAAAA,GAClB,GAAA,GACA7M,CAAAA,CAAI2G,CAAAA,CAAKsG,QAAAA,CAASH,SAAAA,CAAAA,GAClB,GAAA,GACA9M,CAAAA,CAAI2G,CAAAA,CAAKsG,QAAAA,CAASF,SAAAA,CAAAA,GAClB,GAAA,CAAA,EAIe,IAAA,KAAjBpG,CAAAA,CAAKuG,OAAAA,IACPr2B,EAAAA,CACE,YAAA,GACEmpB,CAAAA,CAAI2G,CAAAA,CAAKuG,OAAAA,CAAQN,WAAAA,CAAAA,GACjB,GAAA,GACA5M,CAAAA,CAAI2G,CAAAA,CAAKuG,OAAAA,CAAQL,WAAAA,CAAAA,GACjB,GAAA,GACA7M,CAAAA,CAAI2G,CAAAA,CAAKuG,OAAAA,CAAQJ,SAAAA,CAAAA,GACjB,GAAA,GACA9M,CAAAA,CAAI2G,CAAAA,CAAKuG,OAAAA,CAAQH,SAAAA,CAAAA,GACjB,GAAA,CAAA,EAIc,IAAA,KAAhBpG,CAAAA,CAAKwG,MAAAA,IACPt2B,EAAAA,CACE,WAAA,GACEmpB,CAAAA,CAAI2G,CAAAA,CAAKwG,MAAAA,CAAOP,WAAAA,CAAAA,GAChB,GAAA,GACA5M,CAAAA,CAAI2G,CAAAA,CAAKwG,MAAAA,CAAON,WAAAA,CAAAA,GAChB,GAAA,GACA7M,CAAAA,CAAI2G,CAAAA,CAAKwG,MAAAA,CAAOL,SAAAA,CAAAA,GAChB,GAAA,GACA9M,CAAAA,CAAI2G,CAAAA,CAAKwG,MAAAA,CAAOJ,SAAAA,CAAAA,GAChB,GAAA,CAAA,EAIuB,QAAA,IAAA,OAAlBpG,CAAAA,CAAKpL,QAAAA,IAA2C,CAAA,KAAlBoL,CAAAA,CAAKpL,QAAAA,IAC5C1kB,EAAAA,CAAI,YAAA,GAAe8vB,CAAAA,CAAKpL,QAAAA,CAAAA,EAG1BsL,EAAAA,CAAOrN,OAAAA,CAAQ,SAAA,EAAW;QACxBkR,KAAAA,EAAO8B,CAAAA;QACPY,WAAAA,EAAaxG,EAAAA,CAAa2F,CAAAA,CAAAA;QAC1BA,UAAAA,EAAYA,CAAAA;QACZ5F,IAAAA,EAAMv3B;MAAAA,CAAAA,CAAAA,EAERyH,EAAAA,CAAI,YAAA,GAAe41B,CAAAA,GAAoB,MAAA,CAAA,EACvC51B,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;MAAA,IAEAw2B,CAAAA,GAAcj+B,CAAAA,CAAKunB,IAAAA,CAAK,IAAA,CAAA;MAAA,OAExBsI,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,KAEtBqO,CAAAA,IAAe,KAAA,CAAA,EAGjB/C,EAAAA,CAAuBmC,CAAAA,EAAAA,CAAmB,CAAA,CAAA,EAC1ChB,EAAAA,CAAU;QACRr8B,IAAAA,EAAMi+B,CAAAA;QACN/R,OAAAA,EAASkQ,EAAAA,CAAAA,CAAAA;QACTK,QAAAA,EAAUY;MAAAA,CAAAA,CAAAA,EAEZ51B,EAAAA,CAAI,QAAA,CAAA,EACG21B,CAAAA;IAAAA,CAAAA;IAGLc,EAAAA,GAAYrR,CAAAA,CAAIE,WAAAA,CAAYmR,QAAAA,GAAW,YAAA;MAAA,IACrC76B,CAAAA;QACFtC,CAAAA;QACAo9B,CAAAA,GAAoB,EAAA;MAAA,KAEjB96B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,IAAKk0B,EAAAA,EAAMl0B,CAAAA,EAAAA,EACrBm0B,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGi4B,KAAAA,GAAQxH,EAAAA,CAAAA,CAAAA,EACxB0D,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGi6B,aAAAA,GAAgBxJ,EAAAA,CAAAA,CAAAA;MAAAA,KAG7BzwB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,IAAKk0B,EAAAA,EAAMl0B,CAAAA,EAAAA,EACrB86B,CAAAA,CAAkBl4B,IAAAA,CAChBi3B,EAAAA,CAAQ;QACNlM,MAAAA,EAAQ3tB,CAAAA;QACRrD,IAAAA,EAAMyzB,EAAAA,CAAMpwB,CAAAA,CAAAA;QACZi4B,KAAAA,EAAO9D,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGi4B,KAAAA;QACvBgC,aAAAA,EAAe9F,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGi6B,aAAAA;QAC/BC,QAAAA,EAAU/F,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGk6B,QAAAA;QAC1BK,OAAAA,EAASpG,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGu6B,OAAAA;QACzBC,QAAAA,EAAUrG,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGw6B,QAAAA;QAC1BC,OAAAA,EAAStG,EAAAA,CAAan0B,CAAAA,CAAAA,CAAGy6B,OAAAA;QACzBC,MAAAA,EAAQvG,EAAAA,CAAan0B,CAAAA,CAAAA,CAAG06B,MAAAA;QACxB5R,QAAAA,EAAUqL,EAAAA,CAAan0B,CAAAA,CAAAA,CAAG8oB,QAAAA;QAC1B0H,mBAAAA,EAAqBA,EAAAA;QACrBE,uBAAAA,EAAyBA;MAAAA,CAAAA,CAAAA,CAAAA;MAI/BmH,EAAAA,CAAuBrH,EAAAA,EAAAA,CAAqB,CAAA,CAAA,EAC5CpsB,EAAAA,CAAI,gBAAA,CAAA;MAAA,IACA22B,CAAAA,GAAO,SAAA;MAAA,KACNr9B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIw2B,EAAAA,EAAMx2B,CAAAA,EAAAA,EACpBq9B,CAAAA,IAAQD,CAAAA,CAAkBp9B,CAAAA,CAAAA,GAAK,OAAA;MAEjC0G,EAAAA,CAAI22B,CAAAA,GAAO,GAAA,CAAA,EACX32B,EAAAA,CAAI,SAAA,GAAY8vB,EAAAA,CAAAA,EAChB9vB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA,EACJgwB,EAAAA,CAAOrN,OAAAA,CAAQ,cAAA,CAAA;IAAA,CAAA;IAGbiU,EAAAA,GAAU,SAAA,CAASC,CAAAA,EAAAA;MACrB7G,EAAAA,CAAOrN,OAAAA,CAAQ,SAAA,EAAW;QACxBkU,IAAAA,EAAMA,CAAAA;QACN72B,GAAAA,EAAKA,EAAAA;QACLuzB,SAAAA,EAAWA,EAAAA;QACXqB,SAAAA,EAAWA;MAAAA,CAAAA,CAAAA,EAAAA,CAGgB,CAAA,KAAzBiC,CAAAA,CAAKC,eAAAA,KACPD,CAAAA,CAAKxT,YAAAA,GAAekQ,EAAAA,CAAAA,CAAAA,EACpBvzB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,aAAA,CAAA,EACJA,EAAAA,CAAI,aAAA,GAAgB6hB,CAAAA,CAAUgV,CAAAA,CAAKE,cAAAA,CAAAA,CAAAA,EACnC/2B,EAAAA,CAAI,iBAAA,CAAA,EACyB,QAAA,IAAA,OAAlB62B,CAAAA,CAAKG,QAAAA,IACdh3B,EAAAA,CAAI,aAAA,GAAgB62B,CAAAA,CAAKG,QAAAA,CAAAA,EAE3Bh3B,EAAAA,CAAI,eAAA,CAAA,EACJA,EAAAA,CAAI,eAAA,CAAA,EACJA,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA,CAAA;IAAA,CAAA;IAIJi3B,EAAAA,GAAW,SAAA,CAAA,EAAA;MAAA,KACR,IAAIC,CAAAA,IAAW5H,EAAAA,EACdA,EAAAA,CAAM/M,cAAAA,CAAe2U,CAAAA,CAAAA,KAAAA,CAEA,CAAA,KAArBhS,CAAAA,IAAAA,CACsB,CAAA,KAArBA,CAAAA,IAA6BC,CAAAA,CAAU5C,cAAAA,CAAe2U,CAAAA,CAAAA,CAAAA,IAEvDN,EAAAA,CAAQtH,EAAAA,CAAM4H,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAMlBC,EAAAA,GAAa,SAAA,CAASC,CAAAA,EAAAA;MACxBA,CAAAA,CAAQ/T,YAAAA,GAAekQ,EAAAA,CAAAA,CAAAA;MAAAA,IAEnBpP,CAAAA,GAAU,EAAA;MACdA,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,MAAA;QAAQuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACnCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,SAAA;QAAWuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACtCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QACX2hB,GAAAA,EAAK,MAAA;QACLuF,KAAAA,EACE,GAAA,GACA,CACEyD,CAAAA,CAAIiO,CAAAA,CAAQp9B,CAAAA,CAAAA,EACZmvB,CAAAA,CAAIiO,CAAAA,CAAQzqB,CAAAA,CAAAA,EACZwc,CAAAA,CAAIiO,CAAAA,CAAQp9B,CAAAA,GAAIo9B,CAAAA,CAAQC,KAAAA,CAAAA,EACxBlO,CAAAA,CAAIiO,CAAAA,CAAQzqB,CAAAA,GAAIyqB,CAAAA,CAAQE,MAAAA,CAAAA,CAAAA,CACxBxX,IAAAA,CAAK,GAAA,CAAA,GACP;MAAA,CAAA,CAAA,EAEJqE,CAAAA,CAAQ3lB,IAAAA,CAAK;QACX2hB,GAAAA,EAAK,QAAA;QACLuF,KAAAA,EAAO,GAAA,GAAM0R,CAAAA,CAAQ5T,MAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa;MAAA,CAAA,CAAA;MAAA,IAIvC6e,CAAAA,GAASoT,CAAAA,CAAQpL,KAAAA,CAAM,CAAA,CAAA,CAAGlM,IAAAA,CAAK,IAAA,CAAA;MACnC8U,EAAAA,CAAU;QACRr8B,IAAAA,EAAMyrB,CAAAA;QACNoR,mBAAAA,EAAqBjR,CAAAA;QACrB6Q,QAAAA,EAAUoC,CAAAA,CAAQ/T;MAAAA,CAAAA,CAAAA,EAEpBrjB,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGFu3B,EAAAA,GAAc,SAAA,CAAA,EAAA;MAAA,KACX,IAAIC,CAAAA,IAActH,EAAAA,EACjBA,EAAAA,CAAc3N,cAAAA,CAAeiV,CAAAA,CAAAA,IAC/BL,EAAAA,CAAWjH,EAAAA,CAAcsH,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAK3BC,EAAAA,GAAgC,SAAA,CAAS9T,CAAAA,EAAQ+T,CAAAA,EAAAA;MAAAA,IAE/Cv6B,CAAAA;QADAw6B,CAAAA,GAAU,EAAA;QAEVC,CAAAA,GAAK,CAAA,IAAOF,CAAAA,GAAgB,CAAA,CAAA;MAAA,KAC3Bv6B,CAAAA,GAAI,CAAA,EAAKA,CAAAA,GAAI,CAAA,EAAKA,CAAAA,IAAKy6B,CAAAA,EAC1BD,CAAAA,CAAQn5B,IAAAA,CAAKrB,CAAAA,CAAAA;MAAAA,IAEfw6B,CAAAA,CAAQn5B,IAAAA,CAAK,CAAA,CAAA,EAEW,CAAA,IAApBmlB,CAAAA,CAAO,CAAA,CAAA,CAAGkU,MAAAA,EAAe;QAAA,IACvB7Q,CAAAA,GAAK;UACP6Q,MAAAA,EAAQ,CAAA;UACR9D,KAAAA,EAAOpQ,CAAAA,CAAO,CAAA,CAAA,CAAGoQ;QAAAA,CAAAA;QAEnBpQ,CAAAA,CAAOmU,OAAAA,CAAQ9Q,CAAAA,CAAAA;MAAAA;MAAAA,IAEuB,CAAA,IAApCrD,CAAAA,CAAOA,CAAAA,CAAOtpB,MAAAA,GAAS,CAAA,CAAA,CAAGw9B,MAAAA,EAAe;QAAA,IACvC5Q,CAAAA,GAAK;UACP4Q,MAAAA,EAAQ,CAAA;UACR9D,KAAAA,EAAOpQ,CAAAA,CAAOA,CAAAA,CAAOtpB,MAAAA,GAAS,CAAA,CAAA,CAAG05B;QAAAA,CAAAA;QAEnCpQ,CAAAA,CAAOnlB,IAAAA,CAAKyoB,CAAAA,CAAAA;MAAAA;MAAAA,KAAAA,IAEVjnB,CAAAA,GAAM,EAAA,EACN+3B,CAAAA,GAAQ,CAAA,EAEHz+B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIq+B,CAAAA,CAAQt9B,MAAAA,EAAQf,CAAAA,EAAAA,EAAK;QAAA,KACvC6D,CAAAA,GAAIw6B,CAAAA,CAAQr+B,CAAAA,CAAAA,EACL6D,CAAAA,GAAIwmB,CAAAA,CAAOoU,CAAAA,GAAQ,CAAA,CAAA,CAAGF,MAAAA,GAAQE,CAAAA,EAAAA;QAAAA,IACjC18B,CAAAA,GAAIsoB,CAAAA,CAAOoU,CAAAA,CAAAA,CAAOF,MAAAA;UAElBt8B,CAAAA,GAAAA,CAAK4B,CAAAA,GAAI9B,CAAAA,KADLsoB,CAAAA,CAAOoU,CAAAA,GAAQ,CAAA,CAAA,CAAGF,MAAAA,GACHx8B,CAAAA,CAAAA;UAEnB28B,CAAAA,GAASrU,CAAAA,CAAOoU,CAAAA,CAAAA,CAAOhE,KAAAA;UACvBkE,CAAAA,GAAStU,CAAAA,CAAOoU,CAAAA,GAAQ,CAAA,CAAA,CAAGhE,KAAAA;QAE/B/zB,CAAAA,IACE0rB,EAAAA,CAASjvB,IAAAA,CAAKy7B,KAAAA,CAAAA,CAAO,CAAA,GAAI38B,CAAAA,IAAKy8B,CAAAA,CAAO,CAAA,CAAA,GAAKz8B,CAAAA,GAAI08B,CAAAA,CAAO,CAAA,CAAA,CAAA,CAAI9yB,QAAAA,CAAS,EAAA,CAAA,CAAA,GAClEumB,EAAAA,CAASjvB,IAAAA,CAAKy7B,KAAAA,CAAAA,CAAO,CAAA,GAAI38B,CAAAA,IAAKy8B,CAAAA,CAAO,CAAA,CAAA,GAAKz8B,CAAAA,GAAI08B,CAAAA,CAAO,CAAA,CAAA,CAAA,CAAI9yB,QAAAA,CAAS,EAAA,CAAA,CAAA,GAClEumB,EAAAA,CAASjvB,IAAAA,CAAKy7B,KAAAA,CAAAA,CAAO,CAAA,GAAI38B,CAAAA,IAAKy8B,CAAAA,CAAO,CAAA,CAAA,GAAKz8B,CAAAA,GAAI08B,CAAAA,CAAO,CAAA,CAAA,CAAA,CAAI9yB,QAAAA,CAAS,EAAA,CAAA,CAAA;MAAA;MAAA,OAE/DnF,CAAAA,CAAIm4B,IAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAGTC,EAAAA,GAAoB,SAAA,CAASrF,CAAAA,EAAS2E,CAAAA,EAAAA;MASxCA,CAAAA,KAAkBA,CAAAA,GAAgB,EAAA,CAAA;MAAA,IAC9BW,CAAAA,GAAmB9E,EAAAA,CAAAA,CAAAA;QACnBvP,CAAAA,GAASyT,EAAAA,CAA8B1E,CAAAA,CAAQpP,MAAAA,EAAQ+T,CAAAA,CAAAA;QAEvDvT,CAAAA,GAAU,EAAA;MACdA,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,cAAA;QAAgBuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAC3CvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,QAAA;QAAUuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACrCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,MAAA;QAAQuF,KAAAA,EAAO,GAAA,GAAMgS,CAAAA,GAAgB;MAAA,CAAA,CAAA,EACzDvT,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,eAAA;QAAiBuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAC5CvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,OAAA;QAASuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACpCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,QAAA;QAAUuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAErCkP,EAAAA,CAAU;QACRr8B,IAAAA,EAAMyrB,CAAAA;QACNoR,mBAAAA,EAAqBjR,CAAAA;QACrB0Q,qBAAAA,EAAuB,CAAC,iBAAA,CAAA;QACxBG,QAAAA,EAAUqD;MAAAA,CAAAA,CAAAA,EAEZr4B,EAAAA,CAAI,QAAA,CAAA,EAEJ+yB,CAAAA,CAAQ1P,YAAAA,GAAekQ,EAAAA,CAAAA,CAAAA,EACvBvzB,EAAAA,CAAI,kBAAA,GAAqB+yB,CAAAA,CAAQ/6B,IAAAA,CAAAA,EACjCgI,EAAAA,CAAI,wBAAA,CAAA;MAAA,IACA0jB,CAAAA,GACF,WAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA;MACmB,CAAA,KAAjBqP,CAAAA,CAAQ/6B,IAAAA,GAEV0rB,CAAAA,IACEyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAGhCA,CAAAA,IACEyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,GAC9B,GAAA,GACAyF,CAAAA,CAAI+K,UAAAA,CAAWnB,CAAAA,CAAQrP,MAAAA,CAAO,CAAA,CAAA,CAAA,CAAA,EAGlC1jB,EAAAA,CADA0jB,CAAAA,IAAU,GAAA,CAAA,EAGNqP,CAAAA,CAAQvP,MAAAA,IACVxjB,EAAAA,CAAI,WAAA,GAAc+yB,CAAAA,CAAQvP,MAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa,GAAA,CAAA,EAEhDnF,EAAAA,CAAI,YAAA,GAAeq4B,CAAAA,GAAmB,MAAA,CAAA,EACtCr4B,EAAAA,CAAI,qBAAA,CAAA,EACJA,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGFs4B,EAAAA,GAAmB,SAAA,CAASvF,CAAAA,EAASwF,CAAAA,EAAAA;MAAAA,IACnCC,CAAAA,GAAoBnM,EAAAA,CAAAA,CAAAA;QACpBoM,CAAAA,GAAkBlF,EAAAA,CAAAA,CAAAA;MAEtBgF,CAAAA,CAA8B/5B,IAAAA,CAAK;QACjCk6B,YAAAA,EAAcF,CAAAA;QACdG,SAAAA,EAAWF;MAAAA,CAAAA,CAAAA,EAGb1F,CAAAA,CAAQ1P,YAAAA,GAAeoV,CAAAA;MAAAA,IACnBtU,CAAAA,GAAU,EAAA;MACdA,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,MAAA;QAAQuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACnCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,aAAA;QAAeuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAC1CvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,WAAA;QAAauF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACxCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,YAAA;QAAcuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EACzCvB,CAAAA,CAAQ3lB,IAAAA,CAAK;QACX2hB,GAAAA,EAAK,MAAA;QACLuF,KAAAA,EAAO,GAAA,GAAMqN,CAAAA,CAAQlP,WAAAA,CAAYhU,GAAAA,CAAIsZ,CAAAA,CAAAA,CAAKrJ,IAAAA,CAAK,GAAA,CAAA,GAAO;MAAA,CAAA,CAAA,EAExDqE,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,OAAA;QAASuF,KAAAA,EAAOyD,CAAAA,CAAI4J,CAAAA,CAAQjP,KAAAA;MAAAA,CAAAA,CAAAA,EAChDK,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,OAAA;QAASuF,KAAAA,EAAOyD,CAAAA,CAAI4J,CAAAA,CAAQhP,KAAAA;MAAAA,CAAAA,CAAAA,EAChDI,CAAAA,CAAQ3lB,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,WAAA;QAAauF,KAAAA,EAAO8S,CAAAA,GAAoB;MAAA,CAAA,CAAA,EACxDzF,CAAAA,CAAQvP,MAAAA,IACVW,CAAAA,CAAQ3lB,IAAAA,CAAK;QACX2hB,GAAAA,EAAK,QAAA;QACLuF,KAAAA,EAAO,GAAA,GAAMqN,CAAAA,CAAQvP,MAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa;MAAA,CAAA,CAAA,EAI7CyvB,EAAAA,CAAU;QACRr8B,IAAAA,EAAMw6B,CAAAA,CAAQ/O,MAAAA;QACdoR,mBAAAA,EAAqBjR,CAAAA;QACrB6Q,QAAAA,EAAUjC,CAAAA,CAAQ1P;MAAAA,CAAAA,CAAAA,EAEpBrjB,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGF44B,EAAAA,GAAc,SAAA,CAASL,CAAAA,EAAAA;MAAAA,IACrBvF,CAAAA;MAAAA,KACCA,CAAAA,IAAcvD,EAAAA,EACbA,EAAAA,CAASlN,cAAAA,CAAeyQ,CAAAA,CAAAA,KACtBvD,EAAAA,CAASuD,CAAAA,CAAAA,YAAuBvP,CAAAA,GAClC2U,EAAAA,CAAkB3I,EAAAA,CAASuD,CAAAA,CAAAA,CAAAA,GAClBvD,EAAAA,CAASuD,CAAAA,CAAAA,YAAuBpP,CAAAA,IACzC0U,EAAAA,CAAiB7I,EAAAA,CAASuD,CAAAA,CAAAA,EAAauF,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAM3CM,EAAAA,GAAY,SAAA,CAAStV,CAAAA,EAAAA;MAAAA,KAGlB,IAAI/nB,CAAAA,IAFT+nB,CAAAA,CAAOF,YAAAA,GAAekQ,EAAAA,CAAAA,CAAAA,EACtBvzB,EAAAA,CAAI,IAAA,CAAA,EACUujB,CAAAA,EAAAA,QACJ/nB,CAAAA;QAAAA,KACD,SAAA;UACHwE,EAAAA,CAAI,MAAA,GAAS2pB,CAAAA,CAAGpG,CAAAA,CAAO/nB,CAAAA,CAAAA,CAAAA,CAAAA;UAAAA;QAAAA,KAEpB,gBAAA;UACHwE,EAAAA,CAAI,MAAA,GAAS2pB,CAAAA,CAAGpG,CAAAA,CAAO/nB,CAAAA,CAAAA,CAAAA,CAAAA;MAAAA;MAI7BwE,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGF84B,EAAAA,GAAa,SAAA,CAAA,EAAA;MAAA,IACXC,CAAAA;MAAAA,KACCA,CAAAA,IAAapJ,EAAAA,EACZA,EAAAA,CAAQpN,cAAAA,CAAewW,CAAAA,CAAAA,IACzBF,EAAAA,CAAUlJ,EAAAA,CAAQoJ,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAKpBC,EAAAA,GAAiB,SAAA,CAAA,EAAA;MAAA,KAEd,IAAIxB,CAAAA,IADTx3B,EAAAA,CAAI,aAAA,CAAA,EACmBkwB,EAAAA,EAEnBA,EAAAA,CAAc3N,cAAAA,CAAeiV,CAAAA,CAAAA,IAC7BtH,EAAAA,CAAcsH,CAAAA,CAAAA,CAAYnU,YAAAA,IAAgB,CAAA,IAE1CrjB,EAAAA,CACE,GAAA,GACEw3B,CAAAA,GACA,GAAA,GACAtH,EAAAA,CAAcsH,CAAAA,CAAAA,CAAYnU,YAAAA,GAC1B,MAAA,CAAA;MAMR2M,EAAAA,CAAOrN,OAAAA,CAAQ,gBAAA,CAAA,EACf3iB,EAAAA,CAAI,IAAA,CAAA;IAAA,CAAA;IAGFi5B,EAAAA,GAAoB,SAAA,CAAA,EAAA;MACtBlU,EAAAA,CAAWyO,GAAAA,GAAMD,EAAAA,CAAAA,CAAAA,EACjBvzB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,mBAAA,CAAA,EACJA,EAAAA,CAAI,KAAA,GAAQ+kB,EAAAA,CAAWnqB,CAAAA,CAAAA,EACvBoF,EAAAA,CAAI,KAAA,GAAQ+kB,EAAAA,CAAWxrB,CAAAA,CAAAA,EACvByG,EAAAA,CAAI,MAAA,GAAS+kB,EAAAA,CAAWmU,WAAAA,CAAYnU,EAAAA,CAAWnD,CAAAA,CAAAA,GAAK,GAAA,CAAA,EACpD5hB,EAAAA,CAAI,MAAA,GAAS+kB,EAAAA,CAAWmU,WAAAA,CAAYnU,EAAAA,CAAWzD,CAAAA,CAAAA,GAAK,GAAA,CAAA,EACpDthB,EAAAA,CAAI,KAAA,GAAQ+kB,EAAAA,CAAWvD,CAAAA,CAAAA,EACvBxhB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGFm5B,EAAAA,GAAc,SAAA,CAAA,EAAA;MAAA,KAGX,IAAIjC,CAAAA,IAFTl3B,EAAAA,CAAI,UAAA,CAAA,EAEgBsvB,EAAAA,EACdA,EAAAA,CAAM/M,cAAAA,CAAe2U,CAAAA,CAAAA,KAAAA,CAEA,CAAA,KAArBhS,CAAAA,IAAAA,CACsB,CAAA,KAArBA,CAAAA,IAA6BC,CAAAA,CAAU5C,cAAAA,CAAe2U,CAAAA,CAAAA,CAAAA,IAEvDl3B,EAAAA,CAAI,GAAA,GAAMk3B,CAAAA,GAAU,GAAA,GAAM5H,EAAAA,CAAM4H,CAAAA,CAAAA,CAAS7T,YAAAA,GAAe,MAAA,CAAA;MAI9DrjB,EAAAA,CAAI,IAAA,CAAA;IAAA,CAAA;IAGFo5B,EAAAA,GAAwB,SAAA,CAAA,EAAA;MAAA,IACtBhsB,MAAAA,CAAOC,IAAAA,CAAKoiB,EAAAA,CAAAA,CAAUp1B,MAAAA,GAAS,CAAA,EAAG;QAAA,KAE/B,IAAI24B,CAAAA,IADThzB,EAAAA,CAAI,aAAA,CAAA,EACmByvB,EAAAA,EAEnBA,EAAAA,CAASlN,cAAAA,CAAeyQ,CAAAA,CAAAA,IACxBvD,EAAAA,CAASuD,CAAAA,CAAAA,YAAuBvP,CAAAA,IAChCgM,EAAAA,CAASuD,CAAAA,CAAAA,CAAY3P,YAAAA,IAAgB,CAAA,IAErCrjB,EAAAA,CACE,GAAA,GAAMgzB,CAAAA,GAAa,GAAA,GAAMvD,EAAAA,CAASuD,CAAAA,CAAAA,CAAY3P,YAAAA,GAAe,MAAA,CAAA;QAKnE2M,EAAAA,CAAOrN,OAAAA,CAAQ,uBAAA,CAAA,EACf3iB,EAAAA,CAAI,IAAA,CAAA;MAAA;IAAA,CAAA;IAIJq5B,EAAAA,GAAuB,SAAA,CAASV,CAAAA,EAAAA;MAAAA,IAC9BvrB,MAAAA,CAAOC,IAAAA,CAAKoiB,EAAAA,CAAAA,CAAUp1B,MAAAA,GAAS,CAAA,EAAG;QAAA,KAE/B,IAAI24B,CAAAA,IADThzB,EAAAA,CAAI,aAAA,CAAA,EACmByvB,EAAAA,EAEnBA,EAAAA,CAASlN,cAAAA,CAAeyQ,CAAAA,CAAAA,IACxBvD,EAAAA,CAASuD,CAAAA,CAAAA,YAAuB5N,CAAAA,CAAIxB,aAAAA,IACpC6L,EAAAA,CAASuD,CAAAA,CAAAA,CAAY3P,YAAAA,IAAgB,CAAA,IACrCoM,EAAAA,CAASuD,CAAAA,CAAAA,CAAY3P,YAAAA,GAAesV,CAAAA,IAEpC34B,EAAAA,CACE,GAAA,GAAMgzB,CAAAA,GAAa,GAAA,GAAMvD,EAAAA,CAASuD,CAAAA,CAAAA,CAAY3P,YAAAA,GAAe,MAAA,CAAA;QAInE2M,EAAAA,CAAOrN,OAAAA,CAAQ,sBAAA,CAAA,EACf3iB,EAAAA,CAAI,IAAA,CAAA;MAAA;IAAA,CAAA;IAIJs5B,EAAAA,GAAiB,SAAA,CAAA,EAAA;MAAA,IACflsB,MAAAA,CAAOC,IAAAA,CAAKsiB,EAAAA,CAAAA,CAASt1B,MAAAA,GAAS,CAAA,EAAG;QAAA,IAC/B0+B,CAAAA;QAAAA,KAECA,CAAAA,IADL/4B,EAAAA,CAAI,eAAA,CAAA,EACc2vB,EAAAA,EAEdA,EAAAA,CAAQpN,cAAAA,CAAewW,CAAAA,CAAAA,IACvBpJ,EAAAA,CAAQoJ,CAAAA,CAAAA,CAAW1V,YAAAA,IAAgB,CAAA,IAEnCrjB,EAAAA,CAAI,GAAA,GAAM+4B,CAAAA,GAAY,GAAA,GAAMpJ,EAAAA,CAAQoJ,CAAAA,CAAAA,CAAW1V,YAAAA,GAAe,MAAA,CAAA;QAIlE2M,EAAAA,CAAOrN,OAAAA,CAAQ,eAAA,CAAA,EACf3iB,EAAAA,CAAI,IAAA,CAAA;MAAA;IAAA,CAAA;IAIJu5B,EAAAA,GAAwB,SAAA,CAASC,CAAAA,EAAAA;MACnC/F,EAAAA,CAAuB+F,CAAAA,CAAUd,YAAAA,EAAAA,CAAc,CAAA,CAAA,EAC/C14B,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,+CAAA,CAAA,EACJm5B,EAAAA,CAAAA,CAAAA,EACAC,EAAAA,CAAAA,CAAAA,EACAC,EAAAA,CAAqBG,CAAAA,CAAUb,SAAAA,CAAAA,EAC/BW,EAAAA,CAAAA,CAAAA,EACAN,EAAAA,CAAAA,CAAAA,EACAh5B,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGFy5B,EAAAA,GAAe,SAAA,CAAA,EAAA;MAAA,IAablB,CAAAA,GAAgC,EAAA;MAEpCtB,EAAAA,CAAAA,CAAAA,EACA6B,EAAAA,CAAAA,CAAAA,EACAvB,EAAAA,CAAAA,CAAAA,EACAqB,EAAAA,CAAYL,CAAAA,CAAAA,EAEZvI,EAAAA,CAAOrN,OAAAA,CAAQ,cAAA,CAAA,EACf4V,CAAAA,CAA8BtX,OAAAA,CAAQsY,EAAAA,CAAAA,EACtCA,EAAAA,CAAsB;QACpBb,YAAAA,EAAcpM,EAAAA;QACdqM,SAAAA,EAAWe,MAAAA,CAAOC;MAAAA,CAAAA,CAAAA,EAEpB3J,EAAAA,CAAOrN,OAAAA,CAAQ,kBAAA,CAAA;IAAA,CAAA;IAGbiX,EAAAA,GAAuB,SAAA,CAAA,EAAA;MACzB5J,EAAAA,CAAOrN,OAAAA,CAAQ,sBAAA,CAAA;MAAA,KACV,IAAIrpB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyyB,EAAAA,CAAkB1xB,MAAAA,EAAQf,CAAAA,EAAAA,EAAK;QAAA,IAC7Cs6B,CAAAA,GAAM7H,EAAAA,CAAkBzyB,CAAAA,CAAAA;QAC5Bm6B,EAAAA,CAAuBG,CAAAA,CAAIC,KAAAA,EAAAA,CAAO,CAAA,CAAA,EAClC7zB,EAAAA,CAAI4zB,CAAAA,CAAI/H,OAAAA,CAAAA,EACR7rB,EAAAA,CAAI,QAAA,CAAA;MAAA;MAENgwB,EAAAA,CAAOrN,OAAAA,CAAQ,0BAAA,CAAA;IAAA,CAAA;IAGbkX,EAAAA,GAA0B,SAAA,CAAShD,CAAAA,EAAAA;MACrCtH,EAAAA,CAAQsH,CAAAA,CAAKiD,QAAAA,CAAAA,GAAYvK,EAAAA,CAAQsH,CAAAA,CAAKiD,QAAAA,CAAAA,IAAa,CAAA,CAAA,EACnDvK,EAAAA,CAAQsH,CAAAA,CAAKiD,QAAAA,CAAAA,CAAUjD,CAAAA,CAAK9N,SAAAA,CAAAA,GAAa8N,CAAAA,CAAKr/B,EAAAA;IAAAA,CAAAA;IAG5CuiC,EAAAA,GAAU,SAAA,CACZhD,CAAAA,EACA+C,CAAAA,EACA/Q,CAAAA,EACAiO,CAAAA,EACAgD,CAAAA,EAAAA;MAAAA,IAEInD,CAAAA,GAAO;QACTr/B,EAAAA,EAAI,GAAA,GAAA,CAAO4V,MAAAA,CAAOC,IAAAA,CAAKiiB,EAAAA,CAAAA,CAAOj1B,MAAAA,GAAS,CAAA,EAAG8K,QAAAA,CAAS,EAAA,CAAA;QACnD4xB,cAAAA,EAAgBA,CAAAA;QAChB+C,QAAAA,EAAUA,CAAAA;QACV/Q,SAAAA,EAAWA,CAAAA;QACXiO,QAAAA,EAAUA,CAAAA;QACVgD,cAAAA,EAAgBA,CAAAA,IAAAA,CAAkB,CAAA;QAClCC,QAAAA,EAAU,CAAA;MAAA,CAAA;MAAA,OAGZjK,EAAAA,CAAOrN,OAAAA,CAAQ,SAAA,EAAW;QACxBkU,IAAAA,EAAMA,CAAAA;QACNqD,QAAAA,EAAUhpB;MAAAA,CAAAA,CAAAA,EAGZoe,EAAAA,CAAMuH,CAAAA,CAAKr/B,EAAAA,CAAAA,GAAMq/B,CAAAA,EACjBgD,EAAAA,CAAwBhD,CAAAA,CAAAA,EACjBA,CAAAA,CAAKr/B,EAAAA;IAAAA,CAAAA;IAGV2iC,EAAAA,GAAW,SAAA,CAASC,CAAAA,EAAAA;MAAAA,KACjB,IAAI9gC,CAAAA,GAAI,CAAA,EAAGgB,CAAAA,GAAI0yB,EAAAA,CAAc3yB,MAAAA,EAAQf,CAAAA,GAAIgB,CAAAA,EAAGhB,CAAAA,EAAAA,EAAK;QAAA,IAChD49B,CAAAA,GAAU6C,EAAAA,CAAQjyB,IAAAA,CACpBoJ,IAAAA,EACAkpB,CAAAA,CAAa9gC,CAAAA,CAAAA,CAAG,CAAA,CAAA,EAChB8gC,CAAAA,CAAa9gC,CAAAA,CAAAA,CAAG,CAAA,CAAA,EAChB8gC,CAAAA,CAAa9gC,CAAAA,CAAAA,CAAG,CAAA,CAAA,EAChB0zB,EAAAA,CAAc1zB,CAAAA,CAAAA,CAAG,CAAA,CAAA,EAAA,CACjB,CAAA,CAAA;QAAA,CAGuB,CAAA,KAArB4rB,CAAAA,KACFC,CAAAA,CAAU+R,CAAAA,CAAAA,GAAAA,CAAW,CAAA,CAAA;QAAA,IAGnBmD,CAAAA,GAAQD,CAAAA,CAAa9gC,CAAAA,CAAAA,CAAG,CAAA,CAAA,CAAGkM,KAAAA,CAAM,GAAA,CAAA;QACrCq0B,EAAAA,CAAwB;UACtBriC,EAAAA,EAAI0/B,CAAAA;UACJ4C,QAAAA,EAAUO,CAAAA,CAAM,CAAA,CAAA;UAChBtR,SAAAA,EAAWsR,CAAAA,CAAM,CAAA,CAAA,IAAM;QAAA,CAAA,CAAA;MAAA;MAG3BrK,EAAAA,CAAOrN,OAAAA,CAAQ,UAAA,EAAY;QACzB2M,KAAAA,EAAOA,EAAAA;QACPgL,UAAAA,EAAY/K;MAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAIZgL,EAAAA,GAAO,SAAA,CAAoBv1B,CAAAA,EAAAA;MAAAA,OAC7BA,CAAAA,CAAGw1B,GAAAA,GAAM,YAAA;QAAA,IAAA;UAAA,OAEEx1B,CAAAA,CAAG0F,KAAAA,CAAMwG,IAAAA,EAAMvG,SAAAA,CAAAA;QAAAA,CACtB,QAAOvS,CAAAA,EAAAA;UAAAA,IACH0W,CAAAA,GAAQ1W,CAAAA,CAAE0W,KAAAA,IAAS,EAAA;UAAA,CAClBA,CAAAA,CAAMzJ,OAAAA,CAAQ,MAAA,CAAA,KAASyJ,CAAAA,GAAQA,CAAAA,CAAMtJ,KAAAA,CAAM,MAAA,CAAA,CAAQ,CAAA,CAAA,CAAA;UAAA,IACpD3K,CAAAA,GACF,oBAAA,GACAiU,CAAAA,CAAMtJ,KAAAA,CAAM,IAAA,CAAA,CAAM,CAAA,CAAA,CAAGA,KAAAA,CAAM,GAAA,CAAA,CAAK,CAAA,CAAA,GAChC,IAAA,GACApN,CAAAA,CAAE4qB,OAAAA;UAAAA,IAAAA,CACAlS,CAAAA,CAAaM,OAAAA,EAAAA,MAIT,IAAIxC,KAAAA,CAAM/T,CAAAA,CAAAA;UAHhBiW,CAAAA,CAAaM,OAAAA,CAAQ/Y,KAAAA,CAAMwC,CAAAA,EAAGzC,CAAAA,CAAAA,EAC1B0Y,CAAAA,CAAa2pB,KAAAA,IAAOA,KAAAA,CAAM5/B,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,EAMpCmK,CAAAA,CAAGw1B,GAAAA,CAAIE,GAAAA,GAAM11B,CAAAA,EACNA,CAAAA,CAAGw1B,GAAAA;IAAAA,CAAAA;IAGRG,EAAAA,GAAe,SAAA,CAASC,CAAAA,EAAMC,CAAAA,EAAAA;MAAAA,IAiD5BvhC,CAAAA,EACFgB,CAAAA,EACAwgC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAv1B,CAAAA,EACAw1B,CAAAA;MAAAA,IAGFL,CAAAA,GAAAA,CADAD,CAAAA,GAAQA,CAAAA,IAAS,CAAA,CAAA,EACMC,cAAAA,IAAkB,SAAA,EACzCE,CAAAA,GAAiBH,CAAAA,CAAMG,cAAAA,EAAAA,CAYpBH,CAAAA,CAAMO,UAAAA,IAAcJ,CAAAA,KACrB1L,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe+K,QAAAA,IACrB3K,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe+K,QAAAA,CAASa,CAAAA,CAAAA,IAC9BxL,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe+K,QAAAA,CAASa,CAAAA,CAAAA,CAAgB9D,QAAAA,KAE9C+D,CAAAA,GAAgBzL,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe+K,QAAAA,CAASa,CAAAA,CAAAA,CAAgB9D,QAAAA,EAAAA,CAGzDgE,CAAAA,IAAkB1L,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe8H,QAAAA,KAC1CgE,CAAAA,GAAiB1L,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe8H,QAAAA,CAAAA,EAAAA,CAInCgE,CAAAA,IAAkBD,CAAAA,CAAcM,SAAAA,KACnCL,CAAAA,GAAiBD,CAAAA,CAAcM,SAAAA,CAAU,CAAA,CAAA,CAAA,EAGb,QAAA,IAAA,OAAnBL,CAAAA,KACTA,CAAAA,GAAiBD,CAAAA,CAAcC,CAAAA,CAAAA,CAAAA,EAK7BA,CAAAA,CAAAA,EAAgB;QAAA,KAClBE,CAAAA,GAAAA,CAAY,CAAA,EACZD,CAAAA,GAAU,EAAA,EACL3hC,CAAAA,GAAI,CAAA,EAAGgB,CAAAA,GAAIsgC,CAAAA,CAAKvgC,MAAAA,EAAQf,CAAAA,GAAIgB,CAAAA,EAAGhB,CAAAA,EAAAA,EAAAA,CAClCqM,CAAAA,GAAKq1B,CAAAA,CAAeJ,CAAAA,CAAKvyB,UAAAA,CAAW/O,CAAAA,CAAAA,CAAAA,IAElC2hC,CAAAA,CAAQz8B,IAAAA,CAAKqN,MAAAA,CAAOC,YAAAA,CAAanG,CAAAA,CAAAA,CAAAA,GAEjCs1B,CAAAA,CAAQz8B,IAAAA,CAAKo8B,CAAAA,CAAKthC,CAAAA,CAAAA,CAAAA,EAKhB2hC,CAAAA,CAAQ3hC,CAAAA,CAAAA,CAAG+O,UAAAA,CAAW,CAAA,CAAA,IAAM,CAAA,KAE9B6yB,CAAAA,GAAAA,CAAY,CAAA,CAAA;QAGhBN,CAAAA,GAAOK,CAAAA,CAAQnb,IAAAA,CAAK,EAAA,CAAA;MAAA;MAAA,KAIxBxmB,CAAAA,GAAIshC,CAAAA,CAAKvgC,MAAAA,EAAAA,KAEYuzB,CAAAA,KAAdsN,CAAAA,IAAiC,CAAA,KAAN5hC,CAAAA,GAC5BshC,CAAAA,CAAKvyB,UAAAA,CAAW/O,CAAAA,GAAI,CAAA,CAAA,IAAM,CAAA,KAE5B4hC,CAAAA,GAAAA,CAAY,CAAA,CAAA,EAEd5hC,CAAAA,EAAAA;MAAAA,IAAAA,CAEG4hC,CAAAA,EAAAA,OACIN,CAAAA;MAAAA,KAGTK,CAAAA,GAAUJ,CAAAA,CAAMS,KAAAA,GAAQ,EAAA,GAAK,CAAC,GAAA,EAAK,GAAA,CAAA,EAC9BhiC,CAAAA,GAAI,CAAA,EAAGgB,CAAAA,GAAIsgC,CAAAA,CAAKvgC,MAAAA,EAAQf,CAAAA,GAAIgB,CAAAA,EAAGhB,CAAAA,EAAAA,EAAK;QAAA,IAAA,CAEvC6hC,CAAAA,GAAAA,CADAx1B,CAAAA,GAAKi1B,CAAAA,CAAKvyB,UAAAA,CAAW/O,CAAAA,CAAAA,KACT,CAAA,KACD,CAAA,EAAA,MAEH,IAAIsV,KAAAA,CACR,wBAAA,GACEtV,CAAAA,GACA,cAAA,GACAshC,CAAAA,GACA,mDAAA,CAAA;QAGNK,CAAAA,CAAQz8B,IAAAA,CAAK28B,CAAAA,CAAAA,EACbF,CAAAA,CAAQz8B,IAAAA,CAAKmH,CAAAA,IAAMw1B,CAAAA,IAAO,CAAA,CAAA,CAAA;MAAA;MAAA,OAErBtvB,MAAAA,CAAOC,YAAAA,CAAapB,KAAAA,CAAAA,KAAMkjB,CAAAA,EAAWqN,CAAAA,CAAAA;IAAAA,CAAAA;IAG1CM,EAAAA,GAAanW,CAAAA,CAAIE,WAAAA,CAAYiW,SAAAA,GAAYnW,CAAAA,CAAImW,SAAAA,GAAY,UAC3DX,CAAAA,EACAC,CAAAA,EAAAA;MAAAA,OAeOF,EAAAA,CAAaC,CAAAA,EAAMC,CAAAA,CAAAA,CACvBt1B,OAAAA,CAAQ,KAAA,EAAO,MAAA,CAAA,CACfA,OAAAA,CAAQ,KAAA,EAAO,KAAA,CAAA,CACfA,OAAAA,CAAQ,KAAA,EAAO,KAAA,CAAA;IAAA,CAAA;IAGhBi2B,EAAAA,GAAapW,CAAAA,CAAIE,WAAAA,CAAYkW,SAAAA,GAAY,UAASjX,CAAAA,EAAAA;MACpDyH,EAAAA,CAAAA,EAAQ8D,EAAAA,CAAAA,GAAQ,EAAA,EAChBC,EAAAA,CAAaD,EAAAA,CAAAA,GAAQ;QACnB+D,KAAAA,EAAO,CAAA;QACPgC,aAAAA,EAAe,CAAA;QACfnR,QAAAA,EAAUgV,MAAAA,CAAOhV,CAAAA,CAAAA;QACjB4R,MAAAA,EAAQ,IAAA;QACRF,QAAAA,EAAU,IAAA;QACVD,OAAAA,EAAS,IAAA;QACTE,OAAAA,EAAS,IAAA;QACTP,QAAAA,EAAU;UACRC,WAAAA,EAAa,CAAA;UACbC,WAAAA,EAAa,CAAA;UACbC,SAAAA,EAAWyD,MAAAA,CAAOnV,CAAAA,CAAO,CAAA,CAAA,CAAA;UACzB2R,SAAAA,EAAWwD,MAAAA,CAAOnV,CAAAA,CAAO,CAAA,CAAA;QAAA;MAAA,CAAA,EAG7BkX,EAAAA,CAAS3L,EAAAA,CAAAA,EACTrD,EAAAA,CAAqBT,EAAAA,CAAMP,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAGzBiQ,EAAAA,GAAW,SAAA,CAASC,CAAAA,EAAYC,CAAAA,EAAAA;MAAAA,IAC9BC,CAAAA,EAAYxE,CAAAA,EAAOC,CAAAA;MAAAA,QAEvBjT,CAAAA,GAAcuX,CAAAA,IAAmBvX,CAAAA,EAEP,QAAA,IAAA,OAAfsX,CAAAA,KACTE,CAAAA,GAAa7T,CAAAA,CAAc2T,CAAAA,CAAWrrB,WAAAA,CAAAA,CAAAA,CAAAA,EAClCrF,KAAAA,CAAMC,OAAAA,CAAQ2wB,CAAAA,CAAAA,KAChBxE,CAAAA,GAAQwE,CAAAA,CAAW,CAAA,CAAA,EACnBvE,CAAAA,GAASuE,CAAAA,CAAW,CAAA,CAAA,CAAA,CAAA,EAIpB5wB,KAAAA,CAAMC,OAAAA,CAAQywB,CAAAA,CAAAA,KAChBtE,CAAAA,GAAQsE,CAAAA,CAAW,CAAA,CAAA,GAAKnT,EAAAA,EACxB8O,CAAAA,GAASqE,CAAAA,CAAW,CAAA,CAAA,GAAKnT,EAAAA,CAAAA,EAGvB/J,KAAAA,CAAM4Y,CAAAA,CAAAA,KACRA,CAAAA,GAAQ9S,CAAAA,CAAO,CAAA,CAAA,EACf+S,CAAAA,GAAS/S,CAAAA,CAAO,CAAA,CAAA,CAAA,EAAA,CAGd8S,CAAAA,GAAQ,KAAA,IAASC,CAAAA,GAAS,KAAA,MAC5BlmB,CAAAA,CAAQC,IAAAA,CACN,wGAAA,CAAA,EAEFgmB,CAAAA,GAAQ56B,IAAAA,CAAKkH,GAAAA,CAAI,KAAA,EAAO0zB,CAAAA,CAAAA,EACxBC,CAAAA,GAAS76B,IAAAA,CAAKkH,GAAAA,CAAI,KAAA,EAAO2zB,CAAAA,CAAAA,CAAAA,EAG3B/S,CAAAA,GAAS,CAAC8S,CAAAA,EAAOC,CAAAA,CAAAA,EAETjT,CAAAA,CAAYpP,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA;QAAA,KACvB,GAAA;UACCqiB,CAAAA,GAASD,CAAAA,KACX9S,CAAAA,GAAS,CAAC+S,CAAAA,EAAQD,CAAAA,CAAAA,CAAAA;UAAAA;QAAAA,KAGjB,GAAA;UACCA,CAAAA,GAAQC,CAAAA,KACV/S,CAAAA,GAAS,CAAC+S,CAAAA,EAAQD,CAAAA,CAAAA,CAAAA;MAAAA;MAKxBmE,EAAAA,CAAUjX,CAAAA,CAAAA,EAGVuX,EAAAA,CAAaC,EAAAA,CAAAA,EAEb/7B,EAAAA,CAAIg8B,EAAAA,CAAAA,EAEc,CAAA,KAAdC,EAAAA,IACFj8B,EAAAA,CAAIi8B,EAAAA,GAAY,IAAA,CAAA,EAEC,CAAA,KAAfC,EAAAA,IACFl8B,EAAAA,CAAIk8B,EAAAA,GAAa,IAAA,CAAA,EAEnBlM,EAAAA,CAAOrN,OAAAA,CAAQ,SAAA,EAAW;QACxB+S,UAAAA,EAAY5F;MAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAIZqM,EAAAA,GAAc,SAAA,CAASvgC,CAAAA,EAAAA;MACrBA,CAAAA,GAAI,CAAA,IAAKA,CAAAA,IAAKk0B,EAAAA,KAChB9D,EAAAA,CAAMoQ,MAAAA,CAAOxgC,CAAAA,EAAG,CAAA,CAAA,EAChBm0B,EAAAA,CAAaqM,MAAAA,CAAOxgC,CAAAA,EAAG,CAAA,CAAA,EACvBk0B,EAAAA,EAAAA,EACIrE,CAAAA,GAAcqE,EAAAA,KAChBrE,CAAAA,GAAcqE,EAAAA,CAAAA,EAAAA,IAAAA,CAEXuM,OAAAA,CAAQ5Q,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAIbgQ,EAAAA,GAAW,SAAA,CAAS7/B,CAAAA,EAAAA;MAClBA,CAAAA,GAAI,CAAA,IAAKA,CAAAA,IAAKk0B,EAAAA,KAChBrE,CAAAA,GAAc7vB,CAAAA,CAAAA;IAAAA,CAAAA;IAId0gC,EAAAA,GAAoBlX,CAAAA,CAAIE,WAAAA,CAAYgX,gBAAAA,GAAmBlX,CAAAA,CAAIkX,gBAAAA,GAAmB,YAAA;MAAA,OACzEtQ,EAAAA,CAAM3xB,MAAAA,GAAS,CAAA;IAAA,CAAA;IAiBpBkiC,EAAAA,GAAU,SAAA,CAASzC,CAAAA,EAAU/Q,CAAAA,EAAW5E,CAAAA,EAAAA;MAAAA,IAExCqY,CAAAA;QADErc,CAAAA,GAAAA,KAAMyN,CAAAA;MAAAA,OAEVzJ,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,EAErB2V,CAAAA,GAAAA,KACelM,CAAAA,KAAbkM,CAAAA,GAAyBA,CAAAA,GAAWxK,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe4K,QAAAA,EAC3D/Q,CAAAA,GAAAA,KACgB6E,CAAAA,KAAd7E,CAAAA,GAA0BA,CAAAA,GAAYuG,EAAAA,CAAMJ,EAAAA,CAAAA,CAAenG,SAAAA,EAC7DyT,CAAAA,GAAoB1C,CAAAA,CAASxpB,WAAAA,CAAAA,CAAAA,EAAAA,KAGIsd,CAAAA,KAA/B2B,EAAAA,CAAQiN,CAAAA,CAAAA,IAAAA,KACkC5O,CAAAA,KAA1C2B,EAAAA,CAAQiN,CAAAA,CAAAA,CAAmBzT,CAAAA,CAAAA,GAE3B5I,CAAAA,GAAMoP,EAAAA,CAAQiN,CAAAA,CAAAA,CAAmBzT,CAAAA,CAAAA,GAAAA,KAEX6E,CAAAA,KAAtB2B,EAAAA,CAAQuK,CAAAA,CAAAA,IAAAA,KACyBlM,CAAAA,KAAjC2B,EAAAA,CAAQuK,CAAAA,CAAAA,CAAU/Q,CAAAA,CAAAA,GAElB5I,CAAAA,GAAMoP,EAAAA,CAAQuK,CAAAA,CAAAA,CAAU/Q,CAAAA,CAAAA,GAAAA,CAEO,CAAA,KAA3B5E,CAAAA,CAAQsY,cAAAA,IACVrrB,CAAAA,CAAQC,IAAAA,CACN,yCAAA,GACEyoB,CAAAA,GACA,MAAA,GACA/Q,CAAAA,GACA,gDAAA,CAAA,EAKH5I,CAAAA,IAAQgE,CAAAA,CAAQuY,UAAAA,IAER,IAAA,KADXvc,CAAAA,GAAMoP,EAAAA,CAAO,KAAA,CAAUxG,CAAAA,CAAAA,CAAAA,KAErB5I,CAAAA,GAAMoP,EAAAA,CAAO,KAAA,CAAP,MAAA,CAAA,EAGHpP,CAAAA;IAAAA,CAAAA;IAGLwc,EAAAA,GAAWvX,CAAAA,CAAIE,WAAAA,CAAYqX,OAAAA,GAAU,YAAA;MAAA,IACnC3H,CAAAA,GAAWzB,EAAAA,CAAAA,CAAAA;QACX0B,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;UAAAA,OAChBA,CAAAA;QAAAA,CAAAA;MAAAA,KAOJ,IAAI4nB,CAAAA,IALiB,IAAA,KAAtB0E,CAAAA,KACFoQ,CAAAA,GAAYlQ,EAAAA,CAAWkQ,SAAAA,CAAUD,CAAAA,EAAU,CAAA,CAAA,CAAA,EAE7Ch1B,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,aAAA,GAAgBu7B,EAAAA,CAAUtG,CAAAA,CAAU,QAAA,GAAW/Q,CAAAA,CAAM0Y,OAAAA,CAAAA,CAAAA,GAAY,GAAA,CAAA,EACrDtO,EAAAA,EACVA,EAAAA,CAAmB/L,cAAAA,CAAepC,CAAAA,CAAAA,IAAQmO,EAAAA,CAAmBnO,CAAAA,CAAAA,IAC/DngB,EAAAA,CACE,GAAA,GACEmgB,CAAAA,CAAIlL,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,CAAGmV,WAAAA,CAAAA,CAAAA,GACjBjK,CAAAA,CAAIlL,MAAAA,CAAO,CAAA,CAAA,GACX,IAAA,GACAsmB,EAAAA,CAAUtG,CAAAA,CAAU3G,EAAAA,CAAmBnO,CAAAA,CAAAA,CAAAA,CAAAA,GACvC,GAAA,CAAA;MAIRngB,EAAAA,CAAI,iBAAA,GAAoBu7B,EAAAA,CAAUtG,CAAAA,CAAUhL,CAAAA,CAAAA,CAAAA,GAAiB,GAAA,CAAA,EAC7DjqB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGF68B,EAAAA,GAAczX,CAAAA,CAAIE,WAAAA,CAAYuX,UAAAA,GAAa,UAAS1Y,CAAAA,EAAAA;MAAAA,IAElD2Y,CAAAA,GAAAA,CADJ3Y,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,EAEXiI,mBAAAA,IAAuBA,EAAAA;MAAAA,QACjCmH,EAAAA,CAAAA,CAAAA,EACAvzB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,gBAAA,CAAA,EACJA,EAAAA,CAAI,SAAA,GAAY88B,CAAAA,GAAyB,MAAA,CAAA,EAEpC1P,EAAAA,KAAUA,EAAAA,GAAW,WAAA,CAAA,EAClBA,EAAAA;QAAAA,KACD,WAAA;UACHptB,EAAAA,CAAI,gCAAA,CAAA;UAAA;QAAA,KAED,YAAA;UACHA,EAAAA,CAAI,gCAAA,CAAA;UAAA;QAAA,KAED,UAAA;UACHA,EAAAA,CAAI,0BAAA,CAAA;UAAA;QAAA,KAED,UAAA;UACHA,EAAAA,CAAI,sCAAA,CAAA;UAAA;QAAA;UAAA,IAGA+8B,CAAAA,GAAM,EAAA,GAAK3P,EAAAA;UACoB,GAAA,KAA/B2P,CAAAA,CAAI9nB,MAAAA,CAAO8nB,CAAAA,CAAI1iC,MAAAA,GAAS,CAAA,CAAA,KAC1B+yB,EAAAA,GAAW/O,QAAAA,CAAS+O,EAAAA,CAAAA,GAAY,GAAA,CAAA,EACV,QAAA,IAAA,OAAbA,EAAAA,IACTptB,EAAAA,CAAI,oCAAA,GAAuC2pB,CAAAA,CAAGyD,EAAAA,CAAAA,GAAY,GAAA,CAAA;MAAA;MAAA,QAG3DU,EAAAA,KAAYA,EAAAA,GAAa,YAAA,CAAA,EACtBA,EAAAA;QAAAA,KACD,YAAA;UACH9tB,EAAAA,CAAI,wBAAA,CAAA;UAAA;QAAA,KAED,QAAA;UACHA,EAAAA,CAAI,yBAAA,CAAA;UAAA;QAAA,KAED,KAAA;QAAA,KACA,SAAA;UACHA,EAAAA,CAAI,4BAAA,CAAA;UAAA;QAAA,KAED,UAAA;UACHA,EAAAA,CAAI,6BAAA,CAAA;MAAA;MAGJwtB,EAAAA,IAQFxtB,EAAAA,CAAI,aAAA,GAAgBwtB,EAAAA,CAAAA,EAEtBwC,EAAAA,CAAOrN,OAAAA,CAAQ,YAAA,CAAA,EACf3iB,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,CAAA;IAAA,CAAA;IAGFg9B,EAAAA,GAAc5X,CAAAA,CAAIE,WAAAA,CAAY0X,UAAAA,GAAa,YAAA;MAC7Ch9B,EAAAA,CAAI,SAAA,CAAA,EACJA,EAAAA,CAAI,IAAA,CAAA,EACJA,EAAAA,CAAI,QAAA,IAAYqjB,EAAAA,GAAe,CAAA,CAAA,CAAA,EAE/BrjB,EAAAA,CAAI,QAAA,GAAWqjB,EAAAA,GAAe,MAAA,CAAA,EAC9BrjB,EAAAA,CAAI,QAAA,IAAYqjB,EAAAA,GAAe,CAAA,CAAA,GAAK,MAAA,CAAA,EACV,IAAA,KAAtBwB,CAAAA,IACF7kB,EAAAA,CAAI,WAAA,GAAc+kB,EAAAA,CAAWyO,GAAAA,GAAM,MAAA,CAAA,EAErCxzB,EAAAA,CAAI,SAAA,GAAY+gB,CAAAA,GAAS,KAAA,GAAQA,CAAAA,GAAS,KAAA,CAAA,EAC1C/gB,EAAAA,CAAI,IAAA,CAAA;IAAA,CAAA;IAGFi9B,EAAAA,GAAa7X,CAAAA,CAAIE,WAAAA,CAAY2X,SAAAA,GAAY,YAAA;MAC3Cj9B,EAAAA,CAAI,OAAA,GAAUulB,CAAAA,CAAAA,EACdvlB,EAAAA,CAAI,OAAA,CAAA;IAAA,CAAA;IAGFk9B,EAAAA,GAAW9X,CAAAA,CAAIE,WAAAA,CAAY4X,OAAAA,GAAU,YAAA;MAAA,IACnC1hC,CAAAA,GAAI,YAAA;MAERwE,EAAAA,CAAI,MAAA,CAAA,EACJA,EAAAA,CAAI,IAAA,IAAQqjB,EAAAA,GAAe,CAAA,CAAA,CAAA,EAC3BrjB,EAAAA,CAAI,qBAAA,CAAA;MAAA,KACC,IAAI1G,CAAAA,GAAI,CAAA,EAAGA,CAAAA,IAAK+pB,EAAAA,EAAc/pB,CAAAA,EAAAA,EAAK;QAEhB,UAAA,IAAA,OADTsyB,EAAAA,CAAQtyB,CAAAA,CAAAA,GAEnB0G,EAAAA,CAAAA,CAAKxE,CAAAA,GAAIowB,EAAAA,CAAQtyB,CAAAA,CAAAA,CAAAA,CAAAA,EAAMoF,KAAAA,CAAAA,CAAO,EAAA,CAAA,GAAM,WAAA,CAAA,GAAA,KAEV,CAAA,KAAfktB,EAAAA,CAAQtyB,CAAAA,CAAAA,GACjB0G,EAAAA,CAAAA,CAAKxE,CAAAA,GAAIowB,EAAAA,CAAQtyB,CAAAA,CAAAA,EAAIoF,KAAAA,CAAAA,CAAO,EAAA,CAAA,GAAM,WAAA,CAAA,GAElCsB,EAAAA,CAAI,qBAAA,CAAA;MAAA;IAAA,CAAA;IAMRm9B,EAAAA,GAAiB/X,CAAAA,CAAIE,WAAAA,CAAY6X,aAAAA,GAAgB,YAAA;MACnDhR,EAAAA,CAAAA,CAAAA,EACAM,EAAAA,CAAqBZ,EAAAA,CAAAA,EAErBmE,EAAAA,CAAOrN,OAAAA,CAAQ,eAAA,CAAA,EAEfsa,EAAAA,CAAAA,CAAAA,EACAxG,EAAAA,CAAAA,CAAAA,EACAmD,EAAAA,CAAAA,CAAAA,EACAH,EAAAA,CAAAA,CAAAA,EAC0B,IAAA,KAAtB5U,CAAAA,IAA4BoU,EAAAA,CAAAA,CAAAA,EAChC0D,EAAAA,CAAAA,CAAAA,EACAE,EAAAA,CAAAA,CAAAA;MAAAA,IAEIO,CAAAA,GAAetR,EAAAA;MAAAA,OACnBoR,EAAAA,CAAAA,CAAAA,EACAF,EAAAA,CAAAA,CAAAA,EACAh9B,EAAAA,CAAI,WAAA,CAAA,EACJA,EAAAA,CAAI,EAAA,GAAKo9B,CAAAA,CAAAA,EACTp9B,EAAAA,CAAI,OAAA,CAAA,EAEJysB,EAAAA,CAAqBT,EAAAA,CAAMP,CAAAA,CAAAA,CAAAA,EAEpBI,EAAAA,CAAQ/L,IAAAA,CAAK,IAAA,CAAA;IAAA,CAAA;IAGlBud,EAAAA,GAAWjY,CAAAA,CAAIE,WAAAA,CAAY+X,OAAAA,GAAU,UAAS9kC,CAAAA,EAAAA;MAAAA,OACzC,IAAIR,IAAAA,CAAK,CAAC80B,EAAAA,CAAet0B,CAAAA,CAAAA,CAAAA,EAAQ;QACtCP,IAAAA,EAAM;MAAA,CAAA,CAAA;IAAA,CAAA;IA4BNslC,EAAAA,GAAUlY,CAAAA,CAAIkY,MAAAA,GAASlY,CAAAA,CAAIE,WAAAA,CAAYgY,MAAAA,GAAS/C,EAAAA,CAAK,UACvDviC,CAAAA,EACAmsB,CAAAA,EAAAA;MAAAA,QAIuB,QAAA,IAAA,QAFvBA,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,CAAA,GAGnBA,CAAAA,GAAU;QACRlc,QAAAA,EAAUkc;MAAAA,CAAAA,GAGZA,CAAAA,CAAQlc,QAAAA,GAAWkc,CAAAA,CAAQlc,QAAAA,IAAY,eAAA,EAGjCjQ,CAAAA;QAAAA,KAAAA,KACD41B,CAAAA;UAAAA,OACIuP,EAAAA,CAAAA,CAAAA;QAAAA,KACJ,MAAA;UACH/X,CAAAA,CAAImY,IAAAA,CAAKpZ,CAAAA,CAAQlc,QAAAA,CAAAA;UAAAA;QAAAA,KAEd,aAAA;UAAA,OACI4kB,EAAAA,CAAesQ,EAAAA,CAAAA,CAAAA,CAAAA;QAAAA,KACnB,MAAA;UAAA,OACIE,EAAAA,CAAQF,EAAAA,CAAAA,CAAAA,CAAAA;QAAAA,KACZ,SAAA;QAAA,KACA,SAAA;UAAA,IAAA,KAG2B,CAAA,KAArBrsB,CAAAA,CAAajZ,GAAAA,IACwB,UAAA,IAAA,OAArCiZ,CAAAA,CAAajZ,GAAAA,CAAIC,eAAAA,EAAAA,OAGrBgZ,CAAAA,CAAajZ,GAAAA,IACZiZ,CAAAA,CAAajZ,GAAAA,CAAIC,eAAAA,CAAgBulC,EAAAA,CAAQF,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,KAC3C,CAAA;UAGF/rB,CAAAA,CAAQC,IAAAA,CACN,wGAAA,CAAA;UAAA;QAAA,KAID,eAAA;QAAA,KACA,eAAA;UAAA,IACCmsB,CAAAA,GAAU,EAAA;YACVC,CAAAA,GAAcN,EAAAA,CAAAA,CAAAA;UAAAA,IAAAA;YAEhBK,CAAAA,GAAU7qB,CAAAA,CAAK8qB,CAAAA,CAAAA;UAAAA,CACf,QAAOrlC,CAAAA,EAAAA;YACPolC,CAAAA,GAAU7qB,CAAAA,CAAK+qB,QAAAA,CAASC,kBAAAA,CAAmBF,CAAAA,CAAAA,CAAAA,CAAAA;UAAAA;UAAAA,OAG3C,gCAAA,GACAtZ,CAAAA,CAAQlc,QAAAA,GACR,UAAA,GACAu1B,CAAAA;QAAAA,KAEC,oBAAA;UAAA,IAEgD,iBAAA,KAAjDpwB,MAAAA,CAAOjW,SAAAA,CAAUgO,QAAAA,CAAS2C,IAAAA,CAAKgJ,CAAAA,CAAAA,EAC/B;YAAA,IACI8sB,CAAAA,GACF,yEAAA;cACEC,CAAAA,GACF,sIAAA;YAEE1Z,CAAAA,CAAQyZ,YAAAA,KACVA,CAAAA,GAAezZ,CAAAA,CAAQyZ,YAAAA,EACvBC,CAAAA,GAAY,EAAA,CAAA;YAAA,IAGVC,CAAAA,GACF,iIAAA,GAEAF,CAAAA,GACA,GAAA,GACAC,CAAAA,GACA,uCAAA,GACA3sB,IAAAA,CAAKosB,MAAAA,CAAO,eAAA,CAAA,GACZ,KAAA,GACAS,IAAAA,CAAKC,SAAAA,CAAU7Z,CAAAA,CAAAA,GACf,4BAAA;cACE8Z,CAAAA,GAAKntB,CAAAA,CAAaY,IAAAA,CAAAA,CAAAA;YAAAA,OAEX,IAAA,KAAPusB,CAAAA,IACFA,CAAAA,CAAG1rB,QAAAA,CAASqa,KAAAA,CAAMkR,CAAAA,CAAAA,EAEbG,CAAAA;UAAAA;UAAAA,MAED,IAAIrvB,KAAAA,CACR,oEAAA,CAAA;QAAA,KAGD,gBAAA;UAAA,IAEgD,iBAAA,KAAjDxB,MAAAA,CAAOjW,SAAAA,CAAUgO,QAAAA,CAAS2C,IAAAA,CAAKgJ,CAAAA,CAAAA,EAC/B;YAAA,IAEIotB,CAAAA,GACF,gJAAA,IAFa/Z,CAAAA,CAAQga,QAAAA,IAAY,iCAAA,CAAA,GAMjC,sBAAA,GACAha,CAAAA,CAAQlc,QAAAA,GALR,iDAAA;cAQEm2B,CAAAA,GAAiBttB,CAAAA,CAAaY,IAAAA,CAAAA,CAAAA;YAAAA,IAEX,IAAA,KAAnB0sB,CAAAA,EAAyB;cAC3BA,CAAAA,CAAe7rB,QAAAA,CAASqa,KAAAA,CAAMsR,CAAAA,CAAAA;cAAAA,IAC1BG,CAAAA,GAAQntB,IAAAA;cACZktB,CAAAA,CAAe7rB,QAAAA,CAAS+rB,eAAAA,CAAgBC,aAAAA,CACtC,YAAA,CAAA,CACA3sB,MAAAA,GAAS,YAAA;gBACTwsB,CAAAA,CAAe7rB,QAAAA,CAASuB,KAAAA,GAAQqQ,CAAAA,CAAQlc,QAAAA,EACxCm2B,CAAAA,CAAe7rB,QAAAA,CAAS+rB,eAAAA,CACrBC,aAAAA,CAAc,YAAA,CAAA,CACdC,aAAAA,CAAcC,oBAAAA,CAAqB/sB,IAAAA,CAClC2sB,CAAAA,CAAMf,MAAAA,CAAO,SAAA,CAAA,CAAA;cAAA,CAAA;YAAA;YAAA,OAIdc,CAAAA;UAAAA;UAAAA,MAED,IAAIxvB,KAAAA,CACR,gEAAA,CAAA;QAAA,KAGD,kBAAA;UAAA,IAEgD,iBAAA,KAAjDxB,MAAAA,CAAOjW,SAAAA,CAAUgO,QAAAA,CAAS2C,IAAAA,CAAKgJ,CAAAA,CAAAA,EAAAA,MAkBzB,IAAIlC,KAAAA,CACR,kEAAA,CAAA;UAAA,IAjBE8vB,CAAAA,GACF,iIAAA,GAIAxtB,IAAAA,CAAKosB,MAAAA,CAAO,eAAA,EAAiBnZ,CAAAA,CAAAA,GAJ7B,2BAAA;YAOEwa,CAAAA,GAAmB7tB,CAAAA,CAAaY,IAAAA,CAAAA,CAAAA;UAAAA,IACX,IAAA,KAArBitB,CAAAA,KACFA,CAAAA,CAAiBpsB,QAAAA,CAASqa,KAAAA,CAAM8R,CAAAA,CAAAA,EAChCC,CAAAA,CAAiBpsB,QAAAA,CAASuB,KAAAA,GAAQqQ,CAAAA,CAAQlc,QAAAA,CAAAA,EAExC02B,CAAAA,IAAsC,WAAA,IAAA,OAAXvqB,MAAAA,EAC7B,OAAOuqB,CAAAA;UAAAA;QAAAA,KAOR,SAAA;QAAA,KACA,SAAA;UAAA,OACK7tB,CAAAA,CAAayB,QAAAA,CAASa,QAAAA,CAASF,IAAAA,GAAOhC,IAAAA,CAAKosB,MAAAA,CACjD,eAAA,EACAnZ,CAAAA,CAAAA;QAAAA;UAAAA,OAGK,IAAA;MAAA;IAAA,CAAA,CAAA;IASTya,EAAAA,GAAY,SAAA,CAASC,CAAAA,EAAAA;MAAAA,OAAAA,CAEO,CAAA,KAA5B5zB,KAAAA,CAAMC,OAAAA,CAAQ+kB,EAAAA,CAAAA,IAAsBA,EAAAA,CAAS5qB,OAAAA,CAAQw5B,CAAAA,CAAAA,GAAAA,CAAe,CAAA;IAAA,CAAA;EAAA,QAIhEva,CAAAA;IAAAA,KACD,IAAA;MACHkE,EAAAA,GAAc,CAAA;MAAA;IAAA,KAEX,IAAA;MACHA,EAAAA,GAAc,EAAA,GAAK,IAAA;MAAA;IAAA,KAEhB,IAAA;MACHA,EAAAA,GAAc,EAAA,GAAK,IAAA;MAAA;IAAA,KAEhB,IAAA;MACHA,EAAAA,GAAc,EAAA;MAAA;IAAA,KAEX,IAAA;MAEDA,EAAAA,GAD6B,CAAA,IAA3BoW,EAAAA,CAAU,YAAA,CAAA,GACE,GAAA,GAEA,EAAA,GAAK,EAAA;MAAA;IAAA,KAGlB,IAAA;IAAA,KAGA,IAAA;MACHpW,EAAAA,GAAc,EAAA;MAAA;IAAA,KAEX,IAAA;MACHA,EAAAA,GAAc,CAAA;MAAA;IAAA;MAAA,IAGM,QAAA,IAAA,OAATlE,CAAAA,EAAAA,MAGH,IAAI1V,KAAAA,CAAM,gBAAA,GAAmB0V,CAAAA,CAAAA;MAFnCkE,EAAAA,GAAclE,CAAAA;EAAAA;EAAAA,IAMhBS,EAAAA,GAAa,IAAA;EACjBuG,CAAAA,CAAAA,CAAAA,EACAnB,CAAAA,CAAAA,CAAAA;EAAAA,IAEI2U,EAAAA,GAAe,SAAA,CAAS9J,CAAAA,EAAAA;MAAAA,OACA,IAAA,KAAtBnQ,CAAAA,GACKE,EAAAA,CAAWkQ,SAAAA,CAAUD,CAAAA,EAAU,CAAA,CAAA,GAEjC,UAASz8B,CAAAA,EAAAA;QAAAA,OACPA,CAAAA;MAAAA,CAAAA;IAAAA,CAAAA;IAOPwmC,EAAAA,GAAe3Z,CAAAA,CAAIE,WAAAA,CAAYyZ,WAAAA,GAAc3Z,CAAAA,CAAI2Z,WAAAA,GAAc,UACjEC,CAAAA,EAAAA;MAAAA,IAEIvgB,KAAAA,CAAMugB,CAAAA,CAAAA,IAAuBA,CAAAA,GAAqB,CAAA,IAAM,CAAA,EAAA,MACpD,IAAIpwB,KAAAA,CAAM,8CAAA,CAAA;MAAA,OAGX;QACLilB,KAAAA,EAFU9D,EAAAA,CAAaiP,CAAAA,CAAAA,CAAoBnL,KAAAA;QAG3C6B,UAAAA,EAAYsJ,CAAAA;QACZzI,WAAAA,EAAaxG,EAAAA,CAAaiP,CAAAA;MAAAA,CAAAA;IAAAA,CAAAA;IAI1BC,EAAAA,GAAsB7Z,CAAAA,CAAIE,WAAAA,CAAY2Z,kBAAAA,GAAqB,UAC7DpL,CAAAA,EAAAA;MAAAA,IAEIpV,KAAAA,CAAMoV,CAAAA,CAAAA,IAAUA,CAAAA,GAAQ,CAAA,IAAM,CAAA,EAAA,MAC1B,IAAIjlB,KAAAA,CAAM,qDAAA,CAAA;MAAA,KAEb,IAAI8mB,CAAAA,IAAc3F,EAAAA,EAAAA,IACjBA,EAAAA,CAAa2F,CAAAA,CAAAA,CAAY7B,KAAAA,KAAUA,CAAAA,EAAAA;MAAAA,OAIlCkL,EAAAA,CAAYrJ,CAAAA,CAAAA;IAAAA,CAAAA;IAGjBwJ,EAAAA,GAAsB9Z,CAAAA,CAAIE,WAAAA,CAAY4Z,kBAAAA,GAAqB9Z,CAAAA,CAAI8Z,kBAAAA,GAAqB,YAAA;MAAA,OAC/E;QACLrL,KAAAA,EAAO9D,EAAAA,CAAatE,CAAAA,CAAAA,CAAaoI,KAAAA;QACjC6B,UAAAA,EAAYjK,CAAAA;QACZ8K,WAAAA,EAAaxG,EAAAA,CAAatE,CAAAA;MAAAA,CAAAA;IAAAA,CAAAA;EAgB9BrG,CAAAA,CAAI+Z,OAAAA,GAAU,YAAA;IAAA,OACZzD,EAAAA,CAAShxB,KAAAA,CAAMwG,IAAAA,EAAMvG,SAAAA,CAAAA,EACduG,IAAAA;EAAAA,CAAAA,EAmBTkU,CAAAA,CAAIiX,OAAAA,GAAU,YAAA;IAAA,OACZZ,EAAAA,CAAS/wB,KAAAA,CAAMwG,IAAAA,EAAMvG,SAAAA,CAAAA,EACrB8hB,EAAAA,CAAqB3kB,IAAAA,CAAKoJ,IAAAA,EAAM8a,EAAAA,CAAMP,CAAAA,CAAAA,CAAAA,EAC/Bva,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIga,UAAAA,GAAa,UAASC,CAAAA,EAAAA;IAAAA,OAAAA,IAAAA,CACnBF,OAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CACAG,QAAAA,CAAS7T,CAAAA,EAAa4T,CAAAA,CAAAA,EACpBnuB,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIka,QAAAA,GAAW,UAASC,CAAAA,EAAYF,CAAAA,EAAAA;IAAAA,IAC9BG,CAAAA,EAAUC,CAAAA;IAAAA,IACVF,CAAAA,GAAaF,CAAAA,EAAY;MAC3BG,CAAAA,GAAWxT,EAAAA,CAAMuT,CAAAA,CAAAA,EACjBE,CAAAA,GAAkB1P,EAAAA,CAAawP,CAAAA,CAAAA;MAAAA,KAC1B,IAAIjmC,CAAAA,GAAIimC,CAAAA,EAAYjmC,CAAAA,GAAI+lC,CAAAA,EAAY/lC,CAAAA,EAAAA,EACvC0yB,EAAAA,CAAM1yB,CAAAA,CAAAA,GAAK0yB,EAAAA,CAAM1yB,CAAAA,GAAI,CAAA,CAAA,EACrBy2B,EAAAA,CAAaz2B,CAAAA,CAAAA,GAAKy2B,EAAAA,CAAaz2B,CAAAA,GAAI,CAAA,CAAA;MAErC0yB,EAAAA,CAAMqT,CAAAA,CAAAA,GAAcG,CAAAA,EACpBzP,EAAAA,CAAasP,CAAAA,CAAAA,GAAcI,CAAAA,EAAAA,IAAAA,CACtBpD,OAAAA,CAAQgD,CAAAA,CAAAA;IAAAA,CAAAA,MACR,IAAIE,CAAAA,GAAaF,CAAAA,EAAY;MAClCG,CAAAA,GAAWxT,EAAAA,CAAMuT,CAAAA,CAAAA,EACjBE,CAAAA,GAAkB1P,EAAAA,CAAawP,CAAAA,CAAAA;MAAAA,KAC1B,IAAI/lC,CAAAA,GAAI+lC,CAAAA,EAAY/lC,CAAAA,GAAI6lC,CAAAA,EAAY7lC,CAAAA,EAAAA,EACvCwyB,EAAAA,CAAMxyB,CAAAA,CAAAA,GAAKwyB,EAAAA,CAAMxyB,CAAAA,GAAI,CAAA,CAAA,EACrBu2B,EAAAA,CAAav2B,CAAAA,CAAAA,GAAKu2B,EAAAA,CAAav2B,CAAAA,GAAI,CAAA,CAAA;MAErCwyB,EAAAA,CAAMqT,CAAAA,CAAAA,GAAcG,CAAAA,EACpBzP,EAAAA,CAAasP,CAAAA,CAAAA,GAAcI,CAAAA,EAAAA,IAAAA,CACtBpD,OAAAA,CAAQgD,CAAAA,CAAAA;IAAAA;IAAAA,OAERnuB,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIsa,UAAAA,GAAa,YAAA;IAAA,OACfvD,EAAAA,CAAYzxB,KAAAA,CAAMwG,IAAAA,EAAMvG,SAAAA,CAAAA,EACjBuG,IAAAA;EAAAA,CAAAA,EAuCTkU,CAAAA,CAAIE,WAAAA,CAAYsV,IAAAA,GAAOxV,CAAAA,CAAIwV,IAAAA,GAAO,UAASA,CAAAA,EAAM5gC,CAAAA,EAAG2S,CAAAA,EAAGwX,CAAAA,EAASwb,CAAAA,EAAAA;IAAAA,IAe1DC,CAAAA;MAASC,CAAAA;MAAIC,CAAAA;MAAOC,CAAAA;MAAOC,CAAAA;MAAWC,CAAAA;MAAUpF,CAAAA;MAAOqF,CAAAA;MAkBvDC,CAAAA;MAnBA9B,CAAAA,GAAAA,CADJla,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,EACDka,KAAAA,IAASntB,IAAAA;IAAAA,IASX,QAAA,IAAA,OAAT0pB,CAAAA,IACM,QAAA,IAAA,OAAN5gC,CAAAA,KACO,QAAA,IAAA,OAAN2S,CAAAA,IAAkB1B,KAAAA,CAAMC,OAAAA,CAAQyB,CAAAA,CAAAA,CAAAA,EACxC;MAAA,IACIyzB,CAAAA,GAAMzzB,CAAAA;MACVA,CAAAA,GAAI3S,CAAAA,EACJA,CAAAA,GAAI4gC,CAAAA,EACJA,CAAAA,GAAOwF,CAAAA;IAAAA;IAAAA,IAKLz1B,SAAAA,CAAU,CAAA,CAAA,YAAc4d,EAAAA,IAAAA,CAAW,CAAA,IAErCuX,CAAAA,GAAQn1B,SAAAA,CAAU,CAAA,CAAA,EAClBo1B,CAAAA,GAAQp1B,SAAAA,CAAU,CAAA,CAAA,EAEG,QAAA,KAAjB/T,IAAAA,eAAAA,EAJJikC,CAAAA,GAAQlwB,SAAAA,CAAU,CAAA,CAAA,CAAA,IAIyB,IAAA,KAAVkwB,CAAAA,KACV,QAAA,IAAA,OAAViF,CAAAA,KACTC,CAAAA,GAAQD,CAAAA,EACRA,CAAAA,GAAQ,IAAA,CAAA,EAEW,QAAA,IAAA,OAAVjF,CAAAA,KACTkF,CAAAA,GAAQlF,CAAAA,EACRA,CAAAA,GAAQ,IAAA,CAAA,EAEW,QAAA,IAAA,OAAVA,CAAAA,KACTiF,CAAAA,GAAQjF,CAAAA,EACRA,CAAAA,GAAQ,IAAA,CAAA,EAEV1W,CAAAA,GAAU;MACR0W,KAAAA,EAAOA,CAAAA;MACPiF,KAAAA,EAAOA,CAAAA;MACPC,KAAAA,EAAOA;IAAAA,CAAAA,CAAAA,KAIX3W,CAAAA,CACE,uDAAA,CAAA,EAEF+W,CAAAA,GAAuBR,CAAAA,CAAAA,EAGrBlhB,KAAAA,CAAMzkB,CAAAA,CAAAA,IAAMykB,KAAAA,CAAM9R,CAAAA,CAAAA,IAAlB8R,IAAAA,IAA+Bmc,CAAAA,EAAAA,MAC3B,IAAIhsB,KAAAA,CAAM,wCAAA,CAAA;IAAA,IAGE,CAAA,KAAhBgsB,CAAAA,CAAKvgC,MAAAA,EAAAA,OACAgkC,CAAAA;IAAAA,IAGLgC,CAAAA,GAAO,EAAA;MACPC,CAAAA,GAAAA,CAAQ,CAAA;MACRC,CAAAA,GACkC,QAAA,IAAA,OAA7Bpc,CAAAA,CAAQqc,gBAAAA,GACXrc,CAAAA,CAAQqc,gBAAAA,GACRA,EAAAA;MACFhY,CAAAA,GAAc6V,CAAAA,CAAMhZ,QAAAA,CAASmD,WAAAA;IAAAA,SAExBiY,CAAAA,CAAIrmC,CAAAA,EAAAA;MAAAA,OACXA,CAAAA,GAAIA,CAAAA,CAAEoL,KAAAA,CAAM,IAAA,CAAA,CAAMsa,IAAAA,CAAK7U,KAAAA,CAAMkZ,CAAAA,CAAQuc,MAAAA,IAAU,CAAA,CAAA,CAAG5gB,IAAAA,CAAK,GAAA,CAAA,CAAA,EAChDyb,EAAAA,CAAUnhC,CAAAA,EAAGygC,CAAAA,CAAAA;IAAAA;IAAAA,SAGb8F,CAAAA,CAA4B/F,CAAAA,EAAAA;MAAAA,KAAAA,IAK/BgG,CAAAA,EAHAC,CAAAA,GAAKjG,CAAAA,CAAKkG,MAAAA,CAAAA,CAAAA,EACVjB,CAAAA,GAAK,EAAA,EACL99B,CAAAA,GAAM8+B,CAAAA,CAAGxmC,MAAAA,EAIN0H,CAAAA,EAAAA,GAEgB,QAAA,IAAA,QADrB6+B,CAAAA,GAAQC,CAAAA,CAAGE,KAAAA,CAAAA,CAAAA,CAAAA,GAETlB,CAAAA,CAAGrhC,IAAAA,CAAKoiC,CAAAA,CAAAA,GAGN31B,KAAAA,CAAMC,OAAAA,CAAQ0vB,CAAAA,CAAAA,KACI,CAAA,KAAjBgG,CAAAA,CAAMvmC,MAAAA,IAAAA,KACSuzB,CAAAA,KAAbgT,CAAAA,CAAM,CAAA,CAAA,IAAA,KAAiChT,CAAAA,KAAbgT,CAAAA,CAAM,CAAA,CAAA,CAAA,GAEnCf,CAAAA,CAAGrhC,IAAAA,CAAKoiC,CAAAA,CAAM,CAAA,CAAA,CAAA,GAEdf,CAAAA,CAAGrhC,IAAAA,CAAK,CAACoiC,CAAAA,CAAM,CAAA,CAAA,EAAIA,CAAAA,CAAM,CAAA,CAAA,EAAIA,CAAAA,CAAM,CAAA,CAAA,CAAA,CAAA;MAAA,OAIlCf,CAAAA;IAAAA;IAAAA,SAGAmB,CAAAA,CAAsBpG,CAAAA,EAAMqG,CAAAA,EAAAA;MAAAA,IAC/BvsB,CAAAA;MAAAA,IACgB,QAAA,IAAA,OAATkmB,CAAAA,EACTlmB,CAAAA,GAASusB,CAAAA,CAAmBrG,CAAAA,CAAAA,CAAM,CAAA,CAAA,CAAA,KAC7B,IAAI3vB,KAAAA,CAAMC,OAAAA,CAAQ0vB,CAAAA,CAAAA,EAAO;QAAA,KAAA,IAK1BgG,CAAAA,EACAM,CAAAA,EAJAL,CAAAA,GAAKjG,CAAAA,CAAKkG,MAAAA,CAAAA,CAAAA,EACVjB,CAAAA,GAAK,EAAA,EACL99B,CAAAA,GAAM8+B,CAAAA,CAAGxmC,MAAAA,EAKN0H,CAAAA,EAAAA,GAEgB,QAAA,IAAA,QADrB6+B,CAAAA,GAAQC,CAAAA,CAAGE,KAAAA,CAAAA,CAAAA,CAAAA,GAETlB,CAAAA,CAAGrhC,IAAAA,CAAKyiC,CAAAA,CAAmBL,CAAAA,CAAAA,CAAO,CAAA,CAAA,CAAA,GACzB31B,KAAAA,CAAMC,OAAAA,CAAQ01B,CAAAA,CAAAA,IAA8B,QAAA,IAAA,OAAbA,CAAAA,CAAM,CAAA,CAAA,KAC9CM,CAAAA,GAAYD,CAAAA,CAAmBL,CAAAA,CAAM,CAAA,CAAA,EAAIA,CAAAA,CAAM,CAAA,CAAA,EAAIA,CAAAA,CAAM,CAAA,CAAA,CAAA,EACzDf,CAAAA,CAAGrhC,IAAAA,CAAK,CAAC0iC,CAAAA,CAAU,CAAA,CAAA,EAAIA,CAAAA,CAAU,CAAA,CAAA,EAAIA,CAAAA,CAAU,CAAA,CAAA,CAAA,CAAA,CAAA;QAGnDxsB,CAAAA,GAASmrB,CAAAA;MAAAA;MAAAA,OAEJnrB,CAAAA;IAAAA;IAAAA,IAILysB,CAAAA,GAAAA,CAAqB,CAAA;MACrBC,CAAAA,GAAAA,CAAwB,CAAA;IAAA,IAER,QAAA,IAAA,OAATxG,CAAAA,EACTuG,CAAAA,GAAAA,CAAqB,CAAA,CAAA,KAChB,IAAIl2B,KAAAA,CAAMC,OAAAA,CAAQ0vB,CAAAA,CAAAA,EAAO;MAAA,IAE1BiG,CAAAA,GAAKjG,CAAAA,CAAKkG,MAAAA,CAAAA,CAAAA;MACdjB,CAAAA,GAAK,EAAA;MAAA,KAAA,IAEDe,CAAAA,EADA7+B,CAAAA,GAAM8+B,CAAAA,CAAGxmC,MAAAA,EAIN0H,CAAAA,EAAAA,GAAAA,CAGc,QAAA,IAAA,QAFnB6+B,CAAAA,GAAQC,CAAAA,CAAGE,KAAAA,CAAAA,CAAAA,CAAAA,IAGR91B,KAAAA,CAAMC,OAAAA,CAAQ01B,CAAAA,CAAAA,IAA8B,QAAA,IAAA,OAAbA,CAAAA,CAAM,CAAA,CAAA,MAEtCQ,CAAAA,GAAAA,CAAwB,CAAA,CAAA;MAG5BD,CAAAA,GAAqBC,CAAAA;IAAAA;IAAAA,IAAAA,CAEI,CAAA,KAAvBD,CAAAA,EAAAA,MACI,IAAIvyB,KAAAA,CACR,yCAAA,GACEgsB,CAAAA,GACA,sBAAA,CAAA;IAWc,QAAA,IAAA,OAATA,CAAAA,KAEPA,CAAAA,GADEA,CAAAA,CAAK7rB,KAAAA,CAAM,SAAA,CAAA,GACN6rB,CAAAA,CAAKp1B,KAAAA,CAAM,aAAA,CAAA,GAEX,CAACo1B,CAAAA,CAAAA,CAAAA;IAAAA,IAKRtD,CAAAA,GAASpK,EAAAA,GAAiBmR,CAAAA,CAAMhZ,QAAAA,CAASmD,WAAAA;MACzC6Y,CAAAA,GAAU/J,CAAAA,IAAUiJ,CAAAA,GAAa,CAAA,CAAA;IAAA,QAE7Bpc,CAAAA,CAAQmd,QAAAA;MAAAA,KACT,QAAA;QACH30B,CAAAA,IAAK00B,CAAAA;QAAAA;MAAAA,KAEF,KAAA;QACH10B,CAAAA,IAAK2qB,CAAAA,GAAS+J,CAAAA;QAAAA;MAAAA,KAEX,SAAA;QACH10B,CAAAA,IAAK2qB,CAAAA,GAAS,CAAA,GAAI+J,CAAAA;QAAAA;MAAAA,KAEf,QAAA;QACH10B,CAAAA,IAAK2qB,CAAAA,GAAS,CAAA,GAAI+J,CAAAA;IAAAA;IAAAA,IAAAA,CAUtBpB,CAAAA,GAAW9b,CAAAA,CAAQ8b,QAAAA,IAAY,CAAA,IAEhB,CAAA,KACO,QAAA,IAAA,OAATrF,CAAAA,GACTA,CAAAA,GAAOyD,CAAAA,CAAMkD,eAAAA,CAAgB3G,CAAAA,EAAMqF,CAAAA,CAAAA,GACe,gBAAA,KAAzC7yB,MAAAA,CAAOjW,SAAAA,CAAUgO,QAAAA,CAAS2C,IAAAA,CAAK8yB,CAAAA,CAAAA,KACxCA,CAAAA,GAAOA,CAAAA,CAAK4G,MAAAA,CAAO,UAASC,CAAAA,EAAKC,CAAAA,EAAAA;MAAAA,OACxBD,CAAAA,CAAIX,MAAAA,CAAOzC,CAAAA,CAAMkD,eAAAA,CAAgBG,CAAAA,EAAUzB,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA,EACjD,EAAA,CAAA,CAAA,CAAA,EAKPL,CAAAA,GAAU;MACRhF,IAAAA,EAAMA,CAAAA;MACN5gC,CAAAA,EAAGA,CAAAA;MACH2S,CAAAA,EAAGA,CAAAA;MACHwX,OAAAA,EAASA,CAAAA;MACTwd,KAAAA,EAAO;QACLpG,SAAAA,EAAWA,EAAAA;QACXrM,aAAAA,EAAeA,EAAAA;QACfI,KAAAA,EAAOA,EAAAA;QACPpC,cAAAA,EAAgBA;MAAAA;IAAAA,CAAAA,EAGpB8C,EAAAA,CAAOrN,OAAAA,CAAQ,gBAAA,EAAkBid,CAAAA,CAAAA,EAEjChF,CAAAA,GAAOgF,CAAAA,CAAQhF,IAAAA,EAIfkF,CAAAA,GAAAA,CAHA3b,CAAAA,GAAUyb,CAAAA,CAAQzb,OAAAA,EAGF2b,KAAAA,EAGdK,CAAAA,YAAgC5X,EAAAA,IAAAA,CAAW,CAAA,IAC3CuX,CAAAA,IACiB,QAAA,IAAA,OAAVA,CAAAA,EACP;MACAA,CAAAA,IAASrjC,IAAAA,CAAKmlC,EAAAA,GAAK,GAAA,EAEe,CAAA,KAA9Bzd,CAAAA,CAAQ0d,iBAAAA,KACV/B,CAAAA,GAAAA,CAASA,CAAAA,CAAAA,EAGP1X,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,KACtB2X,CAAAA,GAAAA,CAASA,CAAAA,CAAAA;MAAAA,IAGPvoC,CAAAA,GAAIkF,IAAAA,CAAKqlC,GAAAA,CAAIhC,CAAAA,CAAAA;QACb1lC,CAAAA,GAAIqC,IAAAA,CAAKslC,GAAAA,CAAIjC,CAAAA,CAAAA;MACjBK,CAAAA,GAAuB,IAAI5X,EAAAA,CAAOhxB,CAAAA,EAAG6C,CAAAA,EAAAA,CAAIA,CAAAA,EAAG7C,CAAAA,EAAG,CAAA,EAAG,CAAA,CAAA;IAAA,CAAA,MACzCuoC,CAAAA,IAASA,CAAAA,YAAiBvX,EAAAA,KACnC4X,CAAAA,GAAuBL,CAAAA,CAAAA;IAGrB1X,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,IAAagY,CAAAA,KACnCA,CAAAA,GAAuBvN,EAAAA,CAAAA,EAAAA,KAOA,CAAA,MAFzBoN,CAAAA,GAAY7b,CAAAA,CAAQ6b,SAAAA,IAAagC,EAAAA,CAAAA,KAG/B3B,CAAAA,IAAQlX,CAAAA,CAAIU,CAAAA,CAAMmW,CAAAA,CAAAA,CAAAA,GAAc,OAAA,EAAA,IAAA,CAC3BiC,YAAAA,CAAa/wB,IAAAA,CAAKgxB,YAAAA,CAAAA,CAAAA,IAAkB,CAAA,CAAA,CAAA,EAAA,KAIZ,CAAA,MAD/BhC,CAAAA,GAAkB/b,CAAAA,CAAQ+b,eAAAA,CAAAA,KAExBG,CAAAA,IAAQlX,CAAAA,CAAsB,GAAA,GAAlB+W,CAAAA,CAAAA,GAAyB,OAAA,CAAA;IAK5B/b,CAAAA,CAAQge,IAAAA;IAAAA,IAOfC,CAAAA,GAAAA,CAAiB,CAAA;MACjBC,CAAAA,GAAAA,KAC+B,CAAA,KAA1Ble,CAAAA,CAAQie,aAAAA,GACXje,CAAAA,CAAQie,aAAAA,GACRje,CAAAA,CAAQme,MAAAA;MACV/L,CAAAA,GAAc8H,CAAAA,CAAMhZ,QAAAA,CAAS6Z,kBAAAA,CAAAA,CAAAA,CAAqB3I,WAAAA;IAAAA,QAE9C8L,CAAAA;MAAAA,KACD,CAAA;MAAA,KAAA,CACA,CAAA;MAAA,KACA,MAAA;QACHD,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KAAA,CACA,CAAA;MAAA,KACA,QAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,gBAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,WAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,uBAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,6BAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,uCAAA;QACHA,CAAAA,GAAgB,CAAA;QAAA;MAAA,KAEb,CAAA;MAAA,KACA,sBAAA;QACHA,CAAAA,GAAgB,CAAA;IAAA;IAAA,IAIhBG,CAAAA,GAAAA,KACuC,CAAA,KAAlChM,CAAAA,CAAYgM,iBAAAA,GACfhM,CAAAA,CAAYgM,iBAAAA,GAAAA,CACX,CAAA;IAAA,CAIgB,CAAA,KAAnBH,CAAAA,GACF/B,CAAAA,IAAQ+B,CAAAA,GAAgB,OAAA,GAAA,CAGQ,CAAA,KAAvBG,CAAAA,KACTlC,CAAAA,IAAQ,QAAA,CAAA,EAAA,CAGa,CAAA,KAAnB+B,CAAAA,KACF7L,CAAAA,CAAYgM,iBAAAA,GAAoBH,CAAAA,CAAAA,EAIlCrC,CAAAA,GAAQ5b,CAAAA,CAAQ4b,KAAAA,IAAS,MAAA;IAAA,IAOrByC,CAAAA;MANAC,CAAAA,GAAUvV,EAAAA,GAAiBqT,CAAAA;MAC3BmC,CAAAA,GAAYrE,CAAAA,CAAMhZ,QAAAA,CAASsd,QAAAA,CAASC,QAAAA,CAAAA,CAAAA;MACpCC,CAAAA,GAAavT,EAAAA,CAAMJ,EAAAA,CAAAA;IACvB8Q,CAAAA,GAAY7b,CAAAA,CAAQ6b,SAAAA,IAAagC,EAAAA,EACjC/B,CAAAA,GAAW9b,CAAAA,CAAQ8b,QAAAA,IAAY,CAAA,EAG/BpF,CAAAA,GAAQztB,MAAAA,CAAO01B,MAAAA,CAAO;MAAE1H,UAAAA,EAAAA,CAAY,CAAA;MAAME,KAAAA,EAAAA,CAAO;IAAA,CAAA,EAAQnX,CAAAA,CAAQ0W,KAAAA,CAAAA;IAAAA,IAE7DkI,CAAAA,GAAqB,EAAA;IAAA,IAEoB,gBAAA,KAAzC31B,MAAAA,CAAOjW,SAAAA,CAAUgO,QAAAA,CAAS2C,IAAAA,CAAK8yB,CAAAA,CAAAA,EAA4B;MAAA,IAEzDoI,CAAAA;MADJnD,CAAAA,GAAKc,CAAAA,CAA4B/F,CAAAA,CAAAA,EAEnB,MAAA,KAAVmF,CAAAA,KACFyC,CAAAA,GAAa3C,CAAAA,CAAGhwB,GAAAA,CAAI,UAASjV,CAAAA,EAAAA;QAAAA,OAExByjC,CAAAA,CAAM4E,kBAAAA,CAAmBroC,CAAAA,EAAG;UAC3Bi8B,IAAAA,EAAMgM,CAAAA;UACN7C,SAAAA,EAAWA,CAAAA;UACX7S,QAAAA,EAAUD,EAAAA;UACVgW,SAAAA,EAAAA,CAAW;QAAA,CAAA,CAAA,GAEXhW,EAAAA,GACF1E,CAAAA;MAAAA,CAAAA,CAAAA,CAAAA;MAAAA,IAQF2a,CAAAA;QADAC,CAAAA,GAAY,CAAA;MAAA,IAEF,OAAA,KAAVrD,CAAAA,EAAmB;QAGrB/lC,CAAAA,IAAKwoC,CAAAA,CAAW,CAAA,CAAA,EAChB5H,CAAAA,GAAO,EAAA,EACP74B,CAAAA,GAAM89B,CAAAA,CAAGxlC,MAAAA;QAAAA,KACJ,IAAIf,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyI,CAAAA,EAAKzI,CAAAA,EAAAA,EACb,CAAA,KAANA,CAAAA,IACF6pC,CAAAA,GAAOE,EAAAA,CAAwBrpC,CAAAA,CAAAA,EAC/BgpC,CAAAA,GAAOM,EAAAA,CAAsB32B,CAAAA,CAAAA,KAE7Bw2B,CAAAA,GAAOtZ,CAAAA,CAAMuZ,CAAAA,GAAYZ,CAAAA,CAAWlpC,CAAAA,CAAAA,CAAAA,EACpC0pC,CAAAA,GAAAA,CAAQP,CAAAA,CAAAA,EAEV7H,CAAAA,CAAKp8B,IAAAA,CAAK,CAACqhC,CAAAA,CAAGvmC,CAAAA,CAAAA,EAAI6pC,CAAAA,EAAMH,CAAAA,CAAAA,CAAAA,EACxBI,CAAAA,GAAYZ,CAAAA,CAAWlpC,CAAAA,CAAAA;MAAAA,CAAAA,MAEpB,IAAc,QAAA,KAAVymC,CAAAA,EAAoB;QAG7B/lC,CAAAA,IAAKwoC,CAAAA,CAAW,CAAA,CAAA,GAAK,CAAA,EACrB5H,CAAAA,GAAO,EAAA,EACP74B,CAAAA,GAAM89B,CAAAA,CAAGxlC,MAAAA;QAAAA,KACJ,IAAIb,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIuI,CAAAA,EAAKvI,CAAAA,EAAAA,EACb,CAAA,KAANA,CAAAA,IACF2pC,CAAAA,GAAOE,EAAAA,CAAwBrpC,CAAAA,CAAAA,EAC/BgpC,CAAAA,GAAOM,EAAAA,CAAsB32B,CAAAA,CAAAA,KAE7Bw2B,CAAAA,GAAOtZ,CAAAA,CAAAA,CAAOuZ,CAAAA,GAAYZ,CAAAA,CAAWhpC,CAAAA,CAAAA,IAAM,CAAA,CAAA,EAC3CwpC,CAAAA,GAAAA,CAAQP,CAAAA,CAAAA,EAEV7H,CAAAA,CAAKp8B,IAAAA,CAAK,CAACqhC,CAAAA,CAAGrmC,CAAAA,CAAAA,EAAI2pC,CAAAA,EAAMH,CAAAA,CAAAA,CAAAA,EACxBI,CAAAA,GAAYZ,CAAAA,CAAWhpC,CAAAA,CAAAA;MAAAA,CAAAA,MAEpB,IAAc,MAAA,KAAVumC,CAAAA,EAAkB;QAC3BnF,CAAAA,GAAO,EAAA,EACP74B,CAAAA,GAAM89B,CAAAA,CAAGxlC,MAAAA;QAAAA,KACJ,IAAIi4B,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIvwB,CAAAA,EAAKuwB,CAAAA,EAAAA,EACvBsI,CAAAA,CAAKp8B,IAAAA,CAAKqhC,CAAAA,CAAGvN,CAAAA,CAAAA,CAAAA;MAAAA,CAAAA,MAEV;QAAA,IAAc,SAAA,KAAVyN,CAAAA,EAAAA,MAsBH,IAAInxB,KAAAA,CACR,4EAAA,CAAA;QAtBFgsB,CAAAA,GAAO,EAAA,EACP74B,CAAAA,GAAM89B,CAAAA,CAAGxlC,MAAAA,EACT4lC,CAAAA,GAAwB,CAAA,KAAbA,CAAAA,GAAiBA,CAAAA,GAAWyC,CAAAA;QAAAA,KAElC,IAAIpoC,EAAAA,GAAI,CAAA,EAAGA,EAAAA,GAAIyH,CAAAA,EAAKzH,EAAAA,EAAAA,EACvB0oC,CAAAA,GAAa,CAAA,KAAN1oC,EAAAA,GAAUgpC,EAAAA,CAAsB32B,CAAAA,CAAAA,GAAAA,CAAM81B,CAAAA,EAC7CU,CAAAA,GAAa,CAAA,KAAN7oC,EAAAA,GAAU+oC,EAAAA,CAAwBrpC,CAAAA,CAAAA,GAAK,CAAA,EAC1CM,EAAAA,GAAIyH,CAAAA,GAAM,CAAA,GACZghC,CAAAA,CAAmBvkC,IAAAA,CACjB2qB,CAAAA,CACEU,CAAAA,CAAAA,CACGoW,CAAAA,GAAWuC,CAAAA,CAAWloC,EAAAA,CAAAA,KAAOulC,CAAAA,CAAGvlC,EAAAA,CAAAA,CAAGkL,KAAAA,CAAM,GAAA,CAAA,CAAKnL,MAAAA,GAAS,CAAA,CAAA,CAAA,CAAA,CAAA,GAK9D0oC,CAAAA,CAAmBvkC,IAAAA,CAAK,CAAA,CAAA,EAE1Bo8B,CAAAA,CAAKp8B,IAAAA,CAAK,CAACqhC,CAAAA,CAAGvlC,EAAAA,CAAAA,EAAI6oC,CAAAA,EAAMH,CAAAA,CAAAA,CAAAA;MAAAA;IAAAA;IAAAA,IAU1BO,EAAAA,GAAqC,SAAA,IAAA,OAAhBpf,CAAAA,CAAQkJ,GAAAA,GAAoBlJ,CAAAA,CAAQkJ,GAAAA,GAAMA,EAAAA;IAAAA,CAC/C,CAAA,KAAhBkW,EAAAA,KACF3I,CAAAA,GAAOoG,CAAAA,CAAsBpG,CAAAA,EAAM,UAASA,CAAAA,EAAM4I,CAAAA,EAAMC,CAAAA,EAAAA;MAAAA,OAC/C,CACL7I,CAAAA,CACGp1B,KAAAA,CAAM,EAAA,CAAA,CACNk+B,OAAAA,CAAAA,CAAAA,CACA5jB,IAAAA,CAAK,EAAA,CAAA,EACR0jB,CAAAA,EACAC,CAAAA,CAAAA;IAAAA,CAAAA,CAAAA,CAAAA,EAMN7D,CAAAA,GAAU;MACRhF,IAAAA,EAAMA,CAAAA;MACN5gC,CAAAA,EAAGA,CAAAA;MACH2S,CAAAA,EAAGA,CAAAA;MACHwX,OAAAA,EAASA,CAAAA;MACTwd,KAAAA,EAAO;QACLpG,SAAAA,EAAWA,EAAAA;QACXrM,aAAAA,EAAeA,EAAAA;QACfI,KAAAA,EAAOA,EAAAA;QACPpC,cAAAA,EAAgBA;MAAAA;IAAAA,CAAAA,EAGpB8C,EAAAA,CAAOrN,OAAAA,CAAQ,iBAAA,EAAmBid,CAAAA,CAAAA,EAElChF,CAAAA,GAAOgF,CAAAA,CAAQhF,IAAAA,EACf0F,CAAAA,GAAQV,CAAAA,CAAQ+B,KAAAA,CAAMrB,KAAAA,IAAAA,CAAS,CAAA;IAAA,IAG3BqD,EAAAA,GAAqBrU,EAAAA,CAAMJ,EAAAA,CAAAA,CAAe8H,QAAAA;IAGrB,iBAAA,KAAvB2M,EAAAA,IACuB,kBAAA,KAAvBA,EAAAA,KAEA/I,CAAAA,GAAOoG,CAAAA,CAAsBpG,CAAAA,EAAM,UAASA,CAAAA,EAAM4I,CAAAA,EAAMC,CAAAA,EAAAA;MAAAA,OAC/C,CAAChD,CAAAA,CAAI7F,CAAAA,CAAAA,EAAO4I,CAAAA,EAAMC,CAAAA,CAAAA;IAAAA,CAAAA,CAAAA,CAAAA,EAI7B5D,CAAAA,GAAKc,CAAAA,CAA4B/F,CAAAA,CAAAA,EAEjCA,CAAAA,GAAO,EAAA;IAAA,KAAA,IAIH4I,EAAAA,EACAC,EAAAA,EACA5X,EAAAA,EALA+X,EAAAA,GAAS,CAAA,EACTC,EAAAA,GAAQ,CAAA,EACRC,EAAAA,GAAU74B,KAAAA,CAAMC,OAAAA,CAAQ20B,CAAAA,CAAG,CAAA,CAAA,CAAA,GAAMgE,EAAAA,GAAQD,EAAAA,EAIzCG,EAAAA,GAAc,EAAA,EAEdC,EAAAA,GAAmB,SAAA,CACrBC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EAAAA;QAAAA,IAEIC,CAAAA,GAAW,EAAA;QAAA,OACXD,CAAAA,YAAoC5b,EAAAA,IAKpC4b,CAAAA,GAD2B,QAAA,IAAA,OAAlBhgB,CAAAA,CAAQ2b,KAAAA,GACUrN,EAAAA,CACzB0R,CAAAA,EACA,IAAI5b,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG0b,CAAAA,EAAUC,CAAAA,CAAAA,CAAAA,GAGRzR,EAAAA,CACzB,IAAIlK,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG0b,CAAAA,EAAUC,CAAAA,CAAAA,EACjCC,CAAAA,CAAAA,EAIA/b,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,KACtBgc,CAAAA,GAA2B1R,EAAAA,CACzB,IAAIlK,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,EAC3B4b,CAAAA,CAAAA,CAAAA,EAIJC,CAAAA,GAAWD,CAAAA,CAAyBrkB,IAAAA,CAAK,GAAA,CAAA,GAAO,OAAA,IAEhDskB,CAAAA,GAAWjb,CAAAA,CAAI8a,CAAAA,CAAAA,GAAY,GAAA,GAAM9a,CAAAA,CAAI+a,CAAAA,CAAAA,GAAY,OAAA,EAE5CE,CAAAA;MAAAA,CAAAA,EAGAC,EAAAA,GAAY,CAAA,EAAGA,EAAAA,GAAYxE,CAAAA,CAAGxlC,MAAAA,EAAQgqC,EAAAA,EAAAA,EAAa;MAAA,QAC1DN,EAAAA,GAAc,EAAA,EAEND,EAAAA;QAAAA,KACDD,EAAAA;UACHhY,EAAAA,GAAAA,CACGyU,CAAAA,GAAQ,GAAA,GAAM,GAAA,IAAOT,CAAAA,CAAGwE,EAAAA,CAAAA,CAAW,CAAA,CAAA,IAAM/D,CAAAA,GAAQ,GAAA,GAAM,GAAA,CAAA,EAC1DkD,EAAAA,GAAOtP,UAAAA,CAAW2L,CAAAA,CAAGwE,EAAAA,CAAAA,CAAW,CAAA,CAAA,CAAA,EAChCZ,EAAAA,GAAOvP,UAAAA,CAAW2L,CAAAA,CAAGwE,EAAAA,CAAAA,CAAW,CAAA,CAAA,CAAA;UAAA;QAAA,KAE7BT,EAAAA;UACH/X,EAAAA,GAAAA,CAAWyU,CAAAA,GAAQ,GAAA,GAAM,GAAA,IAAOT,CAAAA,CAAGwE,EAAAA,CAAAA,IAAc/D,CAAAA,GAAQ,GAAA,GAAM,GAAA,CAAA,EAC/DkD,EAAAA,GAAOH,EAAAA,CAAwBrpC,CAAAA,CAAAA,EAC/BypC,EAAAA,GAAOH,EAAAA,CAAsB32B,CAAAA,CAAAA;MAAAA;MAAAA,KAKD,CAAA,KAAvBo2B,CAAAA,IAAAA,KACkC,CAAA,KAAlCA,CAAAA,CAAmBsB,EAAAA,CAAAA,KAE1BN,EAAAA,GAAchB,CAAAA,CAAmBsB,EAAAA,CAAAA,GAAa,OAAA,CAAA,EAG9B,CAAA,KAAdA,EAAAA,GACFzJ,CAAAA,CAAKp8B,IAAAA,CACHulC,EAAAA,GACEC,EAAAA,CAAiBR,EAAAA,EAAMC,EAAAA,EAAMtD,CAAAA,CAAAA,GAC7BtU,EAAAA,CAAAA,GAEKiY,EAAAA,KAAYF,EAAAA,GACrBhJ,CAAAA,CAAKp8B,IAAAA,CAAKulC,EAAAA,GAAclY,EAAAA,CAAAA,GACfiY,EAAAA,KAAYD,EAAAA,IACrBjJ,CAAAA,CAAKp8B,IAAAA,CACHulC,EAAAA,GACEC,EAAAA,CAAiBR,EAAAA,EAAMC,EAAAA,EAAMtD,CAAAA,CAAAA,GAC7BtU,EAAAA,CAAAA;IAAAA;IAKR+O,CAAAA,GAAOkJ,EAAAA,KAAYF,EAAAA,GAAShJ,CAAAA,CAAK9a,IAAAA,CAAK,UAAA,CAAA,GAAc8a,CAAAA,CAAK9a,IAAAA,CAAK,OAAA,CAAA,EAC9D8a,CAAAA,IAAQ,OAAA;IAAA,IAEJlmB,EAAAA,GAAS,OAAA;IAAA,OACbA,EAAAA,IAAUwa,EAAAA,GAAgB,GAAA,GAAMhC,EAAAA,GAAiB,OAAA,EACjDxY,EAAAA,IAAUyU,CAAAA,CAAI+D,EAAAA,GAAiBqT,CAAAA,CAAAA,GAAc,OAAA,EAC7C7rB,EAAAA,IAAU4vB,EAAAA,GAAY,IAAA,EACtB5vB,EAAAA,IAAU2rB,CAAAA,EACV3rB,EAAAA,IAAUkmB,CAAAA,EAGV56B,EAAAA,CAFA0U,EAAAA,IAAU,IAAA,CAAA,EAGVyQ,CAAAA,CAAU+J,EAAAA,CAAAA,GAAAA,CAAiB,CAAA,EACpBmP,CAAAA;EAAAA,CAAAA;EAAAA,IA6BLkG,EAAAA,GAAQnf,CAAAA,CAAIE,WAAAA,CAAYif,IAAAA,GAAOnf,CAAAA,CAAImf,IAAAA,GAAO,UAASC,CAAAA,EAAAA;IAAAA,OAInDxkC,EAAAA,CADE,SAAA,KAAcwkC,CAAAA,GACZ,IAAA,GAEA,GAAA,CAAA,EAECtzB,IAAAA;EAAAA,CAAAA;EAaTkU,CAAAA,CAAIqf,WAAAA,GAAc,YAAA;IAAA,OACTF,EAAAA,CAAK,SAAA,CAAA;EAAA,CAAA,EAYdnf,CAAAA,CAAIE,WAAAA,CAAYof,WAAAA,GAActf,CAAAA,CAAIsf,WAAAA,GAAc,YAAA;IAAA,OAC9C1kC,EAAAA,CAAI,GAAA,CAAA,EACGkR,IAAAA;EAAAA,CAAAA;EAAAA,IAGLyzB,EAAAA,GAAgBvf,CAAAA,CAAIE,WAAAA,CAAYqf,YAAAA,GAAe,UAASC,CAAAA,EAAAA;IAAAA,IAetDlwB,CAAAA,GAAAA,CAAS,CAAA;IAAA,OAAA,CAC8B,CAAA,KAflB,CAAA,KACvBkZ,CAAAA,EACA,IAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAAA,EACA,IAAA,EACA,GAAA,EACA,IAAA,EACA,GAAA,EACA,IAAA,EACA,GAAA,CAAA,CAGqBvoB,OAAAA,CAAQu/B,CAAAA,CAAAA,KAC7BlwB,CAAAA,GAAAA,CAAS,CAAA,CAAA,EAEJA,CAAAA;EAAAA,CAAAA;EAGT0Q,CAAAA,CAAIE,WAAAA,CAAYuf,uBAAAA,GAA0Bzf,CAAAA,CAAIyf,uBAAAA,GAA0B,UACtEC,CAAAA,EAAAA;IAAAA,OAEIH,EAAAA,CAAaG,CAAAA,CAAAA,KACflgB,CAAAA,GAAuBkgB,CAAAA,CAAAA,EAElB5zB,IAAAA;EAAAA,CAAAA;EAAAA,IAGL6zB,EAAAA,GAAY3f,CAAAA,CAAIE,WAAAA,CAAYyf,QAAAA,GAAW3f,CAAAA,CAAI2f,QAAAA,GAAW,UAASH,CAAAA,EAAAA;MAAAA,IAE7DI,CAAAA,GAAKpgB,CAAAA;MAAAA,QAEDggB,CAAAA;QAAAA,KACD,GAAA;QAAA,KACA,GAAA;UACHI,CAAAA,GAAK,GAAA;UAAA;QAAA,KAEF,GAAA;UACHA,CAAAA,GAAK,GAAA;UAAA;QAAA,KAEF,IAAA;QAAA,KACA,IAAA;UACHA,CAAAA,GAAK,GAAA;UAAA;QAAA,KAEF,GAAA;QAAA,KACA,IAAA;QAAA,KACA,GAAA;QAAA,KACA,IAAA;UAQHA,CAAAA,GAAKJ,CAAAA;MAAAA;MAAAA,OAGFI,CAAAA;IAAAA,CAAAA;IAWLC,EAAAA,GAAS7f,CAAAA,CAAI6f,KAAAA,GAAQ,YAAA;MAAA,OACvBjlC,EAAAA,CAAI,GAAA,CAAA,EACGkR,IAAAA;IAAAA,CAAAA;EAWTkU,CAAAA,CAAIkd,MAAAA,GAAS,YAAA;IAAA,OACXtiC,EAAAA,CAAI,GAAA,CAAA,EACGkR,IAAAA;EAAAA,CAAAA,EAaTkU,CAAAA,CAAI8f,IAAAA,GAAO,UAASnS,CAAAA,EAAAA;IAAAA,OAClBoS,EAAAA,CAAwB,GAAA,EAAKpS,CAAAA,CAAAA,EACtB7hB,IAAAA;EAAAA,CAAAA,EAaTkU,CAAAA,CAAIggB,WAAAA,GAAc,UAASrS,CAAAA,EAAAA;IAAAA,OACzBoS,EAAAA,CAAwB,IAAA,EAAMpS,CAAAA,CAAAA,EACvB7hB,IAAAA;EAAAA,CAAAA,EAaTkU,CAAAA,CAAIigB,UAAAA,GAAa,UAAStS,CAAAA,EAAAA;IAAAA,OACxBoS,EAAAA,CAAwB,GAAA,EAAKpS,CAAAA,CAAAA,EACtB7hB,IAAAA;EAAAA,CAAAA,EAaTkU,CAAAA,CAAIkgB,iBAAAA,GAAoB,UAASvS,CAAAA,EAAAA;IAAAA,OAC/BoS,EAAAA,CAAwB,IAAA,EAAMpS,CAAAA,CAAAA,EACvB7hB,IAAAA;EAAAA,CAAAA;EAAAA,IAGLi0B,EAAAA,GAA0B,SAAA,CAASP,CAAAA,EAAO7R,CAAAA,EAAAA;MACrB,QAAA,KAAnBn8B,IAAAA,eAAAA,EAAOm8B,CAAAA,CAAAA,GACTwS,EAAAA,CAAgBxS,CAAAA,EAAS6R,CAAAA,CAAAA,GAEzB5kC,EAAAA,CAAI4kC,CAAAA,CAAAA;IAAAA,CAAAA;IAIJY,EAAAA,GAAW,SAAA,CAASZ,CAAAA,EAAAA;MAEV,IAAA,KAAVA,CAAAA,IACCxc,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,IAAAA,KAAsByF,CAAAA,KAAVgX,CAAAA,KAKnCA,CAAAA,GAAQG,EAAAA,CAASH,CAAAA,CAAAA,EAGjB5kC,EAAAA,CAAI4kC,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;EAAAA,SAGGa,EAAAA,CAAmBzS,CAAAA,EAAYnP,CAAAA,EAAaC,CAAAA,EAAOC,CAAAA,EAAOP,CAAAA,EAAAA;IAAAA,IAC7DgP,CAAAA,GAAQ,IAAI5O,CAAAA,CACdC,CAAAA,IAAe3S,IAAAA,CAAK2S,WAAAA,EACpBC,CAAAA,IAAS5S,IAAAA,CAAK4S,KAAAA,EACdC,CAAAA,IAAS7S,IAAAA,CAAK6S,KAAAA,EACd7S,IAAAA,CAAKqS,MAAAA,EACLC,CAAAA,IAAUtS,IAAAA,CAAKsS,MAAAA,CAAAA;IAEjBgP,CAAAA,CAAMxO,MAAAA,GAAS9S,IAAAA,CAAK8S,MAAAA;IAAAA,IAChB7D,CAAAA,GAAM6S,CAAAA,GAAa,IAAA,GAAO9hB,IAAAA,CAAK+S,UAAAA,EAAAA,GAAe,IAAA;IAAA,OAClD6O,EAAAA,CAAW3S,CAAAA,EAAKqS,CAAAA,CAAAA,EACTA,CAAAA;EAAAA;EAAAA,IAGL+S,EAAAA,GAAkB,SAAA,CAASG,CAAAA,EAAad,CAAAA,EAAAA;MAAAA,IACtCe,CAAAA,GAAYjW,EAAAA,CAAWgW,CAAAA,CAAYvlB,GAAAA,CAAAA;QACnC4S,CAAAA,GAAUtD,EAAAA,CAASkW,CAAAA,CAAAA;MAAAA,IAEnB5S,CAAAA,YAAmBtP,CAAAA,EACrBzjB,EAAAA,CAAI,GAAA,CAAA,EAEJA,EAAAA,CAAI4lC,EAAAA,CAAkBhB,CAAAA,CAAAA,CAAAA,EAElB7R,CAAAA,CAAQxP,MAAAA,IACV6B,CAAAA,CAAIygB,SAAAA,CAAU9S,CAAAA,CAAQxP,MAAAA,CAAAA,EAExBvjB,EAAAA,CAAI0lC,CAAAA,CAAYliB,MAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa,KAAA,CAAA,EACpCnF,EAAAA,CAAI,GAAA,GAAM2lC,CAAAA,GAAY,KAAA,CAAA,EACtB3lC,EAAAA,CAAI,GAAA,CAAA,CAAA,KACC,IAAI+yB,CAAAA,YAAmBnP,CAAAA,EAAe;QAAA,IAGvCJ,CAAAA,GAAS,IAAI+E,EAAAA,CAAO,CAAA,EAAG,CAAA,EAAG,CAAA,EAAA,CAAI,CAAA,EAAG,CAAA,EAAGE,EAAAA,CAAAA,CAAAA,CAAAA;QAEpCid,CAAAA,CAAYliB,MAAAA,KACdA,CAAAA,GAASA,CAAAA,CAAOyN,QAAAA,CAASyU,CAAAA,CAAYliB,MAAAA,IAAUoP,EAAAA,CAAAA,EAG/C+S,CAAAA,GAAYF,EAAAA,CAAmB39B,IAAAA,CAC7BirB,CAAAA,EACA2S,CAAAA,CAAYvlB,GAAAA,EACZulB,CAAAA,CAAY7hB,WAAAA,EACZ6hB,CAAAA,CAAY5hB,KAAAA,EACZ4hB,CAAAA,CAAY3hB,KAAAA,EACZP,CAAAA,CAAAA,CACAhsB,EAAAA,CAAAA,EAGJwI,EAAAA,CAAI,GAAA,CAAA,EACJA,EAAAA,CAAI,aAAA,CAAA,EACJA,EAAAA,CAAI,GAAA,GAAM2lC,CAAAA,GAAY,MAAA,CAAA,EAElB5S,CAAAA,CAAQxP,MAAAA,IACV6B,CAAAA,CAAIygB,SAAAA,CAAU9S,CAAAA,CAAQxP,MAAAA,CAAAA,EAGxBvjB,EAAAA,CAAI4kC,CAAAA,CAAAA,EACJ5kC,EAAAA,CAAI,GAAA,CAAA;MAAA;IAAA,CAAA;IAIJ4lC,EAAAA,GAAoB,SAAA,CAAShB,CAAAA,EAAAA;MAAAA,QACvBA,CAAAA;QAAAA,KACD,GAAA;QAAA,KACA,GAAA;UAAA,OACI,KAAA;QAAA,KACJ,IAAA;UAAA,OACI,MAAA;QAAA,KACJ,GAAA;UAAA,OACI,KAAA;QAAA,KACJ,IAAA;UAAA,OACI,MAAA;QAAA,KAIJ,GAAA;UAAA,OACI,KAAA;QAAA,KACJ,GAAA;UAAA,OACI,KAAA;MAAA;IAAA,CAAA;IAcTkB,EAAAA,GAAU1gB,CAAAA,CAAI0gB,MAAAA,GAAS,UAAS9rC,CAAAA,EAAG2S,CAAAA,EAAAA;MAAAA,OACrC3M,EAAAA,CAAImpB,CAAAA,CAAIU,CAAAA,CAAM7vB,CAAAA,CAAAA,CAAAA,GAAM,GAAA,GAAMmvB,CAAAA,CAAIY,CAAAA,CAAgBpd,CAAAA,CAAAA,CAAAA,GAAM,IAAA,CAAA,EAC7CuE,IAAAA;IAAAA,CAAAA;IAcL60B,EAAAA,GAAU3gB,CAAAA,CAAI2gB,MAAAA,GAAS,UAAS/rC,CAAAA,EAAG2S,CAAAA,EAAAA;MAAAA,OACrC3M,EAAAA,CAAImpB,CAAAA,CAAIU,CAAAA,CAAM7vB,CAAAA,CAAAA,CAAAA,GAAM,GAAA,GAAMmvB,CAAAA,CAAIY,CAAAA,CAAgBpd,CAAAA,CAAAA,CAAAA,GAAM,IAAA,CAAA,EAC7CuE,IAAAA;IAAAA,CAAAA;IAmBL80B,EAAAA,GAAW5gB,CAAAA,CAAI4gB,OAAAA,GAAU,UAASC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAAA;MAAAA,OACxDtmC,EAAAA,CACE,CACEmpB,CAAAA,CAAIU,CAAAA,CAAMoc,CAAAA,CAAAA,CAAAA,EACV9c,CAAAA,CAAIY,CAAAA,CAAgBmc,CAAAA,CAAAA,CAAAA,EACpB/c,CAAAA,CAAIU,CAAAA,CAAMsc,CAAAA,CAAAA,CAAAA,EACVhd,CAAAA,CAAIY,CAAAA,CAAgBqc,CAAAA,CAAAA,CAAAA,EACpBjd,CAAAA,CAAIU,CAAAA,CAAMwc,CAAAA,CAAAA,CAAAA,EACVld,CAAAA,CAAIY,CAAAA,CAAgBuc,CAAAA,CAAAA,CAAAA,EACpB,GAAA,CAAA,CACAxmB,IAAAA,CAAK,GAAA,CAAA,CAAA,EAEF5O,IAAAA;IAAAA,CAAAA;EAiBTkU,CAAAA,CAAIE,WAAAA,CAAYihB,IAAAA,GAAOnhB,CAAAA,CAAImhB,IAAAA,GAAO,UAASN,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIxB,CAAAA,EAAAA;IAAAA,IAEvDnmB,KAAAA,CAAMwnB,CAAAA,CAAAA,IACNxnB,KAAAA,CAAMynB,CAAAA,CAAAA,IACNznB,KAAAA,CAAM0nB,CAAAA,CAAAA,IACN1nB,KAAAA,CAAM2nB,CAAAA,CAAAA,IAAAA,CACLzB,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAER,IAAIh2B,KAAAA,CAAM,wCAAA,CAAA;IAAA,OAEdwZ,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA,GACfhX,IAAAA,CAAKs1B,KAAAA,CAAM,CAAC,CAACL,CAAAA,GAAKF,CAAAA,EAAIG,CAAAA,GAAKF,CAAAA,CAAAA,CAAAA,EAAMD,CAAAA,EAAIC,CAAAA,EAAI,CAAC,CAAA,EAAG,CAAA,CAAA,EAAItB,CAAAA,IAAS,GAAA,CAAA,GAE1D1zB,IAAAA,CAAKs1B,KAAAA,CAAM,CAAC,CAACL,CAAAA,GAAKF,CAAAA,EAAIG,CAAAA,GAAKF,CAAAA,CAAAA,CAAAA,EAAMD,CAAAA,EAAIC,CAAAA,EAAI,CAAC,CAAA,EAAG,CAAA,CAAA,CAAA,CAAI5D,MAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAuC5Dld,CAAAA,CAAIE,WAAAA,CAAYkhB,KAAAA,GAAQphB,CAAAA,CAAIohB,KAAAA,GAAQ,UAClCA,CAAAA,EACAxsC,CAAAA,EACA2S,CAAAA,EACAkd,CAAAA,EACA+a,CAAAA,EACA6B,CAAAA,EAAAA;IAAAA,IAEIC,CAAAA,EAAQC,CAAAA,EAAQrtC,CAAAA,EAAGgB,CAAAA,EAAGssC,CAAAA,EAAKT,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIO,CAAAA,EAAIC,CAAAA,EAAI1G,CAAAA;IAAAA,IAOlC,QAAA,IAAA,OAAVoG,CAAAA,KACTpG,CAAAA,GAAMzzB,CAAAA,EACNA,CAAAA,GAAI3S,CAAAA,EACJA,CAAAA,GAAIwsC,CAAAA,EACJA,CAAAA,GAAQpG,CAAAA,CAAAA,EAGVvW,CAAAA,GAAQA,CAAAA,IAAS,CAAC,CAAA,EAAG,CAAA,CAAA,EACrB4c,CAAAA,GAASA,CAAAA,IAAAA,CAAU,CAAA,EAGjBhoB,KAAAA,CAAMzkB,CAAAA,CAAAA,IACNykB,KAAAA,CAAM9R,CAAAA,CAAAA,IAAAA,CACL1B,KAAAA,CAAMC,OAAAA,CAAQs7B,CAAAA,CAAAA,IAAAA,CACdv7B,KAAAA,CAAMC,OAAAA,CAAQ2e,CAAAA,CAAAA,IAAAA,CACd8a,EAAAA,CAAaC,CAAAA,CAAAA,IACI,SAAA,IAAA,OAAX6B,CAAAA,EAAAA,MAED,IAAI73B,KAAAA,CAAM,yCAAA,CAAA;IAAA,KAIlBk3B,EAAAA,CAAO9rC,CAAAA,EAAG2S,CAAAA,CAAAA,EAEV+5B,CAAAA,GAAS7c,CAAAA,CAAM,CAAA,CAAA,EACf8c,CAAAA,GAAS9c,CAAAA,CAAM,CAAA,CAAA,EACfvvB,CAAAA,GAAIksC,CAAAA,CAAMnsC,MAAAA,EAIVwsC,CAAAA,GAAK7sC,CAAAA,EACL8sC,CAAAA,GAAKn6B,CAAAA,EAEArT,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIgB,CAAAA,EAAGhB,CAAAA,EAAAA,EAEE,CAAA,KAAA,CADnBstC,CAAAA,GAAMJ,CAAAA,CAAMltC,CAAAA,CAAAA,EACJe,MAAAA,IAENwsC,CAAAA,GAAKD,CAAAA,CAAI,CAAA,CAAA,GAAKF,CAAAA,GAASG,CAAAA,EACvBC,CAAAA,GAAKF,CAAAA,CAAI,CAAA,CAAA,GAAKD,CAAAA,GAASG,CAAAA,EACvBf,EAAAA,CAAOc,CAAAA,EAAIC,CAAAA,CAAAA,KAGXX,CAAAA,GAAKS,CAAAA,CAAI,CAAA,CAAA,GAAKF,CAAAA,GAASG,CAAAA,EACvBT,CAAAA,GAAKQ,CAAAA,CAAI,CAAA,CAAA,GAAKD,CAAAA,GAASG,CAAAA,EACvBT,CAAAA,GAAKO,CAAAA,CAAI,CAAA,CAAA,GAAKF,CAAAA,GAASG,CAAAA,EACvBP,CAAAA,GAAKM,CAAAA,CAAI,CAAA,CAAA,GAAKD,CAAAA,GAASG,CAAAA,EACvBD,CAAAA,GAAKD,CAAAA,CAAI,CAAA,CAAA,GAAKF,CAAAA,GAASG,CAAAA,EACvBC,CAAAA,GAAKF,CAAAA,CAAI,CAAA,CAAA,GAAKD,CAAAA,GAASG,CAAAA,EACvBd,EAAAA,CAAQG,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIC,CAAAA,EAAIO,CAAAA,EAAIC,CAAAA,CAAAA,CAAAA;IAAAA,OAI5BL,CAAAA,IACFxB,EAAAA,CAAAA,CAAAA,EAGFO,EAAAA,CAASZ,CAAAA,CAAAA,EACF1zB,IAAAA;EAAAA,CAAAA,EAaTkU,CAAAA,CAAI2hB,IAAAA,GAAO,UAASP,CAAAA,EAAAA;IAAAA,KACb,IAAIltC,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIktC,CAAAA,CAAMnsC,MAAAA,EAAQf,CAAAA,EAAAA,EAAK;MAAA,IACjCstC,CAAAA,GAAMJ,CAAAA,CAAMltC,CAAAA,CAAAA;QACZoqB,CAAAA,GAASkjB,CAAAA,CAAIrvC,CAAAA;MAAAA,QACTqvC,CAAAA,CAAI5B,EAAAA;QAAAA,KACL,GAAA;UACHc,EAAAA,CAAOpiB,CAAAA,CAAO,CAAA,CAAA,EAAIA,CAAAA,CAAO,CAAA,CAAA,CAAA;UAAA;QAAA,KAEtB,GAAA;UACHqiB,EAAAA,CAAOriB,CAAAA,CAAO,CAAA,CAAA,EAAIA,CAAAA,CAAO,CAAA,CAAA,CAAA;UAAA;QAAA,KAEtB,GAAA;UACHsiB,EAAAA,CAAQt7B,KAAAA,CAAMwG,IAAAA,EAAMwS,CAAAA,CAAAA;UAAAA;QAAAA,KAEjB,GAAA;UACHuhB,EAAAA,CAAAA,CAAAA;MAAAA;IAAAA;IAAAA,OAKC/zB,IAAAA;EAAAA,CAAAA,EAwBTkU,CAAAA,CAAIE,WAAAA,CAAY6M,IAAAA,GAAO/M,CAAAA,CAAI+M,IAAAA,GAAO,UAASn4B,CAAAA,EAAG2S,CAAAA,EAAG1U,CAAAA,EAAGq6B,CAAAA,EAAGsS,CAAAA,EAAAA;IAAAA,IACjDnmB,KAAAA,CAAMzkB,CAAAA,CAAAA,IAAMykB,KAAAA,CAAM9R,CAAAA,CAAAA,IAAM8R,KAAAA,CAAMxmB,CAAAA,CAAAA,IAAMwmB,KAAAA,CAAM6T,CAAAA,CAAAA,IAAAA,CAAOqS,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAC1D,IAAIh2B,KAAAA,CAAM,wCAAA,CAAA;IAAA,OAEdwZ,CAAAA,KAAYH,CAAAA,CAAQC,MAAAA,KACtBoK,CAAAA,GAAAA,CAAKA,CAAAA,CAAAA,EAGPtyB,EAAAA,CACE,CACEmpB,CAAAA,CAAIU,CAAAA,CAAM7vB,CAAAA,CAAAA,CAAAA,EACVmvB,CAAAA,CAAIY,CAAAA,CAAgBpd,CAAAA,CAAAA,CAAAA,EACpBwc,CAAAA,CAAIU,CAAAA,CAAM5xB,CAAAA,CAAAA,CAAAA,EACVkxB,CAAAA,CAAIU,CAAAA,CAAMyI,CAAAA,CAAAA,CAAAA,EACV,IAAA,CAAA,CACAxS,IAAAA,CAAK,GAAA,CAAA,CAAA,EAGT0lB,EAAAA,CAASZ,CAAAA,CAAAA,EACF1zB,IAAAA;EAAAA,CAAAA,EA0BTkU,CAAAA,CAAIE,WAAAA,CAAY0hB,QAAAA,GAAW5hB,CAAAA,CAAI4hB,QAAAA,GAAW,UACxCf,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACAC,CAAAA,EACA1B,CAAAA,EAAAA;IAAAA,IAGEnmB,KAAAA,CAAMwnB,CAAAA,CAAAA,IACNxnB,KAAAA,CAAMynB,CAAAA,CAAAA,IACNznB,KAAAA,CAAM0nB,CAAAA,CAAAA,IACN1nB,KAAAA,CAAM2nB,CAAAA,CAAAA,IACN3nB,KAAAA,CAAM4nB,CAAAA,CAAAA,IACN5nB,KAAAA,CAAM6nB,CAAAA,CAAAA,IAAAA,CACL3B,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAER,IAAIh2B,KAAAA,CAAM,4CAAA,CAAA;IAAA,OAAA,IAAA,CAEb43B,KAAAA,CACH,CACE,CAACL,CAAAA,GAAKF,CAAAA,EAAIG,CAAAA,GAAKF,CAAAA,CAAAA,EAAAA,CACdG,CAAAA,GAAKF,CAAAA,EAAIG,CAAAA,GAAKF,CAAAA,CAAAA,EAAAA,CACdH,CAAAA,GAAKI,CAAAA,EAAIH,CAAAA,GAAKI,CAAAA,CAAAA,CAAAA,EAEjBL,CAAAA,EACAC,CAAAA,EAAAA,CACC,CAAA,EAAG,CAAA,CAAA,EACJtB,CAAAA,EAAAA,CACA,CAAA,CAAA,EAEK1zB,IAAAA;EAAAA,CAAAA,EA0BTkU,CAAAA,CAAIE,WAAAA,CAAY2hB,WAAAA,GAAc7hB,CAAAA,CAAI6hB,WAAAA,GAAc,UAC9CjtC,CAAAA,EACA2S,CAAAA,EACA1U,CAAAA,EACAq6B,CAAAA,EACA4U,CAAAA,EACAC,CAAAA,EACAvC,CAAAA,EAAAA;IAAAA,IAGEnmB,KAAAA,CAAMzkB,CAAAA,CAAAA,IACNykB,KAAAA,CAAM9R,CAAAA,CAAAA,IACN8R,KAAAA,CAAMxmB,CAAAA,CAAAA,IACNwmB,KAAAA,CAAM6T,CAAAA,CAAAA,IACN7T,KAAAA,CAAMyoB,CAAAA,CAAAA,IACNzoB,KAAAA,CAAM0oB,CAAAA,CAAAA,IAAAA,CACLxC,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAER,IAAIh2B,KAAAA,CAAM,+CAAA,CAAA;IAAA,IAEdw4B,CAAAA,GAAS,CAAA,GAAI,CAAA,IAAM3qC,IAAAA,CAAK4qC,KAAAA,GAAQ,CAAA,CAAA;IAAA,OAEpCH,CAAAA,GAAKzqC,IAAAA,CAAKkH,GAAAA,CAAIujC,CAAAA,EAAQ,EAAA,GAAJjvC,CAAAA,CAAAA,EAClBkvC,CAAAA,GAAK1qC,IAAAA,CAAKkH,GAAAA,CAAIwjC,CAAAA,EAAQ,EAAA,GAAJ7U,CAAAA,CAAAA,EAAAA,IAAAA,CAEbkU,KAAAA,CACH,CACE,CAACvuC,CAAAA,GAAI,CAAA,GAAIivC,CAAAA,EAAI,CAAA,CAAA,EACb,CAACA,CAAAA,GAAKE,CAAAA,EAAO,CAAA,EAAGF,CAAAA,EAAIC,CAAAA,GAAKA,CAAAA,GAAKC,CAAAA,EAAOF,CAAAA,EAAIC,CAAAA,CAAAA,EACzC,CAAC,CAAA,EAAG7U,CAAAA,GAAI,CAAA,GAAI6U,CAAAA,CAAAA,EACZ,CAAC,CAAA,EAAGA,CAAAA,GAAKC,CAAAA,EAAAA,CAASF,CAAAA,GAAKE,CAAAA,EAAQD,CAAAA,EAAAA,CAAKD,CAAAA,EAAIC,CAAAA,CAAAA,EACxC,CAAM,CAAA,GAAID,CAAAA,GAARjvC,CAAAA,EAAY,CAAA,CAAA,EACd,CAAA,CAAGivC,CAAAA,GAAKE,CAAAA,EAAQ,CAAA,EAAA,CAAIF,CAAAA,EAAAA,CAAMC,CAAAA,GAAKC,CAAAA,EAAAA,CAASF,CAAAA,EAAAA,CAAKC,CAAAA,CAAAA,EAC7C,CAAC,CAAA,EAAQ,CAAA,GAAIA,CAAAA,GAAR7U,CAAAA,CAAAA,EACL,CAAC,CAAA,EAAA,CAAK6U,CAAAA,GAAKC,CAAAA,EAAQF,CAAAA,GAAKE,CAAAA,EAAAA,CAAQD,CAAAA,EAAID,CAAAA,EAAAA,CAAKC,CAAAA,CAAAA,CAAAA,EAE3CntC,CAAAA,GAAIktC,CAAAA,EACJv6B,CAAAA,EAAAA,CACC,CAAA,EAAG,CAAA,CAAA,EACJi4B,CAAAA,EAAAA,CACA,CAAA,CAAA,EAEK1zB,IAAAA;EAAAA,CAAAA,EAwBTkU,CAAAA,CAAIE,WAAAA,CAAYgiB,OAAAA,GAAUliB,CAAAA,CAAIkiB,OAAAA,GAAU,UAASttC,CAAAA,EAAG2S,CAAAA,EAAGu6B,CAAAA,EAAIC,CAAAA,EAAIvC,CAAAA,EAAAA;IAAAA,IAE3DnmB,KAAAA,CAAMzkB,CAAAA,CAAAA,IACNykB,KAAAA,CAAM9R,CAAAA,CAAAA,IACN8R,KAAAA,CAAMyoB,CAAAA,CAAAA,IACNzoB,KAAAA,CAAM0oB,CAAAA,CAAAA,IAAAA,CACLxC,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAER,IAAIh2B,KAAAA,CAAM,2CAAA,CAAA;IAAA,IAEd24B,CAAAA,GAAM,CAAA,GAAI,CAAA,IAAM9qC,IAAAA,CAAK4qC,KAAAA,GAAQ,CAAA,CAAA,GAAKH,CAAAA;MACpCM,CAAAA,GAAM,CAAA,GAAI,CAAA,IAAM/qC,IAAAA,CAAK4qC,KAAAA,GAAQ,CAAA,CAAA,GAAKF,CAAAA;IAAAA,OAEpCrB,EAAAA,CAAO9rC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,CAAAA,EACfq5B,EAAAA,CAAQhsC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,GAAI66B,CAAAA,EAAIxtC,CAAAA,GAAIutC,CAAAA,EAAI56B,CAAAA,GAAIw6B,CAAAA,EAAIntC,CAAAA,EAAG2S,CAAAA,GAAIw6B,CAAAA,CAAAA,EAC/CnB,EAAAA,CAAQhsC,CAAAA,GAAIutC,CAAAA,EAAI56B,CAAAA,GAAIw6B,CAAAA,EAAIntC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,GAAI66B,CAAAA,EAAIxtC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,CAAAA,EAChDq5B,EAAAA,CAAQhsC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,GAAI66B,CAAAA,EAAIxtC,CAAAA,GAAIutC,CAAAA,EAAI56B,CAAAA,GAAIw6B,CAAAA,EAAIntC,CAAAA,EAAG2S,CAAAA,GAAIw6B,CAAAA,CAAAA,EAC/CnB,EAAAA,CAAQhsC,CAAAA,GAAIutC,CAAAA,EAAI56B,CAAAA,GAAIw6B,CAAAA,EAAIntC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,GAAI66B,CAAAA,EAAIxtC,CAAAA,GAAIktC,CAAAA,EAAIv6B,CAAAA,CAAAA,EAEhD64B,EAAAA,CAASZ,CAAAA,CAAAA,EACF1zB,IAAAA;EAAAA,CAAAA,EAuBTkU,CAAAA,CAAIE,WAAAA,CAAYmiB,MAAAA,GAASriB,CAAAA,CAAIqiB,MAAAA,GAAS,UAASztC,CAAAA,EAAG2S,CAAAA,EAAGpT,CAAAA,EAAGqrC,CAAAA,EAAAA;IAAAA,IAClDnmB,KAAAA,CAAMzkB,CAAAA,CAAAA,IAAMykB,KAAAA,CAAM9R,CAAAA,CAAAA,IAAM8R,KAAAA,CAAMllB,CAAAA,CAAAA,IAAAA,CAAOorC,EAAAA,CAAaC,CAAAA,CAAAA,EAAAA,MAC9C,IAAIh2B,KAAAA,CAAM,0CAAA,CAAA;IAAA,OAEXsC,IAAAA,CAAKo2B,OAAAA,CAAQttC,CAAAA,EAAG2S,CAAAA,EAAGpT,CAAAA,EAAGA,CAAAA,EAAGqrC,CAAAA,CAAAA;EAAAA,CAAAA,EAgBlCxf,CAAAA,CAAIsiB,OAAAA,GAAU,UAAS5N,CAAAA,EAAU/Q,CAAAA,EAAWC,CAAAA,EAAAA;IAAAA,OACtCA,CAAAA,KACFD,CAAAA,GAAYD,CAAAA,CAA8BC,CAAAA,EAAWC,CAAAA,CAAAA,CAAAA,EAEvDkG,EAAAA,GAAgBqN,EAAAA,CAAQzC,CAAAA,EAAU/Q,CAAAA,EAAW;MAC3C0T,cAAAA,EAAAA,CAAgB;IAAA,CAAA,CAAA,EAEXvrB,IAAAA;EAAAA,CAAAA;EAAAA,IAYLy2B,EAAAA,GAAgBviB,CAAAA,CAAIE,WAAAA,CAAYiX,OAAAA,GAAUnX,CAAAA,CAAImX,OAAAA,GAAU,YAAA;IAAA,OACnDjN,EAAAA,CAAMiN,EAAAA,CAAQ7xB,KAAAA,CAAM0a,CAAAA,EAAKza,SAAAA,CAAAA,CAAAA;EAAAA,CAAAA;EAclCya,CAAAA,CAAIE,WAAAA,CAAYsiB,WAAAA,GAAcxiB,CAAAA,CAAIwiB,WAAAA,GAAc,YAAA;IAAA,IAE5C9N,CAAAA;MACA/Q,CAAAA;MAFE8e,CAAAA,GAAO,CAAA,CAAA;IAAA,KAIN/N,CAAAA,IAAYvK,EAAAA,EAAAA,IACXA,EAAAA,CAAQhN,cAAAA,CAAeuX,CAAAA,CAAAA,EAAAA,KAEpB/Q,CAAAA,IADL8e,CAAAA,CAAK/N,CAAAA,CAAAA,GAAY,EAAA,EACCvK,EAAAA,CAAQuK,CAAAA,CAAAA,EACpBvK,EAAAA,CAAQuK,CAAAA,CAAAA,CAAUvX,cAAAA,CAAewG,CAAAA,CAAAA,IACnC8e,CAAAA,CAAK/N,CAAAA,CAAAA,CAAUt7B,IAAAA,CAAKuqB,CAAAA,CAAAA;IAAAA,OAKrB8e,CAAAA;EAAAA,CAAAA,EAiBTziB,CAAAA,CAAI2U,OAAAA,GAAU,UACZhD,CAAAA,EACA+C,CAAAA,EACA/Q,CAAAA,EACAC,CAAAA,EACAgO,CAAAA,EAAAA;IAAAA,IAEI8Q,CAAAA,GAAkB,CACpB,kBAAA,EACA,kBAAA,EACA,YAAA,EACA,iBAAA,CAAA;IAAA,OAEEn9B,SAAAA,CAAU,CAAA,CAAA,IAAA,CAAiD,CAAA,KAA3Cm9B,CAAAA,CAAgBziC,OAAAA,CAAQsF,SAAAA,CAAU,CAAA,CAAA,CAAA,GAEpDqsB,CAAAA,GAAWrsB,SAAAA,CAAU,CAAA,CAAA,GACZA,SAAAA,CAAU,CAAA,CAAA,IAAA,CAAgD,CAAA,IAA1Cm9B,CAAAA,CAAgBziC,OAAAA,CAAQsF,SAAAA,CAAU,CAAA,CAAA,CAAA,KAC3Doe,CAAAA,GAAYD,CAAAA,CAA8BC,CAAAA,EAAWC,CAAAA,CAAAA,CAAAA,EAEvDgO,CAAAA,GAAWA,CAAAA,IAAY,YAAA,EAChB+C,EAAAA,CAAQjyB,IAAAA,CAAKoJ,IAAAA,EAAM6lB,CAAAA,EAAgB+C,CAAAA,EAAU/Q,CAAAA,EAAWiO,CAAAA,CAAAA;EAAAA,CAAAA;EAAAA,IAuE7DwJ,EAAAA;IApEAzE,EAAAA,GAAY5X,CAAAA,CAAQ4X,SAAAA,IAAa,OAAA;IAUjCgM,EAAAA,GAAgB3iB,CAAAA,CAAIE,WAAAA,CAAYyiB,YAAAA,GAAe3iB,CAAAA,CAAI2iB,YAAAA,GAAe,YAAA;MAAA,OAC7DhM,EAAAA;IAAAA,CAAAA;IAaLD,EAAAA,GAAgB1W,CAAAA,CAAIE,WAAAA,CAAYwW,YAAAA,GAAe1W,CAAAA,CAAI0W,YAAAA,GAAe,UACpEzE,CAAAA,EAAAA;MAAAA,OAEA0E,EAAAA,GAAY1E,CAAAA,EACZr3B,EAAAA,CAAImpB,CAAAA,CAAIU,CAAAA,CAAMwN,CAAAA,CAAAA,CAAAA,GAAU,IAAA,CAAA,EACjBnmB,IAAAA;IAAAA,CAAAA;EAiBTkU,CAAAA,CAAIE,WAAAA,CAAY0iB,WAAAA,GAAc9jB,CAAAA,CAAMkB,GAAAA,CAAI4iB,WAAAA,GAAc9jB,CAAAA,CAAMkB,GAAAA,CAAI6iB,kBAAAA,GAAqB,UACnFC,CAAAA,EACAC,CAAAA,EAAAA;IAAAA,IAEAD,CAAAA,GAAYA,CAAAA,IAAa,EAAA,EACzBC,CAAAA,GAAYA,CAAAA,IAAa,CAAA,EAErB1pB,KAAAA,CAAM0pB,CAAAA,CAAAA,IAAAA,CAAel9B,KAAAA,CAAMC,OAAAA,CAAQg9B,CAAAA,CAAAA,EAAAA,MAC/B,IAAIt5B,KAAAA,CAAM,+CAAA,CAAA;IAAA,OAGlBs5B,CAAAA,GAAYA,CAAAA,CACTr4B,GAAAA,CAAI,UAAS7V,CAAAA,EAAAA;MAAAA,OACLmvB,CAAAA,CAAIU,CAAAA,CAAM7vB,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA,CAAAA,CAElB8lB,IAAAA,CAAK,GAAA,CAAA,EACRqoB,CAAAA,GAAYhf,CAAAA,CAAIU,CAAAA,CAAMse,CAAAA,CAAAA,CAAAA,EAEtBnoC,EAAAA,CAAI,GAAA,GAAMkoC,CAAAA,GAAY,IAAA,GAAOC,CAAAA,GAAY,IAAA,CAAA,EAClCj3B,IAAAA;EAAAA,CAAAA;EAAAA,IAKLk3B,EAAAA,GAAiBhjB,CAAAA,CAAIE,WAAAA,CAAY8iB,aAAAA,GAAgBhjB,CAAAA,CAAIgjB,aAAAA,GAAgB,YAAA;IAAA,OAChElb,EAAAA,GAAiBsT,EAAAA;EAAAA,CAAAA;EAG1Bpb,CAAAA,CAAIE,WAAAA,CAAY8iB,aAAAA,GAAgBhjB,CAAAA,CAAIgjB,aAAAA,GAAgB,YAAA;IAAA,OAC3Clb,EAAAA,GAAiBsT,EAAAA;EAAAA,CAAAA;EAAAA,IAatB6H,EAAAA,GAAuBjjB,CAAAA,CAAIE,WAAAA,CAAY+iB,mBAAAA,GAAsBjjB,CAAAA,CAAIijB,mBAAAA,GAAsB,UACzF3iB,CAAAA,EAAAA;MAAAA,OAGqB,QAAA,IAAA,QADrBA,CAAAA,GAAQA,CAAAA,IAAS,IAAA,CAAA,KAEf8a,EAAAA,GAAmB9a,CAAAA,CAAAA,EAEdxU,IAAAA;IAAAA,CAAAA;IAYLo3B,EAAAA,GAAuBljB,CAAAA,CAAIE,WAAAA,CAAYgjB,mBAAAA,GAAsBljB,CAAAA,CAAIkjB,mBAAAA,GAAsB,YAAA;MAAA,OAClF9H,EAAAA;IAAAA,CAAAA;EAGT6H,EAAAA,CAAoBlkB,CAAAA,CAAQoc,UAAAA,CAAAA;EAAAA,IAExB8C,EAAAA,GAA2Bje,CAAAA,CAAIE,WAAAA,CAAY+d,uBAAAA,GAA0B,UACvE3d,CAAAA,EAAAA;MAAAA,OAEOmE,CAAAA,CAAMnE,CAAAA,CAAAA;IAAAA,CAAAA;IAGX4d,EAAAA,GAAyBle,CAAAA,CAAIE,WAAAA,CAAYge,qBAAAA,GAAwB,UACnE5d,CAAAA,EAAAA;MAAAA,OAEI0C,CAAAA,KAAYH,CAAAA,CAAQE,QAAAA,GACfzC,CAAAA,GAGLqK,EAAAA,CAAatE,CAAAA,CAAAA,CAAaqK,QAAAA,CAASI,SAAAA,GACnCnG,EAAAA,CAAatE,CAAAA,CAAAA,CAAaqK,QAAAA,CAASE,WAAAA,GACjBnM,CAAAA,CAAMnE,CAAAA,CAAAA;IAAAA,CAAAA;IAI1B6iB,EAAAA,GAAiCnjB,CAAAA,CAAIE,WAAAA,CAAYijB,6BAAAA,GAAgCnjB,CAAAA,CAAImjB,6BAAAA,GAAgC,UACvH7iB,CAAAA,EAAAA;MAAAA,OAEOyD,CAAAA,CAAIka,EAAAA,CAAwB3d,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAGjC8iB,EAAAA,GAA+BpjB,CAAAA,CAAIE,WAAAA,CAAYkjB,2BAAAA,GAA8BpjB,CAAAA,CAAIojB,2BAAAA,GAA8B,UACjH9iB,CAAAA,EAAAA;MAAAA,OAEOyD,CAAAA,CAAIma,EAAAA,CAAsB5d,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAG/BsW,EAAAA,GAAc7X,CAAAA,CAAQ6X,WAAAA,IAAe,KAAA;EAWzC5W,CAAAA,CAAIE,WAAAA,CAAYmjB,cAAAA,GAAiBrjB,CAAAA,CAAIsjB,YAAAA,GAAe,YAAA;IAAA,OAC3C5U,EAAAA,CAAkBkI,EAAAA,CAAAA;EAAAA,CAAAA,EAyC3B5W,CAAAA,CAAIE,WAAAA,CAAYqjB,cAAAA,GAAiBvjB,CAAAA,CAAIwjB,YAAAA,GAAe,UAClDvU,CAAAA,EACAh9B,CAAAA,EACAi9B,CAAAA,EACAC,CAAAA,EAAAA;IAAAA,OAWAyH,EAAAA,GAAc5H,EAAAA,CATA;MACZC,GAAAA,EAAKA,CAAAA;MACLh9B,GAAAA,EAAKA,CAAAA;MACLi9B,GAAAA,EAAKA,CAAAA;MACLC,GAAAA,EAAKA,CAAAA;MACLE,YAAAA,EAAc,MAAA;MACdrQ,SAAAA,EAAW;IAAA,CAAA,CAAA,EAIbpkB,EAAAA,CAAIg8B,EAAAA,CAAAA,EACG9qB,IAAAA;EAAAA,CAAAA;EAAAA,IAGL23B,EAAAA,GAAY1kB,CAAAA,CAAQ0kB,SAAAA,IAAa,KAAA;EAWrCzjB,CAAAA,CAAIE,WAAAA,CAAYwjB,YAAAA,GAAe1jB,CAAAA,CAAI0jB,YAAAA,GAAe,YAAA;IAAA,OACzChV,EAAAA,CAAkB+U,EAAAA,CAAAA;EAAAA,CAAAA,EAyC3BzjB,CAAAA,CAAIE,WAAAA,CAAYyjB,YAAAA,GAAe3jB,CAAAA,CAAI2jB,YAAAA,GAAe,UAChD1U,CAAAA,EACAh9B,CAAAA,EACAi9B,CAAAA,EACAC,CAAAA,EAAAA;IAAAA,OAWAsU,EAAAA,GAAYzU,EAAAA,CATE;MACZC,GAAAA,EAAKA,CAAAA;MACLh9B,GAAAA,EAAKA,CAAAA;MACLi9B,GAAAA,EAAKA,CAAAA;MACLC,GAAAA,EAAKA,CAAAA;MACLE,YAAAA,EAAc,MAAA;MACdrQ,SAAAA,EAAW;IAAA,CAAA,CAAA,EAIbpkB,EAAAA,CAAI6oC,EAAAA,CAAAA,EACG33B,IAAAA;EAAAA,CAAAA;EAAAA,IAGLozB,EAAAA,GAAYngB,CAAAA,CAAQmgB,SAAAA,IAAa,KAAA;IAUjC0E,EAAAA,GAAgB5jB,CAAAA,CAAIE,WAAAA,CAAY0jB,YAAAA,GAAe5jB,CAAAA,CAAI4jB,YAAAA,GAAe,YAAA;MAAA,OAC7DlV,EAAAA,CAAkBwQ,EAAAA,CAAAA;IAAAA,CAAAA;EAwC3Blf,CAAAA,CAAIE,WAAAA,CAAY2jB,YAAAA,GAAe7jB,CAAAA,CAAI6jB,YAAAA,GAAe,UAChD5U,CAAAA,EACAh9B,CAAAA,EACAi9B,CAAAA,EACAC,CAAAA,EAAAA;IAAAA,OAUA+P,EAAAA,GAAYlQ,EAAAA,CARE;MACZC,GAAAA,EAAKA,CAAAA;MACLh9B,GAAAA,EAAKA,CAAAA;MACLi9B,GAAAA,EAAKA,CAAAA;MACLC,GAAAA,EAAKA,CAAAA;MACLE,YAAAA,EAAc,MAAA;MACdrQ,SAAAA,EAAW;IAAA,CAAA,CAAA,EAINlT,IAAAA;EAAAA,CAAAA;EAAAA,IAGL8wB,EAAAA,GAAkB7d,CAAAA,CAAQ6b,SAAAA;IAW1BkC,EAAAA,GAAgB9c,CAAAA,CAAIE,WAAAA,CAAY4c,YAAAA,GAAe9c,CAAAA,CAAI8c,YAAAA,GAAe,YAAA;MAAA,OAC7DhO,UAAAA,CAAW8N,EAAAA,IAAmB,CAAA,CAAA;IAAA,CAAA;EAavC5c,CAAAA,CAAIE,WAAAA,CAAY2c,YAAAA,GAAe7c,CAAAA,CAAI6c,YAAAA,GAAe,UAASjC,CAAAA,EAAAA;IAAAA,IACrDvhB,KAAAA,CAAMuhB,CAAAA,CAAAA,EAAAA,MACF,IAAIpxB,KAAAA,CAAM,+CAAA,CAAA;IAAA,OAElBozB,EAAAA,GAAkBhC,CAAAA,EACX9uB,IAAAA;EAAAA,CAAAA;EAAAA,IAGL+qB,EAAAA,GAAY,CAAA;EAShB7W,CAAAA,CAAI8jB,aAAAA,GAAgB;IAAA,CAAA,EACf,CAAA;IACHC,IAAAA,EAAM,CAAA;IACNC,GAAAA,EAAK,CAAA;IACLC,KAAAA,EAAO,CAAA;IAAA,CAAA,EACJ,CAAA;IACHnR,KAAAA,EAAO,CAAA;IACPoR,OAAAA,EAAS,CAAA;IACT7B,MAAAA,EAAQ,CAAA;IAAA,CAAA,EACL,CAAA;IACH8B,UAAAA,EAAY,CAAA;IACZC,OAAAA,EAAS,CAAA;IACTC,MAAAA,EAAQ,CAAA;IACRC,KAAAA,EAAO;EAAA,CAAA,EAcTtkB,CAAAA,CAAIE,WAAAA,CAAYqkB,UAAAA,GAAavkB,CAAAA,CAAIukB,UAAAA,GAAa,UAAS/E,CAAAA,EAAAA;IAAAA,IACjDptC,CAAAA,GAAK4tB,CAAAA,CAAI8jB,aAAAA,CAActE,CAAAA,CAAAA;IAAAA,IAAAA,KAChBhX,CAAAA,KAAPp2B,CAAAA,EAAAA,MACI,IAAIoX,KAAAA,CACR,qBAAA,GACEg2B,CAAAA,GACA,6EAAA,CAAA;IAAA,OAGN3I,EAAAA,GAAYzkC,CAAAA,EACZwI,EAAAA,CAAIxI,CAAAA,GAAK,IAAA,CAAA,EAEF0Z,IAAAA;EAAAA,CAAAA;EAAAA,IAGLgrB,EAAAA,GAAa,CAAA;EAYjB9W,CAAAA,CAAIE,WAAAA,CAAYskB,WAAAA,GAAcxkB,CAAAA,CAAIwkB,WAAAA,GAAc,UAAShF,CAAAA,EAAAA;IAAAA,IACnDptC,CAAAA,GAAK4tB,CAAAA,CAAI8jB,aAAAA,CAActE,CAAAA,CAAAA;IAAAA,IAAAA,KAChBhX,CAAAA,KAAPp2B,CAAAA,EAAAA,MACI,IAAIoX,KAAAA,CACR,sBAAA,GACEg2B,CAAAA,GACA,6EAAA,CAAA;IAAA,OAGN1I,EAAAA,GAAa1kC,CAAAA,EACbwI,EAAAA,CAAIxI,CAAAA,GAAK,IAAA,CAAA,EAEF0Z,IAAAA;EAAAA,CAAAA,EAcTkU,CAAAA,CAAIE,WAAAA,CAAYukB,iBAAAA,GAAoBzkB,CAAAA,CAAIE,WAAAA,CAAYwkB,aAAAA,GAAgB1kB,CAAAA,CAAIykB,iBAAAA,GAAoBzkB,CAAAA,CAAI0kB,aAAAA,GAAgB,UAC9GzvC,CAAAA,EAAAA;IAAAA,IAEAA,CAAAA,GAASA,CAAAA,IAAU,CAAA,EACfokB,KAAAA,CAAMpkB,CAAAA,CAAAA,EAAAA,MACF,IAAIuU,KAAAA,CAAM,oDAAA,CAAA;IAAA,OAElB5O,EAAAA,CAAImpB,CAAAA,CAAIU,CAAAA,CAAMxvB,CAAAA,CAAAA,CAAAA,GAAW,IAAA,CAAA,EAElB6W,IAAAA;EAAAA,CAAAA,EAcTkU,CAAAA,CAAIlC,MAAAA,GAASA,CAAAA,EAWbkC,CAAAA,CAAIygB,SAAAA,GAAY,UAAStiB,CAAAA,EAAAA;IAAAA,CAErBA,CAAAA,GADoB,QAAA,IAAA,OAAXA,CAAAA,GACAoM,EAAAA,CAAQC,EAAAA,CAAWrM,CAAAA,CAAAA,CAAAA,GAEnBwmB,EAAAA,CAAU,IAAA,EAAMxmB,CAAAA,CAAAA,EAGfymB,MAAAA,CAAOna,EAAAA,CAAAA,KACjB7vB,EAAAA,CAAI,GAAA,GAAMujB,CAAAA,CAAO/rB,EAAAA,GAAK,KAAA,CAAA,EACtBq4B,EAAAA,GAAetM,CAAAA,CAAAA;EAAAA,CAAAA;EAAAA,IASfwmB,EAAAA,GAAY,SAAA,CAAS5pB,CAAAA,EAAKoD,CAAAA,EAAAA;IAAAA,IAAAA,CAExBpD,CAAAA,IAAAA,CAAOyP,EAAAA,CAAWzP,CAAAA,CAAAA,EAAAA;MAAAA,IAClB8pB,CAAAA,GAAAA,CAAY,CAAA;MAAA,KACX,IAAI7vC,CAAAA,IAAKu1B,EAAAA,EAAAA,IACRA,EAAAA,CAAQpN,cAAAA,CAAenoB,CAAAA,CAAAA,IACrBu1B,EAAAA,CAAQv1B,CAAAA,CAAAA,CAAG4vC,MAAAA,CAAOzmB,CAAAA,CAAAA,EAAS;QAC7B0mB,CAAAA,GAAAA,CAAY,CAAA;QAAA;MAAA;MAAA,IAMdA,CAAAA,EACF1mB,CAAAA,GAASoM,EAAAA,CAAQv1B,CAAAA,CAAAA,CAAAA,KACZ;QAAA,IACD2+B,CAAAA,GAAY,IAAA,GAAA,CAAQ3rB,MAAAA,CAAOC,IAAAA,CAAKsiB,EAAAA,CAAAA,CAASt1B,MAAAA,GAAS,CAAA,EAAG8K,QAAAA,CAAS,EAAA,CAAA;QAClEwqB,EAAAA,CAAQoJ,CAAAA,CAAAA,GAAaxV,CAAAA,EACrBA,CAAAA,CAAO/rB,EAAAA,GAAKuhC,CAAAA;MAAAA;MAAAA,OAId5Y,CAAAA,KAAQyP,EAAAA,CAAWzP,CAAAA,CAAAA,GAAOoD,CAAAA,CAAO/rB,EAAAA,CAAAA,EAEjCw4B,EAAAA,CAAOrN,OAAAA,CAAQ,WAAA,EAAaY,CAAAA,CAAAA,EAErBA,CAAAA;IAAAA;EAAAA,CAAAA;EAcT6B,CAAAA,CAAI2kB,SAAAA,GAAY,UAAS5pB,CAAAA,EAAKoD,CAAAA,EAAAA;IAAAA,OAC5BwmB,EAAAA,CAAU5pB,CAAAA,EAAKoD,CAAAA,CAAAA,EACRrS,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIkD,iBAAAA,GAAoB,YAAA;IAAA,OACtBtoB,EAAAA,CAAI,GAAA,CAAA,EAEJwvB,EAAAA,CAAehxB,IAAAA,CAAK;MAClB2hB,GAAAA,EAAK+O,EAAAA;MACL/nB,IAAAA,EAAM+lB,EAAAA;MACN6G,KAAAA,EAAOuQ;IAAAA,CAAAA,CAAAA,EAEFpzB,IAAAA;EAAAA,CAAAA,EAUTkU,CAAAA,CAAIyD,oBAAAA,GAAuB,YAAA;IACzB7oB,EAAAA,CAAI,GAAA,CAAA;IAAA,IAGAkqC,CAAAA,GAAY1a,EAAAA,CAAe6D,GAAAA,CAAAA,CAAAA;IAAAA,OAC/BnE,EAAAA,GAAgBgb,CAAAA,CAAU/pB,GAAAA,EAC1B+M,EAAAA,GAAiBgd,CAAAA,CAAU/iC,IAAAA,EAC3Bm9B,EAAAA,GAAY4F,CAAAA,CAAUnW,KAAAA,EAEtBlE,EAAAA,GAAe,IAAA,EAER3e,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAI+kB,8BAAAA,GAAiC,UAAS3mB,CAAAA,EAAAA;IAAAA,OAC5CxjB,EAAAA,CAAIwjB,CAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa,KAAA,CAAA,EACjB+L,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIglB,OAAAA,GAAU,UAASxP,CAAAA,EAAAA;IAAAA,OACrB56B,EAAAA,CAAI,GAAA,GAAM46B,CAAAA,CAAAA,EACH1pB,IAAAA;EAAAA,CAAAA;EAAAA,IAML+gB,EAAAA,GAAQ,SAAA,CAASj4B,CAAAA,EAAG2S,CAAAA,EAAAA;MAAAA,IAClB09B,CAAAA,GAAKrwC,CAAAA,IAAK,CAAA;MACdoT,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;QAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;QACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;UAAA,OACIwZ,CAAAA;QAAAA,CAAAA;QAETxuC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;UACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,KACT2kB,CAAAA,GAAKnW,UAAAA,CAAWxO,CAAAA,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,CAAAA;MAAAA,IAKlB6kB,CAAAA,GAAK59B,CAAAA,IAAK,CAAA;MACdS,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;QAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;QACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;UAAA,OACI0Z,CAAAA;QAAAA,CAAAA;QAET1uC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;UACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,KACT6kB,CAAAA,GAAKrW,UAAAA,CAAWxO,CAAAA,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,CAAAA;MAAAA,IAKlB8kB,CAAAA,GAAQ,IAAA;MAAA,OACZp9B,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;QAClCo5B,UAAAA,EAAAA,CAAY,CAAA;QACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;UAAA,OACI2Z,CAAAA;QAAAA,CAAAA;QAET3uC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;UACZ8kB,CAAAA,GAAQ9kB,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,CAAAA,EAGX+L,IAAAA;IAAAA,CAAAA;IAMLqhB,EAAAA,GAAY,SAAA,CAASv4B,CAAAA,EAAG2S,CAAAA,EAAG1U,CAAAA,EAAGq6B,CAAAA,EAAAA;MAChCL,EAAAA,CAAMnqB,IAAAA,CAAKoJ,IAAAA,EAAMlX,CAAAA,EAAG2S,CAAAA,CAAAA,EAAAA,IAAAA,CACf3U,IAAAA,GAAO,MAAA;MAAA,IAERyyC,CAAAA,GAAKxyC,CAAAA,IAAK,CAAA;MACdmV,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;QAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;QACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;UAAA,OACI4Z,CAAAA;QAAAA,CAAAA;QAET5uC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;UACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,KACT+kB,CAAAA,GAAKvW,UAAAA,CAAWxO,CAAAA,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,CAAAA;MAAAA,IAKlBglB,CAAAA,GAAKpY,CAAAA,IAAK,CAAA;MAAA,OACdllB,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;QAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;QACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;UAAA,OACI6Z,CAAAA;QAAAA,CAAAA;QAET7uC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;UACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,KACTglB,CAAAA,GAAKxW,UAAAA,CAAWxO,CAAAA,CAAAA,CAAAA;QAAAA;MAAAA,CAAAA,CAAAA,EAKfxU,IAAAA;IAAAA,CAAAA;IAOLy5B,EAAAA,GAAe,SAAA,CAAA,EAAA;MAAA,IAAA,CACZ7a,IAAAA,GAAOA,EAAAA,EAAAA,IAAAA,CACPrE,WAAAA,GAAcA,CAAAA,EAAAA,IAAAA,CACdO,KAAAA,GAAQA,EAAAA,CAAMttB,KAAAA,CAAM,CAAA,CAAA,EAAA,IAAA,CACpBqxB,YAAAA,GAAeA,EAAAA,CAAarxB,KAAAA,CAAM,CAAA,CAAA,EAAA,IAAA,CAClC1E,CAAAA,GAAIm1B,EAAAA,EAAAA,IAAAA,CACJxiB,CAAAA,GAAIyiB,EAAAA,EAAAA,IAAAA,CACJ5L,MAAAA,GAAS6L,EAAAA,EAAAA,IAAAA,CACTgI,KAAAA,GAAQuT,EAAAA,CAAanf,CAAAA,CAAAA,EAAAA,IAAAA,CACrB6L,MAAAA,GAAS7O,EAAAA,CAAcgD,CAAAA,CAAAA,EAAAA,IAAAA,CACvBS,iBAAAA,GAAoBA,EAAAA,EAAAA,IAAAA,CAEpB10B,EAAAA,GAAK,EAAA,EAAA,IAAA,CACL6rB,YAAAA,GAAAA,CAAgB,CAAA;IAAA,CAAA;EAGvBsnB,EAAAA,CAAaxzC,SAAAA,CAAUm8B,OAAAA,GAAU,YAAA;IAC/BxD,EAAAA,GAAO5e,IAAAA,CAAK4e,IAAAA,EACZrE,CAAAA,GAAcva,IAAAA,CAAKua,WAAAA,EACnBsE,EAAAA,GAAe7e,IAAAA,CAAK6e,YAAAA,EACpB/D,EAAAA,GAAQ9a,IAAAA,CAAK8a,KAAAA,EACbmD,EAAAA,GAAQje,IAAAA,CAAKlX,CAAAA,EACbo1B,EAAAA,GAAQle,IAAAA,CAAKvE,CAAAA,EACb0iB,EAAAA,GAAane,IAAAA,CAAKsS,MAAAA,EAClBqnB,EAAAA,CAAapf,CAAAA,EAAava,IAAAA,CAAKmmB,KAAAA,CAAAA,EAC/ByT,EAAAA,CAAcrf,CAAAA,EAAava,IAAAA,CAAKomB,MAAAA,CAAAA,EAChCpL,EAAAA,GAAoBhb,IAAAA,CAAKgb,iBAAAA;EAAAA,CAAAA;EAAAA,IAGvBiH,EAAAA,GAAuB,SAAA,CAASn5B,CAAAA,EAAG2S,CAAAA,EAAG0qB,CAAAA,EAAOC,CAAAA,EAAQ9T,CAAAA,EAAAA;MAEvD4M,EAAAA,CAAkB5xB,IAAAA,CAAK,IAAImsC,EAAAA,CAAAA,CAAAA,CAAAA,EAG3B7a,EAAAA,GAAOrE,CAAAA,GAAc,CAAA,EACrBO,EAAAA,GAAQ,EAAA,EACRmD,EAAAA,GAAQn1B,CAAAA,EACRo1B,EAAAA,GAAQziB,CAAAA,EAER0iB,EAAAA,GAAa7L,CAAAA,EAEbgY,EAAAA,CAAU,CAACnE,CAAAA,EAAOC,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAGhByT,EAAAA,GAAgB,SAAA,CAAS5qB,CAAAA,EAAAA;MAAAA,IAEvBgQ,EAAAA,CAAgBhQ,CAAAA,CAAAA,EAClBiQ,EAAAA,CAAkBiD,GAAAA,CAAAA,CAAAA,CAAMC,OAAAA,CAAAA,CAAAA,CAAAA,KAAAA;QAAAA,IAKtB0X,CAAAA,GAAa,IAAIL,EAAAA,CAAAA,CAAAA;UAEjBM,CAAAA,GAAY,IAAA,GAAA,CAAQ79B,MAAAA,CAAOC,IAAAA,CAAK6iB,EAAAA,CAAAA,CAAe71B,MAAAA,GAAS,CAAA,EAAG8K,QAAAA,CAAS,EAAA,CAAA;QACxE6lC,CAAAA,CAAWxzC,EAAAA,GAAKyzC,CAAAA,EAEhB9a,EAAAA,CAAgBhQ,CAAAA,CAAAA,GAAO8qB,CAAAA,EACvB/a,EAAAA,CAAc+a,CAAAA,CAAAA,GAAaD,CAAAA,EAE3Bhb,EAAAA,CAAOrN,OAAAA,CAAQ,eAAA,EAAiBqoB,CAAAA,CAAAA,EAGhC5a,EAAAA,CAAkBiD,GAAAA,CAAAA,CAAAA,CAAMC,OAAAA,CAAAA,CAAAA;MAAAA;IAAAA,CAAAA;EAAAA,KAoIrB,IAAI4X,EAAAA,IAhHT9lB,CAAAA,CAAI+lB,eAAAA,GAAkB,UAASnxC,CAAAA,EAAG2S,CAAAA,EAAG0qB,CAAAA,EAAOC,CAAAA,EAAQ9T,CAAAA,EAAAA;IAAAA,OAQlD2P,EAAAA,CAAqBn5B,CAAAA,EAAG2S,CAAAA,EAAG0qB,CAAAA,EAAOC,CAAAA,EAAQ9T,CAAAA,CAAAA,EACnCtS,IAAAA;EAAAA,CAAAA,EAWTkU,CAAAA,CAAI2lB,aAAAA,GAAgB,UAAS5qB,CAAAA,EAAAA;IAAAA,OAC3B4qB,EAAAA,CAAc5qB,CAAAA,CAAAA,EACPjP,IAAAA;EAAAA,CAAAA,EAeTkU,CAAAA,CAAIgmB,YAAAA,GAAe,UAASjrB,CAAAA,EAAKqD,CAAAA,EAAAA;IAAAA,IAC3B4T,CAAAA,GAAUlH,EAAAA,CAAcC,EAAAA,CAAgBhQ,CAAAA,CAAAA,CAAAA;IAAAA,OAC5CngB,EAAAA,CAAI,GAAA,CAAA,EACJA,EAAAA,CAAIwjB,CAAAA,CAAOre,QAAAA,CAAAA,CAAAA,GAAa,KAAA,CAAA,EACxBnF,EAAAA,CAAI,GAAA,GAAMo3B,CAAAA,CAAQ5/B,EAAAA,GAAK,KAAA,CAAA,EACvBwI,EAAAA,CAAI,GAAA,CAAA,EACGkR,IAAAA;EAAAA,CAAAA,EAYTkU,CAAAA,CAAIimB,aAAAA,GAAgB,UAASlrB,CAAAA,EAAAA;IAAAA,IACvBiX,CAAAA,GAAUlH,EAAAA,CAAcC,EAAAA,CAAgBhQ,CAAAA,CAAAA,CAAAA;IAAAA,OACrC;MACLnmB,CAAAA,EAAGo9B,CAAAA,CAAQp9B,CAAAA;MACX2S,CAAAA,EAAGyqB,CAAAA,CAAQzqB,CAAAA;MACX0qB,KAAAA,EAAOD,CAAAA,CAAQC,KAAAA;MACfC,MAAAA,EAAQF,CAAAA,CAAQE,MAAAA;MAChB9T,MAAAA,EAAQ4T,CAAAA,CAAQ5T;IAAAA,CAAAA;EAAAA,CAAAA,EAepB4B,CAAAA,CAAImY,IAAAA,GAAO,UAASt1B,CAAAA,EAAUkc,CAAAA,EAAAA;IAAAA,OAC5Blc,CAAAA,GAAWA,CAAAA,IAAY,eAAA,EAAA,CAEvBkc,CAAAA,GAAUA,CAAAA,IAAW,CAAA,CAAA,EACbmnB,aAAAA,GAAgBnnB,CAAAA,CAAQmnB,aAAAA,IAAAA,CAAiB,CAAA,EAAA,CAEnB,CAAA,KAA1BnnB,CAAAA,CAAQmnB,aAAAA,IACVz5B,CAAAA,CAAOwrB,EAAAA,CAAQF,EAAAA,CAAAA,CAAAA,CAAAA,EAAkBl1B,CAAAA,CAAAA,EACJ,UAAA,IAAA,OAAlB4J,CAAAA,CAAO05B,MAAAA,IACZz6B,CAAAA,CAAawC,UAAAA,IACfA,UAAAA,CAAWzB,CAAAA,CAAO05B,MAAAA,EAAQ,GAAA,CAAA,EAGvBr6B,IAAAA,IAEA,IAAI7B,OAAAA,CAAQ,UAASC,CAAAA,EAASG,CAAAA,EAAAA;MAAAA,IAAAA;QAAAA,IAE7BiF,CAAAA,GAAS7C,CAAAA,CAAOwrB,EAAAA,CAAQF,EAAAA,CAAAA,CAAAA,CAAAA,EAAkBl1B,CAAAA,CAAAA;QACjB,UAAA,IAAA,OAAlB4J,CAAAA,CAAO05B,MAAAA,IACZz6B,CAAAA,CAAawC,UAAAA,IACfA,UAAAA,CAAWzB,CAAAA,CAAO05B,MAAAA,EAAQ,GAAA,CAAA,EAG9Bj8B,CAAAA,CAAQoF,CAAAA,CAAAA;MAAAA,CACR,QAAOtc,CAAAA,EAAAA;QACPqX,CAAAA,CAAOrX,CAAAA,CAAE4qB,OAAAA,CAAAA;MAAAA;IAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAUEkB,CAAAA,CAAMkB,GAAAA,EACnBlB,CAAAA,CAAMkB,GAAAA,CAAI7C,cAAAA,CAAe2oB,EAAAA,CAAAA,KACZ,QAAA,KAAXA,EAAAA,IAAuBhnB,CAAAA,CAAMkB,GAAAA,CAAI4K,MAAAA,CAAO31B,MAAAA,GAAAA,UAChC21B,CAAAA,EAAQwb,CAAAA,EAAAA;IAAAA,IAMZC,CAAAA,EAAWC,CAAAA,EAAkBpyC,CAAAA;IAAAA,KAE5BA,CAAAA,GAAIkyC,CAAAA,CAAUnxC,MAAAA,GAAS,CAAA,EAAA,CAAU,CAAA,KAAPf,CAAAA,EAAUA,CAAAA,EAAAA,EAMvCmyC,CAAAA,GAAYD,CAAAA,CAAUlyC,CAAAA,CAAAA,CAAG,CAAA,CAAA,EACzBoyC,CAAAA,GAAmBF,CAAAA,CAAUlyC,CAAAA,CAAAA,CAAG,CAAA,CAAA,EAChC02B,CAAAA,CAAO7N,SAAAA,CAAUzX,KAAAA,CACfslB,CAAAA,EACA,CAACyb,CAAAA,CAAAA,CAAW3K,MAAAA,CACkB,UAAA,IAAA,OAArB4K,CAAAA,GACH,CAACA,CAAAA,CAAAA,GACDA,CAAAA,CAAAA,CAAAA;EAAAA,CAAAA,CAIT1b,EAAAA,EAAQ9L,CAAAA,CAAMkB,GAAAA,CAAI4K,MAAAA,CAAAA,GAErB5K,CAAAA,CAAI8lB,EAAAA,CAAAA,GAAUhnB,CAAAA,CAAMkB,GAAAA,CAAI8lB,EAAAA,CAAAA,CAAAA;EAAAA,IAK1BN,EAAAA,GAAgBxlB,CAAAA,CAAIwlB,YAAAA,GAAe,UAASlV,CAAAA,EAAAA;MAAAA,OAAAA,CAG3C3F,EAAAA,CAFH2F,CAAAA,GAAaA,CAAAA,IAAcjK,CAAAA,CAAAA,CAECqK,QAAAA,CAASG,SAAAA,GACjClG,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASC,WAAAA,IACpCvN,EAAAA;IAAAA,CAAAA;IAIAqiB,EAAAA,GAAgBzlB,CAAAA,CAAIylB,YAAAA,GAAe,UAASnV,CAAAA,EAAYhQ,CAAAA,EAAAA;MAC1DqK,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASG,SAAAA,GAChCvQ,CAAAA,GAAQ8C,EAAAA,GAAcuH,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASC,WAAAA;IAAAA,CAAAA;IAGxDtN,EAAAA,GAAiBrD,CAAAA,CAAIqD,aAAAA,GAAgB,UAASiN,CAAAA,EAAAA;MAAAA,OAAAA,CAG7C3F,EAAAA,CAFH2F,CAAAA,GAAaA,CAAAA,IAAcjK,CAAAA,CAAAA,CAECqK,QAAAA,CAASI,SAAAA,GACjCnG,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASE,WAAAA,IACpCxN,EAAAA;IAAAA,CAAAA;IAIAsiB,EAAAA,GAAiB1lB,CAAAA,CAAI0lB,aAAAA,GAAgB,UAASpV,CAAAA,EAAYhQ,CAAAA,EAAAA;MAC5DqK,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASI,SAAAA,GAChCxQ,CAAAA,GAAQ8C,EAAAA,GAAcuH,EAAAA,CAAa2F,CAAAA,CAAAA,CAAYI,QAAAA,CAASE,WAAAA;IAAAA,CAAAA;EAAAA,OAQ5D5Q,CAAAA,CAAIC,QAAAA,GAAW;IACbkW,SAAAA,EAAWA,EAAAA;IACXwJ,QAAAA,EAAUA,EAAAA;IACVxI,OAAAA,EAASoL,EAAAA;IACThf,WAAAA,EAAaA,EAAAA;IACbuZ,YAAAA,EAAcA,EAAAA;IACd8G,YAAAA,EAAcA,EAAAA;IACdZ,aAAAA,EAAeA,EAAAA;IACfE,mBAAAA,EAAqBA,EAAAA;IACrBP,YAAAA,EAAcA,EAAAA;IACdnb,KAAAA,EAAOA,EAAAA;IACPyW,uBAAAA,EAAyBA,EAAAA;IACzBC,qBAAAA,EAAuBA,EAAAA;IACvBqI,mBAAAA,EAAqBpD,EAAAA;IACrBC,2BAAAA,EAA6BA,EAAAA;IAC7BoD,WAAAA,EAAa,CAAA,CAAA;IACbrY,SAAAA,EAAWA,EAAAA;IACXI,mBAAAA,EAAqBA,EAAAA;IACrBtH,iBAAAA,EAAmBA,EAAAA;IACnBoH,sBAAAA,EAAwBA,EAAAA;IACxBkB,UAAAA,EAAYA,EAAAA;IACZC,SAAAA,EAAWA,EAAAA;IACX5E,MAAAA,EAAQA,EAAAA;IACRxH,WAAAA,EAAaA,EAAAA;IACbma,QAAAA,EAAU;MACRC,QAAAA,EAAU,SAAA,CAAA,EAAA;QAAA,OACDgI,EAAAA,CAAanf,CAAAA,CAAAA;MAAAA,CAAAA;MAEtBogB,QAAAA,EAAU,SAAA,CAASnmB,CAAAA,EAAAA;QACjBmlB,EAAAA,CAAapf,CAAAA,EAAa/F,CAAAA,CAAAA;MAAAA,CAAAA;MAE5BomB,SAAAA,EAAW,SAAA,CAAA,EAAA;QAAA,OACFrjB,EAAAA,CAAcgD,CAAAA,CAAAA;MAAAA,CAAAA;MAEvBsgB,SAAAA,EAAW,SAAA,CAASrmB,CAAAA,EAAAA;QAClBolB,EAAAA,CAAcrf,CAAAA,EAAa/F,CAAAA,CAAAA;MAAAA;IAAAA,CAAAA;IAG/Bb,iBAAAA,EAAmBA,CAAAA;IACnBE,UAAAA,EAAYA,EAAAA;IACZ+Z,YAAAA,EAAcA,EAAAA;IACdxB,MAAAA,EAAQA,EAAAA;IACRhB,gBAAAA,EAAkBA,EAAAA;IAClBtQ,KAAAA,EAAOA,EAAAA;IACPhsB,GAAAA,EAAKA,EAAAA;IACL2pB,EAAAA,EAAIA,CAAAA;IACJC,EAAAA,EAAIA,CAAAA;IACJmV,WAAAA,EAAaA,EAAAA;IACbE,kBAAAA,EAAoBA,EAAAA;IACpBC,kBAAAA,EAAoBA,EAAAA;IACpB8M,aAAAA,EAAexmB,CAAAA;IACfyM,KAAAA,EAAOA,EAAAA;IACPM,SAAAA,EAAWA,EAAAA;IACXhK,MAAAA,EAAQA,EAAAA;IACRqW,SAAAA,EAAWA;EAAAA,CAAAA,EAGbxxB,MAAAA,CAAOwjB,cAAAA,CAAexL,CAAAA,CAAIC,QAAAA,CAASsd,QAAAA,EAAU,OAAA,EAAS;IACpD9R,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI+Z,EAAAA,CAAanf,CAAAA,CAAAA;IAAAA,CAAAA;IAEtB5vB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZmlB,EAAAA,CAAapf,CAAAA,EAAa/F,CAAAA,CAAAA;IAAAA,CAAAA;IAE5B4kB,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc;EAAA,CAAA,CAAA,EAEhB7+B,MAAAA,CAAOwjB,cAAAA,CAAexL,CAAAA,CAAIC,QAAAA,CAASsd,QAAAA,EAAU,QAAA,EAAU;IACrD9R,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIpI,EAAAA,CAAcgD,CAAAA,CAAAA;IAAAA,CAAAA;IAEvB5vB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZolB,EAAAA,CAAcrf,CAAAA,EAAa/F,CAAAA,CAAAA;IAAAA,CAAAA;IAE7B4kB,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc;EAAA,CAAA,CAAA,EAOhB9R,EAAAA,CAASryB,IAAAA,CAAKsd,CAAAA,EAAK4H,EAAAA,CAAAA,EACnBkC,EAAAA,GAAgB,IAAA,EAChBwM,EAAAA,CAASnX,CAAAA,EAAQF,CAAAA,CAAAA,EAEjB2L,EAAAA,CAAOrN,OAAAA,CAAQ,aAAA,CAAA,EACRyC,CAAAA;AAAAA;AF9zLTzE,CAAAA,CAAYxpB,SAAAA,CAAUuqB,YAAAA,GAAe,UAASnpB,CAAAA,EAAAA;EAAAA,OACrCsT,MAAAA,CAAOC,YAAAA,CACXvT,CAAAA,IAAQ,CAAA,GAAK,GAAA,EACbA,CAAAA,IAAQ,CAAA,GAAK,GAAA,EACbA,CAAAA,IAAQ,EAAA,GAAM,GAAA,EACdA,CAAAA,IAAQ,EAAA,GAAM,GAAA,CAAA;AAAA,CAAA,EAYnBooB,CAAAA,CAAYxpB,SAAAA,CAAU+hC,WAAAA,GAAc,UAASgT,CAAAA,EAAAA;EAAAA,OACpCA,CAAAA,CACJ1mC,KAAAA,CAAM,EAAA,CAAA,CACNqK,GAAAA,CAAI,UAASs8B,CAAAA,EAAAA;IAAAA,OAAAA,CACJ,GAAA,GAAA,CAA4B,GAAA,GAArBA,CAAAA,CAAK9jC,UAAAA,CAAW,CAAA,CAAA,EAAWlD,QAAAA,CAAS,EAAA,CAAA,EAAKzG,KAAAA,CAAAA,CAAO,CAAA,CAAA;EAAA,CAAA,CAAA,CAEhEohB,IAAAA,CAAK,EAAA,CAAA;AAAA,CAAA,EAWVa,CAAAA,CAAYxpB,SAAAA,CAAUwqB,UAAAA,GAAa,UAAS3B,CAAAA,EAAAA;EAAAA,KACrC,IAAIosB,CAAAA,GAAQ,EAAA,EAAI70C,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyoB,CAAAA,CAAI3lB,MAAAA,EAAQ9C,CAAAA,IAAK,CAAA,EAC/C60C,CAAAA,CAAM5tC,IAAAA,CAAKqN,MAAAA,CAAOC,YAAAA,CAAauS,QAAAA,CAAS2B,CAAAA,CAAI/K,MAAAA,CAAO1d,CAAAA,EAAG,CAAA,CAAA,EAAI,EAAA,CAAA,CAAA,CAAA;EAAA,OACrD60C,CAAAA,CAAMtsB,IAAAA,CAAK,EAAA,CAAA;AAAA,CAAA,EAYpBa,CAAAA,CAAYxpB,SAAAA,CAAUoqB,oBAAAA,GAAuB,UAC3CH,CAAAA,EACAC,CAAAA,EAAAA;EAAAA,OAGOnB,CAAAA,CADGL,CAAAA,CAAOwB,CAAAA,CAAAA,CAAqBpM,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EAChCmM,CAAAA,CAAAA;AAAAA,CAAAA,EAiBlBT,CAAAA,CAAYxpB,SAAAA,CAAU89B,SAAAA,GAAY,UAASD,CAAAA,EAAUqX,CAAAA,EAAAA;EAAAA,IAC/ClsB,CAAAA,GAAMN,CAAAA,CACR3O,IAAAA,CAAKuQ,aAAAA,GACH5V,MAAAA,CAAOC,YAAAA,CACM,GAAA,GAAXkpB,CAAAA,EACCA,CAAAA,IAAY,CAAA,GAAK,GAAA,EACjBA,CAAAA,IAAY,EAAA,GAAM,GAAA,EACN,GAAA,GAAbqX,CAAAA,EACCA,CAAAA,IAAc,CAAA,GAAK,GAAA,CAAA,CAAA,CAExBp3B,MAAAA,CAAO,CAAA,EAAG,EAAA,CAAA;EAAA,OACL,UAAS1c,CAAAA,EAAAA;IAAAA,OACP2nB,CAAAA,CAAIC,CAAAA,EAAK5nB,CAAAA,CAAAA;EAAAA,CAAAA;AAAAA,CAAAA,EExCpB2qB,CAAAA,CAAO/rB,SAAAA,CAAU6yC,MAAAA,GAAS,UAAgBsC,CAAAA,EAAAA;EAAAA,IAEpC9wC,CAAAA;IADA+wC,CAAAA,GAAS,wBAAA;EAAA,IAAA,CAERD,CAAAA,IAAS11C,IAAAA,eAAAA,EAAO01C,CAAAA,CAAAA,KAAAA,IAAAA,eAAAA,EAAiBp7B,IAAAA,CAAAA,EAAM,OAAA,CAAO,CAAA;EAAA,IAC/Cs7B,CAAAA,GAAQ,CAAA;EAAA,KACPhxC,CAAAA,IAAK0V,IAAAA,EAAAA,IAAAA,EACJq7B,CAAAA,CAAOlnC,OAAAA,CAAQ7J,CAAAA,CAAAA,IAAM,CAAA,CAAA,EAAA;IAAA,IACrB0V,IAAAA,CAAKqR,cAAAA,CAAe/mB,CAAAA,CAAAA,IAAAA,CAAO8wC,CAAAA,CAAM/pB,cAAAA,CAAe/mB,CAAAA,CAAAA,EAAI,OAAA,CAAO,CAAA;IAAA,IAC3D0V,IAAAA,CAAK1V,CAAAA,CAAAA,KAAO8wC,CAAAA,CAAM9wC,CAAAA,CAAAA,EAAI,OAAA,CAAO,CAAA;IACjCgxC,CAAAA,EAAAA;EAAAA;EAAAA,KAEGhxC,CAAAA,IAAK8wC,CAAAA,EACJA,CAAAA,CAAM/pB,cAAAA,CAAe/mB,CAAAA,CAAAA,IAAM+wC,CAAAA,CAAOlnC,OAAAA,CAAQ7J,CAAAA,CAAAA,GAAK,CAAA,IAAGgxC,CAAAA,EAAAA;EAAAA,OAEvC,CAAA,KAAVA,CAAAA;AAAAA,CAAAA,EA+xLTtoB,CAAAA,CAAMkB,GAAAA,GAAM;EACV4K,MAAAA,EAAQ;AAAA,CAAA,EAQV9L,CAAAA,CAAM0Y,OAAAA,GAAU,OAAA;AC35LhB,IAAI6P,CAAAA,GAAWvoB,CAAAA,CAAMkB,GAAAA;EACjBoD,CAAAA,GAAc,CAAA;EAEd+S,CAAAA,GAAY,SAAA,CAAS7V,CAAAA,EAAAA;IAAAA,OAChBA,CAAAA,CACJngB,OAAAA,CAAQ,KAAA,EAAO,MAAA,CAAA,CACfA,OAAAA,CAAQ,KAAA,EAAO,KAAA,CAAA,CACfA,OAAAA,CAAQ,KAAA,EAAO,KAAA,CAAA;EAAA,CAAA;EAEhBmnC,CAAAA,GAAc,SAAA,CAAShnB,CAAAA,EAAAA;IAAAA,OAClBA,CAAAA,CACJngB,OAAAA,CAAQ,OAAA,EAAS,IAAA,CAAA,CACjBA,OAAAA,CAAQ,OAAA,EAAS,GAAA,CAAA,CACjBA,OAAAA,CAAQ,OAAA,EAAS,GAAA,CAAA;EAAA,CAAA;EAGlBokB,CAAAA,GAAK,SAAA,CAASJ,CAAAA,EAAAA;IAAAA,OACTA,CAAAA,CAAOG,OAAAA,CAAQ,CAAA,CAAA;EAAA,CAAA;EAGpBijB,CAAAA,GAAK,SAAA,CAASpjB,CAAAA,EAAAA;IAAAA,OACTA,CAAAA,CAAOG,OAAAA,CAAQ,CAAA,CAAA;EAAA,CAAA;AAGxB+iB,CAAAA,CAASG,YAAAA,GAAe,CAAA,CAAA;AACxB,IAAIC,CAAAA,GAAU,SAAA,CAASC,CAAAA,EAAOC,CAAAA,EAAAA;IAC5BD,CAAAA,CAAM31C,SAAAA,GAAYiW,MAAAA,CAAO4/B,MAAAA,CAAOD,CAAAA,CAAO51C,SAAAA,CAAAA,EACvC21C,CAAAA,CAAM31C,SAAAA,CAAUD,WAAAA,GAAc41C,CAAAA;EAAAA,CAAAA;EAG5BjjB,CAAAA,GAAQ,SAAA,CAAS7vB,CAAAA,EAAAA;IAAAA,OACZA,CAAAA,GAAIwuB,CAAAA;EAAAA,CAAAA;EAGTykB,CAAAA,GAAoB,SAAA,CAASC,CAAAA,EAAAA;IAAAA,IAC3BC,CAAAA,GAAO,IAAIC,EAAAA,CAAAA,CAAAA;MACX9V,CAAAA,GAAS+V,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,IAAe,CAAA;MAC9D7V,CAAAA,GAAQgW,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,IAAe,CAAA;IAAA,OAChEC,CAAAA,CAAKG,IAAAA,GAAO,CAAC,CAAA,EAAG,CAAA,EAAG5T,MAAAA,CAAO/P,CAAAA,CAAG0N,CAAAA,CAAAA,CAAAA,EAASqC,MAAAA,CAAO/P,CAAAA,CAAG2N,CAAAA,CAAAA,CAAAA,CAAAA,EACzC6V,CAAAA;EAAAA,CAAAA;EAMLI,CAAAA,GAAUd,CAAAA,CAASG,YAAAA,CAAaW,MAAAA,GAAS,UAAShkB,CAAAA,EAAQikB,CAAAA,EAAAA;IAAAA,IAC5DjkB,CAAAA,GAASA,CAAAA,IAAU,CAAA,EACnBikB,CAAAA,GAAcA,CAAAA,IAAe,CAAA,EAEzB/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,2DAAA,CAAA;IAAA,OAKJ2a,CAAAA,IAFc,CAAA,IAAKikB,CAAAA;EAAAA,CAAAA;EAOjBC,CAAAA,GAAYhB,CAAAA,CAASG,YAAAA,CAAaa,QAAAA,GAAW,UAASlkB,CAAAA,EAAQikB,CAAAA,EAAAA;IAAAA,IAChEjkB,CAAAA,GAASA,CAAAA,IAAU,CAAA,EACnBikB,CAAAA,GAAcA,CAAAA,IAAe,CAAA,EAEzB/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,6DAAA,CAAA;IAAA,OAKJ2a,CAAAA,IAAAA,EAFc,CAAA,IAAKikB,CAAAA,CAAAA;EAAAA,CAAAA;EAOjBE,CAAAA,GAAUjB,CAAAA,CAASG,YAAAA,CAAac,MAAAA,GAAS,UAASnkB,CAAAA,EAAQikB,CAAAA,EAAAA;IAAAA,IACxD/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,2DAAA,CAAA;IAAA,OAGqC,CAAA,KAAjC2a,CAAAA,GAAU,CAAA,IAAKikB,CAAAA,CAAAA,GAAsB,CAAA,GAAI,CAAA;EAAA,CAAA;EAM/CG,CAAAA,GAAgBlB,CAAAA,CAASG,YAAAA,CAAae,YAAAA,GAAe,UACvDpkB,CAAAA,EACAikB,CAAAA,EAAAA;IAAAA,IAEI/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,iEAAA,CAAA;IAAA,OAGG8+B,CAAAA,CAAOnkB,CAAAA,EAAQikB,CAAAA,GAAc,CAAA,CAAA;EAAA,CAAA;EAGlCI,CAAAA,GAAgBnB,CAAAA,CAASG,YAAAA,CAAagB,YAAAA,GAAe,UACvDrkB,CAAAA,EACAikB,CAAAA,EAAAA;IAAAA,IAEI/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,iEAAA,CAAA;IAAA,OAGG2+B,CAAAA,CAAOhkB,CAAAA,EAAQikB,CAAAA,GAAc,CAAA,CAAA;EAAA,CAAA;EAGlCK,CAAAA,GAAkBpB,CAAAA,CAASG,YAAAA,CAAaiB,cAAAA,GAAiB,UAC3DtkB,CAAAA,EACAikB,CAAAA,EAAAA;IAAAA,IAEI/uB,KAAAA,CAAM8K,CAAAA,CAAAA,IAAW9K,KAAAA,CAAM+uB,CAAAA,CAAAA,EAAAA,MACnB,IAAI5+B,KAAAA,CACR,mEAAA,CAAA;IAAA,OAGG6+B,CAAAA,CAASlkB,CAAAA,EAAQikB,CAAAA,GAAc,CAAA,CAAA;EAAA,CAAA;EAGpCM,CAAAA,GAAwBrB,CAAAA,CAASG,YAAAA,CAAakB,oBAAAA,GAAuB,UACvElrB,CAAAA,EACAyb,CAAAA,EAAAA;IAAAA,IAEIgF,CAAAA,GAA0BhF,CAAAA,CAAMhZ,QAAAA,CAASge,uBAAAA;MACzCC,CAAAA,GAAwBjF,CAAAA,CAAMhZ,QAAAA,CAASie,qBAAAA;MACvCtpC,CAAAA,GAAI4oB,CAAAA,CAAK,CAAA,CAAA;MACTjW,CAAAA,GAAIiW,CAAAA,CAAK,CAAA,CAAA;MACT3qB,CAAAA,GAAI2qB,CAAAA,CAAK,CAAA,CAAA;MACT0P,CAAAA,GAAI1P,CAAAA,CAAK,CAAA,CAAA;MAETmrB,CAAAA,GAAc,CAAA,CAAA;IAAA,OAElBA,CAAAA,CAAYC,WAAAA,GAAc3K,CAAAA,CAAwBrpC,CAAAA,CAAAA,IAAM,CAAA,EACxD+zC,CAAAA,CAAYE,WAAAA,GAAc3K,CAAAA,CAAsB32B,CAAAA,GAAI2lB,CAAAA,CAAAA,IAAM,CAAA,EAC1Dyb,CAAAA,CAAYG,YAAAA,GAAe7K,CAAAA,CAAwBrpC,CAAAA,GAAI/B,CAAAA,CAAAA,IAAM,CAAA,EAC7D81C,CAAAA,CAAYI,YAAAA,GAAe7K,CAAAA,CAAsB32B,CAAAA,CAAAA,IAAM,CAAA,EAEhD,CACL+sB,MAAAA,CAAO/P,CAAAA,CAAGokB,CAAAA,CAAYC,WAAAA,CAAAA,CAAAA,EACtBtU,MAAAA,CAAO/P,CAAAA,CAAGokB,CAAAA,CAAYE,WAAAA,CAAAA,CAAAA,EACtBvU,MAAAA,CAAO/P,CAAAA,CAAGokB,CAAAA,CAAYG,YAAAA,CAAAA,CAAAA,EACtBxU,MAAAA,CAAO/P,CAAAA,CAAGokB,CAAAA,CAAYI,YAAAA,CAAAA,CAAAA,CAAAA;EAAAA,CAAAA;EAItBC,CAAAA,GAA4B,SAAA,CAASlB,CAAAA,EAAAA;IAAAA,IACnCA,CAAAA,CAAWmB,uBAAAA,EAAAA,OACNnB,CAAAA,CAAWmB,uBAAAA;IAAAA,IAGfnB,CAAAA,CAAWoB,CAAAA,IAAMpB,CAAAA,CAAWqB,EAAAA,EAAAA;MAAAA,IAM7BvqB,CAAAA,GAAS,EAAA;QACT4W,CAAAA,GAAOsS,CAAAA,CAAWsB,EAAAA,IAAMtB,CAAAA,CAAWqB,EAAAA;QACnCE,CAAAA,GAAUC,EAAAA,CAAWxB,CAAAA,EAAYtS,CAAAA,CAAAA;QACjC1D,CAAAA,GAAUgW,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAASkX,OAAAA,CACtC2Q,CAAAA,CAAWpT,QAAAA,EACXoT,CAAAA,CAAWnkB,SAAAA,CAAAA,CACXvxB,EAAAA;MAGFwsB,CAAAA,CAAOxlB,IAAAA,CAAK,SAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK0uC,CAAAA,CAAW7O,KAAAA,CAAM/Y,WAAAA,CAAY8O,iBAAAA,CAAkB8Y,CAAAA,CAAWnZ,KAAAA,CAAAA,CAAAA,EACtE/P,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,GAAM04B,CAAAA,GAAU,GAAA,GAAMvN,CAAAA,CAAG8kB,CAAAA,CAAQthB,QAAAA,CAAAA,GAAY,KAAA,CAAA,EACzDnJ,CAAAA,CAAOxlB,IAAAA,CAAK,gBAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAKiwC,CAAAA,CAAQ7T,IAAAA,CAAAA,EACpB5W,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA;MAAA,IAER6vC,CAAAA,GAA0BpB,CAAAA,CAAkBC,CAAAA,CAAAA;MAAAA,OAChDmB,CAAAA,CAAwBhQ,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA,EAC3CgQ,CAAAA,CAAwBrqB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACtCuuB,CAAAA;IAAAA;EAAAA,CAAAA;EAGLK,EAAAA,GAAa,SAAA,CAASxB,CAAAA,EAAYtS,CAAAA,EAAAA;IAAAA,IAChC+T,CAAAA,GACsB,CAAA,KAAxBzB,CAAAA,CAAW/f,QAAAA,GAAiB+f,CAAAA,CAAWyB,WAAAA,GAAczB,CAAAA,CAAW/f,QAAAA;MAC9DyhB,CAAAA,GAAc;QAChBhU,IAAAA,EAAM,EAAA;QACNzN,QAAAA,EAAU;MAAA,CAAA;MASR0hB,CAAAA,GAAAA,CALJjU,CAAAA,GACkC,GAAA,IAAA,CAFlCA,CAAAA,GAA4B,GAAA,IAArBA,CAAAA,CAAK3lB,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,GAAY2lB,CAAAA,CAAK3lB,MAAAA,CAAO,CAAA,CAAA,GAAK2lB,CAAAA,EAE5C3lB,MAAAA,CAAO2lB,CAAAA,CAAKvgC,MAAAA,GAAS,CAAA,CAAA,GACtBugC,CAAAA,CAAK3lB,MAAAA,CAAO,CAAA,EAAG2lB,CAAAA,CAAKvgC,MAAAA,GAAS,CAAA,CAAA,GAC7BugC,CAAAA,EAEep1B,KAAAA,CAAM,GAAA,CAAA;IAEzBqpC,CAAAA,GADE3B,CAAAA,CAAW4B,SAAAA,GACDD,CAAAA,CAAUh/B,GAAAA,CAAI,UAAAk/B,CAAAA,EAAAA;MAAAA,OAAQA,CAAAA,CAAKvpC,KAAAA,CAAM,IAAA,CAAA;IAAA,CAAA,CAAA,GAEjCqpC,CAAAA,CAAUh/B,GAAAA,CAAI,UAAAk/B,CAAAA,EAAAA;MAAAA,OAAQ,CAACA,CAAAA,CAAAA;IAAAA,CAAAA,CAAAA;IAAAA,IAGjC5hB,CAAAA,GAAWwhB,CAAAA;MAIXrX,CAAAA,GAAS+V,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,IAAe,CAAA;IAClE5V,CAAAA,GAASA,CAAAA,GAAS,CAAA,GAAA,CAAKA,CAAAA,GAASA,CAAAA;IAAAA,IAC5BD,CAAAA,GAAQgW,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,IAAe,CAAA;IAChE7V,CAAAA,GAAQA,CAAAA,GAAQ,CAAA,GAAA,CAAKA,CAAAA,GAAQA,CAAAA;IAAAA,IAEzB2X,CAAAA,GAAqB,SAAA,CAAS11C,CAAAA,EAAG21C,CAAAA,EAAU9hB,CAAAA,EAAAA;MAAAA,IACzC7zB,CAAAA,GAAI,CAAA,GAAIu1C,CAAAA,CAAUx0C,MAAAA,EAAQ;QAAA,IACxB+lC,CAAAA,GAAM6O,CAAAA,GAAW,GAAA,GAAMJ,CAAAA,CAAUv1C,CAAAA,GAAI,CAAA,CAAA,CAAG,CAAA,CAAA;QAAA,OAC5B41C,EAAAA,CAAmB9O,CAAAA,EAAK8M,CAAAA,EAAY/f,CAAAA,CAAAA,CAAUkK,KAAAA,IAC7CA,CAAAA,GAAQ,CAAA;MAAA;MAAA,OAAA,CAGlB,CAAA;IAAA,CAAA;IAIXlK,CAAAA,EAAAA;IACAgiB,CAAAA,EAAU,OAAOhiB,CAAAA,GAAW,CAAA,GAAG;MAC7ByN,CAAAA,GAAO,EAAA,EACPzN,CAAAA,EAAAA;MAAAA,IAMIiiB,CAAAA;QAKAC,CAAAA;QAVAC,CAAAA,GAAaJ,EAAAA,CAAmB,GAAA,EAAKhC,CAAAA,EAAY/f,CAAAA,CAAAA,CAAUmK,MAAAA;QAC3DiY,CAAAA,GAASrC,CAAAA,CAAW4B,SAAAA,GACpBxX,CAAAA,GAASnK,CAAAA,GAAAA,CACRmK,CAAAA,GAASgY,CAAAA,IAAc,CAAA;QAIxBE,CAAAA,GAHJD,CAAAA,IA3BgB,CAAA;QA+BZE,CAAAA,GAAkB,CAAA;QACpBC,CAAAA,GAAiB,CAAA;QAEfC,CAAAA,GAAW,CAAA;MAAA,IAEXxiB,CAAAA,IAAY,CAAA,EAAG;QAGjByN,CAAAA,GAAO,YAAA,EACPA,CAAAA,IACE,mBAAA,GACAsU,EAAAA,CAAmBtU,CAAAA,EAAMsS,CAAAA,EAJ3B/f,CAAAA,GAAW,EAAA,CAAA,CAIsCkK,KAAAA,GAC/C,eAAA,GACAA,CAAAA,GACA,IAAA;QAAA;MAAA;MAME,KAAA,IAFF4X,CAAAA,GAAW,EAAA,EACXW,CAAAA,GAAY,CAAA,EACDt2C,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIu1C,CAAAA,CAAUx0C,MAAAA,EAAQf,CAAAA,EAAAA,EAAAA,IACtCu1C,CAAAA,CAAUtsB,cAAAA,CAAejpB,CAAAA,CAAAA,EAAAA;QAAAA,IACvBu2C,CAAAA,GAAAA,CAAgB,CAAA;QAAA,IACQ,CAAA,KAAxBhB,CAAAA,CAAUv1C,CAAAA,CAAAA,CAAGe,MAAAA,IAAgBs1C,CAAAA,KAAad,CAAAA,CAAUv1C,CAAAA,CAAAA,CAAGe,MAAAA,GAAS,CAAA,EAAG;UAAA,IAAA,CAElEi1C,CAAAA,GAxDO,CAAA,KAwDsBM,CAAAA,GAAY,CAAA,CAAA,GAxDlC,CAAA,GAyDRtY,CAAAA,EAAAA,SAES6X,CAAAA;UAGXF,CAAAA,IAAYJ,CAAAA,CAAUv1C,CAAAA,CAAAA,CAAGq2C,CAAAA,CAAAA,EACzBE,CAAAA,GAAAA,CAAgB,CAAA,EAChBH,CAAAA,GAAiBp2C,CAAAA,EACjBA,CAAAA,EAAAA;QAAAA,CAAAA,MACK;UAEL21C,CAAAA,GAC0C,GAAA,IAAA,CAF1CA,CAAAA,IAAYJ,CAAAA,CAAUv1C,CAAAA,CAAAA,CAAGq2C,CAAAA,CAAAA,GAAY,GAAA,EAE1B16B,MAAAA,CAAOg6B,CAAAA,CAAS50C,MAAAA,GAAS,CAAA,CAAA,GAC9B40C,CAAAA,CAASh6B,MAAAA,CAAO,CAAA,EAAGg6B,CAAAA,CAAS50C,MAAAA,GAAS,CAAA,CAAA,GACrC40C,CAAAA;UAAAA,IACF9uB,CAAAA,GAAM9B,QAAAA,CAAS/kB,CAAAA,CAAAA;YACfw2C,CAAAA,GAAoBd,CAAAA,CAAmB7uB,CAAAA,EAAK8uB,CAAAA,EAAU9hB,CAAAA,CAAAA;YACtD4iB,CAAAA,GAAaz2C,CAAAA,IAAKu1C,CAAAA,CAAUx0C,MAAAA,GAAS,CAAA;UAAA,IAErCy1C,CAAAA,IAAAA,CAAsBC,CAAAA,EAAY;YACpCd,CAAAA,IAAY,GAAA,EACZU,CAAAA,GAAW,CAAA;YAAA;UAAA;UAEN,IAAKG,CAAAA,IAAsBC,CAAAA,EAAAA;YAe3B,IAAIA,CAAAA,EACTL,CAAAA,GAAiBvvB,CAAAA,CAAAA,KAAAA,IAGf+sB,CAAAA,CAAW4B,SAAAA,IAAAA,CACVQ,CAAAA,GApGK,CAAA,KAoGwBM,CAAAA,GAAY,CAAA,CAAA,GApGpC,CAAA,GAqGJtY,CAAAA,EAAAA,SAGO6X,CAAAA;UAAAA,CAAAA,MAxBiC;YAAA,IAAA,CACvCjC,CAAAA,CAAW4B,SAAAA,EAAAA,SACLK,CAAAA;YAAAA,IAAAA,CAGNG,CAAAA,GArFG,CAAA,KAqF0BM,CAAAA,GAAY,CAAA,CAAA,GArFtC,CAAA,GAsFJtY,CAAAA,EAAAA,SAIS6X,CAAAA;YAEXO,CAAAA,GAAiBvvB,CAAAA;UAAAA;QAAAA;QAAAA,KAAAA,IAkBnBomB,CAAAA,GAAO,EAAA,EAEFvsC,CAAAA,GAAIy1C,CAAAA,EAAiBz1C,CAAAA,IAAK01C,CAAAA,EAAgB11C,CAAAA,EAAAA,EAAK;UAAA,IAClDg2C,CAAAA,GAAWnB,CAAAA,CAAU70C,CAAAA,CAAAA;UAAAA,IACrBkzC,CAAAA,CAAW4B,SAAAA,EAAW;YAAA,IACpB90C,CAAAA,KAAM01C,CAAAA,EAAgB;cACxBnJ,CAAAA,IAAQyJ,CAAAA,CAASL,CAAAA,CAAAA,GAAY,GAAA,EAC7BA,CAAAA,GAAAA,CAAYA,CAAAA,GAAW,CAAA,IAAKK,CAAAA,CAAS31C,MAAAA;cAAAA;YAAAA;YAAAA,IAGnCL,CAAAA,KAAMy1C,CAAAA,EAAiB;cACzBlJ,CAAAA,IAAQyJ,CAAAA,CAASA,CAAAA,CAAS31C,MAAAA,GAAS,CAAA,CAAA,GAAK,GAAA;cAAA;YAAA;UAAA;UAI5CksC,CAAAA,IAAQyJ,CAAAA,CAAS,CAAA,CAAA,GAAK,GAAA;QAAA;QAAA,QAIxBzJ,CAAAA,GACkC,GAAA,IAAhCA,CAAAA,CAAKtxB,MAAAA,CAAOsxB,CAAAA,CAAKlsC,MAAAA,GAAS,CAAA,CAAA,GACtBksC,CAAAA,CAAKtxB,MAAAA,CAAO,CAAA,EAAGsxB,CAAAA,CAAKlsC,MAAAA,GAAS,CAAA,CAAA,GAC7BksC,CAAAA,EAEN8I,CAAAA,GAAaH,EAAAA,CAAmB3I,CAAAA,EAAM2G,CAAAA,EAAY/f,CAAAA,CAAAA,CAAUkK,KAAAA,EAGpD6V,CAAAA,CAAW+C,SAAAA;UAAAA,KACZ,OAAA;YACHb,CAAAA,GAAS/X,CAAAA,GAAQgY,CAAAA,GA1IP,CAAA;YAAA;UAAA,KA4IP,QAAA;YACHD,CAAAA,GAAAA,CAAU/X,CAAAA,GAAQgY,CAAAA,IAAc,CAAA;YAAA;UAAA,KAE7B,MAAA;UAAA;YAEHD,CAAAA,GAjJU,CAAA;QAAA;QAoJdxU,CAAAA,IAAQjR,CAAAA,CAAGylB,CAAAA,CAAAA,GAAU,GAAA,GAAMzlB,CAAAA,CAAG6lB,CAAAA,CAAAA,GAAS,OAAA,EACvC5U,CAAAA,IAAQ,GAAA,GAAMW,CAAAA,CAAUgL,CAAAA,CAAAA,GAAQ,QAAA,EAEhC3L,CAAAA,IAAAA,CAASjR,CAAAA,CAAGylB,CAAAA,CAAAA,GAAU,SAAA,EAGtBI,CAAAA,GAAAA,EAAUriB,CAAAA,GA3JE,CAAA,CAAA,EA8JZkiB,CAAAA,GAAa,CAAA,EACbI,CAAAA,GAAkBI,CAAAA,GAAgBH,CAAAA,GAAiBA,CAAAA,GAAiB,CAAA,EACpEE,CAAAA,EAAAA,EAEAX,CAAAA,GAAW,EAAA;MAAA,CAAA,MAAA;MAAA;IAAA;IAAA,OAOjBL,CAAAA,CAAYhU,IAAAA,GAAOA,CAAAA,EACnBgU,CAAAA,CAAYzhB,QAAAA,GAAWA,CAAAA,EAEhByhB,CAAAA;EAAAA,CAAAA;EAULM,EAAAA,GAAqB,SAAA,CAAStU,CAAAA,EAAMsS,CAAAA,EAAY/f,CAAAA,EAAAA;IAAAA,IAC9C0J,CAAAA,GAAOqW,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAASkX,OAAAA,CACnC2Q,CAAAA,CAAWpT,QAAAA,EACXoT,CAAAA,CAAWnkB,SAAAA,CAAAA;MAETsO,CAAAA,GACF6V,CAAAA,CAAW7O,KAAAA,CAAM4E,kBAAAA,CAAmBrI,CAAAA,EAAM;QACxC/D,IAAAA,EAAMA,CAAAA;QACN1J,QAAAA,EAAU+G,UAAAA,CAAW/G,CAAAA,CAAAA;QACrB6S,SAAAA,EAAW;MAAA,CAAA,CAAA,GACR9L,UAAAA,CAAW/G,CAAAA,CAAAA;IAAAA,OASX;MAAEmK,MAAAA,EAPP4V,CAAAA,CAAW7O,KAAAA,CAAM4E,kBAAAA,CAAmB,GAAA,EAAK;QACvCpM,IAAAA,EAAMA,CAAAA;QACN1J,QAAAA,EAAU+G,UAAAA,CAAW/G,CAAAA,CAAAA;QACrB6S,SAAAA,EAAW;MAAA,CAAA,CAAA,GAEb9L,UAAAA,CAAW/G,CAAAA,CAAAA,GACX,GAAA;MACuBkK,KAAAA,EAAOA;IAAAA,CAAAA;EAAAA,CAAAA;EAG9B6Y,EAAAA,GAAyB;IAC3BC,MAAAA,EAAQ,EAAA;IACRC,MAAAA,EAAQ,EAAA;IAMRC,sBAAAA,EAAwB,IAAA;IAMxBC,UAAAA,EAAAA,CAAY,CAAA;IACZjrB,QAAAA,EAAU,IAAA;IACVkrB,aAAAA,EAAAA,CAAe;EAAA,CAAA;EAmCbC,EAAAA,GAA4B,SAAA,CAASC,CAAAA,EAAQpS,CAAAA,EAAAA;IAAAA,IAC3Cla,CAAAA,GAAU;MACZnsB,IAAAA,EAAM,WAAA;MACNy4C,MAAAA,EAAQA;IAAAA,CAAAA;IAAAA,KAQuC7iB,CAAAA,KAF/CyQ,CAAAA,CAAMhZ,QAAAA,CACH0Z,WAAAA,CAAY0R,CAAAA,CAAO3gB,IAAAA,CAAAA,CACnByG,WAAAA,CAAYma,WAAAA,CAAYC,IAAAA,CANb,UAASC,CAAAA,EAAAA;MAAAA,OAChBA,CAAAA,CAAM54C,IAAAA,KAASmsB,CAAAA,CAAQnsB,IAAAA,IAAQ44C,CAAAA,CAAMH,MAAAA,KAAWtsB,CAAAA,CAAQssB,MAAAA;IAAAA,CAAAA,CAAAA,IAO/DpS,CAAAA,CAAMhZ,QAAAA,CACH0Z,WAAAA,CAAY0R,CAAAA,CAAO3gB,IAAAA,CAAAA,CACnByG,WAAAA,CAAYma,WAAAA,CAAYlyC,IAAAA,CAAK2lB,CAAAA,CAAAA;EAAAA,CAAAA;EAgKhC0sB,EAAAA,GAA4B,SAAA,CAASC,CAAAA,EAAYzS,CAAAA,EAAAA;IAAAA,KAC9C,IAAI/kC,CAAAA,IAAKw3C,CAAAA,EAAAA,IACRA,CAAAA,CAAWvuB,cAAAA,CAAejpB,CAAAA,CAAAA,EAAI;MAAA,IAC5B6mB,CAAAA,GAAM7mB,CAAAA;QACNy3C,CAAAA,GAAcD,CAAAA,CAAWx3C,CAAAA,CAAAA;MAE7B+kC,CAAAA,CAAMhZ,QAAAA,CAASoO,sBAAAA,CAAuBsd,CAAAA,CAAYld,KAAAA,EAAAA,CAAO,CAAA,CAAA,EAGhC,QAAA,KAAvBj9B,IAAAA,eAAAA,EAAOm6C,CAAAA,CAAAA,IAC0B,UAAA,IAAA,OAA1BA,CAAAA,CAAYnc,SAAAA,IAEnBmc,CAAAA,CAAYnc,SAAAA,CAAAA,CAAAA,EAAAA,OAEPkc,CAAAA,CAAW3wB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA;EAKpB6wB,EAAAA,GAAqB,SAAA,CAAS3S,CAAAA,EAAO6O,CAAAA,EAAAA;IAAAA,IACvCA,CAAAA,CAAW7O,KAAAA,GAAQA,CAAAA,EAAAA,KAEEzQ,CAAAA,KAAnByQ,CAAAA,CAAMhZ,QAAAA,KAAAA,KAC6BuI,CAAAA,KAAlCyQ,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,IAAAA,CACkC,CAAA,KAAhD5S,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeV,aAAAA,CAAAA,EAChC;MAAA,IACAW,EAAAA,CAAcC,QAAAA,GAAW,CAAA,EACzB9S,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,GAAiBlT,IAAAA,CAAKqT,KAAAA,CACnCrT,IAAAA,CAAKC,SAAAA,CAAUkS,EAAAA,CAAAA,CAAAA,EAEb7R,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,EAAAA,MAC1B,IAAIzhC,KAAAA,CAAM,6CAAA,CAAA;MAElB4Z,CAAAA,GAAc6V,CAAAA,CAAMhZ,QAAAA,CAASmD,WAAAA,EAE7B6V,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,GAAyB,IAAIgB,EAAAA,CAAAA,CAAAA,EAC3DhT,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBhS,KAAAA,GAAQA,CAAAA,EAG7DA,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBiB,QAAAA,GAAWjT,CAAAA,CAAMhZ,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CACpF,kBAAA,EACA,YAAA;QAAA,CA7K2B,UAASkc,CAAAA,EAAAA;UAExCA,CAAAA,CAAMhZ,QAAAA,CAAS2K,MAAAA,CAAOtN,WAAAA,CACpB2b,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBiB,QAAAA,CAAAA,EAAAA,OAEhDjT,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBiB,QAAAA,EAC5DjT,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeX,UAAAA,GAAAA,CAAa,CAAA;QAAA,CAwKrCiB,CAA2BlT,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,EAI/BA,CAAAA,CAAMhZ,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CAAU,eAAA,EAAiB,YAAA;QAAA,CA7PxB,UAASkc,CAAAA,EAAAA;UAEpCA,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBxc,KAAAA,GAAAA,KAAQjG,CAAAA;UAAAA,IACzDuiB,CAAAA,GAAS9R,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBmB,MAAAA;UAAAA,KAC7D,IAAIl4C,CAAAA,IAAK62C,CAAAA,EAAAA,IACRA,CAAAA,CAAO5tB,cAAAA,CAAejpB,CAAAA,CAAAA,EAAI;YAAA,IACxB4zC,CAAAA,GAAaiD,CAAAA,CAAO72C,CAAAA,CAAAA;YAExB4zC,CAAAA,CAAWrZ,KAAAA,GAAAA,KAAQjG,CAAAA,EAEfsf,CAAAA,CAAWuE,aAAAA,IAGbjB,EAAAA,CAA0BtD,CAAAA,EAAY7O,CAAAA,CAAAA;UAAAA;QAAAA,CAiPxCqT,CAAuBrT,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,EAMzBA,CAAAA,CAAMhZ,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CAAU,YAAA,EAAc,YAAA;QAAA,CA/MzB,UAASkc,CAAAA,EAAAA;UAAAA,IAAAA,KAGkC,CAAA,KAAzDA,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,EAAAA,MAW/B,IAAIzhC,KAAAA,CAAM,mCAAA,CAAA;UARhByvB,CAAAA,CAAMhZ,QAAAA,CAASuH,KAAAA,CACb,YAAA,GACEyR,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBxc,KAAAA,GADvD,MAAA,CAAA;QAAA,CAyMA8d,CAAmBtT,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,EAIrBA,CAAAA,CAAMhZ,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CAAU,cAAA,EAAgB,UAAS2uB,CAAAA,EAAAA;QAAAA,CA/KnC,UAASA,CAAAA,EAAYzS,CAAAA,EAAAA;UAAAA,IACzCuT,CAAAA,GAAAA,CAAkBd,CAAAA;UAAAA,KAgBjB,IAAIx3C,CAAAA,IAdJw3C,CAAAA,KAIHzS,CAAAA,CAAMhZ,QAAAA,CAASoO,sBAAAA,CACb4K,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBxc,KAAAA,EAAAA,CACrD,CAAA,CAAA,EAEFwK,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBzb,SAAAA,CAAAA,CAAAA,CAAAA,EAGvDkc,CAAAA,GACEA,CAAAA,IAAczS,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBwB,IAAAA,EAAAA,IAG/Df,CAAAA,CAAWvuB,cAAAA,CAAejpB,CAAAA,CAAAA,EAAI;YAAA,IAC5By3C,CAAAA,GAAcD,CAAAA,CAAWx3C,CAAAA,CAAAA;cACzBw4C,CAAAA,GAAe,EAAA;cACfC,CAAAA,GAAUhB,CAAAA,CAAYiB,IAAAA;YAAAA,IAEtBjB,CAAAA,CAAYiB,IAAAA,KACdjB,CAAAA,CAAYiB,IAAAA,GAAOlE,CAAAA,CAAqBiD,CAAAA,CAAYiB,IAAAA,EAAM3T,CAAAA,CAAAA,CAAAA,EAI5DA,CAAAA,CAAMhZ,QAAAA,CAASoO,sBAAAA,CAAuBsd,CAAAA,CAAYld,KAAAA,EAAAA,CAAO,CAAA,CAAA,EAEzDkd,CAAAA,CAAYkB,EAAAA,GAAK5E,EAAAA,CAAmB6E,6BAAAA,CAClCnB,CAAAA,CAAAA,EAIuB,QAAA,KAAvBn6C,IAAAA,eAAAA,EAAOm6C,CAAAA,CAAAA,IACyC,UAAA,IAAA,OAAzCA,CAAAA,CAAYoB,wBAAAA,KAEnBL,CAAAA,GAAef,CAAAA,CAAYoB,wBAAAA,CAAAA,CAAAA,CAAAA,EAG7BpB,CAAAA,CAAYiB,IAAAA,GAAOD,CAAAA,EAGjBhB,CAAAA,CAAYqB,mBAAAA,IAAAA,CACXrB,CAAAA,CAAY1C,uBAAAA,EACb;cAAA,IAEIgE,CAAAA,GAAajE,CAAAA,CAA0B2C,CAAAA,CAAAA;cAC3Ce,CAAAA,CAAatzC,IAAAA,CAAK;gBAAE2hB,GAAAA,EAAK,IAAA;gBAAMuF,KAAAA,EAAO,OAAA,GAAU2sB,CAAAA,GAAa;cAAA,CAAA,CAAA,EAE7DhU,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,CAAO5xC,IAAAA,CAAK6zC,CAAAA,CAAAA;YAAAA;YAAAA,IAKxCtB,CAAAA,CAAY1C,uBAAAA,EAAyB;cAAA,IACnCiE,CAAAA,GAAyB,EAAA;cAAA,KAExB,IAAIhuC,CAAAA,IAAKysC,CAAAA,CAAY1C,uBAAAA,EAAAA,IACpB0C,CAAAA,CAAY1C,uBAAAA,CAAwB9rB,cAAAA,CAAeje,CAAAA,CAAAA,EAAI;gBAAA,IACrDohB,CAAAA,GAAQqrB,CAAAA,CAAY1C,uBAAAA,CAAwB/pC,CAAAA,CAAAA;gBAAAA,IAChDguC,CAAAA,IAA0B,GAAA,GAAMhuC,CAAAA,GAAI,GAAA,EACpCguC,CAAAA,IAA0B,IAAA,EACtBllC,MAAAA,CAAOC,IAAAA,CAAKqY,CAAAA,CAAAA,CAAOrrB,MAAAA,IAAU,CAAA,IAAK4Q,KAAAA,CAAMC,OAAAA,CAAQwa,CAAAA,CAAAA,EAAAA;kBAAAA,KAE7C,IAAIpsB,CAAAA,IAAKosB,CAAAA,EAAAA,IACRA,CAAAA,CAAMnD,cAAAA,CAAejpB,CAAAA,CAAAA,EAAI;oBAAA,IACvBs6B,CAAAA,GAAMlO,CAAAA,CAAMpsB,CAAAA,CAAAA;oBACG,UAAA,IAAA,OAARs6B,CAAAA,KAGTA,CAAAA,GAAMA,CAAAA,CAAI9rB,IAAAA,CAAKu2B,CAAAA,EAAO0S,CAAAA,CAAAA,CAAAA,EAExBuB,CAAAA,IAA0B,GAAA,GAAMh5C,CAAAA,GAAI,GAAA,GAAMs6B,CAAAA,GAAM,GAAA,EAI1CyK,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,CAAO/qC,OAAAA,CAAQuuB,CAAAA,CAAAA,IAAQ,CAAA,IACzDyK,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,CAAO5xC,IAAAA,CAAKo1B,CAAAA,CAAAA;kBAAAA;gBAAAA,CAAAA,MAK7B,UAAA,IAAA,QADnBA,CAAAA,GAAMlO,CAAAA,CAAAA,KAIJkO,CAAAA,GAAMA,CAAAA,CAAI9rB,IAAAA,CAAKu2B,CAAAA,EAAO0S,CAAAA,CAAAA,CAAAA,EAExBuB,CAAAA,IAA0B,GAAA,GAAMh5C,CAAAA,GAAI,GAAA,GAAMs6B,CAAAA,EACpCyK,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,CAAO/qC,OAAAA,CAAQuuB,CAAAA,CAAAA,IAAQ,CAAA,IACzDyK,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,CAAO5xC,IAAAA,CAAKo1B,CAAAA,CAAAA;gBAE9C0e,CAAAA,IAA0B,IAAA;cAAA;cAK9BR,CAAAA,CAAatzC,IAAAA,CAAK;gBAChB2hB,GAAAA,EAAK,IAAA;gBACLuF,KAAAA,EAAO,MAAA,GAAS4sB,CAAAA,GAAyB;cAAA,CAAA,CAAA;YAAA;YAI7CjU,CAAAA,CAAMhZ,QAAAA,CAASuP,SAAAA,CAAU;cACvBQ,mBAAAA,EAAqB0c,CAAAA;cACrB9c,QAAAA,EAAU+b,CAAAA,CAAYld;YAAAA,CAAAA,CAAAA,EAGxBwK,CAAAA,CAAMhZ,QAAAA,CAASrlB,GAAAA,CAAI,QAAA,CAAA;UAAA;UAGnB4xC,CAAAA,IACFf,EAAAA,CAA0BxS,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeb,MAAAA,EAAQ/R,CAAAA,CAAAA;QAAAA,CA+D9DkU,CAAoBzB,CAAAA,EAAYzS,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,EAGlCA,CAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeV,aAAAA,GAAAA,CAAgB,CAAA;IAAA;EAAA,CAAA;EAK9CiC,EAAAA,GAAmB/F,CAAAA,CAASG,YAAAA,CAAa4F,eAAAA,GAAkB,UAC7DC,CAAAA,EACA5e,CAAAA,EACAwK,CAAAA,EAAAA;IAAAA,IAEIpJ,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;MAAAA,OAChBA,CAAAA;IAAAA,CAAAA;IAAAA,IAEL0S,KAAAA,CAAMC,OAAAA,CAAQunC,CAAAA,CAAAA,EAAQ;MAAA,KAAA,IACpB5mB,CAAAA,GAAU,GAAA,EACLvyB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIm5C,CAAAA,CAAMp4C,MAAAA,EAAQf,CAAAA,EAAAA,EAAAA,QACtB,CAAA,KAANA,CAAAA,KACFuyB,CAAAA,IAAW,GAAA,CAAA,EAAA,IAAA,eAAA,EAEE4mB,CAAAA,CAAMn5C,CAAAA,CAAAA,CAAAA;QAAAA,KACd,SAAA;QAAA,KACA,QAAA;QAAA,KACA,QAAA;UACHuyB,CAAAA,IAAW4mB,CAAAA,CAAMn5C,CAAAA,CAAAA,CAAG6L,QAAAA,CAAAA,CAAAA;UAAAA;QAAAA,KAEjB,QAAA;UAC2B,GAAA,KAA1BstC,CAAAA,CAAMn5C,CAAAA,CAAAA,CAAG2b,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,IAAA,KACA,CAAA,KAAV4e,CAAAA,IAAyBwK,CAAAA,KAClCpJ,CAAAA,GAAYoJ,CAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAajL,CAAAA,CAAAA,CAAAA,EAC1ChI,CAAAA,IAAW,GAAA,GAAM0P,CAAAA,CAAUtG,CAAAA,CAAUwd,CAAAA,CAAMn5C,CAAAA,CAAAA,CAAG6L,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAe,GAAA,IAE7D0mB,CAAAA,IAAW4mB,CAAAA,CAAMn5C,CAAAA,CAAAA,CAAG6L,QAAAA,CAAAA,CAAAA;MAAAA;MAAAA,OAK5B0mB,CAAAA,IAAW,GAAA;IAAA;IAAA,MAGP,IAAIjd,KAAAA,CACR,+DAAA,CAAA;EAAA,CAAA;AAYJ,IAQI8jC,EAAAA,GAAc,SAAA,CAAS/lB,CAAAA,EAAQkH,CAAAA,EAAOwK,CAAAA,EAAAA;IAAAA,IACpCpJ,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;MAAAA,OAChBA,CAAAA;IAAAA,CAAAA;IAAAA,OAAAA,KAEY,CAAA,KAAVs7B,CAAAA,IAAyBwK,CAAAA,KAClCpJ,CAAAA,GAAYoJ,CAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAajL,CAAAA,CAAAA,CAAAA,EAAAA,CAC1ClH,CAAAA,GAASA,CAAAA,IAAU,EAAA,EACZxnB,QAAAA,CAAAA,CAAAA,EACPwnB,CAAAA,GAAS,GAAA,GAAM4O,CAAAA,CAAUtG,CAAAA,CAAUtI,CAAAA,CAAAA,CAAAA,GAAW,GAAA;EAAA,CAAA;EAY5CgmB,EAAAA,GAAoB,SAAA,CAAA,EAAA;IAAA,IAAA,CACjBC,MAAAA,GAAAA,KAAShlB,CAAAA,EAAAA,IAAAA,CACTilB,MAAAA,GAAAA,KAASjlB,CAAAA,EAMdxgB,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;MACnC2f,GAAAA,EAAK,SAAA,CAAA,EAAA;QAAA,IAAA,KACwB,CAAA,KAAhB3f,IAAAA,CAAK0hC,MAAAA,EAAwB;UAAA,IAAA,KACZ,CAAA,KAAf1hC,IAAAA,CAAKmtB,KAAAA,EAAAA;UAAAA,IAAAA,CAGXuU,MAAAA,GAAS1hC,IAAAA,CAAKmtB,KAAAA,CAAMhZ,QAAAA,CAASgH,iBAAAA,CAAAA,CAAAA;QAAAA;QAAAA,OAE7Bnb,IAAAA,CAAK0hC,MAAAA;MAAAA,CAAAA;MAEd/2C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;QAAAA,IAAAA,CACPktB,MAAAA,GAASltB,CAAAA;MAAAA;IAAAA,CAAAA,CAAAA,EAGlBtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;MACnCwU,KAAAA,EAAOxU,IAAAA,CAAK2hC,MAAAA;MACZC,QAAAA,EAAAA,CAAU;IAAA,CAAA,CAAA;EAAA,CAAA;AAOdH,EAAAA,CAAkBx7C,SAAAA,CAAUgO,QAAAA,GAAW,YAAA;EAAA,OAC9B+L,IAAAA,CAAK2iB,KAAAA,GAAQ,MAAA;AAAA,CAAA,EAGtB8e,EAAAA,CAAkBx7C,SAAAA,CAAUy9B,SAAAA,GAAY,YAAA;EAAA,IAClCkd,CAAAA,GAAe5gC,IAAAA,CAAKihC,wBAAAA,CAAAA,CAAAA;EAAAA,IAAAA,CACnB9T,KAAAA,CAAMhZ,QAAAA,CAASuP,SAAAA,CAAU;IAC5Br8B,IAAAA,EAAM2Y,IAAAA,CAAK8S,MAAAA;IACXoR,mBAAAA,EAAqB0c,CAAAA;IACrB9c,QAAAA,EAAU9jB,IAAAA,CAAK2iB;EAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAEZwK,KAAAA,CAAMhZ,QAAAA,CAASrlB,GAAAA,CAAI,QAAA,CAAA;AAAA,CAAA,EAS1B2yC,EAAAA,CAAkBx7C,SAAAA,CAAUg7C,wBAAAA,GAA2B,YAAA;EAAA,IACjDL,CAAAA,GAAe,EAAA;IACfzkC,CAAAA,GAAOD,MAAAA,CAAO2lC,mBAAAA,CAAoB7hC,IAAAA,CAAAA,CAAM8hC,MAAAA,CAAO,UAAS7yB,CAAAA,EAAAA;MAAAA,OAEjD,SAAA,IAAPA,CAAAA,IACO,yBAAA,IAAPA,CAAAA,IACO,OAAA,IAAPA,CAAAA,IACO,OAAA,IAAPA,CAAAA,IACuB,GAAA,IAAvBA,CAAAA,CAAI9P,SAAAA,CAAU,CAAA,EAAG,CAAA,CAAA;IAAA,CAAA,CAAA;EAAA,KAIhB,IAAI/W,CAAAA,IAAK+T,CAAAA,EAAAA,IAAAA,CACwD,CAAA,KAAhED,MAAAA,CAAO6lC,wBAAAA,CAAyB/hC,IAAAA,EAAM7D,CAAAA,CAAK/T,CAAAA,CAAAA,CAAAA,CAAI2yC,YAAAA,EAAwB;IAAA,IACrE9rB,CAAAA,GAAM9S,CAAAA,CAAK/T,CAAAA,CAAAA;MACXosB,CAAAA,GAAQxU,IAAAA,CAAKiP,CAAAA,CAAAA;IAEbuF,CAAAA,KACEza,KAAAA,CAAMC,OAAAA,CAAQwa,CAAAA,CAAAA,GAChBosB,CAAAA,CAAatzC,IAAAA,CAAK;MAChB2hB,GAAAA,EAAKA,CAAAA;MACLuF,KAAAA,EAAO8sB,EAAAA,CAAgB9sB,CAAAA,EAAOxU,IAAAA,CAAK2iB,KAAAA,EAAO3iB,IAAAA,CAAKmtB,KAAAA;IAAAA,CAAAA,CAAAA,GAExC3Y,CAAAA,YAAiBitB,EAAAA,IAG1BjtB,CAAAA,CAAM2Y,KAAAA,GAAQntB,IAAAA,CAAKmtB,KAAAA,EACnByT,CAAAA,CAAatzC,IAAAA,CAAK;MAAE2hB,GAAAA,EAAKA,CAAAA;MAAKuF,KAAAA,EAAOA,CAAAA,CAAMmO,KAAAA,GAAQ;IAAA,CAAA,CAAA,IACzB,UAAA,IAAA,OAAVnO,CAAAA,IAChBosB,CAAAA,CAAatzC,IAAAA,CAAK;MAAE2hB,GAAAA,EAAKA,CAAAA;MAAKuF,KAAAA,EAAOA;IAAAA,CAAAA,CAAAA,CAAAA;EAAAA;EAAAA,OAKtCosB,CAAAA;AAAAA,CAAAA;AAGT,IAAI1E,EAAAA,GAAkB,SAAA,CAAA,EAAA;EACpBuF,EAAAA,CAAkB7qC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAEvB9D,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCwU,KAAAA,EAAO,UAAA;IACPumB,YAAAA,EAAAA,CAAc,CAAA;IACd6G,QAAAA,EAAAA,CAAU;EAAA,CAAA,CAAA,EAGZ1lC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,SAAA,EAAW;IACrCwU,KAAAA,EAAO,OAAA;IACPumB,YAAAA,EAAAA,CAAc,CAAA;IACd6G,QAAAA,EAAAA,CAAU;EAAA,CAAA,CAAA,EAGZ1lC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCwU,KAAAA,EAAO,CAAA;IACPumB,YAAAA,EAAAA,CAAc,CAAA;IACd6G,QAAAA,EAAAA,CAAU;EAAA,CAAA,CAAA;EAAA,IAoBRI,CAAAA;IAjBAC,CAAAA,GAAQ,EAAA;EACZ/lC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClC+6B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIsiB,CAAAA;IAAAA,CAAAA;IAETt3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZytB,CAAAA,GAAQztB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAIZtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvCwU,KAAAA,EAAO,OAAA;IACPumB,YAAAA,EAAAA,CAAc,CAAA;IACd6G,QAAAA,EAAAA,CAAU;EAAA,CAAA,CAAA,EAIZ1lC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,QAAA,EAAU;IACpCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpwC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZwtB,CAAAA,GAAUxtB,CAAAA,CAAMyS,IAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAElBtH,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACCqiB,CAAAA,IAGK,IAAA;IAAA;EAAA,CAAA,CAAA;AAAA,CAAA;AAMfrG,CAAAA,CAAQO,EAAAA,EAAiBuF,EAAAA,CAAAA;AAEzB,IAAItB,EAAAA,GAAqB,SAAA,CAAA,EAAA;EACvBsB,EAAAA,CAAkB7qC,IAAAA,CAAKoJ,IAAAA,CAAAA;EAAAA,IAwBnBkiC,CAAAA;IAtBAC,CAAAA,GAAQ,EAAA;EAEZjmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACCwiB,CAAAA,CAAMh5C,MAAAA,GAAS,CAAA,GACVg5C,CAAAA,GAAAA,KAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAMbjmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,QAAA,EAAU;IACpCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIwiB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAMXjmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACEuiB,CAAAA,EAAAA;QAAAA,IAGDne,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;UAAAA,OAChBA,CAAAA;QAAAA,CAAAA;QAAAA,OAEL2Y,IAAAA,CAAKmtB,KAAAA,KAAOpJ,CAAAA,GAAY/jB,IAAAA,CAAKmtB,KAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAa5tB,IAAAA,CAAK2iB,KAAAA,CAAAA,CAAAA,EAC3D,GAAA,GAAM0H,CAAAA,CAAUtG,CAAAA,CAAUme,CAAAA,CAAAA,CAAAA,GAAQ,GAAA;MAAA;IAAA,CAAA;IAE3Cv3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZ0tB,CAAAA,GAAM1tB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;AAAAA,CAAAA;AAKZmnB,CAAAA,CAAQwE,EAAAA,EAAoBsB,EAAAA,CAAAA;AAQ5B,IAAIzB,EAAAA,GAAgB,SAAhBA,CAAAA,CAAAA,EAAAA;EACFyB,EAAAA,CAAkB7qC,IAAAA,CAAKoJ,IAAAA,CAAAA;EAAAA,IAGnBoiC,CAAAA,GAAK,CAAA;EACTlmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIyiB,CAAAA;IAAAA,CAAAA;IAETz3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,EAAAA,MAGH,IAAI9W,KAAAA,CACR,iBAAA,GAAoB8W,CAAAA,GAAQ,6BAAA,CAAA;MAH9B4tB,CAAAA,GAAK5tB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAiBXtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,iBAAA,EAAmB;IAC7Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAa2F,CAAAA,EAAI,CAAA,CAAA,CAAA;IAAA,CAAA;IAElCz3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8tB,CAAAA,GAAI5F,CAAAA,CAAa0F,CAAAA,EAAI,CAAA,CAAA,GAAA,IAAA,CAErBE,CAAAA,GAAI3F,CAAAA,CAAeyF,CAAAA,EAAI,CAAA,CAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IAK9BG,CAAAA,GAAM,CAAA;EACVrmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI4iB,CAAAA;IAAAA,CAAAA;IAET53C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IACPjH,KAAAA,CAAMiH,CAAAA,CAAAA,EAAAA,MAGH,IAAI9W,KAAAA,CACR,iBAAA,GAAoB8W,CAAAA,GAAQ,8BAAA,CAAA;MAH9B+tB,CAAAA,GAAM/tB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IASRguB,CAAAA,GAAQ,EAAA;EACZtmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACkB,CAAA,KAAjB6iB,CAAAA,CAAMr5C,MAAAA,EAAAA,OAGHq5C,CAAAA;IAAAA,CAAAA;IAET73C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAEVguB,CAAAA,GAAAA,KADmB,CAAA,KAAVhuB,CAAAA,GACDA,CAAAA,GAEA,EAAA;IAAA;EAAA,CAAA,CAAA,EAYdtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OAAA,CACE6iB,CAAAA,IAASj1B,KAAAA,CAAMi1B,CAAAA,CAAM,CAAA,CAAA,CAAA,GACjB,CAAA,GAEFA,CAAAA,CAAM,CAAA,CAAA;IAAA,CAAA;IAEf73C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZguB,CAAAA,CAAM,CAAA,CAAA,GAAKhuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWftY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OAAA,CACE6iB,CAAAA,IAASj1B,KAAAA,CAAMi1B,CAAAA,CAAM,CAAA,CAAA,CAAA,GACjB,CAAA,GAEFA,CAAAA,CAAM,CAAA,CAAA;IAAA,CAAA;IAEf73C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZguB,CAAAA,CAAM,CAAA,CAAA,GAAKhuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWftY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;IACnCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OAAA,CACE6iB,CAAAA,IAASj1B,KAAAA,CAAMi1B,CAAAA,CAAM,CAAA,CAAA,CAAA,GACjB,CAAA,GAEFA,CAAAA,CAAM,CAAA,CAAA;IAAA,CAAA;IAEf73C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZguB,CAAAA,CAAM,CAAA,CAAA,GAAKhuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWftY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,QAAA,EAAU;IACpCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OAAA,CACE6iB,CAAAA,IAASj1B,KAAAA,CAAMi1B,CAAAA,CAAM,CAAA,CAAA,CAAA,GACjB,CAAA,GAEFA,CAAAA,CAAM,CAAA,CAAA;IAAA,CAAA;IAEf73C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZguB,CAAAA,CAAM,CAAA,CAAA,GAAKhuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIXiuB,CAAAA,GAAM,EAAA;EACVvmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI8iB,CAAAA;IAAAA,CAAAA;IAET93C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,QACJA,CAAAA;QAAAA,KACD,MAAA;QAAA,KACA,KAAA;QAAA,KACA,KAAA;QAAA,KACA,MAAA;UACHiuB,CAAAA,GAAMjuB,CAAAA;UAAAA;QAAAA;UAAAA,MAGA,IAAI9W,KAAAA,CACR,iBAAA,GAAoB8W,CAAAA,GAAQ,8BAAA,CAAA;MAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IAMlCkuB,CAAAA,GAAK,IAAA;EAETxmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IAAA,CACE+iB,CAAAA,IAAMA,CAAAA,CAAGv5C,MAAAA,GAAS,CAAA,EAAG;QAAA,IAEpB6W,IAAAA,YAAgB2iC,EAAAA,EAAAA;QAGpBD,CAAAA,GAAK,aAAA,GAAgB1C,CAAAA,CAAcC,QAAAA,EAAAA;MAAAA;MAAAA,IAEjClc,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;QAAAA,OAChBA,CAAAA;MAAAA,CAAAA;MAAAA,OAEL2Y,IAAAA,CAAKmtB,KAAAA,KAAOpJ,CAAAA,GAAY/jB,IAAAA,CAAKmtB,KAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAa5tB,IAAAA,CAAK2iB,KAAAA,CAAAA,CAAAA,EAC3D,GAAA,GAAM0H,CAAAA,CAAUtG,CAAAA,CAAU2e,CAAAA,CAAAA,CAAAA,GAAO,GAAA;IAAA,CAAA;IAE1C/3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZkuB,CAAAA,GAAKluB,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWfiI,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvC+6B,YAAAA,EAAAA,CAAc,CAAA;IACd3B,UAAAA,EAAAA,CAAY,CAAA;IACZzZ,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI+iB,CAAAA;IAAAA,CAAAA;IAET/3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZkuB,CAAAA,GAAKluB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAILouB,CAAAA,GAAY,WAAA;EAQhB1mC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIijB,CAAAA;IAAAA,CAAAA;IAETj4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZouB,CAAAA,GAAYpuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIZquB,CAAAA,GAAa,QAAA;EAQjB3mC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIkjB,CAAAA;IAAAA,CAAAA;IAETl4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZquB,CAAAA,GAAaruB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIbsuB,CAAAA,GAAY,CAAA;EAQhB5mC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACImjB,CAAAA;IAAAA,CAAAA;IAETn4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZsuB,CAAAA,GAAYtuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIZuuB,CAAAA,GAAAA,KAAermB,CAAAA;EAQnBxgB,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,aAAA,EAAe;IACzCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OAAA,KACkBjD,CAAAA,KAAjBqmB,CAAAA,GAGK,EAAA,GAAKzrB,CAAAA,GAELyrB,CAAAA;IAAAA,CAAAA;IAGXp4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZuuB,CAAAA,GAAevuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIfwuB,CAAAA,GAAS,OAAA;EAQb9mC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;IACnCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIqjB,CAAAA;IAAAA,CAAAA;IAETr4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZwuB,CAAAA,GAASxuB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIT0tB,CAAAA,GAAM,cAAA;EAEVhmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IAAA,EAAA,CAEAuiB,CAAAA,IACDliC,IAAAA,YAAgB2iC,EAAAA,IAChB3iC,IAAAA,YAAgBijC,EAAAA,CAAAA,EAAAA,OAIXzB,EAAAA,CAAYU,CAAAA,EAAKliC,IAAAA,CAAK2iB,KAAAA,EAAO3iB,IAAAA,CAAKmtB,KAAAA,CAAAA;IAAAA,CAAAA;IAE3CxiC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQA,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,EACdiuC,CAAAA,GAAM1tB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAIN0uB,CAAAA,GAAM,IAAA;EACVhnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACEujB,CAAAA,EAAAA,OAGDljC,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAC9B3B,EAAAA,CAAY0B,CAAAA,EAAKljC,IAAAA,CAAK2iB,KAAAA,EAAO3iB,IAAAA,CAAKmtB,KAAAA,CAAAA,GAEpC+V,CAAAA;IAAAA,CAAAA;IAETv4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQA,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,EAGVivC,CAAAA,GAFAljC,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GACV,GAAA,KAAvB3uB,CAAAA,CAAMzQ,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,GACZy3B,CAAAA,CAAYhnB,CAAAA,CAAMzQ,MAAAA,CAAO,CAAA,EAAGyQ,CAAAA,CAAMrrB,MAAAA,GAAS,CAAA,CAAA,CAAA,GAE3CqyC,CAAAA,CAAYhnB,CAAAA,CAAAA,GAGdA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAYZtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,cAAA,EAAgB;IAC1Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACC3f,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAC9B3H,CAAAA,CAAY0H,CAAAA,CAAIn/B,MAAAA,CAAO,CAAA,EAAGm/B,CAAAA,CAAI/5C,MAAAA,GAAS,CAAA,CAAA,CAAA,GAEvC+5C,CAAAA;IAAAA,CAAAA;IAGXv4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQA,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,EAEZivC,CAAAA,GADEljC,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAC/B,GAAA,GAAM3uB,CAAAA,GAENA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAKR8oB,CAAAA,GAAK,IAAA;EACTphC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACE2d,CAAAA,EAAAA,OAGEA,CAAAA;IAAAA,CAAAA;IAET3yC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACP4oB,CAAAA,GAAI5oB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAGbtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACE2d,CAAAA,EAAAA,OAGDt9B,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAC9B3B,EAAAA,CAAYlE,CAAAA,EAAIt9B,IAAAA,CAAK2iB,KAAAA,EAAO3iB,IAAAA,CAAKmtB,KAAAA,CAAAA,GAEnCmQ,CAAAA;IAAAA,CAAAA;IAET3yC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQA,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,EAGVqpC,CAAAA,GAFAt9B,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GACV,GAAA,KAAvB3uB,CAAAA,CAAMzQ,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,GACby3B,CAAAA,CAAYhnB,CAAAA,CAAMzQ,MAAAA,CAAO,CAAA,EAAGyQ,CAAAA,CAAMrrB,MAAAA,GAAS,CAAA,CAAA,CAAA,GAE3CqyC,CAAAA,CAAYhnB,CAAAA,CAAAA,GAGdA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAYXtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;IACnCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACC3f,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAC9B3H,CAAAA,CAAY8B,CAAAA,CAAGv5B,MAAAA,CAAO,CAAA,EAAGu5B,CAAAA,CAAGn0C,MAAAA,GAAS,CAAA,CAAA,CAAA,GAErCm0C,CAAAA;IAAAA,CAAAA;IAGX3yC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQA,CAAAA,CAAMvgB,QAAAA,CAAAA,CAAAA,EAEZqpC,CAAAA,GADEt9B,IAAAA,YAAgBmjC,EAAAA,IAAAA,CAAmB,CAAA,GAChC,GAAA,GAAM3uB,CAAAA,GAENA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAYXtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,eAAA,EAAiB;IAC3Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAK8gC,IAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAIhB5kC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKugC,aAAAA,GAAgB,QAAA,GAAW,IAAA;IAAA;EAAA,CAAA,CAAA,EAI3CrkC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,SAAA,EAAW;IACrCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKugC,aAAAA,GAAgB,SAAA,GAAY,IAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IA8BxC6C,CAAAA;IA1BAC,CAAAA,GAAAA,CAAuB,CAAA;EAQ3BnnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,qBAAA,EAAuB;IACjDo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0jB,CAAAA;IAAAA,CAAAA;IAET14C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZA,CAAAA,GAAQ6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,EAChB6uB,CAAAA,GAAuB7uB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAW3BtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACEyjB,CAAAA,EAAAA,OAGEA,CAAAA;IAAAA,CAAAA;IAETz4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZ4uB,CAAAA,GAAQ5uB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWZtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAYxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAYxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,CAAA,CAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IAKpCC,CAAAA,GAAK,IAAA;EACTrnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,GAAA,EAAK;IAC/Bo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACQ,IAAA,KAAP4jB,CAAAA,EAAAA,OAGGA,CAAAA;IAAAA,CAAAA;IAET54C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,IAAAA,CACsB,CAAA,KAA9B,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA,CAAGrgB,OAAAA,CAAQqgB,CAAAA,CAAAA,EAAAA,MAGd,IAAI9W,KAAAA,CACR,iBAAA,GAAoB8W,CAAAA,GAAQ,6BAAA,CAAA;MAH9B+uB,CAAAA,GAAK/uB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAiBXtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvC2f,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACCnc,CAAAA;MAAAA,QACI+/B,CAAAA;QAAAA,KACD,CAAA;QAAA;UAEH//B,CAAAA,GAAS,MAAA;UAAA;QAAA,KAEN,CAAA;UACHA,CAAAA,GAAS,QAAA;UAAA;QAAA,KAEN,CAAA;UACHA,CAAAA,GAAS,OAAA;MAAA;MAAA,OAGNA,CAAAA;IAAAA,CAAAA;IAETu3B,YAAAA,EAAAA,CAAc,CAAA;IACd3B,UAAAA,EAAAA,CAAY,CAAA;IACZzuC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,QACJA,CAAAA;QAAAA,KACD,OAAA;QAAA,KACA,CAAA;UACH+uB,CAAAA,GAAK,CAAA;UAAA;QAAA,KAEF,QAAA;QAAA,KACA,CAAA;UACHA,CAAAA,GAAK,CAAA;UAAA;QAAA,KAEF,MAAA;QAAA,KACA,CAAA;QAAA;UAEHA,CAAAA,GAAK,CAAA;MAAA;IAAA;EAAA,CAAA,CAAA;AAAA,CAAA;AAMf5H,CAAAA,CAAQqE,EAAAA,EAAeyB,EAAAA,CAAAA;AAAAA,IAMnB+B,EAAAA,GAAsB,SAAA,CAAA,EAAA;EACxBxD,EAAAA,CAAcppC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CAEdyjC,EAAAA,GAAK,KAAA,EAAA,IAAA,CAELrG,CAAAA,GAAI,IAAA,EAAA,IAAA,CAEJxU,QAAAA,GAAW,cAAA;EAAA,IAEZ8a,CAAAA,GAAM,CAAA;EAEVxnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI+jB,CAAAA;IAAAA,CAAAA;IAET/4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZkvB,CAAAA,GAAMlvB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAWVtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI+jB,CAAAA;IAAAA,CAAAA;IAET/4C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZkvB,CAAAA,GAAMlvB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAINmvB,CAAAA,GAAO,EAAA;EACXznC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,KAAA,EAAO;IACjCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI2hB,EAAAA,CAAgBqC,CAAAA,EAAM3jC,IAAAA,CAAK2iB,KAAAA,EAAO3iB,IAAAA,CAAKmtB,KAAAA,CAAAA;IAAAA,CAAAA;IAEhDxiC,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MA97BU,IAAS+sB,CAAAA,EAC/B/9B,CAAAA;MAAAA,CAAAA,GAAS,EAAA,EACQ,QAAA,IAAA,QAFc+9B,CAAAA,GA+7BF/sB,CAAAA,CAAAA,KA57B/BhR,CAAAA,GAZJ,UAAoBiY,CAAAA,EAAQmoB,CAAAA,EAAO/c,CAAAA,EAAAA;QACjCA,CAAAA,KAAUA,CAAAA,GAAQ,CAAA,CAAA;QAAA,KAAA,IAEdhpB,CAAAA,EADAF,CAAAA,GAAU,EAAA,EAENE,CAAAA,GAAQ+lC,CAAAA,CAAMv2B,IAAAA,CAAKoO,CAAAA,CAAAA,GACzB9d,CAAAA,CAAQrQ,IAAAA,CAAKuQ,CAAAA,CAAMgpB,CAAAA,CAAAA,CAAAA;QAAAA,OAEdlpB,CAAAA;MAAAA,CAKIkmC,CAAWtC,CAAAA,EAAO,YAAA,CAAA,CAAA,EA47BzBoC,CAAAA,GA17BGngC,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAq8BFsgC,UAAAA,GAAa,YAAA;IAAA,OACTH,CAAAA;EAAAA,CAAAA,EAAAA,IAAAA,CAUJI,UAAAA,GAAa,UAASvvB,CAAAA,EAAAA;IACzBmvB,CAAAA,GAAOnvB,CAAAA,EACHxU,IAAAA,CAAKvS,IAAAA,IACPk2C,CAAAA,CAAKl2C,IAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAAAA,IAAAA,CAWJu2C,SAAAA,GAAY,UAASxvB,CAAAA,EAAAA;IAExBA,CAAAA,GAAAA,CADAA,CAAAA,GAAQA,CAAAA,IAAS,EAAA,EACHvgB,QAAAA,CAAAA,CAAAA,EACd0vC,CAAAA,CAAKr2C,IAAAA,CAAKknB,CAAAA,CAAAA,EACNxU,IAAAA,CAAKvS,IAAAA,IACPk2C,CAAAA,CAAKl2C,IAAAA,CAAAA,CAAAA;EAAAA,CAAAA,EAAAA,IAAAA,CAYJw2C,YAAAA,GAAe,UAASzvB,CAAAA,EAAO0vB,CAAAA,EAAAA;IAAAA,KAClCA,CAAAA,GAAaA,CAAAA,IAAAA,CAAc,CAAA,EAE3B1vB,CAAAA,GAAAA,CADAA,CAAAA,GAAQA,CAAAA,IAAS,EAAA,EACHvgB,QAAAA,CAAAA,CAAAA,EAAAA,CAEkB,CAAA,KAAzB0vC,CAAAA,CAAKxvC,OAAAA,CAAQqgB,CAAAA,CAAAA,KAClBmvB,CAAAA,CAAKzY,MAAAA,CAAOyY,CAAAA,CAAKxvC,OAAAA,CAAQqgB,CAAAA,CAAAA,EAAQ,CAAA,CAAA,EAAA,CACd,CAAA,KAAf0vB,CAAAA,CAAAA,EAAAA;EAAAA,CAAAA,EAaRhoC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;IACnCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAYxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CAEO,CAAA,KAAfxU,IAAAA,CAAKmkC,KAAAA,KAAAA,CACgB,CAAA,KAAnB9B,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAa1CpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,IAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,EAChCK,CAAAA,CAAKl2C,IAAAA,CAAAA,CAAAA,IAAAA,IAAAA,CAEA61C,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAYxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,aAAA,EAAe;IACzCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAYxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,iBAAA,EAAmB;IAC7Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAaxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,mBAAA,EAAqB;IAC/Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAAA,IAAA,CAKnCpC,mBAAAA,GAAAA,CAAsB,CAAA;AAAA,CAAA;AAE7BvF,OAAAA,CAAAA,mBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQ6H,EAAAA,EAAqBxD,EAAAA,CAAAA;AAAAA,IAOzBoE,EAAAA,GAAkB,SAAA,CAAA,EAAA;EACpBZ,EAAAA,CAAoB5sC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACpB4oB,QAAAA,GAAW,WAAA,EAAA,IAAA,CAGXub,KAAAA,GAAAA,CAAQ,CAAA;AAAA,CAAA;AAEfxI,OAAAA,CAAAA,eAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQyI,EAAAA,EAAiBZ,EAAAA,CAAAA;AAAAA,IAQrBa,EAAAA,GAAmB,SAAA,CAAA,EAAA;EACrBD,EAAAA,CAAgBxtC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CAChBmkC,KAAAA,GAAAA,CAAQ,CAAA;AAAA,CAAA;AAEfxI,OAAAA,CAAAA,gBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQ0I,EAAAA,EAAkBD,EAAAA,CAAAA;AAAAA,IAStBE,EAAAA,GAAkB,SAAA,CAAA,EAAA;EACpBD,EAAAA,CAAiBztC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACjBukC,IAAAA,GAAAA,CAAO,CAAA;AAAA,CAAA;AAEd5I,OAAAA,CAAAA,eAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQ2I,EAAAA,EAAiBD,EAAAA,CAAAA;AAAAA,IAMrBlB,EAAAA,GAAiB,SAAA,CAAA,EAAA;EACnBnD,EAAAA,CAAcppC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACdyjC,EAAAA,GAAK,MAAA,EAQVvnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,eAAA,EAAiB;IAC3Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,OAAA,EAAS;IACnCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,YAAA,EAAc;IACxCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,eAAA,EAAiB;IAC3Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IAyDpCkB,CAAAA;IApDAC,CAAAA,GAAM,CAAA,CAAA;EACVvoC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACCoE,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;QAAAA,OAChBA,CAAAA;MAAAA,CAAAA;MAAAA,IAEL2Y,IAAAA,CAAKmtB,KAAAA,KAAOpJ,CAAAA,GAAY/jB,IAAAA,CAAKmtB,KAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAa5tB,IAAAA,CAAK2iB,KAAAA,CAAAA,CAAAA,EAClC,CAAA,KAA5BzmB,MAAAA,CAAOC,IAAAA,CAAKsoC,CAAAA,CAAAA,CAAKt7C,MAAAA,EAAc;QAAA,IAG7B8lB,CAAAA;UAFAzL,CAAAA,GAAS,EAAA;QAAA,KAGRyL,CAAAA,IAFLzL,CAAAA,CAAOlW,IAAAA,CAAK,IAAA,CAAA,EAEAm3C,CAAAA,EACVjhC,CAAAA,CAAOlW,IAAAA,CAAK,GAAA,GAAM2hB,CAAAA,GAAM,IAAA,GAAOob,CAAAA,CAAUtG,CAAAA,CAAU0gB,CAAAA,CAAIx1B,CAAAA,CAAAA,CAAAA,CAAAA,GAAS,GAAA,CAAA;QAAA,OAElEzL,CAAAA,CAAOlW,IAAAA,CAAK,IAAA,CAAA,EACLkW,CAAAA,CAAOoL,IAAAA,CAAK,IAAA,CAAA;MAAA;IAAA,CAAA;IAIvBjkB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACS,QAAA,KAAjB9uB,IAAAA,eAAAA,EAAO8uB,CAAAA,CAAAA,KACTiwB,CAAAA,GAAMjwB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAgBZtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,SAAA,EAAW;IACrCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI8kB,CAAAA,CAAIC,EAAAA,IAAM,EAAA;IAAA,CAAA;IAEnB/5C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACS,QAAA,IAAA,OAAVA,CAAAA,KACTiwB,CAAAA,CAAIC,EAAAA,GAAKlwB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAMftY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI6kB,CAAAA;IAAAA,CAAAA;IAET75C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZgwB,CAAAA,GAAMhwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAUVtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,iBAAA,EAAmB;IAC7Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI6kB,CAAAA,CAAIzgC,MAAAA,CAAO,CAAA,EAAGygC,CAAAA,CAAIr7C,MAAAA,GAAS,CAAA,CAAA;IAAA,CAAA;IAEpCwB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZgwB,CAAAA,GAAM,GAAA,GAAMhwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;AAAAA,CAAAA;AAIlBmnB,OAAAA,CAAAA,cAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQwH,EAAAA,EAAgBnD,EAAAA,CAAAA;AAAAA,IAOpB2E,EAAAA,GAAqB,SAAA,CAAA,EAAA;EACvBxB,EAAAA,CAAevsC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACf4kC,UAAAA,GAAAA,CAAa,CAAA;AAAA,CAAA;AAEpBjJ,OAAAA,CAAAA,kBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQgJ,EAAAA,EAAoBxB,EAAAA,CAAAA;AAAAA,IAOxB0B,EAAAA,GAAsB,SAAA,CAAA,EAAA;EACxB1B,EAAAA,CAAevsC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACf8kC,KAAAA,GAAAA,CAAQ,CAAA,EAAA,IAAA,CACRF,UAAAA,GAAAA,CAAa,CAAA;EAAA,IAEdzC,CAAAA,GAAQ,EAAA;EACZjmC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIwiB,CAAAA;IAAAA,CAAAA;IAETx3C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAEV2tB,CAAAA,GAAAA,KADmB,CAAA,KAAV3tB,CAAAA,GACDA,CAAAA,GAEA,EAAA;IAAA;EAAA,CAAA,CAAA;AAAA,CAAA;AAKhBmnB,OAAAA,CAAAA,mBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQkJ,EAAAA,EAAqB1B,EAAAA,CAAAA;AAS7B,IAAIR,EAAAA,GAAqB,SAAA,CAAA,EAAA;EAAA,IAGnBoC,CAAAA,EAYAC,CAAAA;EAdJhF,EAAAA,CAAcppC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAGnB9D,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,QAAA,EAAU;IACpCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIolB,CAAAA;IAAAA,CAAAA;IAETp6C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZuwB,CAAAA,GAAUvwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAKdtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,YAAA,EAAc;IACxCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIqlB,CAAAA;IAAAA,CAAAA;IAETr6C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZwwB,CAAAA,GAAcxwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA;EAAAA,IAqDdgwB,CAAAA;IAjDAC,CAAAA,GAAM,CAAA,CAAA;EACVvoC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,IACCoE,CAAAA,GAAY,SAAA,CAAS18B,CAAAA,EAAAA;QAAAA,OAChBA,CAAAA;MAAAA,CAAAA;MAEL2Y,IAAAA,CAAKmtB,KAAAA,KAAOpJ,CAAAA,GAAY/jB,IAAAA,CAAKmtB,KAAAA,CAAMhZ,QAAAA,CAASyZ,YAAAA,CAAa5tB,IAAAA,CAAK2iB,KAAAA,CAAAA,CAAAA;MAAAA,IAG9D1T,CAAAA;QAFAzL,CAAAA,GAAS,EAAA;MAAA,KAGRyL,CAAAA,IAFLzL,CAAAA,CAAOlW,IAAAA,CAAK,IAAA,CAAA,EAEAm3C,CAAAA,EACVjhC,CAAAA,CAAOlW,IAAAA,CAAK,GAAA,GAAM2hB,CAAAA,GAAM,IAAA,GAAOob,CAAAA,CAAUtG,CAAAA,CAAU0gB,CAAAA,CAAIx1B,CAAAA,CAAAA,CAAAA,CAAAA,GAAS,GAAA,CAAA;MAAA,OAElEzL,CAAAA,CAAOlW,IAAAA,CAAK,IAAA,CAAA,EACLkW,CAAAA,CAAOoL,IAAAA,CAAK,IAAA,CAAA;IAAA,CAAA;IAErBjkB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACS,QAAA,KAAjB9uB,IAAAA,eAAAA,EAAO8uB,CAAAA,CAAAA,KACTiwB,CAAAA,GAAMjwB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAgBZtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,SAAA,EAAW;IACrCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI8kB,CAAAA,CAAIC,EAAAA,IAAM,EAAA;IAAA,CAAA;IAEnB/5C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACS,QAAA,IAAA,OAAVA,CAAAA,KACTiwB,CAAAA,CAAIC,EAAAA,GAAKlwB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAMftY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,IAAA,EAAM;IAChCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI6kB,CAAAA;IAAAA,CAAAA;IAET75C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZgwB,CAAAA,GAAMhwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAUVtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,iBAAA,EAAmB;IAC7Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI6kB,CAAAA,CAAIzgC,MAAAA,CAAO,CAAA,EAAGygC,CAAAA,CAAIr7C,MAAAA,GAAS,CAAA,CAAA;IAAA,CAAA;IAEpCwB,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZgwB,CAAAA,GAAM,GAAA,GAAMhwB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAGXywB,OAAAA,GAAU,GAAA,EAAA,IAAA,CACVC,eAAAA,GAAkB,KAAA,EAAA,IAAA,CAGlBC,eAAAA,GAAkBhJ,EAAAA,CAAmBiJ,WAAAA,CAAYC,MAAAA,EAAAA,IAAAA,CAEjDlI,uBAAAA,GAA0Bn9B,IAAAA,CAAKmlC,eAAAA,CAAgBG,sBAAAA,CAClDtlC,IAAAA,CAAKulC,UAAAA,CAAAA;AAAAA,CAAAA;AAGT5J,CAAAA,CAAQgH,EAAAA,EAAoB3C,EAAAA,CAAAA,EAE5B6E,EAAAA,CAAoB5+C,SAAAA,CAAUu/C,aAAAA,GAAgB,UAASrE,CAAAA,EAAAA;EAAAA,IAAAA,EAC/C,wBAAA,IAA4BA,CAAAA,CAAAA,IAAAA,EAAc,OAAA,IAAWA,CAAAA,CAAAA,EAAAA,MACnD,IAAIzjC,KAAAA,CACR,oEAAA,CAAA;EAAA,KAGC,IAAIilB,CAAAA,IAAS3iB,IAAAA,CAAK2gC,IAAAA,EAAAA,IACjB3gC,IAAAA,CAAK2gC,IAAAA,CAAKtvB,cAAAA,CAAesR,CAAAA,CAAAA,EAAQ;IAAA,IAC/BiZ,CAAAA,GAAQ57B,IAAAA,CAAK2gC,IAAAA,CAAKhe,CAAAA,CAAAA;IACtBiZ,CAAAA,CAAMuB,uBAAAA,GAA0BgE,CAAAA,CAAWmE,sBAAAA,CACzC1J,CAAAA,CAAM2J,UAAAA,CAAAA,EAER3J,CAAAA,CAAMqJ,OAAAA,GAAU9D,CAAAA,CAAWsE,KAAAA,CAAAA,CAAAA;EAAAA;AAAAA,CAAAA,EAKjCZ,EAAAA,CAAoB5+C,SAAAA,CAAUy/C,YAAAA,GAAe,UAASrlC,CAAAA,EAAAA;EAAAA,IAEhDu7B,CAAAA,GAAQ,IAAI+G,EAAAA,CAAAA,CAAAA;EAAAA,OAChB/G,CAAAA,CAAM+J,MAAAA,GAAS3lC,IAAAA,EACf47B,CAAAA,CAAM2J,UAAAA,GAAallC,CAAAA,EAAAA,IAAAA,CAEdsgC,IAAAA,CAAKrzC,IAAAA,CAAKsuC,CAAAA,CAAAA,EAEfgK,EAAAA,CAAShvC,IAAAA,CAAKoJ,IAAAA,CAAKmtB,KAAAA,EAAOyO,CAAAA,CAAAA,EAEnBA,CAAAA;AAAAA,CAAAA;AAAAA,IAQLiK,EAAAA,GAAmB,SAAA,CAAA,EAAA;EACrB1C,EAAAA,CAAevsC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CAEf4oB,QAAAA,GAAW,cAAA,EAAA,IAAA,CACXqc,OAAAA,GAAU,GAAA,EAAA,IAAA,CACVC,eAAAA,GAAkB,IAAA,EAAA,IAAA,CAClB1wB,KAAAA,GAAQ,IAAA,EAAA,IAAA,CACRuqB,SAAAA,GAAY,QAAA,EAAA,IAAA,CACZ5B,uBAAAA,GAA0BhB,EAAAA,CAAmB2J,QAAAA,CAASR,sBAAAA,CAAAA,CAAAA;AAAAA,CAAAA;AAE7D3J,OAAAA,CAAAA,gBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQkK,EAAAA,EAAkB1C,EAAAA,CAAAA;AAAAA,IAMtBF,EAAAA,GAAoB,SAAA,CAAA,EAAA;EACtBjD,EAAAA,CAAcppC,IAAAA,CAAKoJ,IAAAA,CAAAA,EAAAA,IAAAA,CACdyjC,EAAAA,GAAK,KAAA,EAQVvnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,YAAA,EAAc;IACxCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,iBAAA,EAAmB;IAC7Co5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,aAAA,EAAe;IACzCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,MAAA,EAAQ;IAClCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAWxCpnC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA;EAAA,IAKpCyC,CAAAA,GAAU,IAAA;EACd7pC,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,QAAA,EAAU;IACpCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIomB,CAAAA;IAAAA,CAAAA;IAETp7C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACZuxB,CAAAA,GAAUvxB,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAUdtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,WAAA,EAAa;IACvCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACIomB,CAAAA;IAAAA,CAAAA;IAETp7C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MACRgU,MAAAA,CAAOwd,SAAAA,CAAUxxB,CAAAA,CAAAA,KACnBuxB,CAAAA,GAAUvxB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,CAAAA,EAKhBtY,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,qBAAA,EAAuB;IACjDo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI3f,IAAAA,CAAKo9B,CAAAA,IAAKp9B,IAAAA,CAAKq9B,EAAAA;IAAAA;EAAAA,CAAAA,CAAAA;AAAAA,CAAAA;AAI5B1B,OAAAA,CAAAA,iBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQsH,EAAAA,EAAmBjD,EAAAA,CAAAA;AAAAA,IAOvBiG,EAAAA,GAAwB,SAAA,CAAA,EAAA;EAC1BhD,EAAAA,CAAkBrsC,IAAAA,CAAKoJ,IAAAA,CAAAA,EASvB9D,MAAAA,CAAOwjB,cAAAA,CAAe1f,IAAAA,EAAM,UAAA,EAAY;IACtCo5B,UAAAA,EAAAA,CAAY,CAAA;IACZ2B,YAAAA,EAAAA,CAAc,CAAA;IACdpb,GAAAA,EAAK,SAAA,CAAA,EAAA;MAAA,OACI0iB,OAAAA,CAAQ5F,CAAAA,CAAaz8B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,CAAA;IAAA,CAAA;IAEvC34C,GAAAA,EAAK,SAAA,CAAS6pB,CAAAA,EAAAA;MAAAA,CACW,CAAA,KAAnB6tB,OAAAA,CAAQ7tB,CAAAA,CAAAA,GAAAA,IAAAA,CACL8uB,EAAAA,GAAK5G,CAAAA,CAAa18B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA,GAAA,IAAA,CAE3BA,EAAAA,GAAK3G,CAAAA,CAAe38B,IAAAA,CAAKsjC,EAAAA,EAAI,EAAA,CAAA;IAAA;EAAA,CAAA,CAAA,EAAA,IAAA,CAInC4C,QAAAA,GAAAA,CAAW,CAAA;AAAA,CAAA;AAElBvK,OAAAA,CAAAA,qBAAAA,GAAAA,EAAAA;AAAAA,CAAAA,CAAQsK,EAAAA,EAAuBhD,EAAAA,CAAAA;AAAAA,IAG3B9G,EAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB;EACvB2J,QAAAA,EAAU;IACRR,sBAAAA,EAAwB,SAAA,CAAA,EAAA;MAAA,OACL;QACfa,CAAAA,EAAG;UACDC,EAAAA,EAAIjK,EAAAA,CAAmB2J,QAAAA,CAASO;QAAAA,CAAAA;QAElCC,CAAAA,EAAG;UACDF,EAAAA,EAAIjK,EAAAA,CAAmB2J,QAAAA,CAASS,WAAAA;UAChCC,GAAAA,EAAKrK,EAAAA,CAAmB2J,QAAAA,CAASW;QAAAA;MAAAA,CAAAA;IAAAA,CAAAA;IAWvCF,WAAAA,EAAa,SAAA,CAASvK,CAAAA,EAAAA;MAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;MAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;MAAAA,IACpBra,CAAAA,GAAS,EAAA;QACTkT,CAAAA,GAAUgW,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAASkX,OAAAA,CACtC2Q,CAAAA,CAAWpT,QAAAA,EACXoT,CAAAA,CAAWnkB,SAAAA,CAAAA,CACXvxB,EAAAA;QACEogD,CAAAA,GAAe1K,CAAAA,CAAW7O,KAAAA,CAAM/Y,WAAAA,CAAY8O,iBAAAA,CAC9C8Y,CAAAA,CAAWnZ,KAAAA,CAAAA;QAET0a,CAAAA,GAAUC,EAAAA,CAAWxB,CAAAA,EAAYA,CAAAA,CAAWiJ,OAAAA,CAAAA;MAAAA,OAChDnyB,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,CAAAA,GACxC,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,CAAAA,GACzC,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,UAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAM04B,CAAAA,GAAU,GAAA,GAAMvN,CAAAA,CAAG8kB,CAAAA,CAAQthB,QAAAA,CAAAA,GAAY,MAAA,GAASyqB,CAAAA,CAAAA,EAExD5zB,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAKiwC,CAAAA,CAAQ7T,IAAAA,CAAAA,EACpB5W,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;IAAAA,CAAAA;IAGToK,SAAAA,EAAW,SAAA,CAASrK,CAAAA,EAAAA;MAAAA,IACdC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;MAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;MAAAA,IACpBnH,CAAAA,GAAUgW,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAASkX,OAAAA,CACtC2Q,CAAAA,CAAWpT,QAAAA,EACXoT,CAAAA,CAAWnkB,SAAAA,CAAAA,CACXvxB,EAAAA;QACEogD,CAAAA,GAAe1K,CAAAA,CAAW7O,KAAAA,CAAM/Y,WAAAA,CAAY8O,iBAAAA,CAC9C8Y,CAAAA,CAAWnZ,KAAAA,CAAAA;QAET/P,CAAAA,GAAS,EAAA;QACTsT,CAAAA,GAAS+V,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA;QAC/C7V,CAAAA,GAAQgW,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA;QAC7CuB,CAAAA,GAAUC,EAAAA,CAAWxB,CAAAA,EAAYA,CAAAA,CAAWiJ,OAAAA,CAAAA;MAAAA,OAChDnyB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,MAAA,GAASmrB,CAAAA,CAAG0N,CAAAA,CAAAA,GAAS,GAAA,GAAM1N,CAAAA,CAAG2N,CAAAA,CAAAA,GAAU,KAAA,CAAA,EACpDtT,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,UAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,MAAA,GAASmrB,CAAAA,CAAG0N,CAAAA,GAAQ,CAAA,CAAA,GAAK,GAAA,GAAM1N,CAAAA,CAAG2N,CAAAA,GAAS,CAAA,CAAA,GAAK,KAAA,CAAA,EAC5DtT,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAM04B,CAAAA,GAAU,GAAA,GAAMvN,CAAAA,CAAG8kB,CAAAA,CAAQthB,QAAAA,CAAAA,GAAY,MAAA,GAASyqB,CAAAA,CAAAA,EAExD5zB,CAAAA,CAAOxlB,IAAAA,CAAKiwC,CAAAA,CAAQ7T,IAAAA,CAAAA,EACpB5W,CAAAA,CAAOxlB,IAAAA,CAAK,IAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;IAAAA,CAAAA;IAQTwK,WAAAA,EAAa,SAAA,CAASzK,CAAAA,EAAAA;MAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;MAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;MAAAA,IACpBra,CAAAA,GAAS,EAAA;MAAA,OACbA,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,CAAAA,GACxC,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,CAAAA,GACzC,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;IAAAA;EAAAA,CAAAA;EAIXmJ,WAAAA,EAAa;IACXC,MAAAA,EAAQ;MACNC,sBAAAA,EAAwB,SAAA,CAASjlC,CAAAA,EAAAA;QAAAA,IAC3B88B,CAAAA,GAA0B;UAC5BmJ,CAAAA,EAAG;YACDE,GAAAA,EAAKrK,EAAAA,CAAmBiJ,WAAAA,CAAYC,MAAAA,CAAOoB;UAAAA,CAAAA;UAE7CN,CAAAA,EAAG,CAAA;QAAA,CAAA;QAAA,OAELhJ,CAAAA,CAAwBgJ,CAAAA,CAAE9lC,CAAAA,CAAAA,GACxB87B,EAAAA,CAAmBiJ,WAAAA,CAAYC,MAAAA,CAAOgB,SAAAA,EACxClJ,CAAAA,CAAwBmJ,CAAAA,CAAEjmC,CAAAA,CAAAA,GACxB87B,EAAAA,CAAmBiJ,WAAAA,CAAYC,MAAAA,CAAOkB,WAAAA,EACjCpJ,CAAAA;MAAAA,CAAAA;MAETsI,KAAAA,EAAO,SAAA,CAAA,EAAA;QAAA,OACE,GAAA;MAAA,CAAA;MAGTY,SAAAA,EAAW,SAAA,CAASrK,CAAAA,EAAAA;QAAAA,IACdC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpBra,CAAAA,GAAS,EAAA;UAET6zB,CAAAA,GACFxK,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,IACrCG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAClCG,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,GACnDG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA;QAE1D2K,CAAAA,GAAYne,MAAAA,CAAAA,CAAoB,EAAA,GAAZme,CAAAA,EAAiBnuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,IACzCnyB,CAAAA,GAAI81C,EAAAA,CAAmBhoB,QAAAA,CAASyyB,QAAAA;UAChCC,CAAAA,GAAkBre,MAAAA,CAAAA,CAAQme,CAAAA,GAAYtgD,CAAAA,EAAGmyB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,OAIrD1F,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,UAAA,GACEmuC,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAP,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAKq5C,CAAAA,GAAY,MAAA,CAAA,EACxB7zB,CAAAA,CAAOxlB,IAAAA,CACLq5C,CAAAA,GACE,GAAA,GACAE,CAAAA,GACA,GAAA,GACAA,CAAAA,GACA,GAAA,GACAF,CAAAA,GACA,KAAA,GACAA,CAAAA,GACA,IAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GACEu5C,CAAAA,GACA,GAAA,GACAF,CAAAA,GACA,IAAA,GACAA,CAAAA,GACA,GAAA,GACAE,CAAAA,GACA,IAAA,GACAF,CAAAA,GACA,MAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GACEq5C,CAAAA,GACA,IAAA,GACAE,CAAAA,GACA,IAAA,GACAA,CAAAA,GACA,IAAA,GACAF,CAAAA,GACA,MAAA,GACAA,CAAAA,GACA,IAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACLu5C,CAAAA,GACE,IAAA,GACAF,CAAAA,GACA,GAAA,GACAA,CAAAA,GACA,IAAA,GACAE,CAAAA,GACA,GAAA,GACAF,CAAAA,GACA,MAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA,CAAAA;MAETsK,WAAAA,EAAa,SAAA,CAASvK,CAAAA,EAAAA;QAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpBra,CAAAA,GAAS,EAAA;UACT6zB,CAAAA,GACFxK,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,IACrCG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAClCG,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,GACnDG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA;QAE1D2K,CAAAA,GAAYne,MAAAA,CAAAA,CAAoB,EAAA,GAAZme,CAAAA,EAAiBnuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,IAGzCplB,CAAAA,GAAIo1B,MAAAA,CAAAA,CAAoB,CAAA,GAAZme,CAAAA,EAAenuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;UACnCsuB,CAAAA,GAAKte,MAAAA,CAAAA,CAAQp1B,CAAAA,GAAI+oC,EAAAA,CAAmBhoB,QAAAA,CAASyyB,QAAAA,EAAUpuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;UAC/DuuB,CAAAA,GAAKve,MAAAA,CAAAA,CACNme,CAAAA,GAAYxK,EAAAA,CAAmBhoB,QAAAA,CAASyyB,QAAAA,EAAUpuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,OAG7D1F,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,UAAA,GACEmuC,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAP,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK8F,CAAAA,GAAI,MAAA,CAAA,EAChB0f,CAAAA,CAAOxlB,IAAAA,CAAK8F,CAAAA,GAAI,GAAA,GAAM0zC,CAAAA,GAAK,GAAA,GAAMA,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,KAAA,GAAQA,CAAAA,GAAI,IAAA,CAAA,EAC5D0f,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAMw5C,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,IAAA,GAAOA,CAAAA,GAAI,GAAA,GAAM0zC,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,MAAA,CAAA,EAExD0f,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAM8F,CAAAA,GAAI,IAAA,GAAO0zC,CAAAA,GAAK,IAAA,GAAOA,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,MAAA,GAASA,CAAAA,GAAI,IAAA,CAAA,EAE5D0f,CAAAA,CAAOxlB,IAAAA,CAAKw5C,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,GAAA,GAAMA,CAAAA,GAAI,IAAA,GAAO0zC,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,MAAA,CAAA,EAC5D0f,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,KAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,UAAA,GACEmuC,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAP,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAKq5C,CAAAA,GAAY,MAAA,CAAA,EACxB7zB,CAAAA,CAAOxlB,IAAAA,CAEHq5C,CAAAA,GACA,GAAA,GACAI,CAAAA,GACA,GAAA,GACAA,CAAAA,GACA,GAAA,GACAJ,CAAAA,GACA,KAAA,GACAA,CAAAA,GACA,IAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GACEy5C,CAAAA,GACA,GAAA,GACAJ,CAAAA,GACA,IAAA,GACAA,CAAAA,GACA,GAAA,GACAI,CAAAA,GACA,IAAA,GACAJ,CAAAA,GACA,MAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GACEq5C,CAAAA,GACA,IAAA,GACAI,CAAAA,GACA,IAAA,GACAA,CAAAA,GACA,IAAA,GACAJ,CAAAA,GACA,MAAA,GACAA,CAAAA,GACA,IAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CACLy5C,CAAAA,GACE,IAAA,GACAJ,CAAAA,GACA,GAAA,GACAA,CAAAA,GACA,IAAA,GACAI,CAAAA,GACA,GAAA,GACAJ,CAAAA,GACA,MAAA,CAAA,EAEJ7zB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA,CAAAA;MAETwK,WAAAA,EAAa,SAAA,CAASzK,CAAAA,EAAAA;QAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpBra,CAAAA,GAAS,EAAA;UACT6zB,CAAAA,GACFxK,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,IACrCG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAClCG,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,GACnDG,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA;QAE1D2K,CAAAA,GAAYne,MAAAA,CAAAA,CAAoB,EAAA,GAAZme,CAAAA,EAAiBnuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,IAGzCplB,CAAAA,GAAIo1B,MAAAA,CAAAA,CAAoB,CAAA,GAAZme,CAAAA,EAAenuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;UACnCsuB,CAAAA,GAAKte,MAAAA,CAAAA,CAAQp1B,CAAAA,GAAI+oC,EAAAA,CAAmBhoB,QAAAA,CAASyyB,QAAAA,EAAUpuB,OAAAA,CAAQ,CAAA,CAAA,CAAA;QAAA,OAEnE1F,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,UAAA,GACEmuC,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAP,CAAAA,CAAGU,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK8F,CAAAA,GAAI,MAAA,CAAA,EAChB0f,CAAAA,CAAOxlB,IAAAA,CAAK8F,CAAAA,GAAI,GAAA,GAAM0zC,CAAAA,GAAK,GAAA,GAAMA,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,KAAA,GAAQA,CAAAA,GAAI,IAAA,CAAA,EAC5D0f,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAMw5C,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,IAAA,GAAOA,CAAAA,GAAI,GAAA,GAAM0zC,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,MAAA,CAAA,EAExD0f,CAAAA,CAAOxlB,IAAAA,CACL,GAAA,GAAM8F,CAAAA,GAAI,IAAA,GAAO0zC,CAAAA,GAAK,IAAA,GAAOA,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,MAAA,GAASA,CAAAA,GAAI,IAAA,CAAA,EAE5D0f,CAAAA,CAAOxlB,IAAAA,CAAKw5C,CAAAA,GAAK,IAAA,GAAO1zC,CAAAA,GAAI,GAAA,GAAMA,CAAAA,GAAI,IAAA,GAAO0zC,CAAAA,GAAK,GAAA,GAAM1zC,CAAAA,GAAI,MAAA,CAAA,EAC5D0f,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA;IAAAA,CAAAA;IAIX+K,KAAAA,EAAO;MAQL1B,sBAAAA,EAAwB,SAAA,CAASjlC,CAAAA,EAAAA;QAAAA,IAC3B88B,CAAAA,GAA0B;UAC5BmJ,CAAAA,EAAG;YACDE,GAAAA,EAAKrK,EAAAA,CAAmBiJ,WAAAA,CAAY4B,KAAAA,CAAMP;UAAAA,CAAAA;UAE5CN,CAAAA,EAAG,CAAA;QAAA,CAAA;QAAA,OAELhJ,CAAAA,CAAwBgJ,CAAAA,CAAE9lC,CAAAA,CAAAA,GACxB87B,EAAAA,CAAmBiJ,WAAAA,CAAY4B,KAAAA,CAAMX,SAAAA,EACvClJ,CAAAA,CAAwBmJ,CAAAA,CAAEjmC,CAAAA,CAAAA,GACxB87B,EAAAA,CAAmBiJ,WAAAA,CAAY4B,KAAAA,CAAMT,WAAAA,EAChCpJ,CAAAA;MAAAA,CAAAA;MAETsI,KAAAA,EAAO,SAAA,CAAA,EAAA;QAAA,OACE,GAAA;MAAA,CAAA;MAGTY,SAAAA,EAAW,SAAA,CAASrK,CAAAA,EAAAA;QAAAA,IACdC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpBra,CAAAA,GAAS,EAAA;UACTm0B,CAAAA,GAAQ9K,EAAAA,CAAmBhoB,QAAAA,CAAS+yB,cAAAA,CAAelL,CAAAA,CAAAA;QAAAA,OACvDlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMlS,EAAAA,CAAGjsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMlS,EAAAA,CAAGt5B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMhS,EAAAA,CAAGnsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMhS,EAAAA,CAAGx5B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMtR,EAAAA,CAAG7sC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMtR,EAAAA,CAAGl6B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAM9R,EAAAA,CAAGrsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAM9R,EAAAA,CAAG15B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA,CAAAA;MAETsK,WAAAA,EAAa,SAAA,CAASvK,CAAAA,EAAAA;QAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpB8Z,CAAAA,GAAQ9K,EAAAA,CAAmBhoB,QAAAA,CAAS+yB,cAAAA,CAAelL,CAAAA,CAAAA;UACnDlpB,CAAAA,GAAS,EAAA;QAAA,OACbA,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,CAAAA,GACxC,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,CAAAA,GACzC,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACtD,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,GAAc,CAAA,CAAA,GACvD,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMlS,EAAAA,CAAGjsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMlS,EAAAA,CAAGt5B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMhS,EAAAA,CAAGnsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMhS,EAAAA,CAAGx5B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAMtR,EAAAA,CAAG7sC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAMtR,EAAAA,CAAGl6B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAKmrB,CAAAA,CAAGwuB,CAAAA,CAAM9R,EAAAA,CAAGrsC,CAAAA,CAAAA,GAAK,GAAA,GAAM2vB,CAAAA,CAAGwuB,CAAAA,CAAM9R,EAAAA,CAAG15B,CAAAA,CAAAA,GAAK,IAAA,CAAA,EACpDqX,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA,CAAAA;MAETwK,WAAAA,EAAa,SAAA,CAASzK,CAAAA,EAAAA;QAAAA,IAChBC,CAAAA,GAAOF,CAAAA,CAAkBC,CAAAA,CAAAA;QAC7BC,CAAAA,CAAK9O,KAAAA,GAAQ6O,CAAAA,CAAW7O,KAAAA;QAAAA,IACpBra,CAAAA,GAAS,EAAA;QAAA,OACbA,CAAAA,CAAOxlB,IAAAA,CAAK,YAAA,CAAA,EACZwlB,CAAAA,CAAOxlB,IAAAA,CACL,MAAA,GACEmrB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA,CAAAA,GACxC,GAAA,GACAvjB,CAAAA,CAAG0jB,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA,CAAAA,GACzC,KAAA,CAAA,EAEJlpB,CAAAA,CAAOxlB,IAAAA,CAAK,GAAA,CAAA,EACZ2uC,CAAAA,CAAKnpB,MAAAA,GAASA,CAAAA,CAAOlE,IAAAA,CAAK,IAAA,CAAA,EACnBqtB,CAAAA;MAAAA;IAAAA;EAAAA,CAAAA;EAUb+E,6BAAAA,EAA+B,SAAA,CAAShF,CAAAA,EAAAA;IAAAA,IAGlChW,CAAAA,GAAUgW,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAASkX,OAAAA,CACtC2Q,CAAAA,CAAWpT,QAAAA,EACXoT,CAAAA,CAAWnkB,SAAAA,CAAAA,CACXvxB,EAAAA;MACEogD,CAAAA,GAAe1K,CAAAA,CAAW7O,KAAAA,CAAM/Y,WAAAA,CAAY8O,iBAAAA,CAC9C8Y,CAAAA,CAAWnZ,KAAAA,CAAAA;IAAAA,OAGA,GAAA,GAAMmD,CAAAA,GAAU,GAAA,GADdgW,CAAAA,CAAW/f,QAAAA,GACoB,MAAA,GAASyqB,CAAAA;EAAAA;AAAAA,CAAAA;AAK3DvK,EAAAA,CAAmBhoB,QAAAA,GAAW;EAC5ByyB,QAAAA,EAAU,aAAA;EAEVM,cAAAA,EAAgB,SAAA,CAASlL,CAAAA,EAAAA;IAAAA,IACnB7V,CAAAA,GAAQgW,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,CAASsK,CAAAA,CAAAA;MAC7C5V,CAAAA,GAAS+V,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,CAAUoB,CAAAA,CAAAA;MAC/C7xC,CAAAA,GAAIoB,IAAAA,CAAKkH,GAAAA,CAAI0zB,CAAAA,EAAOC,CAAAA,CAAAA;IAAAA,OAEZ;MACV2O,EAAAA,EAAI;QAEFjsC,CAAAA,EAAAA,CAAIq9B,CAAAA,GAAQh8B,CAAAA,IAAK,CAAA;QACjBsR,CAAAA,EAAAA,CAAI2qB,CAAAA,GAASj8B,CAAAA,IAAK,CAAA,GAAIA;MAAAA,CAAAA;MAExB8qC,EAAAA,EAAI;QAEFnsC,CAAAA,EAAAA,CAAIq9B,CAAAA,GAAQh8B,CAAAA,IAAK,CAAA,GAAIA,CAAAA;QACrBsR,CAAAA,EAAAA,CAAI2qB,CAAAA,GAASj8B,CAAAA,IAAK;MAAA,CAAA;MAEpBgrC,EAAAA,EAAI;QAEFrsC,CAAAA,EAAAA,CAAIq9B,CAAAA,GAAQh8B,CAAAA,IAAK,CAAA;QACjBsR,CAAAA,EAAAA,CAAI2qB,CAAAA,GAASj8B,CAAAA,IAAK;MAAA,CAAA;MAEpBwrC,EAAAA,EAAI;QAEF7sC,CAAAA,EAAAA,CAAIq9B,CAAAA,GAAQh8B,CAAAA,IAAK,CAAA,GAAIA,CAAAA;QACrBsR,CAAAA,EAAAA,CAAI2qB,CAAAA,GAASj8B,CAAAA,IAAK,CAAA,GAAIA;MAAAA;IAAAA,CAAAA;EAAAA;AAAAA,CAAAA,EAO9BgyC,EAAAA,CAAmBhoB,QAAAA,CAASud,QAAAA,GAAW,UAASsK,CAAAA,EAAAA;EAAAA,IAC1Cx4B,CAAAA,GAAS,CAAA;EAAA,OACa,QAAA,KAAtB9d,IAAAA,eAAAA,EAAOs2C,CAAAA,CAAAA,KACTx4B,CAAAA,GAASmV,CAAAA,CAAMqjB,CAAAA,CAAW8E,IAAAA,CAAK,CAAA,CAAA,CAAA,CAAA,EAE1Bt9B,CAAAA;AAAAA,CAAAA,EAET24B,EAAAA,CAAmBhoB,QAAAA,CAASymB,SAAAA,GAAY,UAASoB,CAAAA,EAAAA;EAAAA,IAC3Cx4B,CAAAA,GAAS,CAAA;EAAA,OACa,QAAA,KAAtB9d,IAAAA,eAAAA,EAAOs2C,CAAAA,CAAAA,KACTx4B,CAAAA,GAASmV,CAAAA,CAAMqjB,CAAAA,CAAW8E,IAAAA,CAAK,CAAA,CAAA,CAAA,CAAA,EAE1Bt9B,CAAAA;AAAAA,CAAAA;AAcT,IAAIoiC,EAAAA,GAAYrK,CAAAA,CAASqK,QAAAA,GAAW,UAAS/F,CAAAA,EAAAA;EAAAA,IAC3CC,EAAAA,CAAmB9/B,IAAAA,EAAM6/B,CAAAA,CAAAA,EAAAA,EAErBA,CAAAA,YAAuBG,EAAAA,CAAAA,EAAAA,MAGnB,IAAItiC,KAAAA,CAAM,4CAAA,CAAA;EAvlFN,IAASs+B,CAAAA;EAAAA,OAAAA,CAAAA,CAAAA,GAqlFX6D,CAAAA,EAplFK1S,KAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeX,UAAAA,KAC3CpD,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeX,UAAAA,GAAAA,CAAa,CAAA,EACtDpD,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,GAAyB,IAAA,CAAA,EAEpEnD,CAAAA,CAAW7O,KAAAA,CAAMhZ,QAAAA,CAAS4rB,cAAAA,CAAeZ,sBAAAA,CAAuBmB,MAAAA,CAAOhzC,IAAAA,CACrE0uC,CAAAA,CAAAA,EAmlFF6D,CAAAA,CAAYjhB,IAAAA,GAAOihB,CAAAA,CAAY1S,KAAAA,CAAMhZ,QAAAA,CAAS6Z,kBAAAA,CAAAA,CAAAA,CAAqBxJ,UAAAA,EAC5DxkB,IAAAA;AAAAA,CAAAA;AAGTu7B,CAAAA,CAASiI,mBAAAA,GAAsBA,EAAAA,EAC/BjI,CAAAA,CAAS6I,eAAAA,GAAkBA,EAAAA,EAC3B7I,CAAAA,CAAS8I,gBAAAA,GAAmBA,EAAAA,EAC5B9I,CAAAA,CAAS+I,eAAAA,GAAkBA,EAAAA,EAC3B/I,CAAAA,CAAS4H,cAAAA,GAAiBA,EAAAA,EAC1B5H,CAAAA,CAASoJ,kBAAAA,GAAqBA,EAAAA,EAC9BpJ,CAAAA,CAASsJ,mBAAAA,GAAsBA,EAAAA,EAC/BtJ,CAAAA,CAASsK,gBAAAA,GAAmBA,EAAAA,EAC5BtK,CAAAA,CAAS0H,iBAAAA,GAAoBA,EAAAA,EAC7B1H,CAAAA,CAAS0K,qBAAAA,GAAwBA,EAAAA,EACjC1K,CAAAA,CAASY,kBAAAA,GAAqBA,EAAAA,EAE9BZ,CAAAA,CAAS4L,QAAAA,GAAW;EAClBC,WAAAA,EAAa5D,EAAAA;EACb6D,OAAAA,EAASjD,EAAAA;EACTkD,QAAAA,EAAUjD,EAAAA;EACVkD,OAAAA,EAASjD,EAAAA;EACTkD,MAAAA,EAAQrE,EAAAA;EACRsE,UAAAA,EAAY9C,EAAAA;EACZS,WAAAA,EAAaP,EAAAA;EACbiB,QAAAA,EAAUD,EAAAA;EACV6B,SAAAA,EAAWzE,EAAAA;EACX0E,aAAAA,EAAe1B,EAAAA;EACf2B,UAAAA,EAAYzL;AAAAA,CAAAA,EAGdnpB,CAAAA,CAAMm0B,QAAAA,GAAW;EACfC,WAAAA,EAAa5D,EAAAA;EACb6D,OAAAA,EAASjD,EAAAA;EACTkD,QAAAA,EAAUjD,EAAAA;EACVkD,OAAAA,EAASjD,EAAAA;EACTkD,MAAAA,EAAQrE,EAAAA;EACRsE,UAAAA,EAAY9C,EAAAA;EACZS,WAAAA,EAAaP,EAAAA;EACbiB,QAAAA,EAAUD,EAAAA;EACV6B,SAAAA,EAAWzE,EAAAA;EACX0E,aAAAA,EAAe1B,EAAAA;EACf2B,UAAAA,EAAYzL;AAAAA,CAAAA;AAAAA,IAGVgL,EAAAA,GAAAA,OAAAA,CAAAA,QAAAA,GAAWn0B,CAAAA,CAAMm0B,QAAAA;ACzlGrB,SAASU,EAAAA,CAASC,CAAAA,EAAAA;EAAAA,OACTA,CAAAA,CAAIxX,MAAAA,CAAO,UAASyX,CAAAA,EAAQ1nC,CAAAA,EAAMwmB,CAAAA,EAAAA;IAAAA,OACvCkhB,CAAAA,CAAO1nC,CAAAA,CAAAA,GAAQwmB,CAAAA,EAERkhB,CAAAA;EAAAA,CAAAA,EACN,CAAA,CAAA,CAAA;AAAA;AAAA,CCgCL,UAAUxM,CAAAA,EAAAA;EAIRA,CAAAA,CAASyM,YAAAA,GAAe,CAAA,CAAA;EAAA,IAEpBC,CAAAA,GAAU,SAAA;IAOVC,CAAAA,GAAuB;MACzBC,GAAAA,EAAK,CAAC,CAAC,GAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,CAAA,CAAA;MACzBC,IAAAA,EAAM,CACJ,CAAC,EAAA,EAAM,EAAA,EAAM,CAAA,EAAM,EAAA,CAAA,EAAA,CAClB,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,CAAA,CAAA,CAAA;MAErBC,IAAAA,EAAM,CACJ,CACE,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KACA3rB,CAAAA,EAAAA,KACAA,CAAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,CAAA,CAAA,EAAA,CAGA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KACAA,CAAAA,EAAAA,KACAA,CAAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,CAAA,EACA,CAAA,CAAA,EAAA,CAED,GAAA,EAAM,GAAA,EAAM,GAAA,EAAM,GAAA,CAAA,EAAA,CAClB,GAAA,EAAM,GAAA,EAAM,GAAA,EAAM,GAAA,CAAA,CAAA;MAErB4rB,QAAAA,EAAU,CAAC,CAAC,CAAA,EAAM,CAAA,EAAM,CAAA,EAAM,EAAA,EAAM,GAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,CAAA,CAAA;MACtDC,MAAAA,EAAQ,CAAC,CAAC,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,CAAA,CAAA;MACxCC,MAAAA,EAAQ,CAAC,CAAC,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,EAAM,EAAA,CAAA,CAAA;MACxCC,IAAAA,EAAM,CACJ,CACE,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,KACA/rB,CAAAA,EAAAA,KACAA,CAAAA,EAAAA,KACAA,CAAAA,EAAAA,KACAA,CAAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,CAAA,CAAA;MAGJgsB,GAAAA,EAAK,CACH,CAAC,EAAA,EAAM,EAAA,CAAA,EAAA,CACN,EAAA,EAAM,EAAA,CAAA,EAAA,CACN,EAAA,EAAM,EAAA,CAAA,EAAA,CACN,EAAA,EAAM,EAAA,CAAA,EAAA,CACN,EAAA,EAAM,EAAA,CAAA,EAAA,CACN,EAAA,EAAM,EAAA,CAAA;IAAA,CAAA;IAiBPC,CAAAA,GAA+BpN,CAAAA,CAASyM,YAAAA,CAAaW,2BAAAA,GAA8B,UACrFC,CAAAA,EACAC,CAAAA,EAAAA;MAAAA,IAGIzgD,CAAAA;QACAE,CAAAA;QAEAwgD,CAAAA;QACAC,CAAAA;QACAC,CAAAA;QAHAxlC,CAAAA,GAASykC,CAAAA;MAAAA,IAMQ,MAAA,MATrBY,CAAAA,GAAiBA,CAAAA,IAAkBZ,CAAAA,CAAAA,IAAAA,KAUbvrB,CAAAA,KAAnBksB,CAAAA,CAAUvhD,IAAAA,IACTuhD,CAAAA,CAAUvhD,IAAAA,YAAgB4hD,iBAAAA,IAC1B,QAAA,IAAYL,CAAAA,IACZ,OAAA,IAAWA,CAAAA,EAAAA,OAEN,MAAA;MAAA,IAGLM,CAAAA,CAAkBN,CAAAA,CAAAA,EAAAA,KACfI,CAAAA,IAAYd,CAAAA,EAAAA,KACfY,CAAAA,GAAiBZ,CAAAA,CAAqBc,CAAAA,CAAAA,EACjC5gD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI0gD,CAAAA,CAAe3/C,MAAAA,EAAQf,CAAAA,IAAK,CAAA,EAAG;QAAA,KAC7C2gD,CAAAA,GAAAA,CAAgB,CAAA,EACXzgD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIwgD,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGe,MAAAA,EAAQb,CAAAA,IAAK,CAAA,EAAA,IAAA,KAChBo0B,CAAAA,KAAzBosB,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGE,CAAAA,CAAAA,IAGlBwgD,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGE,CAAAA,CAAAA,KAAOsgD,CAAAA,CAAUtgD,CAAAA,CAAAA,EAAI;UACzCygD,CAAAA,GAAAA,CAAgB,CAAA;UAAA;QAAA;QAAA,IAAA,CAIE,CAAA,KAAlBA,CAAAA,EAAwB;UAC1BvlC,CAAAA,GAASwlC,CAAAA;UAAAA;QAAAA;MAAAA,CAAAA,MAAAA,KAMVA,CAAAA,IAAYd,CAAAA,EAAAA,KACfY,CAAAA,GAAiBZ,CAAAA,CAAqBc,CAAAA,CAAAA,EACjC5gD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI0gD,CAAAA,CAAe3/C,MAAAA,EAAQf,CAAAA,IAAK,CAAA,EAAG;QAAA,KAC7C2gD,CAAAA,GAAAA,CAAgB,CAAA,EACXzgD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIwgD,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGe,MAAAA,EAAQb,CAAAA,IAAK,CAAA,EAAA,IAAA,KAChBo0B,CAAAA,KAAzBosB,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGE,CAAAA,CAAAA,IAGlBwgD,CAAAA,CAAe1gD,CAAAA,CAAAA,CAAGE,CAAAA,CAAAA,KAAOsgD,CAAAA,CAAUzxC,UAAAA,CAAW7O,CAAAA,CAAAA,EAAI;UACpDygD,CAAAA,GAAAA,CAAgB,CAAA;UAAA;QAAA;QAAA,IAAA,CAIE,CAAA,KAAlBA,CAAAA,EAAwB;UAC1BvlC,CAAAA,GAASwlC,CAAAA;UAAAA;QAAAA;MAAAA;MAAAA,OAObxlC,CAAAA,KAAWykC,CAAAA,IAAWY,CAAAA,KAAmBZ,CAAAA,KAC3CzkC,CAAAA,GAASqlC,CAAAA,CAAAA,EAEJrlC,CAAAA;IAAAA,CAAAA;IAIL2lC,CAAAA,GAAW,SAAXA,CAAAA,CAAoBC,CAAAA,EAAAA;MAAAA,KAAAA,IAClBt6C,CAAAA,GAAMkR,IAAAA,CAAKmU,QAAAA,CAASuH,KAAAA,EACpBgI,CAAAA,GAAY1jB,IAAAA,CAAKmU,QAAAA,CAASuP,SAAAA,EAG1Boe,CAAAA,GAAAA,CAASre,CAAAA,EAFIzjB,IAAAA,CAAKmU,QAAAA,CAASsP,UAAAA,EAAAA,CAAAA,EAAAA,CAGW,CAAA,KAAnCqe,CAAAA,CAAO3tC,OAAAA,CAAQ,aAAA,CAAA,GACpB2tC,CAAAA,CAAO5W,MAAAA,CAAO4W,CAAAA,CAAO3tC,OAAAA,CAAQ,aAAA,CAAA,EAAgB,CAAA,CAAA;MAG/Ci1C,CAAAA,CAAMtlB,QAAAA,GAAW9jB,IAAAA,CAAKmU,QAAAA,CAASkO,SAAAA,CAAAA,CAAAA;MAAAA,IAE3B6B,CAAAA,GAAsB,EAAA;MAAA,IAC1BA,CAAAA,CAAoB52B,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,MAAA;QAAQuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAC/C0P,CAAAA,CAAoB52B,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,SAAA;QAAWuF,KAAAA,EAAO;MAAA,CAAA,CAAA,EAClD0P,CAAAA,CAAoB52B,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,OAAA;QAASuF,KAAAA,EAAO40B,CAAAA,CAAMjjB;MAAAA,CAAAA,CAAAA,EACtDjC,CAAAA,CAAoB52B,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,QAAA;QAAUuF,KAAAA,EAAO40B,CAAAA,CAAMhjB;MAAAA,CAAAA,CAAAA,EAEnDgjB,CAAAA,CAAMC,UAAAA,KAAeC,CAAAA,CAAaC,OAAAA,GACpCrlB,CAAAA,CAAoB52B,IAAAA,CAAK;QACvB2hB,GAAAA,EAAK,YAAA;QACLuF,KAAAA,EACE,uBAAA,IAEC40B,CAAAA,CAAMI,OAAAA,CAAQrgD,MAAAA,GAAS,CAAA,GAAI,CAAA,CAAA,GAC5B,GAAA,IACC,OAAA,IAAWigD,CAAAA,IAAAA,KAAgC,CAAA,KAAhBA,CAAAA,CAAMK,KAAAA,GAC9BL,CAAAA,CAAMtlB,QAAAA,GAAW,CAAA,GACjBslB,CAAAA,CAAMtlB,QAAAA,GAAW,CAAA,CAAA,GACrB;MAAA,CAAA,CAAA,IAGJI,CAAAA,CAAoB52B,IAAAA,CAAK;QACvB2hB,GAAAA,EAAK,YAAA;QACLuF,KAAAA,EAAO,GAAA,GAAM40B,CAAAA,CAAMC;MAAAA,CAAAA,CAAAA,EAEjBD,CAAAA,CAAMC,UAAAA,KAAeC,CAAAA,CAAaI,WAAAA,IACpCxlB,CAAAA,CAAoB52B,IAAAA,CAAK;QAAE2hB,GAAAA,EAAK,QAAA;QAAUuF,KAAAA,EAAO;MAAA,CAAA,CAAA,CAAA,EAGrD0P,CAAAA,CAAoB52B,IAAAA,CAAK;QACvB2hB,GAAAA,EAAK,kBAAA;QACLuF,KAAAA,EAAO40B,CAAAA,CAAMO;MAAAA,CAAAA,CAAAA,EAGb,kBAAA,IAAsBP,CAAAA,IAAAA,KACY,CAAA,KAA3BA,CAAAA,CAAMQ,gBAAAA,IAEb1lB,CAAAA,CAAoB52B,IAAAA,CAAK;QACvB2hB,GAAAA,EAAK,aAAA;QACLuF,KAAAA,EAAO,IAAA,GAAO40B,CAAAA,CAAMQ,gBAAAA,GAAmB;MAAA,CAAA,CAAA,EAGvC,cAAA,IAAkBR,CAAAA,IAASrvC,KAAAA,CAAMC,OAAAA,CAAQovC,CAAAA,CAAMS,YAAAA,CAAAA,EAAe;QAAA,KAAA,IAC5DA,CAAAA,GAAe,EAAA,EACjBzhD,CAAAA,GAAI,CAAA,EACJyI,CAAAA,GAAMu4C,CAAAA,CAAMS,YAAAA,CAAa1gD,MAAAA,EACpBf,CAAAA,GAAIyI,CAAAA,EAAKzI,CAAAA,EAAAA,EACdyhD,CAAAA,IACET,CAAAA,CAAMS,YAAAA,CAAazhD,CAAAA,CAAAA,GAAK,GAAA,GAAMghD,CAAAA,CAAMS,YAAAA,CAAazhD,CAAAA,CAAAA,GAAK,GAAA;QAE1D87B,CAAAA,CAAoB52B,IAAAA,CAAK;UACvB2hB,GAAAA,EAAK,MAAA;UACLuF,KAAAA,EAAO,GAAA,GAAMq1B,CAAAA,GAAe;QAAA,CAAA,CAAA;MAAA;MAAA,KAGL,CAAA,KAAhBT,CAAAA,CAAMK,KAAAA,IACfvlB,CAAAA,CAAoB52B,IAAAA,CAAK;QACvB2hB,GAAAA,EAAK,OAAA;QACLuF,KAAAA,EAAO40B,CAAAA,CAAMtlB,QAAAA,GAAW,CAAA,GAAI;MAAA,CAAA,CAAA;MAAA,IAI5BH,CAAAA,GAAAA,KACsB,CAAA,KAAjBylB,CAAAA,CAAMtH,MAAAA,GAAyB,CAAC,GAAA,GAAMsH,CAAAA,CAAMtH,MAAAA,CAAAA,GAAAA,KAAUplB,CAAAA;MAAAA,IAE/DgH,CAAAA,CAAU;QACRr8B,IAAAA,EAAM+hD,CAAAA,CAAM/hD,IAAAA;QACZ68B,mBAAAA,EAAqBA,CAAAA;QACrBP,qBAAAA,EAAuBA,CAAAA;QACvBG,QAAAA,EAAUslB,CAAAA,CAAMtlB;MAAAA,CAAAA,CAAAA,EAGlBh1B,CAAAA,CAAI,QAAA,CAAA,EAGA,OAAA,IAAWs6C,CAAAA,IAAAA,KAAgC,CAAA,KAAhBA,CAAAA,CAAMK,KAAAA,EAAuB;QAAA,IACtDG,CAAAA,GACF,aAAA,GACAR,CAAAA,CAAMU,SAAAA,GACN,+BAAA,GACAV,CAAAA,CAAMO,gBAAAA,GACN,YAAA,GACAP,CAAAA,CAAMjjB,KAAAA;UACJsjB,CAAAA,GAAQ;YACVtjB,KAAAA,EAAOijB,CAAAA,CAAMjjB,KAAAA;YACbC,MAAAA,EAAQgjB,CAAAA,CAAMhjB,MAAAA;YACdijB,UAAAA,EAAY,YAAA;YACZM,gBAAAA,EAAkBP,CAAAA,CAAMO,gBAAAA;YACxBC,gBAAAA,EAAkBA,CAAAA;YAClBviD,IAAAA,EAAM+hD,CAAAA,CAAMK;UAAAA,CAAAA;QAEV,QAAA,IAAYL,CAAAA,KACdK,CAAAA,CAAM3H,MAAAA,GAASsH,CAAAA,CAAMtH,MAAAA,CAAAA,EAEvBqH,CAAAA,CAASvyC,IAAAA,CAAKoJ,IAAAA,EAAMypC,CAAAA,CAAAA;MAAAA;MAAAA,IAIlBL,CAAAA,CAAMC,UAAAA,KAAeC,CAAAA,CAAaC,OAAAA,EAAS;QAAA,IACzC5mB,CAAAA,GAAQ3iB,IAAAA,CAAKmU,QAAAA,CAASkO,SAAAA,CAAAA,CAAAA;QAG1BqB,CAAAA,CAAU;UACRr8B,IAAAA,EAAM0iD,CAAAA,CAA0B,IAAIviD,UAAAA,CAAW4hD,CAAAA,CAAMI,OAAAA,CAAAA,CAAAA;UACrD1lB,QAAAA,EAAUnB;QAAAA,CAAAA,CAAAA,EAEZ7zB,CAAAA,CAAI,QAAA,CAAA;MAAA;IAAA,CAAA;IAGJk7C,CAAAA,GAAuB,SAAA,CAAA,EAAA;MAAA,IACrBC,CAAAA,GAASjqC,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA;MAAA,KACR,IAAItyC,CAAAA,IAAK6hD,CAAAA,EACZd,CAAAA,CAASvyC,IAAAA,CAAKoJ,IAAAA,EAAMiqC,CAAAA,CAAO7hD,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAG3B8hD,CAAAA,GAA0B,SAAA,CAAA,EAAA;MAAA,IAG1Bd,CAAAA;QAFEa,CAAAA,GAASjqC,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA;QACX5rC,CAAAA,GAAMkR,IAAAA,CAAKmU,QAAAA,CAASuH,KAAAA;MAAAA,KAEjB,IAAItzB,CAAAA,IAAK6hD,CAAAA,EAEZn7C,CAAAA,CAAI,IAAA,GAAA,CADJs6C,CAAAA,GAAQa,CAAAA,CAAO7hD,CAAAA,CAAAA,EACEy+B,KAAAA,EAAOuiB,CAAAA,CAAMtlB,QAAAA,EAAU,GAAA,EAAK,GAAA,CAAA;IAAA,CAAA;IAS7CqmB,CAAAA,GAAa,SAAA,CAAA,EAAA;MACVnqC,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA,KAAA,IAAA,CACEvmB,QAAAA,CAASumB,WAAAA,CAAd,eAAA,GAAkD,CAAA,CAAA,EAAA,IAAA,CAC7CvmB,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CAAU,cAAA,EAAgB+4B,CAAAA,CAAAA,EAAAA,IAAAA,CAC1C71B,QAAAA,CAAS2K,MAAAA,CAAO7N,SAAAA,CAAU,gBAAA,EAAkBi5B,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAIjDE,CAAAA,GAAY,SAAA,CAAA,EAAA;MAAA,IACVH,CAAAA,GAASjqC,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA;MAAA,OACbyP,CAAAA,CAAWvzC,IAAAA,CAAKoJ,IAAAA,CAAAA,EACTiqC,CAAAA;IAAAA,CAAAA;IAELI,CAAAA,GAAgB,SAAA,CAAA,EAAA;MAAA,OACXnuC,MAAAA,CAAOC,IAAAA,CAAK6D,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA,CAAA,CAAiDvxC,MAAAA;IAAAA,CAAAA;IAelEmhD,CAAAA,GAAuB,SAAA,CAASxjD,CAAAA,EAAAA;MAAAA,OACyB,UAAA,IAAA,OAA7Cy0C,CAAAA,CAAS,SAAA,GAAYz0C,CAAAA,CAAKoyB,WAAAA,CAAAA,CAAAA,CAAAA;IAAAA,CAAAA;IAGtCqxB,CAAAA,GAAe,SAAA,CAAShL,CAAAA,EAAAA;MAAAA,OACD,QAAA,KAAlB75C,IAAAA,eAAAA,EAAO65C,CAAAA,CAAAA,IAA2C,CAAA,KAApBA,CAAAA,CAAOiL,QAAAA;IAAAA,CAAAA;IAG1CC,CAAAA,GAA0B,SAAA,CAASC,CAAAA,EAASr3B,CAAAA,EAAAA;MAAAA,IAErB,KAAA,KAArBq3B,CAAAA,CAAQC,QAAAA,IAAsBD,CAAAA,CAAQE,YAAAA,CAAa,KAAA,CAAA,EAAQ;QAAA,IACzDC,CAAAA,GAAM,EAAA,GAAKH,CAAAA,CAAQI,YAAAA,CAAa,KAAA,CAAA;QAAA,IAGD,CAAA,KAA/BD,CAAAA,CAAI12C,OAAAA,CAAQ,aAAA,CAAA,EAAA,OACPqN,CAAAA,CACLgrB,QAAAA,CAASqe,CAAAA,CAAAA,CACNv2C,KAAAA,CAAM,SAAA,CAAA,CACN6tB,GAAAA,CAAAA,CAAAA,CAAAA;QAAAA,IAKH4oB,CAAAA,GAAexP,CAAAA,CAASyP,QAAAA,CAASH,CAAAA,EAAAA,CAAK,CAAA,CAAA;QAAA,IAAA,KACrBnuB,CAAAA,KAAjBquB,CAAAA,EAAAA,OACKA,CAAAA;MAAAA;MAAAA,IAIc,QAAA,KAArBL,CAAAA,CAAQC,QAAAA,EAAuB;QAAA,IACX,CAAA,KAAlBD,CAAAA,CAAQvkB,KAAAA,IAAkC,CAAA,KAAnBukB,CAAAA,CAAQtkB,MAAAA,EAAAA,MAC3B,IAAI1oB,KAAAA,CACR,6CAAA,GACEgtC,CAAAA,CAAQvkB,KAAAA,GACR,YAAA,GACAukB,CAAAA,CAAQtkB,MAAAA,CAAAA;QAAAA,IAGV6kB,CAAAA;QAAAA,QACI53B,CAAAA;UAAAA,KACD,KAAA;YACH43B,CAAAA,GAAW,WAAA;YAAA;UAAA,KAER,MAAA;YACHA,CAAAA,GAAW,YAAA;YAAA;UAAA,KAER,MAAA;UAAA,KACA,KAAA;UAAA;YAEHA,CAAAA,GAAW,YAAA;QAAA;QAAA,OAGRzpC,CAAAA,CACLkpC,CAAAA,CACGQ,SAAAA,CAAUD,CAAAA,EAAU,CAAA,CAAA,CACpB32C,KAAAA,CAAM,SAAA,CAAA,CACN6tB,GAAAA,CAAAA,CAAAA,CAAAA;MAAAA;IAAAA,CAAAA;IAKLgpB,CAAAA,GAAsB,SAAA,CAASC,CAAAA,EAAAA;MAAAA,IAC7BnB,CAAAA,GAASjqC,IAAAA,CAAKmU,QAAAA,CAASumB,WAAAA,CAAd,eAAA;MAAA,IACTuP,CAAAA,EAAAA,KACG,IAAI/iD,CAAAA,IAAK+iD,CAAAA,EAAAA,IACRmB,CAAAA,KAAUnB,CAAAA,CAAO/iD,CAAAA,CAAAA,CAAGkkD,KAAAA,EAAAA,OACfnB,CAAAA,CAAO/iD,CAAAA,CAAAA;IAAAA,CAAAA;IAMlBmkD,CAAAA,GAA0B,SAAA,CAASllB,CAAAA,EAAOC,CAAAA,EAAQgjB,CAAAA,EAAAA;MAAAA,OAC/CjjB,CAAAA,IAAUC,CAAAA,KACbD,CAAAA,GAAAA,CAAS,EAAA,EACTC,CAAAA,GAAAA,CAAU,EAAA,CAAA,EAERD,CAAAA,GAAQ,CAAA,KACVA,CAAAA,GAAAA,CAAU,CAAA,GAAIijB,CAAAA,CAAMjjB,KAAAA,GAAQ,EAAA,GAAMA,CAAAA,GAAQnmB,IAAAA,CAAKmU,QAAAA,CAASmD,WAAAA,CAAAA,EAEtD8O,CAAAA,GAAS,CAAA,KACXA,CAAAA,GAAAA,CAAW,CAAA,GAAIgjB,CAAAA,CAAMhjB,MAAAA,GAAS,EAAA,GAAMA,CAAAA,GAASpmB,IAAAA,CAAKmU,QAAAA,CAASmD,WAAAA,CAAAA,EAE/C,CAAA,KAAV6O,CAAAA,KACFA,CAAAA,GAASC,CAAAA,GAASgjB,CAAAA,CAAMjjB,KAAAA,GAASijB,CAAAA,CAAMhjB,MAAAA,CAAAA,EAE1B,CAAA,KAAXA,CAAAA,KACFA,CAAAA,GAAUD,CAAAA,GAAQijB,CAAAA,CAAMhjB,MAAAA,GAAUgjB,CAAAA,CAAMjjB,KAAAA,CAAAA,EAGnC,CAACA,CAAAA,EAAOC,CAAAA,CAAAA;IAAAA,CAAAA;IAGbklB,CAAAA,GAAkB,SAAA,CAASxiD,CAAAA,EAAG2S,CAAAA,EAAG0qB,CAAAA,EAAOC,CAAAA,EAAQgjB,CAAAA,EAAOmC,CAAAA,EAAAA;MAAAA,IACrDC,CAAAA,GAAOH,CAAAA,CAAwBz0C,IAAAA,CAAKoJ,IAAAA,EAAMmmB,CAAAA,EAAOC,CAAAA,EAAQgjB,CAAAA,CAAAA;QAC3DqC,CAAAA,GAAQzrC,IAAAA,CAAKmU,QAAAA,CAASsmB,mBAAAA;QACtBiR,CAAAA,GAAS1rC,IAAAA,CAAKmU,QAAAA,CAASmjB,2BAAAA;QAErB2S,CAAAA,GAASG,CAAAA,CAAUxzC,IAAAA,CAAKoJ,IAAAA,CAAAA;MAAAA,IAE5BmmB,CAAAA,GAAQqlB,CAAAA,CAAK,CAAA,CAAA,EACbplB,CAAAA,GAASolB,CAAAA,CAAK,CAAA,CAAA,EACdvB,CAAAA,CAAOb,CAAAA,CAAMviB,KAAAA,CAAAA,GAASuiB,CAAAA,EAElBmC,CAAAA,EAAU;QACZA,CAAAA,IAAYhgD,IAAAA,CAAKmlC,EAAAA,GAAK,GAAA;QAAA,IAClBrqC,CAAAA,GAAIkF,IAAAA,CAAKqlC,GAAAA,CAAI2a,CAAAA,CAAAA;UACbriD,CAAAA,GAAIqC,IAAAA,CAAKslC,GAAAA,CAAI0a,CAAAA,CAAAA;UAEbI,CAAAA,GAAK,SAAA,CAAStzB,CAAAA,EAAAA;YAAAA,OACTA,CAAAA,CAAOG,OAAAA,CAAQ,CAAA,CAAA;UAAA,CAAA;UAEpBozB,CAAAA,GAA+B,CACjCD,CAAAA,CAAGtlD,CAAAA,CAAAA,EACHslD,CAAAA,CAAGziD,CAAAA,CAAAA,EACHyiD,CAAAA,CAAAA,CAAQ,CAAA,GAALziD,CAAAA,CAAAA,EACHyiD,CAAAA,CAAGtlD,CAAAA,CAAAA,EACH,CAAA,EACA,CAAA,EACA,IAAA,CAAA;MAAA;MAAA,IAAA,CAGC8tB,QAAAA,CAASuH,KAAAA,CAAM,GAAA,CAAA,EAChB6vB,CAAAA,IAAAA,IAAAA,CACGp3B,QAAAA,CAASuH,KAAAA,CACZ,CAAC,CAAA,EAAG,GAAA,EAAK,GAAA,EAAK,CAAA,EAAG+vB,CAAAA,CAAM3iD,CAAAA,CAAAA,EAAI4iD,CAAAA,CAAOjwC,CAAAA,GAAI2qB,CAAAA,CAAAA,EAAS,IAAA,CAAA,CAAMxX,IAAAA,CAAK,GAAA,CAAA,CAAA,EAAA,IAAA,CAEvDuF,QAAAA,CAASuH,KAAAA,CAAMkwB,CAAAA,CAA6Bh9B,IAAAA,CAAK,GAAA,CAAA,CAAA,EAAA,IAAA,CACjDuF,QAAAA,CAASuH,KAAAA,CACZ,CAAC+vB,CAAAA,CAAMtlB,CAAAA,CAAAA,EAAQ,GAAA,EAAK,GAAA,EAAKslB,CAAAA,CAAMrlB,CAAAA,CAAAA,EAAS,GAAA,EAAK,GAAA,EAAK,IAAA,CAAA,CAAMxX,IAAAA,CAAK,GAAA,CAAA,CAAA,IAAA,IAAA,CAG1DuF,QAAAA,CAASuH,KAAAA,CACZ,CACE+vB,CAAAA,CAAMtlB,CAAAA,CAAAA,EACN,GAAA,EACA,GAAA,EACAslB,CAAAA,CAAMrlB,CAAAA,CAAAA,EACNqlB,CAAAA,CAAM3iD,CAAAA,CAAAA,EACN4iD,CAAAA,CAAOjwC,CAAAA,GAAI2qB,CAAAA,CAAAA,EACX,IAAA,CAAA,CACAxX,IAAAA,CAAK,GAAA,CAAA,CAAA,EAIP5O,IAAAA,CAAKgY,aAAAA,CAAAA,CAAAA,IAAAA,IAAAA,CAEF7D,QAAAA,CAASuH,KAAAA,CAAM,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,IAAA,CAAA,CAAM9M,IAAAA,CAAK,GAAA,CAAA,CAAA,EAAA,IAAA,CAGhDuF,QAAAA,CAASuH,KAAAA,CAAM,IAAA,GAAO0tB,CAAAA,CAAMviB,KAAAA,GAAQ,KAAA,CAAA,EAAA,IAAA,CACpC1S,QAAAA,CAASuH,KAAAA,CAAM,GAAA,CAAA;IAAA,CAAA;IAMlB4tB,CAAAA,GAAgB/N,CAAAA,CAAS+N,YAAAA,GAAe;MAC1CuC,UAAAA,EAAY,WAAA;MACZC,WAAAA,EAAa,YAAA;MACbpC,WAAAA,EAAa,YAAA;MACbqC,QAAAA,EAAU,SAAA;MACVC,OAAAA,EAAS,QAAA;MACTC,GAAAA,EAAK,KAAA;MACLC,SAAAA,EAAW,UAAA;MACX3C,OAAAA,EAAS,SAAA;MACT4C,OAAAA,EAAS,SAAA;MACTC,UAAAA,EAAY,YAAA;MACZC,QAAAA,EAAU;IAAA,CAAA;EAMZ9Q,CAAAA,CAAS7gC,MAAAA,GAAS;IAChB4xC,UAAAA,EAAY,WAAA;IACZC,YAAAA,EAAc,aAAA;IACdC,UAAAA,EAAY,WAAA;IACZC,UAAAA,EAAY,WAAA;IACZC,YAAAA,EAAc,aAAA;IACdC,cAAAA,EAAgB,eAAA;IAChBC,gBAAAA,EAAkB,gBAAA;IAClBC,iBAAAA,EAAmB,iBAAA;IACnBC,gBAAAA,EAAkB;EAAA,CAAA;EAAA,IAMhBC,CAAAA,GAAqBxR,CAAAA,CAASwR,iBAAAA,GAAoB;MACpDC,IAAAA,EAAM,MAAA;MACNC,IAAAA,EAAM,MAAA;MACNC,MAAAA,EAAQ,QAAA;MACRC,IAAAA,EAAM;IAAA,CAAA;IASJC,CAAAA,GAAa7R,CAAAA,CAASyM,YAAAA,CAAaoF,SAAAA,GAAY,UAAS/lD,CAAAA,EAAAA;MAAAA,IAExDe,CAAAA;QACAyI,CAAAA;QAFEw8C,CAAAA,GAAO,CAAA;MAAA,IAIS,QAAA,IAAA,OAAThmD,CAAAA,EAAAA,KACTwJ,CAAAA,GAAMxJ,CAAAA,CAAK8B,MAAAA,EACNf,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyI,CAAAA,EAAKzI,CAAAA,EAAAA,EACnBilD,CAAAA,GAAAA,CAAQA,CAAAA,IAAQ,CAAA,IAAKA,CAAAA,GAAOhmD,CAAAA,CAAK8P,UAAAA,CAAW/O,CAAAA,CAAAA,EAC5CilD,CAAAA,IAAQ,CAAA,CAAA,KAEL,IAAInE,CAAAA,CAAkB7hD,CAAAA,CAAAA,EAAAA,KAC3BwJ,CAAAA,GAAMxJ,CAAAA,CAAKimD,UAAAA,GAAa,CAAA,EACnBllD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyI,CAAAA,EAAKzI,CAAAA,EAAAA,EACnBilD,CAAAA,GAAAA,CAAQA,CAAAA,IAAQ,CAAA,IAAKA,CAAAA,GAAOhmD,CAAAA,CAAKe,CAAAA,CAAAA,EACjCilD,CAAAA,IAAQ,CAAA;MAAA,OAGLA,CAAAA;IAAAA,CAAAA;IAaLE,CAAAA,GAA0BhS,CAAAA,CAASyM,YAAAA,CAAauF,sBAAAA,GAAyB,UAC3EC,CAAAA,EAAAA;MAAAA,CAEAA,CAAAA,GAAuBA,CAAAA,IAAwB,EAAA,EAC1Bv5C,QAAAA,CAAAA,CAAAA,CAAWgzB,IAAAA,CAAAA,CAAAA;MAAAA,IAE5BzjB,CAAAA,GAAAA,CAAS,CAAA;MAAA,OAEuB,CAAA,KAAhCgqC,CAAAA,CAAqBrkD,MAAAA,KACvBqa,CAAAA,GAAAA,CAAS,CAAA,CAAA,EAGPgqC,CAAAA,CAAqBrkD,MAAAA,GAAS,CAAA,IAAM,CAAA,KACtCqa,CAAAA,GAAAA,CAAS,CAAA,CAAA,EAAA,CAMH,CAAA,KAFN,kBAAA,CAAmBf,IAAAA,CACjB+qC,CAAAA,CAAqBzpC,MAAAA,CAAO,CAAA,EAAGypC,CAAAA,CAAqBrkD,MAAAA,GAAS,CAAA,CAAA,CAAA,KAG/Dqa,CAAAA,GAAAA,CAAS,CAAA,CAAA,EAAA,CAMH,CAAA,KAFN,+CAAA,CAAgDf,IAAAA,CAC9C+qC,CAAAA,CAAqBzpC,MAAAA,CAAAA,CAAQ,CAAA,CAAA,CAAA,KAG/BP,CAAAA,GAAAA,CAAS,CAAA,CAAA,EAEJA,CAAAA;IAAAA,CAAAA;IAeLiqC,CAAAA,GAA2BlS,CAAAA,CAASyM,YAAAA,CAAayF,uBAAAA,GAA0B,UAC7EC,CAAAA,EAAAA;MAAAA,IAGIC,CAAAA,GAAAA,CADJD,CAAAA,GAAUA,CAAAA,IAAW,EAAA,EACMp5C,KAAAA,CAAM,SAAA,CAAA;QAC7BkP,CAAAA,GAAS,IAAA;MAAA,IAEe,CAAA,KAAxBmqC,CAAAA,CAAaxkD,MAAAA,EAAc;QAAA,IACzBykD,CAAAA,GAAgB,qDAAA,CAAsDvgC,IAAAA,CACxEsgC,CAAAA,CAAa,CAAA,CAAA,CAAA;QAEX5zC,KAAAA,CAAMC,OAAAA,CAAQ4zC,CAAAA,CAAAA,KAChBpqC,CAAAA,GAAS;UACPynC,QAAAA,EAAU2C,CAAAA,CAAc,CAAA,CAAA;UACxBC,OAAAA,EAASD,CAAAA,CAAc,CAAA,CAAA;UACvBvmD,IAAAA,EAAMsmD,CAAAA,CAAa,CAAA;QAAA,CAAA,CAAA;MAAA;MAAA,OAIlBnqC,CAAAA;IAAAA,CAAAA;IAULsqC,CAAAA,GAAuBvS,CAAAA,CAASyM,YAAAA,CAAa8F,mBAAAA,GAAsB,YAAA;MAAA,OAE5C,WAAA,IAAA,OAAhBjyB,WAAAA,IAAqD,WAAA,IAAA,OAAfr0B,UAAAA;IAAAA,CAAAA;EAajD+zC,CAAAA,CAASyM,YAAAA,CAAa+F,aAAAA,GAAgB,UAASxO,CAAAA,EAAAA;IAAAA,OACtCuO,CAAAA,CAAAA,CAAAA,IAAyBvO,CAAAA,YAAkB1jB,WAAAA;EAAAA,CAAAA;EAAAA,IAWhDqtB,CAAAA,GAAqB3N,CAAAA,CAASyM,YAAAA,CAAakB,iBAAAA,GAAoB,UACjE3J,CAAAA,EAAAA;MAAAA,OAGEuO,CAAAA,CAAAA,CAAAA,IACuB,WAAA,IAAA,OAAhBlmD,WAAAA,KACN23C,CAAAA,YAAkByO,SAAAA,IACjBzO,CAAAA,YAAkB/3C,UAAAA,IACY,WAAA,IAAA,OAAtByhD,iBAAAA,IACN1J,CAAAA,YAAkB0J,iBAAAA,IACpB1J,CAAAA,YAAkB0O,UAAAA,IAClB1O,CAAAA,YAAkB73C,WAAAA,IAClB63C,CAAAA,YAAkB2O,UAAAA,IAClB3O,CAAAA,YAAkB33C,WAAAA,IAClB23C,CAAAA,YAAkB4O,YAAAA,IAClB5O,CAAAA,YAAkB6O,YAAAA,CAAAA;IAAAA,CAAAA;IAapBC,CAAAA,GAA4B9S,CAAAA,CAASyM,YAAAA,CAAaqG,wBAAAA,GAA2B,UAC/EC,CAAAA,EAAAA;MAAAA,KAAAA,IAEIz9C,CAAAA,GAAMy9C,CAAAA,CAAcnlD,MAAAA,EACpB+xC,CAAAA,GAAQ,IAAI1zC,UAAAA,CAAWqJ,CAAAA,CAAAA,EAClBzI,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIyI,CAAAA,EAAKzI,CAAAA,EAAAA,EACvB8yC,CAAAA,CAAM9yC,CAAAA,CAAAA,GAAKkmD,CAAAA,CAAcn3C,UAAAA,CAAW/O,CAAAA,CAAAA;MAAAA,OAE/B8yC,CAAAA;IAAAA,CAAAA;IAaL6O,CAAAA,GAA6BxO,CAAAA,CAASyM,YAAAA,CAAa+B,yBAAAA,GAA4B,UACjFp1C,CAAAA,EAAAA;MAAAA,KAAAA,IAEI7F,CAAAA,GAAM,EAAA,EAGN/D,CAAAA,GAAMm+C,CAAAA,CAAkBv0C,CAAAA,CAAAA,GAAUA,CAAAA,GAAS,IAAInN,UAAAA,CAAWmN,CAAAA,CAAAA,EACrDvM,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAI2C,CAAAA,CAAI5B,MAAAA,EAAQf,CAAAA,IAzsBV,IAAA,EA6sBpB0G,CAAAA,IAAO6L,MAAAA,CAAOC,YAAAA,CAAapB,KAAAA,CACzB,IAAA,EACAzO,CAAAA,CAAIH,QAAAA,CAASxC,CAAAA,EAAGA,CAAAA,GA/sBE,IAAA,CAAA,CAAA;MAAA,OAktBf0G,CAAAA;IAAAA,CAAAA;EA8BTysC,CAAAA,CAASgT,QAAAA,GAAW,YAAA;IAAA,IACd3F,CAAAA,EAAWv1B,CAAAA,EAAQvqB,CAAAA,EAAG2S,CAAAA,EAAG1U,CAAAA,EAAGq6B,CAAAA,EAAGgqB,CAAAA,EAAOoD,CAAAA,EAAajD,CAAAA;IAAAA,IAG3B,QAAA,IAAA,OAAjB9xC,SAAAA,CAAU,CAAA,CAAA,IACnB4Z,CAAAA,GAAS40B,CAAAA,EACTn/C,CAAAA,GAAI2Q,SAAAA,CAAU,CAAA,CAAA,EACdgC,CAAAA,GAAIhC,SAAAA,CAAU,CAAA,CAAA,EACd1S,CAAAA,GAAI0S,SAAAA,CAAU,CAAA,CAAA,EACd2nB,CAAAA,GAAI3nB,SAAAA,CAAU,CAAA,CAAA,EACd2xC,CAAAA,GAAQ3xC,SAAAA,CAAU,CAAA,CAAA,EAClB+0C,CAAAA,GAAc/0C,SAAAA,CAAU,CAAA,CAAA,EACxB8xC,CAAAA,GAAW9xC,SAAAA,CAAU,CAAA,CAAA,KAErB4Z,CAAAA,GAAS5Z,SAAAA,CAAU,CAAA,CAAA,EACnB3Q,CAAAA,GAAI2Q,SAAAA,CAAU,CAAA,CAAA,EACdgC,CAAAA,GAAIhC,SAAAA,CAAU,CAAA,CAAA,EACd1S,CAAAA,GAAI0S,SAAAA,CAAU,CAAA,CAAA,EACd2nB,CAAAA,GAAI3nB,SAAAA,CAAU,CAAA,CAAA,EACd2xC,CAAAA,GAAQ3xC,SAAAA,CAAU,CAAA,CAAA,EAClB+0C,CAAAA,GAAc/0C,SAAAA,CAAU,CAAA,CAAA,EACxB8xC,CAAAA,GAAW9xC,SAAAA,CAAU,CAAA,CAAA,CAAA,EAIA,QAAA,KAArB/T,IAAAA,eAAAA,EAtBFkjD,CAAAA,GAAYnvC,SAAAA,CAAU,CAAA,CAAA,CAAA,IAAA,CAuBnB8wC,CAAAA,CAAa3B,CAAAA,CAAAA,IACd,WAAA,IAAeA,CAAAA,EACf;MAAA,IACI31B,CAAAA,GAAU21B,CAAAA;MAEdA,CAAAA,GAAY31B,CAAAA,CAAQ21B,SAAAA,EACpBv1B,CAAAA,GAASJ,CAAAA,CAAQI,MAAAA,IAAUA,CAAAA,IAAU40B,CAAAA,EACrCn/C,CAAAA,GAAImqB,CAAAA,CAAQnqB,CAAAA,IAAKA,CAAAA,IAAK,CAAA,EACtB2S,CAAAA,GAAIwX,CAAAA,CAAQxX,CAAAA,IAAKA,CAAAA,IAAK,CAAA,EACtB1U,CAAAA,GAAIksB,CAAAA,CAAQlsB,CAAAA,IAAKksB,CAAAA,CAAQkT,KAAAA,IAASp/B,CAAAA,EAClCq6B,CAAAA,GAAInO,CAAAA,CAAQmO,CAAAA,IAAKnO,CAAAA,CAAQmT,MAAAA,IAAUhF,CAAAA,EACnCgqB,CAAAA,GAAQn4B,CAAAA,CAAQm4B,KAAAA,IAASA,CAAAA,EACzBoD,CAAAA,GAAcv7B,CAAAA,CAAQu7B,WAAAA,IAAeA,CAAAA,EACrCjD,CAAAA,GAAWt4B,CAAAA,CAAQs4B,QAAAA,IAAYt4B,CAAAA,CAAQ2b,KAAAA,IAAS2c,CAAAA;IAAAA;IAAAA,IAI9CzJ,CAAAA,GAAS9hC,IAAAA,CAAKmU,QAAAA,CAASsP,UAAAA,CAAAA,CAAAA;IAAAA,IAAAA,KACP/G,CAAAA,KAAhB8xB,CAAAA,IAAAA,CAAgE,CAAA,KAAnC1M,CAAAA,CAAO3tC,OAAAA,CAAQ,aAAA,CAAA,KAC9Cq6C,CAAAA,GAAc,MAAA,CAAA,EAGZjhC,KAAAA,CAAMzkB,CAAAA,CAAAA,IAAMykB,KAAAA,CAAM9R,CAAAA,CAAAA,EAAAA,MACd,IAAIiC,KAAAA,CAAM,8CAAA,CAAA;IAGlBysC,CAAAA,CAAWvzC,IAAAA,CAAKoJ,IAAAA,CAAAA;IAAAA,IAEZopC,CAAAA,GAAQqF,CAAAA,CAAiB73C,IAAAA,CAC3BoJ,IAAAA,EACA4oC,CAAAA,EACAv1B,CAAAA,EACA+3B,CAAAA,EACAoD,CAAAA,CAAAA;IAAAA,OAGFlD,CAAAA,CAAgB10C,IAAAA,CAAKoJ,IAAAA,EAAMlX,CAAAA,EAAG2S,CAAAA,EAAG1U,CAAAA,EAAGq6B,CAAAA,EAAGgoB,CAAAA,EAAOmC,CAAAA,CAAAA,EAEvCvrC,IAAAA;EAAAA,CAAAA;EAAAA,IAGLyuC,CAAAA,GAAmB,SAAA,CAAS7F,CAAAA,EAAWv1B,CAAAA,EAAQ+3B,CAAAA,EAAOoD,CAAAA,EAAAA;MAAAA,IACpDhrC,CAAAA,EAAQkrC,CAAAA,EA/fYl6B,CAAAA;MAAAA,IAkgBD,QAAA,IAAA,OAAdo0B,CAAAA,IACPD,CAAAA,CAA4BC,CAAAA,CAAAA,KAAeX,CAAAA,EAC3C;QACAW,CAAAA,GAAYpc,QAAAA,CAASoc,CAAAA,CAAAA;QAAAA,IACjBmC,CAAAA,GAAe4D,CAAAA,CAA4B/F,CAAAA,EAAAA,CAAW,CAAA,CAAA;QAAA,CAErC,EAAA,KAAjBmC,CAAAA,IAAAA,KAImBruB,CAAAA,MADrBquB,CAAAA,GAAexP,CAAAA,CAASyP,QAAAA,CAASpC,CAAAA,EAAAA,CAAW,CAAA,CAAA,CAAA,MAF5CA,CAAAA,GAAYmC,CAAAA,CAAAA;MAAAA;MAAAA,IASZR,CAAAA,CAAa3B,CAAAA,CAAAA,KACfA,CAAAA,GAAY6B,CAAAA,CAAwB7B,CAAAA,EAAWv1B,CAAAA,CAAAA,CAAAA,EAGjDA,CAAAA,GAASs1B,CAAAA,CAA4BC,CAAAA,EAAWv1B,CAAAA,CAAAA,EAAAA,CAC3Ci3B,CAAAA,CAAqBj3B,CAAAA,CAAAA,EAAAA,MAClB,IAAI3V,KAAAA,CACR,2CAAA,GACE2V,CAAAA,GACA,sCAAA,GACAA,CAAAA,GACA,qBAAA,CAAA;MAAA,IAAA,CA5hBC,IAAA,KADiBmB,CAAAA,GAmiBT42B,CAAAA,CAAAA,IAliB2D,CAAA,KAAjB52B,CAAAA,CAAMrrB,MAAAA,MAmiB7DiiD,CAAAA,GAjiB6B,UAASxC,CAAAA,EAAAA;QAAAA,OACf,QAAA,IAAA,OAAdA,CAAAA,IAA0BM,CAAAA,CAAkBN,CAAAA,CAAAA,GAC9CwE,CAAAA,CAAUxE,CAAAA,CAAAA,GACRM,CAAAA,CAAkBN,CAAAA,CAAUvhD,IAAAA,CAAAA,GAC9B+lD,CAAAA,CAAUxE,CAAAA,CAAUvhD,IAAAA,CAAAA,GAGtB,IAAA;MAAA,CA0hBGunD,CAA2BhG,CAAAA,CAAAA,CAAAA,EAAAA,CAErCplC,CAAAA,GAAS2nC,CAAAA,CAAoBv0C,IAAAA,CAAKoJ,IAAAA,EAAMorC,CAAAA,CAAAA,MAGlC0C,CAAAA,CAAAA,CAAAA,KAEIlF,CAAAA,YAAqBphD,UAAAA,IAA0B,MAAA,KAAX6rB,CAAAA,KACxCq7B,CAAAA,GAAqB9F,CAAAA,EACrBA,CAAAA,GAAYyF,CAAAA,CAAyBzF,CAAAA,CAAAA,CAAAA,CAAAA,EAIzCplC,CAAAA,GAASxD,IAAAA,CAAK,SAAA,GAAYqT,CAAAA,CAAO6F,WAAAA,CAAAA,CAAAA,CAAAA,CAC/B0vB,CAAAA,EACAyB,CAAAA,CAAczzC,IAAAA,CAAKoJ,IAAAA,CAAAA,EACnBorC,CAAAA,EAzkBmB,UAAS52B,CAAAA,EAAAA;QAAAA,OAC5BA,CAAAA,IAA0B,QAAA,IAAA,OAAVA,CAAAA,KAAoBA,CAAAA,GAAQA,CAAAA,CAAM0E,WAAAA,CAAAA,CAAAA,CAAAA,EAC/C1E,CAAAA,IAAS+mB,CAAAA,CAASwR,iBAAAA,GAAoBv4B,CAAAA,GAAQu4B,CAAAA,CAAkBC,IAAAA;MAAAA,CAwkBnE6B,CAAmBL,CAAAA,CAAAA,EACnBE,CAAAA,CAAAA,CAAAA,EAAAA,CAIClrC,CAAAA,EAAAA,MACG,IAAI9F,KAAAA,CAAM,wDAAA,CAAA;MAAA,OAEX8F,CAAAA;IAAAA,CAAAA;IASLmrC,CAAAA,GAA+BpT,CAAAA,CAASyM,YAAAA,CAAa2G,2BAAAA,GAA8B,UACrFG,CAAAA,EACAC,CAAAA,EAAAA;MAAAA,IAGIC,CAAAA;MADJD,CAAAA,GAAmC,SAAA,IAAA,OAAfA,CAAAA,IAA2BA,CAAAA;MAAAA,IAG3CE,CAAAA;QADArG,CAAAA,GAAY,EAAA;MAAA,IAGU,QAAA,IAAA,OAAfkG,CAAAA,EAAyB;QAElCG,CAAAA,GAAyB,IAAA,MADzBD,CAAAA,GAAavB,CAAAA,CAAwBqB,CAAAA,CAAAA,CAAAA,GACLE,CAAAA,CAAW3nD,IAAAA,GAAOynD,CAAAA;QAAAA,IAAAA;UAGhDlG,CAAAA,GAAYpnC,CAAAA,CAAKytC,CAAAA,CAAAA;QAAAA,CACjB,QAAO/nD,CAAAA,EAAAA;UAAAA,IACH6nD,CAAAA,EAAAA,MACGxB,CAAAA,CAAuB0B,CAAAA,CAAAA,GAKpB,IAAIvxC,KAAAA,CACR,kDAAA,GAAqDxW,CAAAA,CAAE4qB,OAAAA,CAAAA,GALnD,IAAIpU,KAAAA,CACR,+EAAA,CAAA;QAAA;MAAA;MAAA,OAUHkrC,CAAAA;IAAAA,CAAAA;EASTrN,CAAAA,CAAS2T,kBAAAA,GAAqB,UAAStG,CAAAA,EAAAA;IAAAA,IACjCQ,CAAAA;MAEA/1B,CAAAA;MADA03B,CAAAA,GAAe,EAAA;IAAA,IAGfR,CAAAA,CAAa3B,CAAAA,CAAAA,KACfA,CAAAA,GAAY6B,CAAAA,CAAwB7B,CAAAA,CAAAA,CAAAA,EAIf,QAAA,IAAA,OAAdA,CAAAA,IACPD,CAAAA,CAA4BC,CAAAA,CAAAA,KAAeX,CAAAA,KAItB,EAAA,MAFrB8C,CAAAA,GAAe4D,CAAAA,CAA4B/F,CAAAA,EAAAA,CAAW,CAAA,CAAA,CAAA,KAGpDmC,CAAAA,GAAexP,CAAAA,CAASyP,QAAAA,CAASpC,CAAAA,CAAAA,IAAc,EAAA,CAAA,EAEjDA,CAAAA,GAAYmC,CAAAA,CAAAA,EAGd13B,CAAAA,GAASs1B,CAAAA,CAA4BC,CAAAA,CAAAA,EAAAA,CAChC0B,CAAAA,CAAqBj3B,CAAAA,CAAAA,EAAAA,MAClB,IAAI3V,KAAAA,CACR,2CAAA,GACE2V,CAAAA,GACA,sCAAA,GACAA,CAAAA,GACA,qBAAA,CAAA;IAAA,IAAA,CAIFy6B,CAAAA,CAAAA,CAAAA,IAA2BlF,CAAAA,YAAqBphD,UAAAA,KAClDohD,CAAAA,GAAYyF,CAAAA,CAAyBzF,CAAAA,CAAAA,CAAAA,EAAAA,EAGvCQ,CAAAA,GAAQppC,IAAAA,CAAK,SAAA,GAAYqT,CAAAA,CAAO6F,WAAAA,CAAAA,CAAAA,CAAAA,CAAe0vB,CAAAA,CAAAA,CAAAA,EAAAA,MAGvC,IAAIlrC,KAAAA,CAAM,uDAAA,CAAA;IAAA,OAGlB0rC,CAAAA,CAAMJ,QAAAA,GAAW31B,CAAAA,EAEV+1B,CAAAA;EAAAA,CAAAA;AAAAA,CAx9BX,CA09BGp2B,CAAAA,CAAMkB,GAAAA,CAAAA;;;;;;;;ACt8BT,UAAUqnB,CAAAA,EAAAA;EAAAA,IAGJ4T,CAAAA,GAAW,SAAA,CAASzsB,CAAAA,EAAAA;IAAAA,IAAAA,KACJ,CAAA,KAAPA,CAAAA,IACE,EAAA,IAAPA,CAAAA,EAAAA,OAAAA,CACK,CAAA;EAAA,CAAA;EAKb1P,CAAAA,CAAMkB,GAAAA,CAAI4K,MAAAA,CAAOxxB,IAAAA,CAAK,CACpB,SAAA,EACA,UAAS8hD,CAAAA,EAAAA;IACQpvC,IAAAA,CAAKmU,QAAAA,CAAS0Z,WAAAA,CAAYuhB,CAAAA,CAAY5qB,UAAAA,CAAAA,CAC5Ca,WAAAA,CAAYma,WAAAA,GAAc,EAAA;EAAA,CAAA,CAAA,CAAA,EAIvCjE,CAAAA,CAASzc,MAAAA,CAAOxxB,IAAAA,CAAK,CACnB,SAAA,EACA,UAAS+hD,CAAAA,EAAAA;IAAAA,KAAAA,IAOHC,CAAAA,EAAMruB,CAAAA,EAAMoU,CAAAA,EANZgC,CAAAA,GAAgCr3B,IAAAA,CAAKmU,QAAAA,CAASsmB,mBAAAA,EAC9CnD,CAAAA,GAA8Bt3B,IAAAA,CAAKmU,QAAAA,CACpCmjB,2BAAAA,EACCiY,CAAAA,GAAWvvC,IAAAA,CAAKmU,QAAAA,CAAS4Z,kBAAAA,CAAmBshB,CAAAA,CAAY1sB,KAAAA,CAAAA,EACxD6sB,CAAAA,GAAYH,CAAAA,CAAYhqB,WAAAA,CAAYma,WAAAA,EAGpCiQ,CAAAA,GAAAA,CAAQ,CAAA,EACHtlD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIqlD,CAAAA,CAAUrmD,MAAAA,IAAAA,CAAWsmD,CAAAA,EAAOtlD,CAAAA,EAAAA,EAAAA,QAAAA,CAC9CmlD,CAAAA,GAAOE,CAAAA,CAAUrlD,CAAAA,CAAAA,EACJrD,IAAAA;MAAAA,KACN,MAAA;QAAA,CAEDqoD,CAAAA,CAASG,CAAAA,CAAKr8B,OAAAA,CAAQlV,GAAAA,CAAAA,IACtBoxC,CAAAA,CAASG,CAAAA,CAAKr8B,OAAAA,CAAQuR,UAAAA,CAAAA,MAEtBirB,CAAAA,GAAAA,CAAQ,CAAA,CAAA;QAAA;MAAA,KAGP,WAAA;MAAA,KACA,MAAA;MAAA,KACA,UAAA;QACHA,CAAAA,GAAAA,CAAQ,CAAA;IAAA;IAAA,IAID,CAAA,IAATA,CAAAA,EAAAA;MAAAA,IAAAA,CAICt7B,QAAAA,CAASuH,KAAAA,CAAM,WAAA,CAAA;MAAA,KACf,IAAItzB,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIonD,CAAAA,CAAUrmD,MAAAA,EAAQf,CAAAA,EAAAA,EAAK;QACzCknD,CAAAA,GAAOE,CAAAA,CAAUpnD,CAAAA,CAAAA;QAAAA,IACbsnD,CAAAA,GAAS1vC,IAAAA,CAAKmU,QAAAA,CAASkW,SAAAA;UACvBtG,CAAAA,GAAY/jB,IAAAA,CAAKmU,QAAAA,CAASyZ,YAAAA,CAAayhB,CAAAA,CAAY1sB,KAAAA,CAAAA;QAAAA,QAE/C2sB,CAAAA,CAAKxoD,IAAAA;UAAAA,KACN,WAAA;YAAA,IAAA,CAEEqtB,QAAAA,CAASuH,KAAAA,CAAM,GAAA,GAAM4zB,CAAAA,CAAK/P,MAAAA,CAAO5c,KAAAA,GAAQ,OAAA,CAAA;YAAA;UAAA,KAE3C,MAAA;YAAA,IAECgtB,CAAAA,GAAU3vC,IAAAA,CAAKmU,QAAAA,CAASsO,mBAAAA,CAAAA,CAAAA;cACxBmtB,CAAAA,GAAW5vC,IAAAA,CAAKmU,QAAAA,CAASsO,mBAAAA,CAAAA,CAAAA;cACzBotB,CAAAA,GAAgB7vC,IAAAA,CAAKmU,QAAAA,CAASyZ,YAAAA,CAAa+hB,CAAAA,CAAQhtB,KAAAA,CAAAA;cAEnD/f,CAAAA,GAAQ0sC,CAAAA,CAAK1sC,KAAAA,IAAS,MAAA;YAY1ByyB,CAAAA,GACE,gCAAA,IAZFpU,CAAAA,GACE,SAAA,GACAoW,CAAAA,CAA8BiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,CAAAA,GAC1C,GAAA,GACAwuC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,GAAI6zC,CAAAA,CAAKQ,MAAAA,CAAO1uB,CAAAA,CAAAA,GACxD,GAAA,GACAiW,CAAAA,CAA8BiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,GAAIwmD,CAAAA,CAAKQ,MAAAA,CAAO/oD,CAAAA,CAAAA,GAC1D,GAAA,GACAuwC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,CAAAA,GACxC,IAAA,CAAA,GAOA,aAAA,GACAi0C,CAAAA,CAAOG,CAAAA,CAAcP,CAAAA,CAAKS,QAAAA,CAAAA,CAAAA,GAC1B,GAAA,EACF1a,CAAAA,IAAQ,UAAA,GAAaua,CAAAA,CAASjtB,KAAAA,GAAQ,MAAA,EACtC0S,CAAAA,IAAQ,MAAA,GAASka,CAAAA,CAAS5sB,KAAAA,GAAQ,MAAA,EAClC0S,CAAAA,IAAQ,OAAA,GAAUqa,CAAAA,CAAOG,CAAAA,CAAcjtC,CAAAA,CAAAA,CAAAA,GAAU,MAAA,EACjD+sC,CAAAA,CAAQh1B,OAAAA,GAAU0a,CAAAA;YAAAA,IAEdwG,CAAAA,GAAS8T,CAAAA,CAAQhtB,KAAAA,GAAQ,MAAA;YAc7B0S,CAAAA,GACE,iCAAA,IAbFpU,CAAAA,GACE,SAAA,GACAoW,CAAAA,CAA8BiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,GAH/B,EAAA,CAAA,GAIX,GAAA,GACAwuC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,GAAI6zC,CAAAA,CAAKQ,MAAAA,CAAO1uB,CAAAA,CAAAA,GACxD,GAAA,GACAiW,CAAAA,CACEiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,GAAIwmD,CAAAA,CAAKQ,MAAAA,CAAO/oD,CAAAA,GARnB,EAAA,CAAA,GAUX,GAAA,GACAuwC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,CAAAA,GACxC,IAAA,CAAA,GAMA,WAAA,GACAogC,CAAAA,EACEyT,CAAAA,CAAK9uC,IAAAA,KACP60B,CAAAA,IAAQ,aAAA,CAAA,EAEVA,CAAAA,IAAQ,KAAA,EACRua,CAAAA,CAASj1B,OAAAA,GAAU0a,CAAAA,EAAAA,IAAAA,CAEdlhB,QAAAA,CAASuH,KAAAA,CAAMi0B,CAAAA,CAAQhtB,KAAAA,EAAO,KAAA,EAAOitB,CAAAA,CAASjtB,KAAAA,EAAO,KAAA,CAAA;YAAA;UAAA,KAGvD,UAAA;YACH1B,CAAAA,GACE,SAAA,GACAoW,CAAAA,CAA8BiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,CAAAA,GAC1C,GAAA,GACAwuC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,CAAAA,GACxC,GAAA,GACA47B,CAAAA,CAA8BiY,CAAAA,CAAKQ,MAAAA,CAAOhnD,CAAAA,GAAIwmD,CAAAA,CAAKQ,MAAAA,CAAO/oD,CAAAA,CAAAA,GAC1D,GAAA,GACAuwC,CAAAA,CAA4BgY,CAAAA,CAAKQ,MAAAA,CAAOr0C,CAAAA,GAAI6zC,CAAAA,CAAKQ,MAAAA,CAAO1uB,CAAAA,CAAAA,GACxD,IAAA;YAAA,IACEyB,CAAAA,GAAQysB,CAAAA,CAAKzsB,KAAAA,IAAS,SAAA;YAC1BwS,CAAAA,GACE,oCAAA,GAGApU,CAAAA,GACA,aAAA,GACAyuB,CAAAA,CAAO3rB,CAAAA,CAAUurB,CAAAA,CAAKS,QAAAA,CAAAA,CAAAA,GACtB,GAAA,EACF1a,CAAAA,IACE,kEAAA,GACAxS,CAAAA,GACA,GAAA,EACFwS,CAAAA,IAAQ,kBAAA,EACRA,CAAAA,IAAQ,KAAA,EAAA,IAAA,CACHlhB,QAAAA,CAASuH,KAAAA,CAAM2Z,CAAAA,CAAAA;YAAAA;UAAAA,KAEjB,MAAA;YAAA,IACCia,CAAAA,CAAKr8B,OAAAA,CAAQ5S,IAAAA,EAAM;cAAA,IACjB2vC,CAAAA,GAAMhwC,IAAAA,CAAKw/B,WAAAA,CAAYyQ,QAAAA,CAASX,CAAAA,CAAKr8B,OAAAA,CAAQ5S,IAAAA,CAAAA;cACjDivC,CAAAA,CAAKr8B,OAAAA,CAAQuR,UAAAA,GAAawrB,CAAAA,CAAIpxB,IAAAA,EAC9B0wB,CAAAA,CAAKr8B,OAAAA,CAAQi9B,GAAAA,GAAMF,CAAAA,CAAIv0C,CAAAA;YAAAA,CAAAA,MAElB6zC,CAAAA,CAAKr8B,OAAAA,CAAQi9B,GAAAA,KAChBZ,CAAAA,CAAKr8B,OAAAA,CAAQi9B,GAAAA,GAAM,CAAA,CAAA;YAAA,IAIvBjvB,CAAAA,GACE,SAAA,GACAquB,CAAAA,CAAKa,WAAAA,CAAYrnD,CAAAA,GACjB,GAAA,GACAwmD,CAAAA,CAAKa,WAAAA,CAAY10C,CAAAA,GACjB,GAAA,GACA6zC,CAAAA,CAAKa,WAAAA,CAAYppD,CAAAA,GACjB,GAAA,GACAuoD,CAAAA,CAAKa,WAAAA,CAAY/uB,CAAAA,GACjB,IAAA,EAEFiU,CAAAA,GAAO,EAAA,EACHia,CAAAA,CAAKr8B,OAAAA,CAAQlV,GAAAA,EACfs3B,CAAAA,GACE,gCAAA,GACApU,CAAAA,GACA,qCAAA,GACAyuB,CAAAA,CAAO3rB,CAAAA,CAAUurB,CAAAA,CAAKr8B,OAAAA,CAAQlV,GAAAA,CAAAA,CAAAA,GAC9B,MAAA,CAAA,KACG,IAAIuxC,CAAAA,CAAKr8B,OAAAA,CAAQuR,UAAAA,EAAY;cAAA,QAGlC6Q,CAAAA,GACE,gCAAA,GACApU,CAAAA,GACA,yBAAA,GAJSjhB,IAAAA,CAAKmU,QAAAA,CAAS0Z,WAAAA,CAAYyhB,CAAAA,CAAKr8B,OAAAA,CAAQuR,UAAAA,CAAAA,CAK3C7B,KAAAA,GACL,MAAA,EACF2sB,CAAAA,CAAKr8B,OAAAA,CAAQm9B,SAAAA,GAAYd,CAAAA,CAAKr8B,OAAAA,CAAQm9B,SAAAA,IAAa,KAAA,EAC3Cd,CAAAA,CAAKr8B,OAAAA,CAAQm9B,SAAAA;gBAAAA,KACd,KAAA;kBACH/a,CAAAA,IAAQ,QAAA;kBAAA;gBAAA,KAEL,MAAA;kBACHA,CAAAA,IAAQ,SAAA,GAAYia,CAAAA,CAAKr8B,OAAAA,CAAQi9B,GAAAA,GAAM,GAAA;kBAAA;gBAAA,KAEpC,MAAA;kBACHZ,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,GAAOf,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,IAAQ,CAAA,EACzChb,CAAAA,IAAQ,SAAA,GAAYia,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,GAAO,GAAA;kBAAA;gBAAA,KAErC,KAAA;gBAAA;kBAAA,IAECH,CAAAA,GAAM5Y,CAAAA,CAA4BgY,CAAAA,CAAKr8B,OAAAA,CAAQi9B,GAAAA,CAAAA;kBACnDZ,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,GAAOf,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,IAAQ,CAAA,EAAA,KAER,CAAA,KAAtBf,CAAAA,CAAKr8B,OAAAA,CAAQuJ,IAAAA,KACtB8yB,CAAAA,CAAKr8B,OAAAA,CAAQuJ,IAAAA,GAAO,CAAA,CAAA,EAEtB6Y,CAAAA,IACE,QAAA,GACAia,CAAAA,CAAKr8B,OAAAA,CAAQo9B,IAAAA,GACb,GAAA,GACAH,CAAAA,GACA,GAAA,GACAZ,CAAAA,CAAKr8B,OAAAA,CAAQuJ,IAAAA,GACb,GAAA;cAAA;YAAA;YAKI,EAAA,IAAR6Y,CAAAA,KACFA,CAAAA,IAAQ,KAAA,EAAA,IAAA,CACHlhB,QAAAA,CAASuH,KAAAA,CAAM2Z,CAAAA,CAAAA,CAAAA;QAAAA;MAAAA;MAAAA,IAAAA,CAKvBlhB,QAAAA,CAASuH,KAAAA,CAAM,GAAA,CAAA;IAAA;EAAA,CAAA,CAAA,CAAA,EASxB6f,CAAAA,CAAS+U,gBAAAA,GAAmB,UAASr9B,CAAAA,EAAAA;IAAAA,IAC/Bs8B,CAAAA,GAAWvvC,IAAAA,CAAKmU,QAAAA,CAAS6Z,kBAAAA,CAAAA,CAAAA;IAAAA,QACrB/a,CAAAA,CAAQnsB,IAAAA;MAAAA,KACT,MAAA;QAAA,IAAA,CACEypD,IAAAA,CACHt9B,CAAAA,CAAQ68B,MAAAA,CAAOhnD,CAAAA,EACfmqB,CAAAA,CAAQ68B,MAAAA,CAAOr0C,CAAAA,EACfwX,CAAAA,CAAQ68B,MAAAA,CAAO/oD,CAAAA,EACfksB,CAAAA,CAAQ68B,MAAAA,CAAO1uB,CAAAA,EACfnO,CAAAA,CAAAA;QAAAA;MAAAA,KAGC,MAAA;MAAA,KACA,UAAA;QACHs8B,CAAAA,CAASlqB,WAAAA,CAAYma,WAAAA,CAAYlyC,IAAAA,CAAK2lB,CAAAA,CAAAA;IAAAA;EAAAA,CAAAA,EAmB5CsoB,CAAAA,CAASgV,IAAAA,GAAO,UAASznD,CAAAA,EAAG2S,CAAAA,EAAG1U,CAAAA,EAAGq6B,CAAAA,EAAGnO,CAAAA,EAAAA;IAAAA,IAC/Bs8B,CAAAA,GAAWvvC,IAAAA,CAAKmU,QAAAA,CAAS6Z,kBAAAA,CAAAA,CAAAA;MACzBqJ,CAAAA,GAAgCr3B,IAAAA,CAAKmU,QAAAA,CAASsmB,mBAAAA;MAC9CnD,CAAAA,GAA8Bt3B,IAAAA,CAAKmU,QAAAA,CAASmjB,2BAAAA;IAEhDiY,CAAAA,CAASlqB,WAAAA,CAAYma,WAAAA,CAAYlyC,IAAAA,CAAK;MACpC6iD,WAAAA,EAAa;QACXrnD,CAAAA,EAAGuuC,CAAAA,CAA8BvuC,CAAAA,CAAAA;QACjC2S,CAAAA,EAAG67B,CAAAA,CAA4B77B,CAAAA,CAAAA;QAC/B1U,CAAAA,EAAGswC,CAAAA,CAA8BvuC,CAAAA,GAAI/B,CAAAA,CAAAA;QACrCq6B,CAAAA,EAAGkW,CAAAA,CAA4B77B,CAAAA,GAAI2lB,CAAAA;MAAAA,CAAAA;MAErCnO,OAAAA,EAASA,CAAAA;MACTnsB,IAAAA,EAAM;IAAA,CAAA,CAAA;EAAA,CAAA,EAgBVy0C,CAAAA,CAASiV,YAAAA,GAAe,UAAS9mB,CAAAA,EAAM5gC,CAAAA,EAAG2S,CAAAA,EAAGwX,CAAAA,EAAAA;IAAAA,IAGvCw9B,CAAAA;MAAYC,CAAAA;MAFZC,CAAAA,GAAiB3wC,IAAAA,CAAK4wC,YAAAA,CAAalnB,CAAAA,CAAAA;MACnC2F,CAAAA,GAAarvB,IAAAA,CAAKmU,QAAAA,CAAS+iB,aAAAA,CAAAA,CAAAA,GAAkBl3B,IAAAA,CAAKmU,QAAAA,CAASmD,WAAAA;IAAAA,IAAAA,KAItCoF,CAAAA,KAArBzJ,CAAAA,CAAQ8b,QAAAA,EAAwB;MAElC2hB,CAAAA,GADmBz9B,CAAAA,CAAb8b,QAAAA;MAAAA,IAEF8hB,CAAAA,GAAa7wC,IAAAA,CAAKqwB,eAAAA,CAAgB3G,CAAAA,EAAMgnB,CAAAA,CAAAA,CAAWvnD,MAAAA;MACvDsnD,CAAAA,GAAallD,IAAAA,CAAKsG,IAAAA,CAAKw9B,CAAAA,GAAawhB,CAAAA,CAAAA;IAAAA,CAAAA,MAEpCH,CAAAA,GAAYC,CAAAA,EACZF,CAAAA,GAAaphB,CAAAA;IAAAA,OAAAA,IAAAA,CAGV3F,IAAAA,CAAKA,CAAAA,EAAM5gC,CAAAA,EAAG2S,CAAAA,EAAGwX,CAAAA,CAAAA,EAItBxX,CAAAA,IAAkB,EAAA,GAAb4zB,CAAAA,EAEiB,QAAA,KAAlBpc,CAAAA,CAAQ4b,KAAAA,KACV/lC,CAAAA,IAAQ6nD,CAAAA,GAAiB,CAAA,CAAA,EAEL,OAAA,KAAlB19B,CAAAA,CAAQ4b,KAAAA,KACV/lC,CAAAA,IAAQ6nD,CAAAA,CAAAA,EAAAA,IAAAA,CAELJ,IAAAA,CAAKznD,CAAAA,EAAG2S,CAAAA,GAAI4zB,CAAAA,EAAYqhB,CAAAA,EAAWD,CAAAA,EAAYx9B,CAAAA,CAAAA,EAC7C09B,CAAAA;EAAAA,CAAAA,EAUTpV,CAAAA,CAASqV,YAAAA,GAAe,UAASlnB,CAAAA,EAAAA;IAAAA,IAC3BzN,CAAAA,GAAWjc,IAAAA,CAAKmU,QAAAA,CAASsD,WAAAA,CAAAA,CAAAA;IAAAA,OAE1BzX,IAAAA,CAAK+xB,kBAAAA,CAAmBrI,CAAAA,CAAAA,GAAQzN,CAAAA,GAAYjc,IAAAA,CAAKmU,QAAAA,CAASmD,WAAAA;EAAAA,CAAAA;AAAAA,CAvVjE,CA4VGtE,CAAAA,CAAMkB,GAAAA,CAAAA;;;;;;;;ACrYT,UAAUqnB,CAAAA,EAAAA;EAAAA,IAOJuV,CAAAA,GAAoB;MAAA,IAAA,EACd,CAAC,KAAA,CAAA;MAAA,IAAA,EACD,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAO,KAAA,CAAA;MAAA,IAAA,EACxB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,CAAA;MAAA,IAAA,EACD,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACT,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAAQ,KAAA,EAAQ,KAAA,EAAQ,KAAA,CAAA;MAAA,IAAA,EACzB,CAAC,KAAA,EAA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AAA,EACA,EAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,CAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,CAAA;IAGEC,CAAAA,GAA6B,CAC/B,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,CAAA;IAEEC,CAAAA,GAA4B,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA,EAAI,EAAA,CAAA;IAC/DC,CAAAA,GAA6B,CAC/B,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,GAAA,CAAA;IAEEC,CAAAA,GAA4B,CAC9B,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,EAAA,EACA,CAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,CAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,CAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,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EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,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AAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,CAAA,EAGvD,CACE,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,CAAA,EAGvD,CACE,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,CAAA,EAGvD,CACE,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,CAAA,EAErD,CACE,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,CAAA,EACnD,CAAC,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK,GAAA,EAAK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","file":"export.24d655f5.js","sourceRoot":"..","sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Much of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// Many optimizations have been made, so the bundle size is ultimately smaller but performance is similar.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var u = ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c], { type: 'text/javascript' })));\n    var w = new Worker(u);\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i)\n            co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) >> 0;\n    return ((d[o] | (d[o + 1] << 8)) >>> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) >> 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >>> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) >> 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                if (!noSt && pos + tl * (clb + 7) > tbts)\n                    break;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts)\n                throw 'unexpected EOF';\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var mxa = lbt + dbt + 18;\n        while (noSt || pos + mxa < tbts) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts)\n                throw 'unexpected EOF';\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts)\n                    throw 'unexpected EOF';\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = pos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) >> 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) >> 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [new u8(0), 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.floor(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768\n            var imod = i & 32767;\n            // previous index with this value\n            var pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst)\n            pos = wfblk(w, pos, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = 0xFFFFFFFF;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return c ^ 0xFFFFFFFF; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 5552, l);\n                for (; i < e; ++i)\n                    n += d[i], m += n;\n                n %= 65521, m %= 65521;\n            }\n            a = n, b = m;\n        },\n        d: function () { return ((a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8)) + ((a & 255) << 23) * 2; }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    if (!opts.consume)\n        dat = new u8(dat);\n    w.postMessage([dat, opts], [dat.buffer]);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16)) + (d[b + 3] << 23) * 2; };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) + (2 * (d[l - 1] << 23));\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    if (opts === void 0) { opts = {}; }\n    return dopt(data, opts, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) >> 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (opts === void 0) { opts = {}; }\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = gzs(this.p);\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (opts === void 0) { opts = {}; }\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    var l = str.length;\n    if (!latin1 && typeof TextEncoder != 'undefined')\n        return new TextEncoder().encode(str);\n    var ar = new u8(str.length + (str.length >>> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >>> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >>> 18)), w(128 | ((c >>> 12) & 63)), w(128 | ((c >>> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >>> 12)), w(128 | ((c >>> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    var r = '';\n    if (!latin1 && typeof TextDecoder != 'undefined')\n        return new TextDecoder().decode(dat);\n    for (var i = 0; i < dat.length;) {\n        var c = dat[i++];\n        if (c < 128 || latin1)\n            r += String.fromCharCode(c);\n        else if (c < 224)\n            r += String.fromCharCode((c & 31) << 6 | (dat[i++] & 63));\n        else if (c < 240)\n            r += String.fromCharCode((c & 15) << 12 | (dat[i++] & 63) << 6 | (dat[i++] & 63));\n        else\n            c = ((c & 15) << 18 | (dat[i++] & 63) << 12 | (dat[i++] & 63) << 6 | (dat[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n    }\n    return r;\n}\n;\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl;\n    var _a = z ? z64e(d, es) : [b4(d, b + 20), b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b4(d, b + 12), b4(d, b + 4), b4(d, b + 20)];\n};\n// write zip header\nvar wzh = function (d, b, c, cmp, su, fn, u, o, ce, t) {\n    var fl = fn.length, l = cmp.length;\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b] = 20, b += 2;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (t == 8 && (o.level == 1 ? 6 : o.level < 6 ? 4 : o.level == 9 ? 2 : 0)), d[b++] = u && 8;\n    d[b] = t, b += 2;\n    var dt = new Date(o.mtime || Date.now()), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, ((y << 24) * 2) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1));\n    b += 4;\n    wbytes(d, b, c);\n    wbytes(d, b + 4, l);\n    wbytes(d, b + 8, su);\n    wbytes(d, b + 12, fl), b += 16; // skip extra field, comment\n    if (ce != null)\n        wbytes(d, b += 10, ce), b += 4;\n    d.set(fn, b);\n    b += fl;\n    if (ce == null)\n        d.set(cmp, b);\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                wzh(out, tot, f.c, f.d, f.m, f.n, f.u, f.p, null, f.t);\n                wzh(out, o, f.c, f.d, f.m, f.n, f.u, f.p, tot, f.t), o += 46 + f.n.length, tot += 30 + f.n.length + f.d.length;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), m = file.length;\n        c.p(file);\n        var n = strToU8(fn), s = n.length;\n        var t = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = {\n                    t: t,\n                    d: d,\n                    m: m,\n                    c: c.d(),\n                    u: fn.length != l,\n                    n: n,\n                    p: p\n                };\n                o += 30 + s + l;\n                tot += 76 + 2 * s + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (n.length > 65535)\n            cbl('filename too long', null);\n        if (!t)\n            cbl(null, file);\n        else if (m < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (opts === void 0) { opts = {}; }\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var t = p.level == 0 ? 0 : 8;\n        var n = strToU8(fn), s = n.length;\n        if (n.length > 65535)\n            throw 'filename too long';\n        var d = t ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push({\n            t: t,\n            d: d,\n            m: file.length,\n            c: c.d(),\n            u: fn.length != s,\n            n: n,\n            o: o,\n            p: p\n        });\n        o += 30 + s + l;\n        tot += 76 + 2 * s + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f.c, f.d, f.m, f.n, f.u, f.p, null, f.t);\n        wzh(out, o, f.c, f.d, f.m, f.n, f.u, f.p, f.o, f.t), o += 46 + f.n.length;\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_2 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_2(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","export var globalObject = (function() {\n  return \"undefined\" !== typeof window\n    ? window\n    : \"undefined\" !== typeof global\n    ? global\n    : \"undefined\" !== typeof self\n    ? self\n    : this;\n})();\n","import { globalObject } from \"./globalObject.js\";\n\nfunction consoleLog() {\n  if (globalObject.console && typeof globalObject.console.log === \"function\") {\n    globalObject.console.log.apply(globalObject.console, arguments);\n  }\n}\n\nfunction consoleWarn(str) {\n  if (globalObject.console) {\n    if (typeof globalObject.console.warn === \"function\") {\n      globalObject.console.warn.apply(globalObject.console, arguments);\n    } else {\n      consoleLog.call(null, arguments);\n    }\n  }\n}\n\nfunction consoleError(str) {\n  if (globalObject.console) {\n    if (typeof globalObject.console.error === \"function\") {\n      globalObject.console.error.apply(globalObject.console, arguments);\n    } else {\n      consoleLog(str);\n    }\n  }\n}\nexport var console = {\n  log: consoleLog,\n  warn: consoleWarn,\n  error: consoleError\n};\n","/**\n * @license\n * FileSaver.js\n * A saveAs() FileSaver implementation.\n *\n * By Eli Grey, http://eligrey.com\n *\n * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n * source  : http://purl.eligrey.com/github/FileSaver.js\n */\n\nimport { globalObject as _global } from \"./globalObject.js\";\nimport { console } from \"./console.js\";\n\nfunction bom(blob, opts) {\n  if (typeof opts === \"undefined\") opts = { autoBom: false };\n  else if (typeof opts !== \"object\") {\n    console.warn(\"Deprecated: Expected third argument to be a object\");\n    opts = { autoBom: !opts };\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (\n    opts.autoBom &&\n    /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(\n      blob.type\n    )\n  ) {\n    return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n  }\n  return blob;\n}\n\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", url);\n  xhr.responseType = \"blob\";\n  xhr.onload = function() {\n    saveAs(xhr.response, name, opts);\n  };\n  xhr.onerror = function() {\n    console.error(\"could not download file\");\n  };\n  xhr.send();\n}\n\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest();\n  // use sync to avoid popup blocker\n  xhr.open(\"HEAD\", url, false);\n  try {\n    xhr.send();\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299;\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent(\"click\"));\n  } catch (e) {\n    var evt = document.createEvent(\"MouseEvents\");\n    evt.initMouseEvent(\n      \"click\",\n      true,\n      true,\n      window,\n      0,\n      0,\n      0,\n      80,\n      20,\n      false,\n      false,\n      false,\n      false,\n      0,\n      null\n    );\n    node.dispatchEvent(evt);\n  }\n}\n\nvar saveAs =\n  _global.saveAs ||\n  // probably in some web worker\n  (typeof window !== \"object\" || window !== _global\n    ? function saveAs() {\n        /* noop */\n      }\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a native app\n    typeof HTMLAnchorElement !== \"undefined\" &&\n      \"download\" in HTMLAnchorElement.prototype\n    ? function saveAs(blob, name, opts) {\n        var URL = _global.URL || _global.webkitURL;\n        var a = document.createElement(\"a\");\n        name = name || blob.name || \"download\";\n\n        a.download = name;\n        a.rel = \"noopener\"; // tabnabbing\n\n        // TODO: detect chrome extensions & packaged apps\n        // a.target = '_blank'\n\n        if (typeof blob === \"string\") {\n          // Support regular links\n          a.href = blob;\n          if (a.origin !== location.origin) {\n            corsEnabled(a.href)\n              ? download(blob, name, opts)\n              : click(a, (a.target = \"_blank\"));\n          } else {\n            click(a);\n          }\n        } else {\n          // Support blobs\n          a.href = URL.createObjectURL(blob);\n          setTimeout(function() {\n            URL.revokeObjectURL(a.href);\n          }, 4e4); // 40s\n          setTimeout(function() {\n            click(a);\n          }, 0);\n        }\n      }\n    : // Use msSaveOrOpenBlob as a second approach\n    \"msSaveOrOpenBlob\" in navigator\n    ? function saveAs(blob, name, opts) {\n        name = name || blob.name || \"download\";\n\n        if (typeof blob === \"string\") {\n          if (corsEnabled(blob)) {\n            download(blob, name, opts);\n          } else {\n            var a = document.createElement(\"a\");\n            a.href = blob;\n            a.target = \"_blank\";\n            setTimeout(function() {\n              click(a);\n            });\n          }\n        } else {\n          navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n        }\n      }\n    : // Fallback to using FileReader and a popup\n      function saveAs(blob, name, opts, popup) {\n        // Open a popup immediately do go around popup blocker\n        // Mostly only available on user interaction and the fileReader is async so...\n        popup = popup || open(\"\", \"_blank\");\n        if (popup) {\n          popup.document.title = popup.document.body.innerText =\n            \"downloading...\";\n        }\n\n        if (typeof blob === \"string\") return download(blob, name, opts);\n\n        var force = blob.type === \"application/octet-stream\";\n        var isSafari =\n          /constructor/i.test(_global.HTMLElement) || _global.safari;\n        var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n        if (\n          (isChromeIOS || (force && isSafari)) &&\n          typeof FileReader === \"object\"\n        ) {\n          // Safari doesn't allow downloading of blob URLs\n          var reader = new FileReader();\n          reader.onloadend = function() {\n            var url = reader.result;\n            url = isChromeIOS\n              ? url\n              : url.replace(/^data:[^;]*;/, \"data:attachment/file;\");\n            if (popup) popup.location.href = url;\n            else location = url;\n            popup = null; // reverse-tabnabbing #460\n          };\n          reader.readAsDataURL(blob);\n        } else {\n          var URL = _global.URL || _global.webkitURL;\n          var url = URL.createObjectURL(blob);\n          if (popup) popup.location = url;\n          else location.href = url;\n          popup = null; // reverse-tabnabbing #460\n          setTimeout(function() {\n            URL.revokeObjectURL(url);\n          }, 4e4); // 40s\n        }\n      });\n\nexport { saveAs };\n","import { globalObject } from \"./globalObject.js\";\n\nvar atob, btoa;\n\n(function() {\n  atob = globalObject.atob.bind(globalObject);\n  btoa = globalObject.btoa.bind(globalObject);\n  return;\n\n})();\n\nexport { atob, btoa };\n","/**\n * A class to parse color values\n * @author Stoyan Stefanov <sstoo@gmail.com>\n * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}\n * @license Use it if you like it\n */\n\nfunction RGBColor(color_string) {\n  color_string = color_string || \"\";\n  this.ok = false;\n\n  // strip any leading #\n  if (color_string.charAt(0) == \"#\") {\n    // remove # if any\n    color_string = color_string.substr(1, 6);\n  }\n\n  color_string = color_string.replace(/ /g, \"\");\n  color_string = color_string.toLowerCase();\n\n  var channels;\n\n  // before getting into regexps, try simple matches\n  // and overwrite the input\n  var simple_colors = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"00ffff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"0000ff\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"00ffff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dodgerblue: \"1e90ff\",\n    feldspar: \"d19275\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"ff00ff\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgrey: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslateblue: \"8470ff\",\n    lightslategray: \"778899\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"00ff00\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"ff00ff\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370d8\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"d87093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    red: \"ff0000\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    violetred: \"d02090\",\n    wheat: \"f5deb3\",\n    white: \"ffffff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ffff00\",\n    yellowgreen: \"9acd32\"\n  };\n  color_string = simple_colors[color_string] || color_string;\n\n  // array of color definition objects\n  var color_defs = [\n    {\n      re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n      example: [\"rgb(123, 234, 45)\", \"rgb(255,234,245)\"],\n      process: function(bits) {\n        return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];\n      }\n    },\n    {\n      re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n      example: [\"#00ff00\", \"336699\"],\n      process: function(bits) {\n        return [\n          parseInt(bits[1], 16),\n          parseInt(bits[2], 16),\n          parseInt(bits[3], 16)\n        ];\n      }\n    },\n    {\n      re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n      example: [\"#fb0\", \"f0f\"],\n      process: function(bits) {\n        return [\n          parseInt(bits[1] + bits[1], 16),\n          parseInt(bits[2] + bits[2], 16),\n          parseInt(bits[3] + bits[3], 16)\n        ];\n      }\n    }\n  ];\n\n  // search through the definitions to find a match\n  for (var i = 0; i < color_defs.length; i++) {\n    var re = color_defs[i].re;\n    var processor = color_defs[i].process;\n    var bits = re.exec(color_string);\n    if (bits) {\n      channels = processor(bits);\n      this.r = channels[0];\n      this.g = channels[1];\n      this.b = channels[2];\n      this.ok = true;\n    }\n  }\n\n  // validate/cleanup values\n  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;\n  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;\n  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;\n\n  // some getters\n  this.toRGB = function() {\n    return \"rgb(\" + this.r + \", \" + this.g + \", \" + this.b + \")\";\n  };\n  this.toHex = function() {\n    var r = this.r.toString(16);\n    var g = this.g.toString(16);\n    var b = this.b.toString(16);\n    if (r.length == 1) r = \"0\" + r;\n    if (g.length == 1) g = \"0\" + g;\n    if (b.length == 1) b = \"0\" + b;\n    return \"#\" + r + g + b;\n  };\n}\n\nexport { RGBColor };\n","/**\n * @license\n * Joseph Myers does not specify a particular license for his work.\n *\n * Author: Joseph Myers\n * Accessed from: http://www.myersdaily.org/joseph/javascript/md5.js\n *\n * Modified by: Owen Leong\n */\n\nfunction md5cycle(x, k) {\n  var a = x[0],\n    b = x[1],\n    c = x[2],\n    d = x[3];\n\n  a = ff(a, b, c, d, k[0], 7, -680876936);\n  d = ff(d, a, b, c, k[1], 12, -389564586);\n  c = ff(c, d, a, b, k[2], 17, 606105819);\n  b = ff(b, c, d, a, k[3], 22, -1044525330);\n  a = ff(a, b, c, d, k[4], 7, -176418897);\n  d = ff(d, a, b, c, k[5], 12, 1200080426);\n  c = ff(c, d, a, b, k[6], 17, -1473231341);\n  b = ff(b, c, d, a, k[7], 22, -45705983);\n  a = ff(a, b, c, d, k[8], 7, 1770035416);\n  d = ff(d, a, b, c, k[9], 12, -1958414417);\n  c = ff(c, d, a, b, k[10], 17, -42063);\n  b = ff(b, c, d, a, k[11], 22, -1990404162);\n  a = ff(a, b, c, d, k[12], 7, 1804603682);\n  d = ff(d, a, b, c, k[13], 12, -40341101);\n  c = ff(c, d, a, b, k[14], 17, -1502002290);\n  b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n  a = gg(a, b, c, d, k[1], 5, -165796510);\n  d = gg(d, a, b, c, k[6], 9, -1069501632);\n  c = gg(c, d, a, b, k[11], 14, 643717713);\n  b = gg(b, c, d, a, k[0], 20, -373897302);\n  a = gg(a, b, c, d, k[5], 5, -701558691);\n  d = gg(d, a, b, c, k[10], 9, 38016083);\n  c = gg(c, d, a, b, k[15], 14, -660478335);\n  b = gg(b, c, d, a, k[4], 20, -405537848);\n  a = gg(a, b, c, d, k[9], 5, 568446438);\n  d = gg(d, a, b, c, k[14], 9, -1019803690);\n  c = gg(c, d, a, b, k[3], 14, -187363961);\n  b = gg(b, c, d, a, k[8], 20, 1163531501);\n  a = gg(a, b, c, d, k[13], 5, -1444681467);\n  d = gg(d, a, b, c, k[2], 9, -51403784);\n  c = gg(c, d, a, b, k[7], 14, 1735328473);\n  b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n  a = hh(a, b, c, d, k[5], 4, -378558);\n  d = hh(d, a, b, c, k[8], 11, -2022574463);\n  c = hh(c, d, a, b, k[11], 16, 1839030562);\n  b = hh(b, c, d, a, k[14], 23, -35309556);\n  a = hh(a, b, c, d, k[1], 4, -1530992060);\n  d = hh(d, a, b, c, k[4], 11, 1272893353);\n  c = hh(c, d, a, b, k[7], 16, -155497632);\n  b = hh(b, c, d, a, k[10], 23, -1094730640);\n  a = hh(a, b, c, d, k[13], 4, 681279174);\n  d = hh(d, a, b, c, k[0], 11, -358537222);\n  c = hh(c, d, a, b, k[3], 16, -722521979);\n  b = hh(b, c, d, a, k[6], 23, 76029189);\n  a = hh(a, b, c, d, k[9], 4, -640364487);\n  d = hh(d, a, b, c, k[12], 11, -421815835);\n  c = hh(c, d, a, b, k[15], 16, 530742520);\n  b = hh(b, c, d, a, k[2], 23, -995338651);\n\n  a = ii(a, b, c, d, k[0], 6, -198630844);\n  d = ii(d, a, b, c, k[7], 10, 1126891415);\n  c = ii(c, d, a, b, k[14], 15, -1416354905);\n  b = ii(b, c, d, a, k[5], 21, -57434055);\n  a = ii(a, b, c, d, k[12], 6, 1700485571);\n  d = ii(d, a, b, c, k[3], 10, -1894986606);\n  c = ii(c, d, a, b, k[10], 15, -1051523);\n  b = ii(b, c, d, a, k[1], 21, -2054922799);\n  a = ii(a, b, c, d, k[8], 6, 1873313359);\n  d = ii(d, a, b, c, k[15], 10, -30611744);\n  c = ii(c, d, a, b, k[6], 15, -1560198380);\n  b = ii(b, c, d, a, k[13], 21, 1309151649);\n  a = ii(a, b, c, d, k[4], 6, -145523070);\n  d = ii(d, a, b, c, k[11], 10, -1120210379);\n  c = ii(c, d, a, b, k[2], 15, 718787259);\n  b = ii(b, c, d, a, k[9], 21, -343485551);\n\n  x[0] = add32(a, x[0]);\n  x[1] = add32(b, x[1]);\n  x[2] = add32(c, x[2]);\n  x[3] = add32(d, x[3]);\n}\n\nfunction cmn(q, a, b, x, s, t) {\n  a = add32(add32(a, q), add32(x, t));\n  return add32((a << s) | (a >>> (32 - s)), b);\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n  return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n  return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nfunction md51(s) {\n  // txt = '';\n  var n = s.length,\n    state = [1732584193, -271733879, -1732584194, 271733878],\n    i;\n  for (i = 64; i <= s.length; i += 64) {\n    md5cycle(state, md5blk(s.substring(i - 64, i)));\n  }\n  s = s.substring(i - 64);\n  var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < s.length; i++)\n    tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n  tail[i >> 2] |= 0x80 << (i % 4 << 3);\n  if (i > 55) {\n    md5cycle(state, tail);\n    for (i = 0; i < 16; i++) tail[i] = 0;\n  }\n  tail[14] = n * 8;\n  md5cycle(state, tail);\n  return state;\n}\n\n/* there needs to be support for Unicode here,\n * unless we pretend that we can redefine the MD-5\n * algorithm for multi-byte characters (perhaps\n * by adding every four 16-bit characters and\n * shortening the sum to 32 bits). Otherwise\n * I suggest performing MD-5 as if every character\n * was two bytes--e.g., 0040 0025 = @%--but then\n * how will an ordinary MD-5 sum be matched?\n * There is no way to standardize text to something\n * like UTF-8 before transformation; speed cost is\n * utterly prohibitive. The JavaScript standard\n * itself needs to look at this: it should start\n * providing access to strings as preformed UTF-8\n * 8-bit unsigned value arrays.\n */\nfunction md5blk(s) {\n  /* I figured global was faster.   */\n  var md5blks = [],\n    i; /* Andy King said do it this way. */\n  for (i = 0; i < 64; i += 4) {\n    md5blks[i >> 2] =\n      s.charCodeAt(i) +\n      (s.charCodeAt(i + 1) << 8) +\n      (s.charCodeAt(i + 2) << 16) +\n      (s.charCodeAt(i + 3) << 24);\n  }\n  return md5blks;\n}\n\nvar hex_chr = \"0123456789abcdef\".split(\"\");\n\nfunction rhex(n) {\n  var s = \"\",\n    j = 0;\n  for (; j < 4; j++)\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f];\n  return s;\n}\n\nfunction hex(x) {\n  for (var i = 0; i < x.length; i++) x[i] = rhex(x[i]);\n  return x.join(\"\");\n}\n\n// Converts a 4-byte number to byte string\nfunction singleToByteString(n) {\n  return String.fromCharCode(\n    (n & 0xff) >> 0,\n    (n & 0xff00) >> 8,\n    (n & 0xff0000) >> 16,\n    (n & 0xff000000) >> 24\n  );\n}\n\n// Converts an array of numbers to a byte string\nfunction toByteString(x) {\n  return x.map(singleToByteString).join(\"\");\n}\n\n// Returns the MD5 hash as a byte string\nfunction md5Bin(s) {\n  return toByteString(md51(s));\n}\n\n// Returns MD5 hash as a hex string\nfunction md5(s) {\n  return hex(md51(s));\n}\n\nvar md5Check = md5(\"hello\") != \"5d41402abc4b2a76b9719d911017c592\";\n\nfunction add32(a, b) {\n  if (md5Check) {\n    /* if the md5Check does not match\n     the expected value, we're dealing\n     with an old browser and need\n     this function. */\n    var lsw = (a & 0xffff) + (b & 0xffff),\n      msw = (a >> 16) + (b >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xffff);\n  } else {\n    /* this function is much faster,\n    so if possible we use it. Some IEs\n    are the only ones I know of that\n    need the idiotic second function,\n    generated by an if clause.  */\n    return (a + b) & 0xffffffff;\n  }\n}\n\nexport { md5, md5Bin };\n","/**\r\n * @license\r\n * FPDF is released under a permissive license: there is no usage restriction.\r\n * You may embed it freely in your application (commercial or not), with or\r\n * without modifications.\r\n *\r\n * Reference: http://www.fpdf.org/en/script/script37.php\r\n */\r\n\r\nfunction repeat(str, num) {\r\n  return new Array(num + 1).join(str);\r\n}\r\n\r\n/**\r\n * Converts a byte string to a hex string\r\n *\r\n * @name rc4\r\n * @function\r\n * @param {string} key Byte string of encryption key\r\n * @param {string} data Byte string of data to be encrypted\r\n * @returns {string} Encrypted string\r\n */\r\nfunction rc4(key, data) {\r\n  var lastKey, lastState;\r\n  if (key !== lastKey) {\r\n    var k = repeat(key, ((256 / key.length) >> 0) + 1);\r\n    var state = [];\r\n    for (var i = 0; i < 256; i++) {\r\n      state[i] = i;\r\n    }\r\n    var j = 0;\r\n    for (var i = 0; i < 256; i++) {\r\n      var t = state[i];\r\n      j = (j + t + k.charCodeAt(i)) % 256;\r\n      state[i] = state[j];\r\n      state[j] = t;\r\n    }\r\n    lastKey = key;\r\n    lastState = state;\r\n  } else {\r\n    state = lastState;\r\n  }\r\n  var length = data.length;\r\n  var a = 0;\r\n  var b = 0;\r\n  var out = \"\";\r\n  for (var i = 0; i < length; i++) {\r\n    a = (a + 1) % 256;\r\n    t = state[a];\r\n    b = (b + t) % 256;\r\n    state[a] = state[b];\r\n    state[b] = t;\r\n    k = state[(state[a] + state[b]) % 256];\r\n    out += String.fromCharCode(data.charCodeAt(i) ^ k);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport { rc4 };\r\n","/**\r\n * @license\r\n * Licensed under the MIT License.\r\n * http://opensource.org/licenses/mit-license\r\n * Author: Owen Leong (@owenl131)\r\n * Date: 15 Oct 2020\r\n * References:\r\n * https://www.cs.cmu.edu/~dst/Adobe/Gallery/anon21jul01-pdf-encryption.txt\r\n * https://github.com/foliojs/pdfkit/blob/master/lib/security.js\r\n * http://www.fpdf.org/en/script/script37.php\r\n */\r\n\r\nimport { md5Bin } from \"./md5.js\";\r\nimport { rc4 } from \"./rc4.js\";\r\n\r\nvar permissionOptions = {\r\n  print: 4,\r\n  modify: 8,\r\n  copy: 16,\r\n  \"annot-forms\": 32\r\n};\r\n\r\n/**\r\n * Initializes encryption settings\r\n *\r\n * @name constructor\r\n * @function\r\n * @param {Array} permissions Permissions allowed for user, \"print\", \"modify\", \"copy\" and \"annot-forms\".\r\n * @param {String} userPassword Permissions apply to this user. Leaving this empty means the document\r\n *                              is not password protected but viewer has the above permissions.\r\n * @param {String} ownerPassword Owner has full functionalities to the file.\r\n * @param {String} fileId As hex string, should be same as the file ID in the trailer.\r\n * @example\r\n * var security = new PDFSecurity([\"print\"])\r\n */\r\nfunction PDFSecurity(permissions, userPassword, ownerPassword, fileId) {\r\n  this.v = 1; // algorithm 1, future work can add in more recent encryption schemes\r\n  this.r = 2; // revision 2\r\n\r\n  // set flags for what functionalities the user can access\r\n  let protection = 192;\r\n  permissions.forEach(function(perm) {\r\n    if (typeof permissionOptions.perm !== \"undefined\") {\r\n      throw new Error(\"Invalid permission: \" + perm);\r\n    }\r\n    protection += permissionOptions[perm];\r\n  });\r\n\r\n  // padding is used to pad the passwords to 32 bytes, also is hashed and stored in the final PDF\r\n  this.padding =\r\n    \"\\x28\\xBF\\x4E\\x5E\\x4E\\x75\\x8A\\x41\\x64\\x00\\x4E\\x56\\xFF\\xFA\\x01\\x08\" +\r\n    \"\\x2E\\x2E\\x00\\xB6\\xD0\\x68\\x3E\\x80\\x2F\\x0C\\xA9\\xFE\\x64\\x53\\x69\\x7A\";\r\n  let paddedUserPassword = (userPassword + this.padding).substr(0, 32);\r\n  let paddedOwnerPassword = (ownerPassword + this.padding).substr(0, 32);\r\n\r\n  this.O = this.processOwnerPassword(paddedUserPassword, paddedOwnerPassword);\r\n  this.P = -((protection ^ 255) + 1);\r\n  this.encryptionKey = md5Bin(\r\n    paddedUserPassword +\r\n      this.O +\r\n      this.lsbFirstWord(this.P) +\r\n      this.hexToBytes(fileId)\r\n  ).substr(0, 5);\r\n  this.U = rc4(this.encryptionKey, this.padding);\r\n}\r\n\r\n/**\r\n * Breaks down a 4-byte number into its individual bytes, with the least significant bit first\r\n *\r\n * @name lsbFirstWord\r\n * @function\r\n * @param {number} data 32-bit number\r\n * @returns {Array}\r\n */\r\nPDFSecurity.prototype.lsbFirstWord = function(data) {\r\n  return String.fromCharCode(\r\n    (data >> 0) & 0xff,\r\n    (data >> 8) & 0xff,\r\n    (data >> 16) & 0xff,\r\n    (data >> 24) & 0xff\r\n  );\r\n};\r\n\r\n/**\r\n * Converts a byte string to a hex string\r\n *\r\n * @name toHexString\r\n * @function\r\n * @param {String} byteString Byte string\r\n * @returns {String}\r\n */\r\nPDFSecurity.prototype.toHexString = function(byteString) {\r\n  return byteString\r\n    .split(\"\")\r\n    .map(function(byte) {\r\n      return (\"0\" + (byte.charCodeAt(0) & 0xff).toString(16)).slice(-2);\r\n    })\r\n    .join(\"\");\r\n};\r\n\r\n/**\r\n * Converts a hex string to a byte string\r\n *\r\n * @name hexToBytes\r\n * @function\r\n * @param {String} hex Hex string\r\n * @returns {String}\r\n */\r\nPDFSecurity.prototype.hexToBytes = function(hex) {\r\n  for (var bytes = [], c = 0; c < hex.length; c += 2)\r\n    bytes.push(String.fromCharCode(parseInt(hex.substr(c, 2), 16)));\r\n  return bytes.join(\"\");\r\n};\r\n\r\n/**\r\n * Computes the 'O' field in the encryption dictionary\r\n *\r\n * @name processOwnerPassword\r\n * @function\r\n * @param {String} paddedUserPassword Byte string of padded user password\r\n * @param {String} paddedOwnerPassword Byte string of padded owner password\r\n * @returns {String}\r\n */\r\nPDFSecurity.prototype.processOwnerPassword = function(\r\n  paddedUserPassword,\r\n  paddedOwnerPassword\r\n) {\r\n  let key = md5Bin(paddedOwnerPassword).substr(0, 5);\r\n  return rc4(key, paddedUserPassword);\r\n};\r\n\r\n/**\r\n * Returns an encryptor function which can take in a byte string and returns the encrypted version\r\n *\r\n * @name encryptor\r\n * @function\r\n * @param {number} objectId\r\n * @param {number} generation Not sure what this is for, you can set it to 0\r\n * @returns {Function}\r\n * @example\r\n * out(\"stream\");\r\n * encryptor = security.encryptor(object.id, 0);\r\n * out(encryptor(data));\r\n * out(\"endstream\");\r\n */\r\nPDFSecurity.prototype.encryptor = function(objectId, generation) {\r\n  let key = md5Bin(\r\n    this.encryptionKey +\r\n      String.fromCharCode(\r\n        objectId & 0xff,\r\n        (objectId >> 8) & 0xff,\r\n        (objectId >> 16) & 0xff,\r\n        generation & 0xff,\r\n        (generation >> 8) & 0xff\r\n      )\r\n  ).substr(0, 10);\r\n  return function(data) {\r\n    return rc4(key, data);\r\n  };\r\n};\r\n\r\nexport { PDFSecurity };\r\n","/**\n * Convert string to `PDF Name Object`.\n * Detail: PDF Reference 1.3 - Chapter 3.2.4 Name Object\n * @param str\n */\nfunction toPDFName(str) {\n  // eslint-disable-next-line no-control-regex\n  if (/[^\\u0000-\\u00ff]/.test(str)) {\n    // non ascii string\n    throw new Error(\n      \"Invalid PDF Name Object: \" + str + \", Only accept ASCII characters.\"\n    );\n  }\n  var result = \"\",\n    strLength = str.length;\n  for (var i = 0; i < strLength; i++) {\n    var charCode = str.charCodeAt(i);\n    if (\n      charCode < 0x21 ||\n      charCode === 0x23 /* # */ ||\n      charCode === 0x25 /* % */ ||\n      charCode === 0x28 /* ( */ ||\n      charCode === 0x29 /* ) */ ||\n      charCode === 0x2f /* / */ ||\n      charCode === 0x3c /* < */ ||\n      charCode === 0x3e /* > */ ||\n      charCode === 0x5b /* [ */ ||\n      charCode === 0x5d /* ] */ ||\n      charCode === 0x7b /* { */ ||\n      charCode === 0x7d /* } */ ||\n      charCode > 0x7e\n    ) {\n      // Char    CharCode    hexStr   paddingHexStr    Result\n      // \"\\t\"    9           9        09               #09\n      // \" \"     32          20       20               #20\n      // \"©\"     169         a9       a9               #a9\n      var hexStr = charCode.toString(16),\n        paddingHexStr = (\"0\" + hexStr).slice(-2);\n\n      result += \"#\" + paddingHexStr;\n    } else {\n      // Other ASCII printable characters between 0x21 <= X <= 0x7e\n      result += str[i];\n    }\n  }\n  return result;\n}\n\nexport { toPDFName };\n","/* eslint-disable no-console */\r\n\r\nimport { saveAs } from \"./libs/FileSaver.js\";\r\nimport { globalObject } from \"./libs/globalObject.js\";\r\nimport { RGBColor } from \"./libs/rgbcolor.js\";\r\nimport { btoa } from \"./libs/AtobBtoa.js\";\r\nimport { console } from \"./libs/console.js\";\r\nimport { PDFSecurity } from \"./libs/pdfsecurity.js\";\r\nimport { toPDFName } from \"./libs/pdfname.js\";\r\n/**\r\n * jsPDF's Internal PubSub Implementation.\r\n * Backward compatible rewritten on 2014 by\r\n * Diego Casorran, https://github.com/diegocr\r\n *\r\n * @class\r\n * @name PubSub\r\n * @ignore\r\n */\r\nfunction PubSub(context) {\r\n  if (typeof context !== \"object\") {\r\n    throw new Error(\r\n      \"Invalid Context passed to initialize PubSub (jsPDF-module)\"\r\n    );\r\n  }\r\n  var topics = {};\r\n\r\n  this.subscribe = function(topic, callback, once) {\r\n    once = once || false;\r\n    if (\r\n      typeof topic !== \"string\" ||\r\n      typeof callback !== \"function\" ||\r\n      typeof once !== \"boolean\"\r\n    ) {\r\n      throw new Error(\r\n        \"Invalid arguments passed to PubSub.subscribe (jsPDF-module)\"\r\n      );\r\n    }\r\n\r\n    if (!topics.hasOwnProperty(topic)) {\r\n      topics[topic] = {};\r\n    }\r\n\r\n    var token = Math.random().toString(35);\r\n    topics[topic][token] = [callback, !!once];\r\n\r\n    return token;\r\n  };\r\n\r\n  this.unsubscribe = function(token) {\r\n    for (var topic in topics) {\r\n      if (topics[topic][token]) {\r\n        delete topics[topic][token];\r\n        if (Object.keys(topics[topic]).length === 0) {\r\n          delete topics[topic];\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  this.publish = function(topic) {\r\n    if (topics.hasOwnProperty(topic)) {\r\n      var args = Array.prototype.slice.call(arguments, 1),\r\n        tokens = [];\r\n\r\n      for (var token in topics[topic]) {\r\n        var sub = topics[topic][token];\r\n        try {\r\n          sub[0].apply(context, args);\r\n        } catch (ex) {\r\n          if (globalObject.console) {\r\n            console.error(\"jsPDF PubSub Error\", ex.message, ex);\r\n          }\r\n        }\r\n        if (sub[1]) tokens.push(token);\r\n      }\r\n      if (tokens.length) tokens.forEach(this.unsubscribe);\r\n    }\r\n  };\r\n\r\n  this.getTopics = function() {\r\n    return topics;\r\n  };\r\n}\r\n\r\nfunction GState(parameters) {\r\n  if (!(this instanceof GState)) {\r\n    return new GState(parameters);\r\n  }\r\n\r\n  /**\r\n   * @name GState#opacity\r\n   * @type {any}\r\n   */\r\n  /**\r\n   * @name GState#stroke-opacity\r\n   * @type {any}\r\n   */\r\n  var supported = \"opacity,stroke-opacity\".split(\",\");\r\n  for (var p in parameters) {\r\n    if (parameters.hasOwnProperty(p) && supported.indexOf(p) >= 0) {\r\n      this[p] = parameters[p];\r\n    }\r\n  }\r\n  /**\r\n   * @name GState#id\r\n   * @type {string}\r\n   */\r\n  this.id = \"\"; // set by addGState()\r\n  /**\r\n   * @name GState#objectNumber\r\n   * @type {number}\r\n   */\r\n  this.objectNumber = -1; // will be set by putGState()\r\n}\r\n\r\nGState.prototype.equals = function equals(other) {\r\n  var ignore = \"id,objectNumber,equals\";\r\n  var p;\r\n  if (!other || typeof other !== typeof this) return false;\r\n  var count = 0;\r\n  for (p in this) {\r\n    if (ignore.indexOf(p) >= 0) continue;\r\n    if (this.hasOwnProperty(p) && !other.hasOwnProperty(p)) return false;\r\n    if (this[p] !== other[p]) return false;\r\n    count++;\r\n  }\r\n  for (p in other) {\r\n    if (other.hasOwnProperty(p) && ignore.indexOf(p) < 0) count--;\r\n  }\r\n  return count === 0;\r\n};\r\n\r\nfunction Pattern(gState, matrix) {\r\n  this.gState = gState;\r\n  this.matrix = matrix;\r\n\r\n  this.id = \"\"; // set by addPattern()\r\n  this.objectNumber = -1; // will be set by putPattern()\r\n}\r\n\r\nfunction ShadingPattern(type, coords, colors, gState, matrix) {\r\n  if (!(this instanceof ShadingPattern)) {\r\n    return new ShadingPattern(type, coords, colors, gState, matrix);\r\n  }\r\n\r\n  // see putPattern() for information how they are realized\r\n  this.type = type === \"axial\" ? 2 : 3;\r\n  this.coords = coords;\r\n  this.colors = colors;\r\n\r\n  Pattern.call(this, gState, matrix);\r\n}\r\n\r\nfunction TilingPattern(boundingBox, xStep, yStep, gState, matrix) {\r\n  if (!(this instanceof TilingPattern)) {\r\n    return new TilingPattern(boundingBox, xStep, yStep, gState, matrix);\r\n  }\r\n\r\n  this.boundingBox = boundingBox;\r\n  this.xStep = xStep;\r\n  this.yStep = yStep;\r\n\r\n  this.stream = \"\"; // set by endTilingPattern();\r\n\r\n  this.cloneIndex = 0;\r\n\r\n  Pattern.call(this, gState, matrix);\r\n}\r\n\r\n/**\r\n * Creates new jsPDF document object instance.\r\n * @name jsPDF\r\n * @class\r\n * @param {Object} [options] - Collection of settings initializing the jsPDF-instance\r\n * @param {string} [options.orientation=portrait] - Orientation of the first page. Possible values are \"portrait\" or \"landscape\" (or shortcuts \"p\" or \"l\").<br />\r\n * @param {string} [options.unit=mm] Measurement unit (base unit) to be used when coordinates are specified.<br />\r\n * Possible values are \"pt\" (points), \"mm\", \"cm\", \"in\", \"px\", \"pc\", \"em\" or \"ex\". Note that in order to get the correct scaling for \"px\"\r\n * units, you need to enable the hotfix \"px_scaling\" by setting options.hotfixes = [\"px_scaling\"].\r\n * @param {string/Array} [options.format=a4] The format of the first page. Can be:<ul><li>a0 - a10</li><li>b0 - b10</li><li>c0 - c10</li><li>dl</li><li>letter</li><li>government-letter</li><li>legal</li><li>junior-legal</li><li>ledger</li><li>tabloid</li><li>credit-card</li></ul><br />\r\n * Default is \"a4\". If you want to use your own format just pass instead of one of the above predefined formats the size as an number-array, e.g. [595.28, 841.89]\r\n * @param {boolean} [options.putOnlyUsedFonts=false] Only put fonts into the PDF, which were used.\r\n * @param {boolean} [options.compress=false] Compress the generated PDF.\r\n * @param {number} [options.precision=16] Precision of the element-positions.\r\n * @param {number} [options.userUnit=1.0] Not to be confused with the base unit. Please inform yourself before you use it.\r\n * @param {string[]} [options.hotfixes] An array of strings to enable hotfixes such as correct pixel scaling.\r\n * @param {Object} [options.encryption]\r\n * @param {string} [options.encryption.userPassword] Password for the user bound by the given permissions list.\r\n * @param {string} [options.encryption.ownerPassword] Both userPassword and ownerPassword should be set for proper authentication.\r\n * @param {string[]} [options.encryption.userPermissions] Array of permissions \"print\", \"modify\", \"copy\", \"annot-forms\", accessible by the user.\r\n * @param {number|\"smart\"} [options.floatPrecision=16]\r\n * @returns {jsPDF} jsPDF-instance\r\n * @description\r\n * ```\r\n * {\r\n *  orientation: 'p',\r\n *  unit: 'mm',\r\n *  format: 'a4',\r\n *  putOnlyUsedFonts:true,\r\n *  floatPrecision: 16 // or \"smart\", default is 16\r\n * }\r\n * ```\r\n *\r\n * @constructor\r\n */\r\nfunction jsPDF(options) {\r\n  var orientation = typeof arguments[0] === \"string\" ? arguments[0] : \"p\";\r\n  var unit = arguments[1];\r\n  var format = arguments[2];\r\n  var compressPdf = arguments[3];\r\n  var filters = [];\r\n  var userUnit = 1.0;\r\n  var precision;\r\n  var floatPrecision = 16;\r\n  var defaultPathOperation = \"S\";\r\n  var encryptionOptions = null;\r\n\r\n  options = options || {};\r\n\r\n  if (typeof options === \"object\") {\r\n    orientation = options.orientation;\r\n    unit = options.unit || unit;\r\n    format = options.format || format;\r\n    compressPdf = options.compress || options.compressPdf || compressPdf;\r\n    encryptionOptions = options.encryption || null;\r\n    if (encryptionOptions !== null) {\r\n      encryptionOptions.userPassword = encryptionOptions.userPassword || \"\";\r\n      encryptionOptions.ownerPassword = encryptionOptions.ownerPassword || \"\";\r\n      encryptionOptions.userPermissions =\r\n        encryptionOptions.userPermissions || [];\r\n    }\r\n    userUnit =\r\n      typeof options.userUnit === \"number\" ? Math.abs(options.userUnit) : 1.0;\r\n    if (typeof options.precision !== \"undefined\") {\r\n      precision = options.precision;\r\n    }\r\n    if (typeof options.floatPrecision !== \"undefined\") {\r\n      floatPrecision = options.floatPrecision;\r\n    }\r\n    defaultPathOperation = options.defaultPathOperation || \"S\";\r\n  }\r\n\r\n  filters =\r\n    options.filters || (compressPdf === true ? [\"FlateEncode\"] : filters);\r\n\r\n  unit = unit || \"mm\";\r\n  orientation = (\"\" + (orientation || \"P\")).toLowerCase();\r\n  var putOnlyUsedFonts = options.putOnlyUsedFonts || false;\r\n  var usedFonts = {};\r\n\r\n  var API = {\r\n    internal: {},\r\n    __private__: {}\r\n  };\r\n\r\n  API.__private__.PubSub = PubSub;\r\n\r\n  var pdfVersion = \"1.3\";\r\n  var getPdfVersion = (API.__private__.getPdfVersion = function() {\r\n    return pdfVersion;\r\n  });\r\n\r\n  API.__private__.setPdfVersion = function(value) {\r\n    pdfVersion = value;\r\n  };\r\n\r\n  // Size in pt of various paper formats\r\n  var pageFormats = {\r\n    a0: [2383.94, 3370.39],\r\n    a1: [1683.78, 2383.94],\r\n    a2: [1190.55, 1683.78],\r\n    a3: [841.89, 1190.55],\r\n    a4: [595.28, 841.89],\r\n    a5: [419.53, 595.28],\r\n    a6: [297.64, 419.53],\r\n    a7: [209.76, 297.64],\r\n    a8: [147.4, 209.76],\r\n    a9: [104.88, 147.4],\r\n    a10: [73.7, 104.88],\r\n    b0: [2834.65, 4008.19],\r\n    b1: [2004.09, 2834.65],\r\n    b2: [1417.32, 2004.09],\r\n    b3: [1000.63, 1417.32],\r\n    b4: [708.66, 1000.63],\r\n    b5: [498.9, 708.66],\r\n    b6: [354.33, 498.9],\r\n    b7: [249.45, 354.33],\r\n    b8: [175.75, 249.45],\r\n    b9: [124.72, 175.75],\r\n    b10: [87.87, 124.72],\r\n    c0: [2599.37, 3676.54],\r\n    c1: [1836.85, 2599.37],\r\n    c2: [1298.27, 1836.85],\r\n    c3: [918.43, 1298.27],\r\n    c4: [649.13, 918.43],\r\n    c5: [459.21, 649.13],\r\n    c6: [323.15, 459.21],\r\n    c7: [229.61, 323.15],\r\n    c8: [161.57, 229.61],\r\n    c9: [113.39, 161.57],\r\n    c10: [79.37, 113.39],\r\n    dl: [311.81, 623.62],\r\n    letter: [612, 792],\r\n    \"government-letter\": [576, 756],\r\n    legal: [612, 1008],\r\n    \"junior-legal\": [576, 360],\r\n    ledger: [1224, 792],\r\n    tabloid: [792, 1224],\r\n    \"credit-card\": [153, 243]\r\n  };\r\n\r\n  API.__private__.getPageFormats = function() {\r\n    return pageFormats;\r\n  };\r\n\r\n  var getPageFormat = (API.__private__.getPageFormat = function(value) {\r\n    return pageFormats[value];\r\n  });\r\n\r\n  format = format || \"a4\";\r\n\r\n  var ApiMode = {\r\n    COMPAT: \"compat\",\r\n    ADVANCED: \"advanced\"\r\n  };\r\n  var apiMode = ApiMode.COMPAT;\r\n\r\n  function advancedAPI() {\r\n    // prepend global change of basis matrix\r\n    // (Now, instead of converting every coordinate to the pdf coordinate system, we apply a matrix\r\n    // that does this job for us (however, texts, images and similar objects must be drawn bottom up))\r\n    this.saveGraphicsState();\r\n    out(\r\n      new Matrix(\r\n        scaleFactor,\r\n        0,\r\n        0,\r\n        -scaleFactor,\r\n        0,\r\n        getPageHeight() * scaleFactor\r\n      ).toString() + \" cm\"\r\n    );\r\n    this.setFontSize(this.getFontSize() / scaleFactor);\r\n\r\n    // The default in MrRio's implementation is \"S\" (stroke), whereas the default in the yWorks implementation\r\n    // was \"n\" (none). Although this has nothing to do with transforms, we should use the API switch here.\r\n    defaultPathOperation = \"n\";\r\n\r\n    apiMode = ApiMode.ADVANCED;\r\n  }\r\n\r\n  function compatAPI() {\r\n    this.restoreGraphicsState();\r\n    defaultPathOperation = \"S\";\r\n    apiMode = ApiMode.COMPAT;\r\n  }\r\n\r\n  /**\r\n   * @function combineFontStyleAndFontWeight\r\n   * @param {string} fontStyle Fontstyle or variant. Example: \"italic\".\r\n   * @param {number | string} fontWeight Weight of the Font. Example: \"normal\" | 400\r\n   * @returns {string}\r\n   * @private\r\n   */\r\n  var combineFontStyleAndFontWeight = (API.__private__.combineFontStyleAndFontWeight = function(\r\n    fontStyle,\r\n    fontWeight\r\n  ) {\r\n    if (\r\n      (fontStyle == \"bold\" && fontWeight == \"normal\") ||\r\n      (fontStyle == \"bold\" && fontWeight == 400) ||\r\n      (fontStyle == \"normal\" && fontWeight == \"italic\") ||\r\n      (fontStyle == \"bold\" && fontWeight == \"italic\")\r\n    ) {\r\n      throw new Error(\"Invalid Combination of fontweight and fontstyle\");\r\n    }\r\n    if (fontWeight) {\r\n      fontStyle =\r\n        fontWeight == 400 || fontWeight === \"normal\"\r\n          ? fontStyle === \"italic\"\r\n            ? \"italic\"\r\n            : \"normal\"\r\n          : (fontWeight == 700 || fontWeight === \"bold\") &&\r\n            fontStyle === \"normal\"\r\n          ? \"bold\"\r\n          : (fontWeight == 700 ? \"bold\" : fontWeight) + \"\" + fontStyle;\r\n    }\r\n    return fontStyle;\r\n  });\r\n\r\n  /**\r\n   * @callback ApiSwitchBody\r\n   * @param {jsPDF} pdf\r\n   */\r\n\r\n  /**\r\n   * For compatibility reasons jsPDF offers two API modes which differ in the way they convert between the the usual\r\n   * screen coordinates and the PDF coordinate system.\r\n   *   - \"compat\": Offers full compatibility across all plugins but does not allow arbitrary transforms\r\n   *   - \"advanced\": Allows arbitrary transforms and more advanced features like pattern fills. Some plugins might\r\n   *     not support this mode, though.\r\n   * Initial mode is \"compat\".\r\n   *\r\n   * You can either provide a callback to the body argument, which means that jsPDF will automatically switch back to\r\n   * the original API mode afterwards; or you can omit the callback and switch back manually using {@link compatAPI}.\r\n   *\r\n   * Note, that the calls to {@link saveGraphicsState} and {@link restoreGraphicsState} need to be balanced within the\r\n   * callback or between calls of this method and its counterpart {@link compatAPI}. Calls to {@link beginFormObject}\r\n   * or {@link beginTilingPattern} need to be closed by their counterparts before switching back to \"compat\" API mode.\r\n   *\r\n   * @param {ApiSwitchBody=} body When provided, this callback will be called after the API mode has been switched.\r\n   * The API mode will be switched back automatically afterwards.\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name advancedAPI\r\n   */\r\n  API.advancedAPI = function(body) {\r\n    var doSwitch = apiMode === ApiMode.COMPAT;\r\n\r\n    if (doSwitch) {\r\n      advancedAPI.call(this);\r\n    }\r\n\r\n    if (typeof body !== \"function\") {\r\n      return this;\r\n    }\r\n\r\n    body(this);\r\n\r\n    if (doSwitch) {\r\n      compatAPI.call(this);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Switches to \"compat\" API mode. See {@link advancedAPI} for more details.\r\n   *\r\n   * @param {ApiSwitchBody=} body When provided, this callback will be called after the API mode has been switched.\r\n   * The API mode will be switched back automatically afterwards.\r\n   * @return {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name compatApi\r\n   */\r\n  API.compatAPI = function(body) {\r\n    var doSwitch = apiMode === ApiMode.ADVANCED;\r\n\r\n    if (doSwitch) {\r\n      compatAPI.call(this);\r\n    }\r\n\r\n    if (typeof body !== \"function\") {\r\n      return this;\r\n    }\r\n\r\n    body(this);\r\n\r\n    if (doSwitch) {\r\n      advancedAPI.call(this);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} True iff the current API mode is \"advanced\". See {@link advancedAPI}.\r\n   * @memberof jsPDF#\r\n   * @name isAdvancedAPI\r\n   */\r\n  API.isAdvancedAPI = function() {\r\n    return apiMode === ApiMode.ADVANCED;\r\n  };\r\n\r\n  var advancedApiModeTrap = function(methodName) {\r\n    if (apiMode !== ApiMode.ADVANCED) {\r\n      throw new Error(\r\n        methodName +\r\n          \" is only available in 'advanced' API mode. \" +\r\n          \"You need to call advancedAPI() first.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  var roundToPrecision = (API.roundToPrecision = API.__private__.roundToPrecision = function(\r\n    number,\r\n    parmPrecision\r\n  ) {\r\n    var tmpPrecision = precision || parmPrecision;\r\n    if (isNaN(number) || isNaN(tmpPrecision)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.roundToPrecision\");\r\n    }\r\n    return number.toFixed(tmpPrecision).replace(/0+$/, \"\");\r\n  });\r\n\r\n  // high precision float\r\n  var hpf;\r\n  if (typeof floatPrecision === \"number\") {\r\n    hpf = API.hpf = API.__private__.hpf = function(number) {\r\n      if (isNaN(number)) {\r\n        throw new Error(\"Invalid argument passed to jsPDF.hpf\");\r\n      }\r\n      return roundToPrecision(number, floatPrecision);\r\n    };\r\n  } else if (floatPrecision === \"smart\") {\r\n    hpf = API.hpf = API.__private__.hpf = function(number) {\r\n      if (isNaN(number)) {\r\n        throw new Error(\"Invalid argument passed to jsPDF.hpf\");\r\n      }\r\n      if (number > -1 && number < 1) {\r\n        return roundToPrecision(number, 16);\r\n      } else {\r\n        return roundToPrecision(number, 5);\r\n      }\r\n    };\r\n  } else {\r\n    hpf = API.hpf = API.__private__.hpf = function(number) {\r\n      if (isNaN(number)) {\r\n        throw new Error(\"Invalid argument passed to jsPDF.hpf\");\r\n      }\r\n      return roundToPrecision(number, 16);\r\n    };\r\n  }\r\n  var f2 = (API.f2 = API.__private__.f2 = function(number) {\r\n    if (isNaN(number)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.f2\");\r\n    }\r\n    return roundToPrecision(number, 2);\r\n  });\r\n\r\n  var f3 = (API.__private__.f3 = function(number) {\r\n    if (isNaN(number)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.f3\");\r\n    }\r\n    return roundToPrecision(number, 3);\r\n  });\r\n\r\n  var scale = (API.scale = API.__private__.scale = function(number) {\r\n    if (isNaN(number)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.scale\");\r\n    }\r\n    if (apiMode === ApiMode.COMPAT) {\r\n      return number * scaleFactor;\r\n    } else if (apiMode === ApiMode.ADVANCED) {\r\n      return number;\r\n    }\r\n  });\r\n\r\n  var transformY = function(y) {\r\n    if (apiMode === ApiMode.COMPAT) {\r\n      return getPageHeight() - y;\r\n    } else if (apiMode === ApiMode.ADVANCED) {\r\n      return y;\r\n    }\r\n  };\r\n\r\n  var transformScaleY = function(y) {\r\n    return scale(transformY(y));\r\n  };\r\n\r\n  /**\r\n   * @name setPrecision\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {string} precision\r\n   * @returns {jsPDF}\r\n   */\r\n  API.__private__.setPrecision = API.setPrecision = function(value) {\r\n    if (typeof parseInt(value, 10) === \"number\") {\r\n      precision = parseInt(value, 10);\r\n    }\r\n  };\r\n\r\n  var fileId = \"00000000000000000000000000000000\";\r\n\r\n  var getFileId = (API.__private__.getFileId = function() {\r\n    return fileId;\r\n  });\r\n\r\n  var setFileId = (API.__private__.setFileId = function(value) {\r\n    if (typeof value !== \"undefined\" && /^[a-fA-F0-9]{32}$/.test(value)) {\r\n      fileId = value.toUpperCase();\r\n    } else {\r\n      fileId = fileId\r\n        .split(\"\")\r\n        .map(function() {\r\n          return \"ABCDEF0123456789\".charAt(Math.floor(Math.random() * 16));\r\n        })\r\n        .join(\"\");\r\n    }\r\n\r\n    if (encryptionOptions !== null) {\r\n      encryption = new PDFSecurity(\r\n        encryptionOptions.userPermissions,\r\n        encryptionOptions.userPassword,\r\n        encryptionOptions.ownerPassword,\r\n        fileId\r\n      );\r\n    }\r\n    return fileId;\r\n  });\r\n\r\n  /**\r\n   * @name setFileId\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {string} value GUID.\r\n   * @returns {jsPDF}\r\n   */\r\n  API.setFileId = function(value) {\r\n    setFileId(value);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @name getFileId\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   *\r\n   * @returns {string} GUID.\r\n   */\r\n  API.getFileId = function() {\r\n    return getFileId();\r\n  };\r\n\r\n  var creationDate;\r\n\r\n  var convertDateToPDFDate = (API.__private__.convertDateToPDFDate = function(\r\n    parmDate\r\n  ) {\r\n    var result = \"\";\r\n    var tzoffset = parmDate.getTimezoneOffset(),\r\n      tzsign = tzoffset < 0 ? \"+\" : \"-\",\r\n      tzhour = Math.floor(Math.abs(tzoffset / 60)),\r\n      tzmin = Math.abs(tzoffset % 60),\r\n      timeZoneString = [tzsign, padd2(tzhour), \"'\", padd2(tzmin), \"'\"].join(\"\");\r\n\r\n    result = [\r\n      \"D:\",\r\n      parmDate.getFullYear(),\r\n      padd2(parmDate.getMonth() + 1),\r\n      padd2(parmDate.getDate()),\r\n      padd2(parmDate.getHours()),\r\n      padd2(parmDate.getMinutes()),\r\n      padd2(parmDate.getSeconds()),\r\n      timeZoneString\r\n    ].join(\"\");\r\n    return result;\r\n  });\r\n\r\n  var convertPDFDateToDate = (API.__private__.convertPDFDateToDate = function(\r\n    parmPDFDate\r\n  ) {\r\n    var year = parseInt(parmPDFDate.substr(2, 4), 10);\r\n    var month = parseInt(parmPDFDate.substr(6, 2), 10) - 1;\r\n    var date = parseInt(parmPDFDate.substr(8, 2), 10);\r\n    var hour = parseInt(parmPDFDate.substr(10, 2), 10);\r\n    var minutes = parseInt(parmPDFDate.substr(12, 2), 10);\r\n    var seconds = parseInt(parmPDFDate.substr(14, 2), 10);\r\n    // var timeZoneHour = parseInt(parmPDFDate.substr(16, 2), 10);\r\n    // var timeZoneMinutes = parseInt(parmPDFDate.substr(20, 2), 10);\r\n\r\n    var resultingDate = new Date(year, month, date, hour, minutes, seconds, 0);\r\n    return resultingDate;\r\n  });\r\n\r\n  var setCreationDate = (API.__private__.setCreationDate = function(date) {\r\n    var tmpCreationDateString;\r\n    var regexPDFCreationDate = /^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\\+0[0-9]|\\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/;\r\n    if (typeof date === \"undefined\") {\r\n      date = new Date();\r\n    }\r\n\r\n    if (date instanceof Date) {\r\n      tmpCreationDateString = convertDateToPDFDate(date);\r\n    } else if (regexPDFCreationDate.test(date)) {\r\n      tmpCreationDateString = date;\r\n    } else {\r\n      throw new Error(\"Invalid argument passed to jsPDF.setCreationDate\");\r\n    }\r\n    creationDate = tmpCreationDateString;\r\n    return creationDate;\r\n  });\r\n\r\n  var getCreationDate = (API.__private__.getCreationDate = function(type) {\r\n    var result = creationDate;\r\n    if (type === \"jsDate\") {\r\n      result = convertPDFDateToDate(creationDate);\r\n    }\r\n    return result;\r\n  });\r\n\r\n  /**\r\n   * @name setCreationDate\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {Object} date\r\n   * @returns {jsPDF}\r\n   */\r\n  API.setCreationDate = function(date) {\r\n    setCreationDate(date);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @name getCreationDate\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {Object} type\r\n   * @returns {Object}\r\n   */\r\n  API.getCreationDate = function(type) {\r\n    return getCreationDate(type);\r\n  };\r\n\r\n  var padd2 = (API.__private__.padd2 = function(number) {\r\n    return (\"0\" + parseInt(number)).slice(-2);\r\n  });\r\n\r\n  var padd2Hex = (API.__private__.padd2Hex = function(hexString) {\r\n    hexString = hexString.toString();\r\n    return (\"00\" + hexString).substr(hexString.length);\r\n  });\r\n\r\n  var objectNumber = 0; // 'n' Current object number\r\n  var offsets = []; // List of offsets. Activated and reset by buildDocument(). Pupulated by various calls buildDocument makes.\r\n  var content = [];\r\n  var contentLength = 0;\r\n  var additionalObjects = [];\r\n\r\n  var pages = [];\r\n  var currentPage;\r\n  var hasCustomDestination = false;\r\n  var outputDestination = content;\r\n\r\n  var resetDocument = function() {\r\n    //reset fields relevant for objectNumber generation and xref.\r\n    objectNumber = 0;\r\n    contentLength = 0;\r\n    content = [];\r\n    offsets = [];\r\n    additionalObjects = [];\r\n\r\n    rootDictionaryObjId = newObjectDeferred();\r\n    resourceDictionaryObjId = newObjectDeferred();\r\n  };\r\n\r\n  API.__private__.setCustomOutputDestination = function(destination) {\r\n    hasCustomDestination = true;\r\n    outputDestination = destination;\r\n  };\r\n  var setOutputDestination = function(destination) {\r\n    if (!hasCustomDestination) {\r\n      outputDestination = destination;\r\n    }\r\n  };\r\n\r\n  API.__private__.resetCustomOutputDestination = function() {\r\n    hasCustomDestination = false;\r\n    outputDestination = content;\r\n  };\r\n\r\n  var out = (API.__private__.out = function(string) {\r\n    string = string.toString();\r\n    contentLength += string.length + 1;\r\n    outputDestination.push(string);\r\n\r\n    return outputDestination;\r\n  });\r\n\r\n  var write = (API.__private__.write = function(value) {\r\n    return out(\r\n      arguments.length === 1\r\n        ? value.toString()\r\n        : Array.prototype.join.call(arguments, \" \")\r\n    );\r\n  });\r\n\r\n  var getArrayBuffer = (API.__private__.getArrayBuffer = function(data) {\r\n    var len = data.length,\r\n      ab = new ArrayBuffer(len),\r\n      u8 = new Uint8Array(ab);\r\n\r\n    while (len--) u8[len] = data.charCodeAt(len);\r\n    return ab;\r\n  });\r\n\r\n  var standardFonts = [\r\n    [\"Helvetica\", \"helvetica\", \"normal\", \"WinAnsiEncoding\"],\r\n    [\"Helvetica-Bold\", \"helvetica\", \"bold\", \"WinAnsiEncoding\"],\r\n    [\"Helvetica-Oblique\", \"helvetica\", \"italic\", \"WinAnsiEncoding\"],\r\n    [\"Helvetica-BoldOblique\", \"helvetica\", \"bolditalic\", \"WinAnsiEncoding\"],\r\n    [\"Courier\", \"courier\", \"normal\", \"WinAnsiEncoding\"],\r\n    [\"Courier-Bold\", \"courier\", \"bold\", \"WinAnsiEncoding\"],\r\n    [\"Courier-Oblique\", \"courier\", \"italic\", \"WinAnsiEncoding\"],\r\n    [\"Courier-BoldOblique\", \"courier\", \"bolditalic\", \"WinAnsiEncoding\"],\r\n    [\"Times-Roman\", \"times\", \"normal\", \"WinAnsiEncoding\"],\r\n    [\"Times-Bold\", \"times\", \"bold\", \"WinAnsiEncoding\"],\r\n    [\"Times-Italic\", \"times\", \"italic\", \"WinAnsiEncoding\"],\r\n    [\"Times-BoldItalic\", \"times\", \"bolditalic\", \"WinAnsiEncoding\"],\r\n    [\"ZapfDingbats\", \"zapfdingbats\", \"normal\", null],\r\n    [\"Symbol\", \"symbol\", \"normal\", null]\r\n  ];\r\n\r\n  API.__private__.getStandardFonts = function() {\r\n    return standardFonts;\r\n  };\r\n\r\n  var activeFontSize = options.fontSize || 16;\r\n\r\n  /**\r\n   * Sets font size for upcoming text elements.\r\n   *\r\n   * @param {number} size Font size in points.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setFontSize\r\n   */\r\n  API.__private__.setFontSize = API.setFontSize = function(size) {\r\n    if (apiMode === ApiMode.ADVANCED) {\r\n      activeFontSize = size / scaleFactor;\r\n    } else {\r\n      activeFontSize = size;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets the fontsize for upcoming text elements.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {number}\r\n   * @memberof jsPDF#\r\n   * @name getFontSize\r\n   */\r\n  var getFontSize = (API.__private__.getFontSize = API.getFontSize = function() {\r\n    if (apiMode === ApiMode.COMPAT) {\r\n      return activeFontSize;\r\n    } else {\r\n      return activeFontSize * scaleFactor;\r\n    }\r\n  });\r\n\r\n  var R2L = options.R2L || false;\r\n\r\n  /**\r\n   * Set value of R2L functionality.\r\n   *\r\n   * @param {boolean} value\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF} jsPDF-instance\r\n   * @memberof jsPDF#\r\n   * @name setR2L\r\n   */\r\n  API.__private__.setR2L = API.setR2L = function(value) {\r\n    R2L = value;\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Get value of R2L functionality.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {boolean} jsPDF-instance\r\n   * @memberof jsPDF#\r\n   * @name getR2L\r\n   */\r\n  API.__private__.getR2L = API.getR2L = function() {\r\n    return R2L;\r\n  };\r\n\r\n  var zoomMode; // default: 1;\r\n\r\n  var setZoomMode = (API.__private__.setZoomMode = function(zoom) {\r\n    var validZoomModes = [\r\n      undefined,\r\n      null,\r\n      \"fullwidth\",\r\n      \"fullheight\",\r\n      \"fullpage\",\r\n      \"original\"\r\n    ];\r\n\r\n    if (/^(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)%$/.test(zoom)) {\r\n      zoomMode = zoom;\r\n    } else if (!isNaN(zoom)) {\r\n      zoomMode = parseInt(zoom, 10);\r\n    } else if (validZoomModes.indexOf(zoom) !== -1) {\r\n      zoomMode = zoom;\r\n    } else {\r\n      throw new Error(\r\n        'zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. \"' +\r\n          zoom +\r\n          '\" is not recognized.'\r\n      );\r\n    }\r\n  });\r\n\r\n  API.__private__.getZoomMode = function() {\r\n    return zoomMode;\r\n  };\r\n\r\n  var pageMode; // default: 'UseOutlines';\r\n  var setPageMode = (API.__private__.setPageMode = function(pmode) {\r\n    var validPageModes = [\r\n      undefined,\r\n      null,\r\n      \"UseNone\",\r\n      \"UseOutlines\",\r\n      \"UseThumbs\",\r\n      \"FullScreen\"\r\n    ];\r\n\r\n    if (validPageModes.indexOf(pmode) == -1) {\r\n      throw new Error(\r\n        'Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. \"' +\r\n          pmode +\r\n          '\" is not recognized.'\r\n      );\r\n    }\r\n    pageMode = pmode;\r\n  });\r\n\r\n  API.__private__.getPageMode = function() {\r\n    return pageMode;\r\n  };\r\n\r\n  var layoutMode; // default: 'continuous';\r\n  var setLayoutMode = (API.__private__.setLayoutMode = function(layout) {\r\n    var validLayoutModes = [\r\n      undefined,\r\n      null,\r\n      \"continuous\",\r\n      \"single\",\r\n      \"twoleft\",\r\n      \"tworight\",\r\n      \"two\"\r\n    ];\r\n\r\n    if (validLayoutModes.indexOf(layout) == -1) {\r\n      throw new Error(\r\n        'Layout mode must be one of continuous, single, twoleft, tworight. \"' +\r\n          layout +\r\n          '\" is not recognized.'\r\n      );\r\n    }\r\n    layoutMode = layout;\r\n  });\r\n\r\n  API.__private__.getLayoutMode = function() {\r\n    return layoutMode;\r\n  };\r\n\r\n  /**\r\n   * Set the display mode options of the page like zoom and layout.\r\n   *\r\n   * @name setDisplayMode\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {integer|String} zoom   You can pass an integer or percentage as\r\n   * a string. 2 will scale the document up 2x, '200%' will scale up by the\r\n   * same amount. You can also set it to 'fullwidth', 'fullheight',\r\n   * 'fullpage', or 'original'.\r\n   *\r\n   * Only certain PDF readers support this, such as Adobe Acrobat.\r\n   *\r\n   * @param {string} layout Layout mode can be: 'continuous' - this is the\r\n   * default continuous scroll. 'single' - the single page mode only shows one\r\n   * page at a time. 'twoleft' - two column left mode, first page starts on\r\n   * the left, and 'tworight' - pages are laid out in two columns, with the\r\n   * first page on the right. This would be used for books.\r\n   * @param {string} pmode 'UseOutlines' - it shows the\r\n   * outline of the document on the left. 'UseThumbs' - shows thumbnails along\r\n   * the left. 'FullScreen' - prompts the user to enter fullscreen mode.\r\n   *\r\n   * @returns {jsPDF}\r\n   */\r\n  API.__private__.setDisplayMode = API.setDisplayMode = function(\r\n    zoom,\r\n    layout,\r\n    pmode\r\n  ) {\r\n    setZoomMode(zoom);\r\n    setLayoutMode(layout);\r\n    setPageMode(pmode);\r\n    return this;\r\n  };\r\n\r\n  var documentProperties = {\r\n    title: \"\",\r\n    subject: \"\",\r\n    author: \"\",\r\n    keywords: \"\",\r\n    creator: \"\"\r\n  };\r\n\r\n  API.__private__.getDocumentProperty = function(key) {\r\n    if (Object.keys(documentProperties).indexOf(key) === -1) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.getDocumentProperty\");\r\n    }\r\n    return documentProperties[key];\r\n  };\r\n\r\n  API.__private__.getDocumentProperties = function() {\r\n    return documentProperties;\r\n  };\r\n\r\n  /**\r\n   * Adds a properties to the PDF document.\r\n   *\r\n   * @param {Object} A property_name-to-property_value object structure.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setDocumentProperties\r\n   */\r\n  API.__private__.setDocumentProperties = API.setProperties = API.setDocumentProperties = function(\r\n    properties\r\n  ) {\r\n    // copying only those properties we can render.\r\n    for (var property in documentProperties) {\r\n      if (documentProperties.hasOwnProperty(property) && properties[property]) {\r\n        documentProperties[property] = properties[property];\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  API.__private__.setDocumentProperty = function(key, value) {\r\n    if (Object.keys(documentProperties).indexOf(key) === -1) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.setDocumentProperty\");\r\n    }\r\n    return (documentProperties[key] = value);\r\n  };\r\n\r\n  var fonts = {}; // collection of font objects, where key is fontKey - a dynamically created label for a given font.\r\n  var fontmap = {}; // mapping structure fontName > fontStyle > font key - performance layer. See addFont()\r\n  var activeFontKey; // will be string representing the KEY of the font as combination of fontName + fontStyle\r\n  var fontStateStack = []; //\r\n  var patterns = {}; // collection of pattern objects\r\n  var patternMap = {}; // see fonts\r\n  var gStates = {}; // collection of graphic state objects\r\n  var gStatesMap = {}; // see fonts\r\n  var activeGState = null;\r\n  var scaleFactor; // Scale factor\r\n  var page = 0;\r\n  var pagesContext = [];\r\n  var events = new PubSub(API);\r\n  var hotfixes = options.hotfixes || [];\r\n\r\n  var renderTargets = {};\r\n  var renderTargetMap = {};\r\n  var renderTargetStack = [];\r\n  var pageX;\r\n  var pageY;\r\n  var pageMatrix; // only used for FormObjects\r\n\r\n  /**\r\n   * A matrix object for 2D homogenous transformations: <br>\r\n   * | a b 0 | <br>\r\n   * | c d 0 | <br>\r\n   * | e f 1 | <br>\r\n   * pdf multiplies matrices righthand: v' = v x m1 x m2 x ...\r\n   *\r\n   * @class\r\n   * @name Matrix\r\n   * @param {number} sx\r\n   * @param {number} shy\r\n   * @param {number} shx\r\n   * @param {number} sy\r\n   * @param {number} tx\r\n   * @param {number} ty\r\n   * @constructor\r\n   */\r\n  var Matrix = function(sx, shy, shx, sy, tx, ty) {\r\n    if (!(this instanceof Matrix)) {\r\n      return new Matrix(sx, shy, shx, sy, tx, ty);\r\n    }\r\n\r\n    if (isNaN(sx)) sx = 1;\r\n    if (isNaN(shy)) shy = 0;\r\n    if (isNaN(shx)) shx = 0;\r\n    if (isNaN(sy)) sy = 1;\r\n    if (isNaN(tx)) tx = 0;\r\n    if (isNaN(ty)) ty = 0;\r\n\r\n    this._matrix = [sx, shy, shx, sy, tx, ty];\r\n  };\r\n\r\n  /**\r\n   * @name sx\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"sx\", {\r\n    get: function() {\r\n      return this._matrix[0];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[0] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name shy\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"shy\", {\r\n    get: function() {\r\n      return this._matrix[1];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[1] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name shx\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"shx\", {\r\n    get: function() {\r\n      return this._matrix[2];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[2] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name sy\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"sy\", {\r\n    get: function() {\r\n      return this._matrix[3];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[3] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name tx\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"tx\", {\r\n    get: function() {\r\n      return this._matrix[4];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[4] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name ty\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"ty\", {\r\n    get: function() {\r\n      return this._matrix[5];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[5] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"a\", {\r\n    get: function() {\r\n      return this._matrix[0];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[0] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"b\", {\r\n    get: function() {\r\n      return this._matrix[1];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[1] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"c\", {\r\n    get: function() {\r\n      return this._matrix[2];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[2] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"d\", {\r\n    get: function() {\r\n      return this._matrix[3];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[3] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"e\", {\r\n    get: function() {\r\n      return this._matrix[4];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[4] = value;\r\n    }\r\n  });\r\n\r\n  Object.defineProperty(Matrix.prototype, \"f\", {\r\n    get: function() {\r\n      return this._matrix[5];\r\n    },\r\n    set: function(value) {\r\n      this._matrix[5] = value;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name rotation\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"rotation\", {\r\n    get: function() {\r\n      return Math.atan2(this.shx, this.sx);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name scaleX\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"scaleX\", {\r\n    get: function() {\r\n      return this.decompose().scale.sx;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name scaleY\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"scaleY\", {\r\n    get: function() {\r\n      return this.decompose().scale.sy;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * @name isIdentity\r\n   * @memberof Matrix#\r\n   */\r\n  Object.defineProperty(Matrix.prototype, \"isIdentity\", {\r\n    get: function() {\r\n      if (this.sx !== 1) {\r\n        return false;\r\n      }\r\n      if (this.shy !== 0) {\r\n        return false;\r\n      }\r\n      if (this.shx !== 0) {\r\n        return false;\r\n      }\r\n      if (this.sy !== 1) {\r\n        return false;\r\n      }\r\n      if (this.tx !== 0) {\r\n        return false;\r\n      }\r\n      if (this.ty !== 0) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Join the Matrix Values to a String\r\n   *\r\n   * @function join\r\n   * @param {string} separator Specifies a string to separate each pair of adjacent elements of the array. The separator is converted to a string if necessary. If omitted, the array elements are separated with a comma (\",\"). If separator is an empty string, all elements are joined without any characters in between them.\r\n   * @returns {string} A string with all array elements joined.\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.join = function(separator) {\r\n    return [this.sx, this.shy, this.shx, this.sy, this.tx, this.ty]\r\n      .map(hpf)\r\n      .join(separator);\r\n  };\r\n\r\n  /**\r\n   * Multiply the matrix with given Matrix\r\n   *\r\n   * @function multiply\r\n   * @param matrix\r\n   * @returns {Matrix}\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.multiply = function(matrix) {\r\n    var sx = matrix.sx * this.sx + matrix.shy * this.shx;\r\n    var shy = matrix.sx * this.shy + matrix.shy * this.sy;\r\n    var shx = matrix.shx * this.sx + matrix.sy * this.shx;\r\n    var sy = matrix.shx * this.shy + matrix.sy * this.sy;\r\n    var tx = matrix.tx * this.sx + matrix.ty * this.shx + this.tx;\r\n    var ty = matrix.tx * this.shy + matrix.ty * this.sy + this.ty;\r\n\r\n    return new Matrix(sx, shy, shx, sy, tx, ty);\r\n  };\r\n\r\n  /**\r\n   * @function decompose\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.decompose = function() {\r\n    var a = this.sx;\r\n    var b = this.shy;\r\n    var c = this.shx;\r\n    var d = this.sy;\r\n    var e = this.tx;\r\n    var f = this.ty;\r\n\r\n    var scaleX = Math.sqrt(a * a + b * b);\r\n    a /= scaleX;\r\n    b /= scaleX;\r\n\r\n    var shear = a * c + b * d;\r\n    c -= a * shear;\r\n    d -= b * shear;\r\n\r\n    var scaleY = Math.sqrt(c * c + d * d);\r\n    c /= scaleY;\r\n    d /= scaleY;\r\n    shear /= scaleY;\r\n\r\n    if (a * d < b * c) {\r\n      a = -a;\r\n      b = -b;\r\n      shear = -shear;\r\n      scaleX = -scaleX;\r\n    }\r\n\r\n    return {\r\n      scale: new Matrix(scaleX, 0, 0, scaleY, 0, 0),\r\n      translate: new Matrix(1, 0, 0, 1, e, f),\r\n      rotate: new Matrix(a, b, -b, a, 0, 0),\r\n      skew: new Matrix(1, 0, shear, 1, 0, 0)\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @function toString\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.toString = function(parmPrecision) {\r\n    return this.join(\" \");\r\n  };\r\n\r\n  /**\r\n   * @function inversed\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.inversed = function() {\r\n    var a = this.sx,\r\n      b = this.shy,\r\n      c = this.shx,\r\n      d = this.sy,\r\n      e = this.tx,\r\n      f = this.ty;\r\n\r\n    var quot = 1 / (a * d - b * c);\r\n\r\n    var aInv = d * quot;\r\n    var bInv = -b * quot;\r\n    var cInv = -c * quot;\r\n    var dInv = a * quot;\r\n    var eInv = -aInv * e - cInv * f;\r\n    var fInv = -bInv * e - dInv * f;\r\n\r\n    return new Matrix(aInv, bInv, cInv, dInv, eInv, fInv);\r\n  };\r\n\r\n  /**\r\n   * @function applyToPoint\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.applyToPoint = function(pt) {\r\n    var x = pt.x * this.sx + pt.y * this.shx + this.tx;\r\n    var y = pt.x * this.shy + pt.y * this.sy + this.ty;\r\n    return new Point(x, y);\r\n  };\r\n\r\n  /**\r\n   * @function applyToRectangle\r\n   * @memberof Matrix#\r\n   */\r\n  Matrix.prototype.applyToRectangle = function(rect) {\r\n    var pt1 = this.applyToPoint(rect);\r\n    var pt2 = this.applyToPoint(new Point(rect.x + rect.w, rect.y + rect.h));\r\n    return new Rectangle(pt1.x, pt1.y, pt2.x - pt1.x, pt2.y - pt1.y);\r\n  };\r\n\r\n  /**\r\n   * Clone the Matrix\r\n   *\r\n   * @function clone\r\n   * @memberof Matrix#\r\n   * @name clone\r\n   * @instance\r\n   */\r\n  Matrix.prototype.clone = function() {\r\n    var sx = this.sx;\r\n    var shy = this.shy;\r\n    var shx = this.shx;\r\n    var sy = this.sy;\r\n    var tx = this.tx;\r\n    var ty = this.ty;\r\n\r\n    return new Matrix(sx, shy, shx, sy, tx, ty);\r\n  };\r\n\r\n  API.Matrix = Matrix;\r\n\r\n  /**\r\n   * Multiplies two matrices. (see {@link Matrix})\r\n   * @param {Matrix} m1\r\n   * @param {Matrix} m2\r\n   * @memberof jsPDF#\r\n   * @name matrixMult\r\n   */\r\n  var matrixMult = (API.matrixMult = function(m1, m2) {\r\n    return m2.multiply(m1);\r\n  });\r\n\r\n  /**\r\n   * The identity matrix (equivalent to new Matrix(1, 0, 0, 1, 0, 0)).\r\n   * @type {Matrix}\r\n   * @memberof! jsPDF#\r\n   * @name identityMatrix\r\n   */\r\n  var identityMatrix = new Matrix(1, 0, 0, 1, 0, 0);\r\n  API.unitMatrix = API.identityMatrix = identityMatrix;\r\n\r\n  /**\r\n   * Adds a new pattern for later use.\r\n   * @param {String} key The key by it can be referenced later. The keys must be unique!\r\n   * @param {API.Pattern} pattern The pattern\r\n   */\r\n  var addPattern = function(key, pattern) {\r\n    // only add it if it is not already present (the keys provided by the user must be unique!)\r\n    if (patternMap[key]) return;\r\n\r\n    var prefix = pattern instanceof ShadingPattern ? \"Sh\" : \"P\";\r\n    var patternKey = prefix + (Object.keys(patterns).length + 1).toString(10);\r\n    pattern.id = patternKey;\r\n\r\n    patternMap[key] = patternKey;\r\n    patterns[patternKey] = pattern;\r\n\r\n    events.publish(\"addPattern\", pattern);\r\n  };\r\n\r\n  /**\r\n   * A pattern describing a shading pattern.\r\n   *\r\n   * Only available in \"advanced\" API mode.\r\n   *\r\n   * @param {String} type One of \"axial\" or \"radial\"\r\n   * @param {Array<Number>} coords Either [x1, y1, x2, y2] for \"axial\" type describing the two interpolation points\r\n   * or [x1, y1, r, x2, y2, r2] for \"radial\" describing inner and the outer circle.\r\n   * @param {Array<Object>} colors An array of objects with the fields \"offset\" and \"color\". \"offset\" describes\r\n   * the offset in parameter space [0, 1]. \"color\" is an array of length 3 describing RGB values in [0, 255].\r\n   * @param {GState=} gState An additional graphics state that gets applied to the pattern (optional).\r\n   * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system\r\n   * and the use coordinate system (optional).\r\n   * @constructor\r\n   * @extends API.Pattern\r\n   */\r\n  API.ShadingPattern = ShadingPattern;\r\n\r\n  /**\r\n   * A PDF Tiling pattern.\r\n   *\r\n   * Only available in \"advanced\" API mode.\r\n   *\r\n   * @param {Array.<Number>} boundingBox The bounding box at which one pattern cell gets clipped.\r\n   * @param {Number} xStep Horizontal spacing between pattern cells.\r\n   * @param {Number} yStep Vertical spacing between pattern cells.\r\n   * @param {API.GState=} gState An additional graphics state that gets applied to the pattern (optional).\r\n   * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system\r\n   * and the use coordinate system (optional).\r\n   * @constructor\r\n   * @extends API.Pattern\r\n   */\r\n  API.TilingPattern = TilingPattern;\r\n\r\n  /**\r\n   * Adds a new {@link API.ShadingPattern} for later use. Only available in \"advanced\" API mode.\r\n   * @param {String} key\r\n   * @param {Pattern} pattern\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name addPattern\r\n   */\r\n  API.addShadingPattern = function(key, pattern) {\r\n    advancedApiModeTrap(\"addShadingPattern()\");\r\n\r\n    addPattern(key, pattern);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Begins a new tiling pattern. All subsequent render calls are drawn to this pattern until {@link API.endTilingPattern}\r\n   * gets called. Only available in \"advanced\" API mode.\r\n   * @param {API.Pattern} pattern\r\n   * @memberof jsPDF#\r\n   * @name beginTilingPattern\r\n   */\r\n  API.beginTilingPattern = function(pattern) {\r\n    advancedApiModeTrap(\"beginTilingPattern()\");\r\n\r\n    beginNewRenderTarget(\r\n      pattern.boundingBox[0],\r\n      pattern.boundingBox[1],\r\n      pattern.boundingBox[2] - pattern.boundingBox[0],\r\n      pattern.boundingBox[3] - pattern.boundingBox[1],\r\n      pattern.matrix\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Ends a tiling pattern and sets the render target to the one active before {@link API.beginTilingPattern} has been called.\r\n   *\r\n   * Only available in \"advanced\" API mode.\r\n   *\r\n   * @param {string} key A unique key that is used to reference this pattern at later use.\r\n   * @param {API.Pattern} pattern The pattern to end.\r\n   * @memberof jsPDF#\r\n   * @name endTilingPattern\r\n   */\r\n  API.endTilingPattern = function(key, pattern) {\r\n    advancedApiModeTrap(\"endTilingPattern()\");\r\n\r\n    // retrieve the stream\r\n    pattern.stream = pages[currentPage].join(\"\\n\");\r\n\r\n    addPattern(key, pattern);\r\n\r\n    events.publish(\"endTilingPattern\", pattern);\r\n\r\n    // restore state from stack\r\n    renderTargetStack.pop().restore();\r\n  };\r\n\r\n  var newObject = (API.__private__.newObject = function() {\r\n    var oid = newObjectDeferred();\r\n    newObjectDeferredBegin(oid, true);\r\n    return oid;\r\n  });\r\n\r\n  // Does not output the object.  The caller must call newObjectDeferredBegin(oid) before outputing any data\r\n  var newObjectDeferred = (API.__private__.newObjectDeferred = function() {\r\n    objectNumber++;\r\n    offsets[objectNumber] = function() {\r\n      return contentLength;\r\n    };\r\n    return objectNumber;\r\n  });\r\n\r\n  var newObjectDeferredBegin = function(oid, doOutput) {\r\n    doOutput = typeof doOutput === \"boolean\" ? doOutput : false;\r\n    offsets[oid] = contentLength;\r\n    if (doOutput) {\r\n      out(oid + \" 0 obj\");\r\n    }\r\n    return oid;\r\n  };\r\n  // Does not output the object until after the pages have been output.\r\n  // Returns an object containing the objectId and content.\r\n  // All pages have been added so the object ID can be estimated to start right after.\r\n  // This does not modify the current objectNumber;  It must be updated after the newObjects are output.\r\n  var newAdditionalObject = (API.__private__.newAdditionalObject = function() {\r\n    var objId = newObjectDeferred();\r\n    var obj = {\r\n      objId: objId,\r\n      content: \"\"\r\n    };\r\n    additionalObjects.push(obj);\r\n    return obj;\r\n  });\r\n\r\n  var rootDictionaryObjId = newObjectDeferred();\r\n  var resourceDictionaryObjId = newObjectDeferred();\r\n\r\n  /////////////////////\r\n  // Private functions\r\n  /////////////////////\r\n\r\n  var decodeColorString = (API.__private__.decodeColorString = function(color) {\r\n    var colorEncoded = color.split(\" \");\r\n    if (\r\n      colorEncoded.length === 2 &&\r\n      (colorEncoded[1] === \"g\" || colorEncoded[1] === \"G\")\r\n    ) {\r\n      // convert grayscale value to rgb so that it can be converted to hex for consistency\r\n      var floatVal = parseFloat(colorEncoded[0]);\r\n      colorEncoded = [floatVal, floatVal, floatVal, \"r\"];\r\n    } else if (\r\n      colorEncoded.length === 5 &&\r\n      (colorEncoded[4] === \"k\" || colorEncoded[4] === \"K\")\r\n    ) {\r\n      // convert CMYK values to rbg so that it can be converted to hex for consistency\r\n      var red = (1.0 - colorEncoded[0]) * (1.0 - colorEncoded[3]);\r\n      var green = (1.0 - colorEncoded[1]) * (1.0 - colorEncoded[3]);\r\n      var blue = (1.0 - colorEncoded[2]) * (1.0 - colorEncoded[3]);\r\n\r\n      colorEncoded = [red, green, blue, \"r\"];\r\n    }\r\n    var colorAsRGB = \"#\";\r\n    for (var i = 0; i < 3; i++) {\r\n      colorAsRGB += (\r\n        \"0\" + Math.floor(parseFloat(colorEncoded[i]) * 255).toString(16)\r\n      ).slice(-2);\r\n    }\r\n    return colorAsRGB;\r\n  });\r\n\r\n  var encodeColorString = (API.__private__.encodeColorString = function(\r\n    options\r\n  ) {\r\n    var color;\r\n\r\n    if (typeof options === \"string\") {\r\n      options = {\r\n        ch1: options\r\n      };\r\n    }\r\n    var ch1 = options.ch1;\r\n    var ch2 = options.ch2;\r\n    var ch3 = options.ch3;\r\n    var ch4 = options.ch4;\r\n    var letterArray =\r\n      options.pdfColorType === \"draw\" ? [\"G\", \"RG\", \"K\"] : [\"g\", \"rg\", \"k\"];\r\n\r\n    if (typeof ch1 === \"string\" && ch1.charAt(0) !== \"#\") {\r\n      var rgbColor = new RGBColor(ch1);\r\n      if (rgbColor.ok) {\r\n        ch1 = rgbColor.toHex();\r\n      } else if (!/^\\d*\\.?\\d*$/.test(ch1)) {\r\n        throw new Error(\r\n          'Invalid color \"' + ch1 + '\" passed to jsPDF.encodeColorString.'\r\n        );\r\n      }\r\n    }\r\n    //convert short rgb to long form\r\n    if (typeof ch1 === \"string\" && /^#[0-9A-Fa-f]{3}$/.test(ch1)) {\r\n      ch1 = \"#\" + ch1[1] + ch1[1] + ch1[2] + ch1[2] + ch1[3] + ch1[3];\r\n    }\r\n\r\n    if (typeof ch1 === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(ch1)) {\r\n      var hex = parseInt(ch1.substr(1), 16);\r\n      ch1 = (hex >> 16) & 255;\r\n      ch2 = (hex >> 8) & 255;\r\n      ch3 = hex & 255;\r\n    }\r\n\r\n    if (\r\n      typeof ch2 === \"undefined\" ||\r\n      (typeof ch4 === \"undefined\" && ch1 === ch2 && ch2 === ch3)\r\n    ) {\r\n      // Gray color space.\r\n      if (typeof ch1 === \"string\") {\r\n        color = ch1 + \" \" + letterArray[0];\r\n      } else {\r\n        switch (options.precision) {\r\n          case 2:\r\n            color = f2(ch1 / 255) + \" \" + letterArray[0];\r\n            break;\r\n          case 3:\r\n          default:\r\n            color = f3(ch1 / 255) + \" \" + letterArray[0];\r\n        }\r\n      }\r\n    } else if (typeof ch4 === \"undefined\" || typeof ch4 === \"object\") {\r\n      // assume RGBA\r\n      if (ch4 && !isNaN(ch4.a)) {\r\n        //TODO Implement transparency.\r\n        //WORKAROUND use white for now, if transparent, otherwise handle as rgb\r\n        if (ch4.a === 0) {\r\n          color = [\"1.\", \"1.\", \"1.\", letterArray[1]].join(\" \");\r\n          return color;\r\n        }\r\n      }\r\n      // assume RGB\r\n      if (typeof ch1 === \"string\") {\r\n        color = [ch1, ch2, ch3, letterArray[1]].join(\" \");\r\n      } else {\r\n        switch (options.precision) {\r\n          case 2:\r\n            color = [\r\n              f2(ch1 / 255),\r\n              f2(ch2 / 255),\r\n              f2(ch3 / 255),\r\n              letterArray[1]\r\n            ].join(\" \");\r\n            break;\r\n          default:\r\n          case 3:\r\n            color = [\r\n              f3(ch1 / 255),\r\n              f3(ch2 / 255),\r\n              f3(ch3 / 255),\r\n              letterArray[1]\r\n            ].join(\" \");\r\n        }\r\n      }\r\n    } else {\r\n      // assume CMYK\r\n      if (typeof ch1 === \"string\") {\r\n        color = [ch1, ch2, ch3, ch4, letterArray[2]].join(\" \");\r\n      } else {\r\n        switch (options.precision) {\r\n          case 2:\r\n            color = [f2(ch1), f2(ch2), f2(ch3), f2(ch4), letterArray[2]].join(\r\n              \" \"\r\n            );\r\n            break;\r\n          case 3:\r\n          default:\r\n            color = [f3(ch1), f3(ch2), f3(ch3), f3(ch4), letterArray[2]].join(\r\n              \" \"\r\n            );\r\n        }\r\n      }\r\n    }\r\n    return color;\r\n  });\r\n\r\n  var getFilters = (API.__private__.getFilters = function() {\r\n    return filters;\r\n  });\r\n\r\n  var putStream = (API.__private__.putStream = function(options) {\r\n    options = options || {};\r\n    var data = options.data || \"\";\r\n    var filters = options.filters || getFilters();\r\n    var alreadyAppliedFilters = options.alreadyAppliedFilters || [];\r\n    var addLength1 = options.addLength1 || false;\r\n    var valueOfLength1 = data.length;\r\n    var objectId = options.objectId;\r\n    var encryptor = function(data) {\r\n      return data;\r\n    };\r\n    if (encryptionOptions !== null && typeof objectId == \"undefined\") {\r\n      throw new Error(\r\n        \"ObjectId must be passed to putStream for file encryption\"\r\n      );\r\n    }\r\n    if (encryptionOptions !== null) {\r\n      encryptor = encryption.encryptor(objectId, 0);\r\n    }\r\n\r\n    var processedData = {};\r\n    if (filters === true) {\r\n      filters = [\"FlateEncode\"];\r\n    }\r\n    var keyValues = options.additionalKeyValues || [];\r\n    if (typeof jsPDF.API.processDataByFilters !== \"undefined\") {\r\n      processedData = jsPDF.API.processDataByFilters(data, filters);\r\n    } else {\r\n      processedData = { data: data, reverseChain: [] };\r\n    }\r\n    var filterAsString =\r\n      processedData.reverseChain +\r\n      (Array.isArray(alreadyAppliedFilters)\r\n        ? alreadyAppliedFilters.join(\" \")\r\n        : alreadyAppliedFilters.toString());\r\n\r\n    if (processedData.data.length !== 0) {\r\n      keyValues.push({\r\n        key: \"Length\",\r\n        value: processedData.data.length\r\n      });\r\n      if (addLength1 === true) {\r\n        keyValues.push({\r\n          key: \"Length1\",\r\n          value: valueOfLength1\r\n        });\r\n      }\r\n    }\r\n\r\n    if (filterAsString.length != 0) {\r\n      if (filterAsString.split(\"/\").length - 1 === 1) {\r\n        keyValues.push({\r\n          key: \"Filter\",\r\n          value: filterAsString\r\n        });\r\n      } else {\r\n        keyValues.push({\r\n          key: \"Filter\",\r\n          value: \"[\" + filterAsString + \"]\"\r\n        });\r\n\r\n        for (var j = 0; j < keyValues.length; j += 1) {\r\n          if (keyValues[j].key === \"DecodeParms\") {\r\n            var decodeParmsArray = [];\r\n\r\n            for (\r\n              var i = 0;\r\n              i < processedData.reverseChain.split(\"/\").length - 1;\r\n              i += 1\r\n            ) {\r\n              decodeParmsArray.push(\"null\");\r\n            }\r\n\r\n            decodeParmsArray.push(keyValues[j].value);\r\n            keyValues[j].value = \"[\" + decodeParmsArray.join(\" \") + \"]\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    out(\"<<\");\r\n    for (var k = 0; k < keyValues.length; k++) {\r\n      out(\"/\" + keyValues[k].key + \" \" + keyValues[k].value);\r\n    }\r\n    out(\">>\");\r\n    if (processedData.data.length !== 0) {\r\n      out(\"stream\");\r\n      out(encryptor(processedData.data));\r\n      out(\"endstream\");\r\n    }\r\n  });\r\n\r\n  var putPage = (API.__private__.putPage = function(page) {\r\n    var pageNumber = page.number;\r\n    var data = page.data;\r\n    var pageObjectNumber = page.objId;\r\n    var pageContentsObjId = page.contentsObjId;\r\n\r\n    newObjectDeferredBegin(pageObjectNumber, true);\r\n    out(\"<</Type /Page\");\r\n    out(\"/Parent \" + page.rootDictionaryObjId + \" 0 R\");\r\n    out(\"/Resources \" + page.resourceDictionaryObjId + \" 0 R\");\r\n    out(\r\n      \"/MediaBox [\" +\r\n        parseFloat(hpf(page.mediaBox.bottomLeftX)) +\r\n        \" \" +\r\n        parseFloat(hpf(page.mediaBox.bottomLeftY)) +\r\n        \" \" +\r\n        hpf(page.mediaBox.topRightX) +\r\n        \" \" +\r\n        hpf(page.mediaBox.topRightY) +\r\n        \"]\"\r\n    );\r\n    if (page.cropBox !== null) {\r\n      out(\r\n        \"/CropBox [\" +\r\n          hpf(page.cropBox.bottomLeftX) +\r\n          \" \" +\r\n          hpf(page.cropBox.bottomLeftY) +\r\n          \" \" +\r\n          hpf(page.cropBox.topRightX) +\r\n          \" \" +\r\n          hpf(page.cropBox.topRightY) +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    if (page.bleedBox !== null) {\r\n      out(\r\n        \"/BleedBox [\" +\r\n          hpf(page.bleedBox.bottomLeftX) +\r\n          \" \" +\r\n          hpf(page.bleedBox.bottomLeftY) +\r\n          \" \" +\r\n          hpf(page.bleedBox.topRightX) +\r\n          \" \" +\r\n          hpf(page.bleedBox.topRightY) +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    if (page.trimBox !== null) {\r\n      out(\r\n        \"/TrimBox [\" +\r\n          hpf(page.trimBox.bottomLeftX) +\r\n          \" \" +\r\n          hpf(page.trimBox.bottomLeftY) +\r\n          \" \" +\r\n          hpf(page.trimBox.topRightX) +\r\n          \" \" +\r\n          hpf(page.trimBox.topRightY) +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    if (page.artBox !== null) {\r\n      out(\r\n        \"/ArtBox [\" +\r\n          hpf(page.artBox.bottomLeftX) +\r\n          \" \" +\r\n          hpf(page.artBox.bottomLeftY) +\r\n          \" \" +\r\n          hpf(page.artBox.topRightX) +\r\n          \" \" +\r\n          hpf(page.artBox.topRightY) +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    if (typeof page.userUnit === \"number\" && page.userUnit !== 1.0) {\r\n      out(\"/UserUnit \" + page.userUnit);\r\n    }\r\n\r\n    events.publish(\"putPage\", {\r\n      objId: pageObjectNumber,\r\n      pageContext: pagesContext[pageNumber],\r\n      pageNumber: pageNumber,\r\n      page: data\r\n    });\r\n    out(\"/Contents \" + pageContentsObjId + \" 0 R\");\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n    // Page content\r\n    var pageContent = data.join(\"\\n\");\r\n\r\n    if (apiMode === ApiMode.ADVANCED) {\r\n      // if the user forgot to switch back to COMPAT mode, we must balance the graphics stack again\r\n      pageContent += \"\\nQ\";\r\n    }\r\n\r\n    newObjectDeferredBegin(pageContentsObjId, true);\r\n    putStream({\r\n      data: pageContent,\r\n      filters: getFilters(),\r\n      objectId: pageContentsObjId\r\n    });\r\n    out(\"endobj\");\r\n    return pageObjectNumber;\r\n  });\r\n\r\n  var putPages = (API.__private__.putPages = function() {\r\n    var n,\r\n      i,\r\n      pageObjectNumbers = [];\r\n\r\n    for (n = 1; n <= page; n++) {\r\n      pagesContext[n].objId = newObjectDeferred();\r\n      pagesContext[n].contentsObjId = newObjectDeferred();\r\n    }\r\n\r\n    for (n = 1; n <= page; n++) {\r\n      pageObjectNumbers.push(\r\n        putPage({\r\n          number: n,\r\n          data: pages[n],\r\n          objId: pagesContext[n].objId,\r\n          contentsObjId: pagesContext[n].contentsObjId,\r\n          mediaBox: pagesContext[n].mediaBox,\r\n          cropBox: pagesContext[n].cropBox,\r\n          bleedBox: pagesContext[n].bleedBox,\r\n          trimBox: pagesContext[n].trimBox,\r\n          artBox: pagesContext[n].artBox,\r\n          userUnit: pagesContext[n].userUnit,\r\n          rootDictionaryObjId: rootDictionaryObjId,\r\n          resourceDictionaryObjId: resourceDictionaryObjId\r\n        })\r\n      );\r\n    }\r\n    newObjectDeferredBegin(rootDictionaryObjId, true);\r\n    out(\"<</Type /Pages\");\r\n    var kids = \"/Kids [\";\r\n    for (i = 0; i < page; i++) {\r\n      kids += pageObjectNumbers[i] + \" 0 R \";\r\n    }\r\n    out(kids + \"]\");\r\n    out(\"/Count \" + page);\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n    events.publish(\"postPutPages\");\r\n  });\r\n\r\n  var putFont = function(font) {\r\n    events.publish(\"putFont\", {\r\n      font: font,\r\n      out: out,\r\n      newObject: newObject,\r\n      putStream: putStream\r\n    });\r\n\r\n    if (font.isAlreadyPutted !== true) {\r\n      font.objectNumber = newObject();\r\n      out(\"<<\");\r\n      out(\"/Type /Font\");\r\n      out(\"/BaseFont /\" + toPDFName(font.postScriptName));\r\n      out(\"/Subtype /Type1\");\r\n      if (typeof font.encoding === \"string\") {\r\n        out(\"/Encoding /\" + font.encoding);\r\n      }\r\n      out(\"/FirstChar 32\");\r\n      out(\"/LastChar 255\");\r\n      out(\">>\");\r\n      out(\"endobj\");\r\n    }\r\n  };\r\n\r\n  var putFonts = function() {\r\n    for (var fontKey in fonts) {\r\n      if (fonts.hasOwnProperty(fontKey)) {\r\n        if (\r\n          putOnlyUsedFonts === false ||\r\n          (putOnlyUsedFonts === true && usedFonts.hasOwnProperty(fontKey))\r\n        ) {\r\n          putFont(fonts[fontKey]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  var putXObject = function(xObject) {\r\n    xObject.objectNumber = newObject();\r\n\r\n    var options = [];\r\n    options.push({ key: \"Type\", value: \"/XObject\" });\r\n    options.push({ key: \"Subtype\", value: \"/Form\" });\r\n    options.push({\r\n      key: \"BBox\",\r\n      value:\r\n        \"[\" +\r\n        [\r\n          hpf(xObject.x),\r\n          hpf(xObject.y),\r\n          hpf(xObject.x + xObject.width),\r\n          hpf(xObject.y + xObject.height)\r\n        ].join(\" \") +\r\n        \"]\"\r\n    });\r\n    options.push({\r\n      key: \"Matrix\",\r\n      value: \"[\" + xObject.matrix.toString() + \"]\"\r\n    });\r\n    // TODO: /Resources\r\n\r\n    var stream = xObject.pages[1].join(\"\\n\");\r\n    putStream({\r\n      data: stream,\r\n      additionalKeyValues: options,\r\n      objectId: xObject.objectNumber\r\n    });\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putXObjects = function() {\r\n    for (var xObjectKey in renderTargets) {\r\n      if (renderTargets.hasOwnProperty(xObjectKey)) {\r\n        putXObject(renderTargets[xObjectKey]);\r\n      }\r\n    }\r\n  };\r\n\r\n  var interpolateAndEncodeRGBStream = function(colors, numberSamples) {\r\n    var tValues = [];\r\n    var t;\r\n    var dT = 1.0 / (numberSamples - 1);\r\n    for (t = 0.0; t < 1.0; t += dT) {\r\n      tValues.push(t);\r\n    }\r\n    tValues.push(1.0);\r\n    // add first and last control point if not present\r\n    if (colors[0].offset != 0.0) {\r\n      var c0 = {\r\n        offset: 0.0,\r\n        color: colors[0].color\r\n      };\r\n      colors.unshift(c0);\r\n    }\r\n    if (colors[colors.length - 1].offset != 1.0) {\r\n      var c1 = {\r\n        offset: 1.0,\r\n        color: colors[colors.length - 1].color\r\n      };\r\n      colors.push(c1);\r\n    }\r\n    var out = \"\";\r\n    var index = 0;\r\n\r\n    for (var i = 0; i < tValues.length; i++) {\r\n      t = tValues[i];\r\n      while (t > colors[index + 1].offset) index++;\r\n      var a = colors[index].offset;\r\n      var b = colors[index + 1].offset;\r\n      var d = (t - a) / (b - a);\r\n\r\n      var aColor = colors[index].color;\r\n      var bColor = colors[index + 1].color;\r\n\r\n      out +=\r\n        padd2Hex(Math.round((1 - d) * aColor[0] + d * bColor[0]).toString(16)) +\r\n        padd2Hex(Math.round((1 - d) * aColor[1] + d * bColor[1]).toString(16)) +\r\n        padd2Hex(Math.round((1 - d) * aColor[2] + d * bColor[2]).toString(16));\r\n    }\r\n    return out.trim();\r\n  };\r\n\r\n  var putShadingPattern = function(pattern, numberSamples) {\r\n    /*\r\n       Axial patterns shade between the two points specified in coords, radial patterns between the inner\r\n       and outer circle.\r\n       The user can specify an array (colors) that maps t-Values in [0, 1] to RGB colors. These are now\r\n       interpolated to equidistant samples and written to pdf as a sample (type 0) function.\r\n       */\r\n    // The number of color samples that should be used to describe the shading.\r\n    // The higher, the more accurate the gradient will be.\r\n    numberSamples || (numberSamples = 21);\r\n    var funcObjectNumber = newObject();\r\n    var stream = interpolateAndEncodeRGBStream(pattern.colors, numberSamples);\r\n\r\n    var options = [];\r\n    options.push({ key: \"FunctionType\", value: \"0\" });\r\n    options.push({ key: \"Domain\", value: \"[0.0 1.0]\" });\r\n    options.push({ key: \"Size\", value: \"[\" + numberSamples + \"]\" });\r\n    options.push({ key: \"BitsPerSample\", value: \"8\" });\r\n    options.push({ key: \"Range\", value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\" });\r\n    options.push({ key: \"Decode\", value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\" });\r\n\r\n    putStream({\r\n      data: stream,\r\n      additionalKeyValues: options,\r\n      alreadyAppliedFilters: [\"/ASCIIHexDecode\"],\r\n      objectId: funcObjectNumber\r\n    });\r\n    out(\"endobj\");\r\n\r\n    pattern.objectNumber = newObject();\r\n    out(\"<< /ShadingType \" + pattern.type);\r\n    out(\"/ColorSpace /DeviceRGB\");\r\n    var coords =\r\n      \"/Coords [\" +\r\n      hpf(parseFloat(pattern.coords[0])) +\r\n      \" \" + // x1\r\n      hpf(parseFloat(pattern.coords[1])) +\r\n      \" \"; // y1\r\n    if (pattern.type === 2) {\r\n      // axial\r\n      coords +=\r\n        hpf(parseFloat(pattern.coords[2])) +\r\n        \" \" + // x2\r\n        hpf(parseFloat(pattern.coords[3])); // y2\r\n    } else {\r\n      // radial\r\n      coords +=\r\n        hpf(parseFloat(pattern.coords[2])) +\r\n        \" \" + // r1\r\n        hpf(parseFloat(pattern.coords[3])) +\r\n        \" \" + // x2\r\n        hpf(parseFloat(pattern.coords[4])) +\r\n        \" \" + // y2\r\n        hpf(parseFloat(pattern.coords[5])); // r2\r\n    }\r\n    coords += \"]\";\r\n    out(coords);\r\n\r\n    if (pattern.matrix) {\r\n      out(\"/Matrix [\" + pattern.matrix.toString() + \"]\");\r\n    }\r\n    out(\"/Function \" + funcObjectNumber + \" 0 R\");\r\n    out(\"/Extend [true true]\");\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putTilingPattern = function(pattern, deferredResourceDictionaryIds) {\r\n    var resourcesObjectId = newObjectDeferred();\r\n    var patternObjectId = newObject();\r\n\r\n    deferredResourceDictionaryIds.push({\r\n      resourcesOid: resourcesObjectId,\r\n      objectOid: patternObjectId\r\n    });\r\n\r\n    pattern.objectNumber = patternObjectId;\r\n    var options = [];\r\n    options.push({ key: \"Type\", value: \"/Pattern\" });\r\n    options.push({ key: \"PatternType\", value: \"1\" }); // tiling pattern\r\n    options.push({ key: \"PaintType\", value: \"1\" }); // colored tiling pattern\r\n    options.push({ key: \"TilingType\", value: \"1\" }); // constant spacing\r\n    options.push({\r\n      key: \"BBox\",\r\n      value: \"[\" + pattern.boundingBox.map(hpf).join(\" \") + \"]\"\r\n    });\r\n    options.push({ key: \"XStep\", value: hpf(pattern.xStep) });\r\n    options.push({ key: \"YStep\", value: hpf(pattern.yStep) });\r\n    options.push({ key: \"Resources\", value: resourcesObjectId + \" 0 R\" });\r\n    if (pattern.matrix) {\r\n      options.push({\r\n        key: \"Matrix\",\r\n        value: \"[\" + pattern.matrix.toString() + \"]\"\r\n      });\r\n    }\r\n\r\n    putStream({\r\n      data: pattern.stream,\r\n      additionalKeyValues: options,\r\n      objectId: pattern.objectNumber\r\n    });\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putPatterns = function(deferredResourceDictionaryIds) {\r\n    var patternKey;\r\n    for (patternKey in patterns) {\r\n      if (patterns.hasOwnProperty(patternKey)) {\r\n        if (patterns[patternKey] instanceof ShadingPattern) {\r\n          putShadingPattern(patterns[patternKey]);\r\n        } else if (patterns[patternKey] instanceof TilingPattern) {\r\n          putTilingPattern(patterns[patternKey], deferredResourceDictionaryIds);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  var putGState = function(gState) {\r\n    gState.objectNumber = newObject();\r\n    out(\"<<\");\r\n    for (var p in gState) {\r\n      switch (p) {\r\n        case \"opacity\":\r\n          out(\"/ca \" + f2(gState[p]));\r\n          break;\r\n        case \"stroke-opacity\":\r\n          out(\"/CA \" + f2(gState[p]));\r\n          break;\r\n      }\r\n    }\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putGStates = function() {\r\n    var gStateKey;\r\n    for (gStateKey in gStates) {\r\n      if (gStates.hasOwnProperty(gStateKey)) {\r\n        putGState(gStates[gStateKey]);\r\n      }\r\n    }\r\n  };\r\n\r\n  var putXobjectDict = function() {\r\n    out(\"/XObject <<\");\r\n    for (var xObjectKey in renderTargets) {\r\n      if (\r\n        renderTargets.hasOwnProperty(xObjectKey) &&\r\n        renderTargets[xObjectKey].objectNumber >= 0\r\n      ) {\r\n        out(\r\n          \"/\" +\r\n            xObjectKey +\r\n            \" \" +\r\n            renderTargets[xObjectKey].objectNumber +\r\n            \" 0 R\"\r\n        );\r\n      }\r\n    }\r\n\r\n    // Loop through images, or other data objects\r\n    events.publish(\"putXobjectDict\");\r\n    out(\">>\");\r\n  };\r\n\r\n  var putEncryptionDict = function() {\r\n    encryption.oid = newObject();\r\n    out(\"<<\");\r\n    out(\"/Filter /Standard\");\r\n    out(\"/V \" + encryption.v);\r\n    out(\"/R \" + encryption.r);\r\n    out(\"/U <\" + encryption.toHexString(encryption.U) + \">\");\r\n    out(\"/O <\" + encryption.toHexString(encryption.O) + \">\");\r\n    out(\"/P \" + encryption.P);\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putFontDict = function() {\r\n    out(\"/Font <<\");\r\n\r\n    for (var fontKey in fonts) {\r\n      if (fonts.hasOwnProperty(fontKey)) {\r\n        if (\r\n          putOnlyUsedFonts === false ||\r\n          (putOnlyUsedFonts === true && usedFonts.hasOwnProperty(fontKey))\r\n        ) {\r\n          out(\"/\" + fontKey + \" \" + fonts[fontKey].objectNumber + \" 0 R\");\r\n        }\r\n      }\r\n    }\r\n    out(\">>\");\r\n  };\r\n\r\n  var putShadingPatternDict = function() {\r\n    if (Object.keys(patterns).length > 0) {\r\n      out(\"/Shading <<\");\r\n      for (var patternKey in patterns) {\r\n        if (\r\n          patterns.hasOwnProperty(patternKey) &&\r\n          patterns[patternKey] instanceof ShadingPattern &&\r\n          patterns[patternKey].objectNumber >= 0\r\n        ) {\r\n          out(\r\n            \"/\" + patternKey + \" \" + patterns[patternKey].objectNumber + \" 0 R\"\r\n          );\r\n        }\r\n      }\r\n\r\n      events.publish(\"putShadingPatternDict\");\r\n      out(\">>\");\r\n    }\r\n  };\r\n\r\n  var putTilingPatternDict = function(objectOid) {\r\n    if (Object.keys(patterns).length > 0) {\r\n      out(\"/Pattern <<\");\r\n      for (var patternKey in patterns) {\r\n        if (\r\n          patterns.hasOwnProperty(patternKey) &&\r\n          patterns[patternKey] instanceof API.TilingPattern &&\r\n          patterns[patternKey].objectNumber >= 0 &&\r\n          patterns[patternKey].objectNumber < objectOid // prevent cyclic dependencies\r\n        ) {\r\n          out(\r\n            \"/\" + patternKey + \" \" + patterns[patternKey].objectNumber + \" 0 R\"\r\n          );\r\n        }\r\n      }\r\n      events.publish(\"putTilingPatternDict\");\r\n      out(\">>\");\r\n    }\r\n  };\r\n\r\n  var putGStatesDict = function() {\r\n    if (Object.keys(gStates).length > 0) {\r\n      var gStateKey;\r\n      out(\"/ExtGState <<\");\r\n      for (gStateKey in gStates) {\r\n        if (\r\n          gStates.hasOwnProperty(gStateKey) &&\r\n          gStates[gStateKey].objectNumber >= 0\r\n        ) {\r\n          out(\"/\" + gStateKey + \" \" + gStates[gStateKey].objectNumber + \" 0 R\");\r\n        }\r\n      }\r\n\r\n      events.publish(\"putGStateDict\");\r\n      out(\">>\");\r\n    }\r\n  };\r\n\r\n  var putResourceDictionary = function(objectIds) {\r\n    newObjectDeferredBegin(objectIds.resourcesOid, true);\r\n    out(\"<<\");\r\n    out(\"/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]\");\r\n    putFontDict();\r\n    putShadingPatternDict();\r\n    putTilingPatternDict(objectIds.objectOid);\r\n    putGStatesDict();\r\n    putXobjectDict();\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  };\r\n\r\n  var putResources = function() {\r\n    // FormObjects, Patterns etc. might use other FormObjects/Patterns/Images\r\n    // which means their resource dictionaries must contain the already resolved\r\n    // object ids. For this reason we defer the serialization of the resource\r\n    // dicts until all objects have been serialized and have object ids.\r\n    //\r\n    // In order to prevent cyclic dependencies (which Adobe Reader doesn't like),\r\n    // we only put all oids that are smaller than the oid of the object the\r\n    // resource dict belongs to. This is correct behavior, since the streams\r\n    // may only use other objects that have already been defined and thus appear\r\n    // earlier in their respective collection.\r\n    // Currently, this only affects tiling patterns, but a (more) correct\r\n    // implementation of FormObjects would also define their own resource dicts.\r\n    var deferredResourceDictionaryIds = [];\r\n\r\n    putFonts();\r\n    putGStates();\r\n    putXObjects();\r\n    putPatterns(deferredResourceDictionaryIds);\r\n\r\n    events.publish(\"putResources\");\r\n    deferredResourceDictionaryIds.forEach(putResourceDictionary);\r\n    putResourceDictionary({\r\n      resourcesOid: resourceDictionaryObjId,\r\n      objectOid: Number.MAX_SAFE_INTEGER // output all objects\r\n    });\r\n    events.publish(\"postPutResources\");\r\n  };\r\n\r\n  var putAdditionalObjects = function() {\r\n    events.publish(\"putAdditionalObjects\");\r\n    for (var i = 0; i < additionalObjects.length; i++) {\r\n      var obj = additionalObjects[i];\r\n      newObjectDeferredBegin(obj.objId, true);\r\n      out(obj.content);\r\n      out(\"endobj\");\r\n    }\r\n    events.publish(\"postPutAdditionalObjects\");\r\n  };\r\n\r\n  var addFontToFontDictionary = function(font) {\r\n    fontmap[font.fontName] = fontmap[font.fontName] || {};\r\n    fontmap[font.fontName][font.fontStyle] = font.id;\r\n  };\r\n\r\n  var addFont = function(\r\n    postScriptName,\r\n    fontName,\r\n    fontStyle,\r\n    encoding,\r\n    isStandardFont\r\n  ) {\r\n    var font = {\r\n      id: \"F\" + (Object.keys(fonts).length + 1).toString(10),\r\n      postScriptName: postScriptName,\r\n      fontName: fontName,\r\n      fontStyle: fontStyle,\r\n      encoding: encoding,\r\n      isStandardFont: isStandardFont || false,\r\n      metadata: {}\r\n    };\r\n\r\n    events.publish(\"addFont\", {\r\n      font: font,\r\n      instance: this\r\n    });\r\n\r\n    fonts[font.id] = font;\r\n    addFontToFontDictionary(font);\r\n    return font.id;\r\n  };\r\n\r\n  var addFonts = function(arrayOfFonts) {\r\n    for (var i = 0, l = standardFonts.length; i < l; i++) {\r\n      var fontKey = addFont.call(\r\n        this,\r\n        arrayOfFonts[i][0],\r\n        arrayOfFonts[i][1],\r\n        arrayOfFonts[i][2],\r\n        standardFonts[i][3],\r\n        true\r\n      );\r\n\r\n      if (putOnlyUsedFonts === false) {\r\n        usedFonts[fontKey] = true;\r\n      }\r\n      // adding aliases for standard fonts, this time matching the capitalization\r\n      var parts = arrayOfFonts[i][0].split(\"-\");\r\n      addFontToFontDictionary({\r\n        id: fontKey,\r\n        fontName: parts[0],\r\n        fontStyle: parts[1] || \"\"\r\n      });\r\n    }\r\n    events.publish(\"addFonts\", {\r\n      fonts: fonts,\r\n      dictionary: fontmap\r\n    });\r\n  };\r\n\r\n  var SAFE = function __safeCall(fn) {\r\n    fn.foo = function __safeCallWrapper() {\r\n      try {\r\n        return fn.apply(this, arguments);\r\n      } catch (e) {\r\n        var stack = e.stack || \"\";\r\n        if (~stack.indexOf(\" at \")) stack = stack.split(\" at \")[1];\r\n        var m =\r\n          \"Error in function \" +\r\n          stack.split(\"\\n\")[0].split(\"<\")[0] +\r\n          \": \" +\r\n          e.message;\r\n        if (globalObject.console) {\r\n          globalObject.console.error(m, e);\r\n          if (globalObject.alert) alert(m);\r\n        } else {\r\n          throw new Error(m);\r\n        }\r\n      }\r\n    };\r\n    fn.foo.bar = fn;\r\n    return fn.foo;\r\n  };\r\n\r\n  var to8bitStream = function(text, flags) {\r\n    /**\r\n     * PDF 1.3 spec:\r\n     * \"For text strings encoded in Unicode, the first two bytes must be 254 followed by\r\n     * 255, representing the Unicode byte order marker, U+FEFF. (This sequence conflicts\r\n     * with the PDFDocEncoding character sequence thorn ydieresis, which is unlikely\r\n     * to be a meaningful beginning of a word or phrase.) The remainder of the\r\n     * string consists of Unicode character codes, according to the UTF-16 encoding\r\n     * specified in the Unicode standard, version 2.0. Commonly used Unicode values\r\n     * are represented as 2 bytes per character, with the high-order byte appearing first\r\n     * in the string.\"\r\n     *\r\n     * In other words, if there are chars in a string with char code above 255, we\r\n     * recode the string to UCS2 BE - string doubles in length and BOM is prepended.\r\n     *\r\n     * HOWEVER!\r\n     * Actual *content* (body) text (as opposed to strings used in document properties etc)\r\n     * does NOT expect BOM. There, it is treated as a literal GID (Glyph ID)\r\n     *\r\n     * Because of Adobe's focus on \"you subset your fonts!\" you are not supposed to have\r\n     * a font that maps directly Unicode (UCS2 / UTF16BE) code to font GID, but you could\r\n     * fudge it with \"Identity-H\" encoding and custom CIDtoGID map that mimics Unicode\r\n     * code page. There, however, all characters in the stream are treated as GIDs,\r\n     * including BOM, which is the reason we need to skip BOM in content text (i.e. that\r\n     * that is tied to a font).\r\n     *\r\n     * To signal this \"special\" PDFEscape / to8bitStream handling mode,\r\n     * API.text() function sets (unless you overwrite it with manual values\r\n     * given to API.text(.., flags) )\r\n     * flags.autoencode = true\r\n     * flags.noBOM = true\r\n     *\r\n     * ===================================================================================\r\n     * `flags` properties relied upon:\r\n     *   .sourceEncoding = string with encoding label.\r\n     *                     \"Unicode\" by default. = encoding of the incoming text.\r\n     *                     pass some non-existing encoding name\r\n     *                     (ex: 'Do not touch my strings! I know what I am doing.')\r\n     *                     to make encoding code skip the encoding step.\r\n     *   .outputEncoding = Either valid PDF encoding name\r\n     *                     (must be supported by jsPDF font metrics, otherwise no encoding)\r\n     *                     or a JS object, where key = sourceCharCode, value = outputCharCode\r\n     *                     missing keys will be treated as: sourceCharCode === outputCharCode\r\n     *   .noBOM\r\n     *       See comment higher above for explanation for why this is important\r\n     *   .autoencode\r\n     *       See comment higher above for explanation for why this is important\r\n     */\r\n\r\n    var i,\r\n      l,\r\n      sourceEncoding,\r\n      encodingBlock,\r\n      outputEncoding,\r\n      newtext,\r\n      isUnicode,\r\n      ch,\r\n      bch;\r\n\r\n    flags = flags || {};\r\n    sourceEncoding = flags.sourceEncoding || \"Unicode\";\r\n    outputEncoding = flags.outputEncoding;\r\n\r\n    // This 'encoding' section relies on font metrics format\r\n    // attached to font objects by, among others,\r\n    // \"Willow Systems' standard_font_metrics plugin\"\r\n    // see jspdf.plugin.standard_font_metrics.js for format\r\n    // of the font.metadata.encoding Object.\r\n    // It should be something like\r\n    //   .encoding = {'codePages':['WinANSI....'], 'WinANSI...':{code:code, ...}}\r\n    //   .widths = {0:width, code:width, ..., 'fof':divisor}\r\n    //   .kerning = {code:{previous_char_code:shift, ..., 'fof':-divisor},...}\r\n    if (\r\n      (flags.autoencode || outputEncoding) &&\r\n      fonts[activeFontKey].metadata &&\r\n      fonts[activeFontKey].metadata[sourceEncoding] &&\r\n      fonts[activeFontKey].metadata[sourceEncoding].encoding\r\n    ) {\r\n      encodingBlock = fonts[activeFontKey].metadata[sourceEncoding].encoding;\r\n\r\n      // each font has default encoding. Some have it clearly defined.\r\n      if (!outputEncoding && fonts[activeFontKey].encoding) {\r\n        outputEncoding = fonts[activeFontKey].encoding;\r\n      }\r\n\r\n      // Hmmm, the above did not work? Let's try again, in different place.\r\n      if (!outputEncoding && encodingBlock.codePages) {\r\n        outputEncoding = encodingBlock.codePages[0]; // let's say, first one is the default\r\n      }\r\n\r\n      if (typeof outputEncoding === \"string\") {\r\n        outputEncoding = encodingBlock[outputEncoding];\r\n      }\r\n      // we want output encoding to be a JS Object, where\r\n      // key = sourceEncoding's character code and\r\n      // value = outputEncoding's character code.\r\n      if (outputEncoding) {\r\n        isUnicode = false;\r\n        newtext = [];\r\n        for (i = 0, l = text.length; i < l; i++) {\r\n          ch = outputEncoding[text.charCodeAt(i)];\r\n          if (ch) {\r\n            newtext.push(String.fromCharCode(ch));\r\n          } else {\r\n            newtext.push(text[i]);\r\n          }\r\n\r\n          // since we are looping over chars anyway, might as well\r\n          // check for residual unicodeness\r\n          if (newtext[i].charCodeAt(0) >> 8) {\r\n            /* more than 255 */\r\n            isUnicode = true;\r\n          }\r\n        }\r\n        text = newtext.join(\"\");\r\n      }\r\n    }\r\n\r\n    i = text.length;\r\n    // isUnicode may be set to false above. Hence the triple-equal to undefined\r\n    while (isUnicode === undefined && i !== 0) {\r\n      if (text.charCodeAt(i - 1) >> 8) {\r\n        /* more than 255 */\r\n        isUnicode = true;\r\n      }\r\n      i--;\r\n    }\r\n    if (!isUnicode) {\r\n      return text;\r\n    }\r\n\r\n    newtext = flags.noBOM ? [] : [254, 255];\r\n    for (i = 0, l = text.length; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      bch = ch >> 8; // divide by 256\r\n      if (bch >> 8) {\r\n        /* something left after dividing by 256 second time */\r\n        throw new Error(\r\n          \"Character at position \" +\r\n            i +\r\n            \" of string '\" +\r\n            text +\r\n            \"' exceeds 16bits. Cannot be encoded into UCS-2 BE\"\r\n        );\r\n      }\r\n      newtext.push(bch);\r\n      newtext.push(ch - (bch << 8));\r\n    }\r\n    return String.fromCharCode.apply(undefined, newtext);\r\n  };\r\n\r\n  var pdfEscape = (API.__private__.pdfEscape = API.pdfEscape = function(\r\n    text,\r\n    flags\r\n  ) {\r\n    /**\r\n     * Replace '/', '(', and ')' with pdf-safe versions\r\n     *\r\n     * Doing to8bitStream does NOT make this PDF display unicode text. For that\r\n     * we also need to reference a unicode font and embed it - royal pain in the rear.\r\n     *\r\n     * There is still a benefit to to8bitStream - PDF simply cannot handle 16bit chars,\r\n     * which JavaScript Strings are happy to provide. So, while we still cannot display\r\n     * 2-byte characters property, at least CONDITIONALLY converting (entire string containing)\r\n     * 16bit chars to (USC-2-BE) 2-bytes per char + BOM streams we ensure that entire PDF\r\n     * is still parseable.\r\n     * This will allow immediate support for unicode in document properties strings.\r\n     */\r\n    return to8bitStream(text, flags)\r\n      .replace(/\\\\/g, \"\\\\\\\\\")\r\n      .replace(/\\(/g, \"\\\\(\")\r\n      .replace(/\\)/g, \"\\\\)\");\r\n  });\r\n\r\n  var beginPage = (API.__private__.beginPage = function(format) {\r\n    pages[++page] = [];\r\n    pagesContext[page] = {\r\n      objId: 0,\r\n      contentsObjId: 0,\r\n      userUnit: Number(userUnit),\r\n      artBox: null,\r\n      bleedBox: null,\r\n      cropBox: null,\r\n      trimBox: null,\r\n      mediaBox: {\r\n        bottomLeftX: 0,\r\n        bottomLeftY: 0,\r\n        topRightX: Number(format[0]),\r\n        topRightY: Number(format[1])\r\n      }\r\n    };\r\n    _setPage(page);\r\n    setOutputDestination(pages[currentPage]);\r\n  });\r\n\r\n  var _addPage = function(parmFormat, parmOrientation) {\r\n    var dimensions, width, height;\r\n\r\n    orientation = parmOrientation || orientation;\r\n\r\n    if (typeof parmFormat === \"string\") {\r\n      dimensions = getPageFormat(parmFormat.toLowerCase());\r\n      if (Array.isArray(dimensions)) {\r\n        width = dimensions[0];\r\n        height = dimensions[1];\r\n      }\r\n    }\r\n\r\n    if (Array.isArray(parmFormat)) {\r\n      width = parmFormat[0] * scaleFactor;\r\n      height = parmFormat[1] * scaleFactor;\r\n    }\r\n\r\n    if (isNaN(width)) {\r\n      width = format[0];\r\n      height = format[1];\r\n    }\r\n\r\n    if (width > 14400 || height > 14400) {\r\n      console.warn(\r\n        \"A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400\"\r\n      );\r\n      width = Math.min(14400, width);\r\n      height = Math.min(14400, height);\r\n    }\r\n\r\n    format = [width, height];\r\n\r\n    switch (orientation.substr(0, 1)) {\r\n      case \"l\":\r\n        if (height > width) {\r\n          format = [height, width];\r\n        }\r\n        break;\r\n      case \"p\":\r\n        if (width > height) {\r\n          format = [height, width];\r\n        }\r\n        break;\r\n    }\r\n\r\n    beginPage(format);\r\n\r\n    // Set line width\r\n    setLineWidth(lineWidth);\r\n    // Set draw color\r\n    out(strokeColor);\r\n    // resurrecting non-default line caps, joins\r\n    if (lineCapID !== 0) {\r\n      out(lineCapID + \" J\");\r\n    }\r\n    if (lineJoinID !== 0) {\r\n      out(lineJoinID + \" j\");\r\n    }\r\n    events.publish(\"addPage\", {\r\n      pageNumber: page\r\n    });\r\n  };\r\n\r\n  var _deletePage = function(n) {\r\n    if (n > 0 && n <= page) {\r\n      pages.splice(n, 1);\r\n      pagesContext.splice(n, 1);\r\n      page--;\r\n      if (currentPage > page) {\r\n        currentPage = page;\r\n      }\r\n      this.setPage(currentPage);\r\n    }\r\n  };\r\n\r\n  var _setPage = function(n) {\r\n    if (n > 0 && n <= page) {\r\n      currentPage = n;\r\n    }\r\n  };\r\n\r\n  var getNumberOfPages = (API.__private__.getNumberOfPages = API.getNumberOfPages = function() {\r\n    return pages.length - 1;\r\n  });\r\n\r\n  /**\r\n   * Returns a document-specific font key - a label assigned to a\r\n   * font name + font type combination at the time the font was added\r\n   * to the font inventory.\r\n   *\r\n   * Font key is used as label for the desired font for a block of text\r\n   * to be added to the PDF document stream.\r\n   * @private\r\n   * @function\r\n   * @param fontName {string} can be undefined on \"falthy\" to indicate \"use current\"\r\n   * @param fontStyle {string} can be undefined on \"falthy\" to indicate \"use current\"\r\n   * @returns {string} Font key.\r\n   * @ignore\r\n   */\r\n  var getFont = function(fontName, fontStyle, options) {\r\n    var key = undefined,\r\n      fontNameLowerCase;\r\n    options = options || {};\r\n\r\n    fontName =\r\n      fontName !== undefined ? fontName : fonts[activeFontKey].fontName;\r\n    fontStyle =\r\n      fontStyle !== undefined ? fontStyle : fonts[activeFontKey].fontStyle;\r\n    fontNameLowerCase = fontName.toLowerCase();\r\n\r\n    if (\r\n      fontmap[fontNameLowerCase] !== undefined &&\r\n      fontmap[fontNameLowerCase][fontStyle] !== undefined\r\n    ) {\r\n      key = fontmap[fontNameLowerCase][fontStyle];\r\n    } else if (\r\n      fontmap[fontName] !== undefined &&\r\n      fontmap[fontName][fontStyle] !== undefined\r\n    ) {\r\n      key = fontmap[fontName][fontStyle];\r\n    } else {\r\n      if (options.disableWarning === false) {\r\n        console.warn(\r\n          \"Unable to look up font label for font '\" +\r\n            fontName +\r\n            \"', '\" +\r\n            fontStyle +\r\n            \"'. Refer to getFontList() for available fonts.\"\r\n        );\r\n      }\r\n    }\r\n\r\n    if (!key && !options.noFallback) {\r\n      key = fontmap[\"times\"][fontStyle];\r\n      if (key == null) {\r\n        key = fontmap[\"times\"][\"normal\"];\r\n      }\r\n    }\r\n    return key;\r\n  };\r\n\r\n  var putInfo = (API.__private__.putInfo = function() {\r\n    var objectId = newObject();\r\n    var encryptor = function(data) {\r\n      return data;\r\n    };\r\n    if (encryptionOptions !== null) {\r\n      encryptor = encryption.encryptor(objectId, 0);\r\n    }\r\n    out(\"<<\");\r\n    out(\"/Producer (\" + pdfEscape(encryptor(\"jsPDF \" + jsPDF.version)) + \")\");\r\n    for (var key in documentProperties) {\r\n      if (documentProperties.hasOwnProperty(key) && documentProperties[key]) {\r\n        out(\r\n          \"/\" +\r\n            key.substr(0, 1).toUpperCase() +\r\n            key.substr(1) +\r\n            \" (\" +\r\n            pdfEscape(encryptor(documentProperties[key])) +\r\n            \")\"\r\n        );\r\n      }\r\n    }\r\n    out(\"/CreationDate (\" + pdfEscape(encryptor(creationDate)) + \")\");\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  });\r\n\r\n  var putCatalog = (API.__private__.putCatalog = function(options) {\r\n    options = options || {};\r\n    var tmpRootDictionaryObjId =\r\n      options.rootDictionaryObjId || rootDictionaryObjId;\r\n    newObject();\r\n    out(\"<<\");\r\n    out(\"/Type /Catalog\");\r\n    out(\"/Pages \" + tmpRootDictionaryObjId + \" 0 R\");\r\n    // PDF13ref Section 7.2.1\r\n    if (!zoomMode) zoomMode = \"fullwidth\";\r\n    switch (zoomMode) {\r\n      case \"fullwidth\":\r\n        out(\"/OpenAction [3 0 R /FitH null]\");\r\n        break;\r\n      case \"fullheight\":\r\n        out(\"/OpenAction [3 0 R /FitV null]\");\r\n        break;\r\n      case \"fullpage\":\r\n        out(\"/OpenAction [3 0 R /Fit]\");\r\n        break;\r\n      case \"original\":\r\n        out(\"/OpenAction [3 0 R /XYZ null null 1]\");\r\n        break;\r\n      default:\r\n        var pcn = \"\" + zoomMode;\r\n        if (pcn.substr(pcn.length - 1) === \"%\")\r\n          zoomMode = parseInt(zoomMode) / 100;\r\n        if (typeof zoomMode === \"number\") {\r\n          out(\"/OpenAction [3 0 R /XYZ null null \" + f2(zoomMode) + \"]\");\r\n        }\r\n    }\r\n    if (!layoutMode) layoutMode = \"continuous\";\r\n    switch (layoutMode) {\r\n      case \"continuous\":\r\n        out(\"/PageLayout /OneColumn\");\r\n        break;\r\n      case \"single\":\r\n        out(\"/PageLayout /SinglePage\");\r\n        break;\r\n      case \"two\":\r\n      case \"twoleft\":\r\n        out(\"/PageLayout /TwoColumnLeft\");\r\n        break;\r\n      case \"tworight\":\r\n        out(\"/PageLayout /TwoColumnRight\");\r\n        break;\r\n    }\r\n    if (pageMode) {\r\n      /**\r\n       * A name object specifying how the document should be displayed when opened:\r\n       * UseNone      : Neither document outline nor thumbnail images visible -- DEFAULT\r\n       * UseOutlines  : Document outline visible\r\n       * UseThumbs    : Thumbnail images visible\r\n       * FullScreen   : Full-screen mode, with no menu bar, window controls, or any other window visible\r\n       */\r\n      out(\"/PageMode /\" + pageMode);\r\n    }\r\n    events.publish(\"putCatalog\");\r\n    out(\">>\");\r\n    out(\"endobj\");\r\n  });\r\n\r\n  var putTrailer = (API.__private__.putTrailer = function() {\r\n    out(\"trailer\");\r\n    out(\"<<\");\r\n    out(\"/Size \" + (objectNumber + 1));\r\n    // Root and Info must be the last and second last objects written respectively\r\n    out(\"/Root \" + objectNumber + \" 0 R\");\r\n    out(\"/Info \" + (objectNumber - 1) + \" 0 R\");\r\n    if (encryptionOptions !== null) {\r\n      out(\"/Encrypt \" + encryption.oid + \" 0 R\");\r\n    }\r\n    out(\"/ID [ <\" + fileId + \"> <\" + fileId + \"> ]\");\r\n    out(\">>\");\r\n  });\r\n\r\n  var putHeader = (API.__private__.putHeader = function() {\r\n    out(\"%PDF-\" + pdfVersion);\r\n    out(\"%\\xBA\\xDF\\xAC\\xE0\");\r\n  });\r\n\r\n  var putXRef = (API.__private__.putXRef = function() {\r\n    var p = \"0000000000\";\r\n\r\n    out(\"xref\");\r\n    out(\"0 \" + (objectNumber + 1));\r\n    out(\"0000000000 65535 f \");\r\n    for (var i = 1; i <= objectNumber; i++) {\r\n      var offset = offsets[i];\r\n      if (typeof offset === \"function\") {\r\n        out((p + offsets[i]()).slice(-10) + \" 00000 n \");\r\n      } else {\r\n        if (typeof offsets[i] !== \"undefined\") {\r\n          out((p + offsets[i]).slice(-10) + \" 00000 n \");\r\n        } else {\r\n          out(\"0000000000 00000 n \");\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  var buildDocument = (API.__private__.buildDocument = function() {\r\n    resetDocument();\r\n    setOutputDestination(content);\r\n\r\n    events.publish(\"buildDocument\");\r\n\r\n    putHeader();\r\n    putPages();\r\n    putAdditionalObjects();\r\n    putResources();\r\n    if (encryptionOptions !== null) putEncryptionDict();\r\n    putInfo();\r\n    putCatalog();\r\n\r\n    var offsetOfXRef = contentLength;\r\n    putXRef();\r\n    putTrailer();\r\n    out(\"startxref\");\r\n    out(\"\" + offsetOfXRef);\r\n    out(\"%%EOF\");\r\n\r\n    setOutputDestination(pages[currentPage]);\r\n\r\n    return content.join(\"\\n\");\r\n  });\r\n\r\n  var getBlob = (API.__private__.getBlob = function(data) {\r\n    return new Blob([getArrayBuffer(data)], {\r\n      type: \"application/pdf\"\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Generates the PDF document.\r\n   *\r\n   * If `type` argument is undefined, output is raw body of resulting PDF returned as a string.\r\n   *\r\n   * @param {string} type A string identifying one of the possible output types.<br/>\r\n   *                      Possible values are: <br/>\r\n   *                          'arraybuffer' -> (ArrayBuffer)<br/>\r\n   *                          'blob' -> (Blob)<br/>\r\n   *                          'bloburi'/'bloburl' -> (string)<br/>\r\n   *                          'datauristring'/'dataurlstring' -> (string)<br/>\r\n   *                          'datauri'/'dataurl' -> (undefined) -> change location to generated datauristring/dataurlstring<br/>\r\n   *                          'dataurlnewwindow' -> (window | null | undefined) throws error if global isn't a window object(node)<br/>\r\n   *                          'pdfobjectnewwindow' -> (window | null) throws error if global isn't a window object(node)<br/>\r\n   *                          'pdfjsnewwindow' -> (wind | null)\r\n   * @param {Object|string} options An object providing some additional signalling to PDF generator.<br/>\r\n   *                                Possible options are 'filename'.<br/>\r\n   *                                A string can be passed instead of {filename:string} and defaults to 'generated.pdf'\r\n   * @function\r\n   * @instance\r\n   * @returns {string|window|ArrayBuffer|Blob|jsPDF|null|undefined}\r\n   * @memberof jsPDF#\r\n   * @name output\r\n   */\r\n  var output = (API.output = API.__private__.output = SAFE(function output(\r\n    type,\r\n    options\r\n  ) {\r\n    options = options || {};\r\n\r\n    if (typeof options === \"string\") {\r\n      options = {\r\n        filename: options\r\n      };\r\n    } else {\r\n      options.filename = options.filename || \"generated.pdf\";\r\n    }\r\n\r\n    switch (type) {\r\n      case undefined:\r\n        return buildDocument();\r\n      case \"save\":\r\n        API.save(options.filename);\r\n        break;\r\n      case \"arraybuffer\":\r\n        return getArrayBuffer(buildDocument());\r\n      case \"blob\":\r\n        return getBlob(buildDocument());\r\n      case \"bloburi\":\r\n      case \"bloburl\":\r\n        // Developer is responsible of calling revokeObjectURL\r\n        if (\r\n          typeof globalObject.URL !== \"undefined\" &&\r\n          typeof globalObject.URL.createObjectURL === \"function\"\r\n        ) {\r\n          return (\r\n            (globalObject.URL &&\r\n              globalObject.URL.createObjectURL(getBlob(buildDocument()))) ||\r\n            void 0\r\n          );\r\n        } else {\r\n          console.warn(\r\n            \"bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.\"\r\n          );\r\n        }\r\n        break;\r\n      case \"datauristring\":\r\n      case \"dataurlstring\":\r\n        var dataURI = \"\";\r\n        var pdfDocument = buildDocument();\r\n        try {\r\n          dataURI = btoa(pdfDocument);\r\n        } catch (e) {\r\n          dataURI = btoa(unescape(encodeURIComponent(pdfDocument)));\r\n        }\r\n        return (\r\n          \"data:application/pdf;filename=\" +\r\n          options.filename +\r\n          \";base64,\" +\r\n          dataURI\r\n        );\r\n      case \"pdfobjectnewwindow\":\r\n        if (\r\n          Object.prototype.toString.call(globalObject) === \"[object Window]\"\r\n        ) {\r\n          var pdfObjectUrl =\r\n            \"https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js\";\r\n          var integrity =\r\n            ' integrity=\"sha512-4ze/a9/4jqu+tX9dfOqJYSvyYd5M6qum/3HpCLr+/Jqf0whc37VUbkpNGHR7/8pSnCFw47T1fmIpwBV7UySh3g==\" crossorigin=\"anonymous\"';\r\n\r\n          if (options.pdfObjectUrl) {\r\n            pdfObjectUrl = options.pdfObjectUrl;\r\n            integrity = \"\";\r\n          }\r\n\r\n          var htmlForNewWindow =\r\n            \"<html>\" +\r\n            '<style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src=\"' +\r\n            pdfObjectUrl +\r\n            '\"' +\r\n            integrity +\r\n            '></script><script >PDFObject.embed(\"' +\r\n            this.output(\"dataurlstring\") +\r\n            '\", ' +\r\n            JSON.stringify(options) +\r\n            \");</script></body></html>\";\r\n          var nW = globalObject.open();\r\n\r\n          if (nW !== null) {\r\n            nW.document.write(htmlForNewWindow);\r\n          }\r\n          return nW;\r\n        } else {\r\n          throw new Error(\r\n            \"The option pdfobjectnewwindow just works in a browser-environment.\"\r\n          );\r\n        }\r\n      case \"pdfjsnewwindow\":\r\n        if (\r\n          Object.prototype.toString.call(globalObject) === \"[object Window]\"\r\n        ) {\r\n          var pdfJsUrl = options.pdfJsUrl || \"examples/PDF.js/web/viewer.html\";\r\n          var htmlForPDFjsNewWindow =\r\n            \"<html>\" +\r\n            \"<style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style>\" +\r\n            '<body><iframe id=\"pdfViewer\" src=\"' +\r\n            pdfJsUrl +\r\n            \"?file=&downloadName=\" +\r\n            options.filename +\r\n            '\" width=\"500px\" height=\"400px\" />' +\r\n            \"</body></html>\";\r\n          var PDFjsNewWindow = globalObject.open();\r\n\r\n          if (PDFjsNewWindow !== null) {\r\n            PDFjsNewWindow.document.write(htmlForPDFjsNewWindow);\r\n            var scope = this;\r\n            PDFjsNewWindow.document.documentElement.querySelector(\r\n              \"#pdfViewer\"\r\n            ).onload = function() {\r\n              PDFjsNewWindow.document.title = options.filename;\r\n              PDFjsNewWindow.document.documentElement\r\n                .querySelector(\"#pdfViewer\")\r\n                .contentWindow.PDFViewerApplication.open(\r\n                  scope.output(\"bloburl\")\r\n                );\r\n            };\r\n          }\r\n          return PDFjsNewWindow;\r\n        } else {\r\n          throw new Error(\r\n            \"The option pdfjsnewwindow just works in a browser-environment.\"\r\n          );\r\n        }\r\n      case \"dataurlnewwindow\":\r\n        if (\r\n          Object.prototype.toString.call(globalObject) === \"[object Window]\"\r\n        ) {\r\n          var htmlForDataURLNewWindow =\r\n            \"<html>\" +\r\n            \"<style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style>\" +\r\n            \"<body>\" +\r\n            '<iframe src=\"' +\r\n            this.output(\"datauristring\", options) +\r\n            '\"></iframe>' +\r\n            \"</body></html>\";\r\n          var dataURLNewWindow = globalObject.open();\r\n          if (dataURLNewWindow !== null) {\r\n            dataURLNewWindow.document.write(htmlForDataURLNewWindow);\r\n            dataURLNewWindow.document.title = options.filename;\r\n          }\r\n          if (dataURLNewWindow || typeof safari === \"undefined\")\r\n            return dataURLNewWindow;\r\n        } else {\r\n          throw new Error(\r\n            \"The option dataurlnewwindow just works in a browser-environment.\"\r\n          );\r\n        }\r\n        break;\r\n      case \"datauri\":\r\n      case \"dataurl\":\r\n        return (globalObject.document.location.href = this.output(\r\n          \"datauristring\",\r\n          options\r\n        ));\r\n      default:\r\n        return null;\r\n    }\r\n  }));\r\n\r\n  /**\r\n   * Used to see if a supplied hotfix was requested when the pdf instance was created.\r\n   * @param {string} hotfixName - The name of the hotfix to check.\r\n   * @returns {boolean}\r\n   */\r\n  var hasHotfix = function(hotfixName) {\r\n    return (\r\n      Array.isArray(hotfixes) === true && hotfixes.indexOf(hotfixName) > -1\r\n    );\r\n  };\r\n\r\n  switch (unit) {\r\n    case \"pt\":\r\n      scaleFactor = 1;\r\n      break;\r\n    case \"mm\":\r\n      scaleFactor = 72 / 25.4;\r\n      break;\r\n    case \"cm\":\r\n      scaleFactor = 72 / 2.54;\r\n      break;\r\n    case \"in\":\r\n      scaleFactor = 72;\r\n      break;\r\n    case \"px\":\r\n      if (hasHotfix(\"px_scaling\") == true) {\r\n        scaleFactor = 72 / 96;\r\n      } else {\r\n        scaleFactor = 96 / 72;\r\n      }\r\n      break;\r\n    case \"pc\":\r\n      scaleFactor = 12;\r\n      break;\r\n    case \"em\":\r\n      scaleFactor = 12;\r\n      break;\r\n    case \"ex\":\r\n      scaleFactor = 6;\r\n      break;\r\n    default:\r\n      if (typeof unit === \"number\") {\r\n        scaleFactor = unit;\r\n      } else {\r\n        throw new Error(\"Invalid unit: \" + unit);\r\n      }\r\n  }\r\n\r\n  var encryption = null;\r\n  setCreationDate();\r\n  setFileId();\r\n\r\n  var getEncryptor = function(objectId) {\r\n    if (encryptionOptions !== null) {\r\n      return encryption.encryptor(objectId, 0);\r\n    }\r\n    return function(data) {\r\n      return data;\r\n    };\r\n  };\r\n\r\n  //---------------------------------------\r\n  // Public API\r\n\r\n  var getPageInfo = (API.__private__.getPageInfo = API.getPageInfo = function(\r\n    pageNumberOneBased\r\n  ) {\r\n    if (isNaN(pageNumberOneBased) || pageNumberOneBased % 1 !== 0) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.getPageInfo\");\r\n    }\r\n    var objId = pagesContext[pageNumberOneBased].objId;\r\n    return {\r\n      objId: objId,\r\n      pageNumber: pageNumberOneBased,\r\n      pageContext: pagesContext[pageNumberOneBased]\r\n    };\r\n  });\r\n\r\n  var getPageInfoByObjId = (API.__private__.getPageInfoByObjId = function(\r\n    objId\r\n  ) {\r\n    if (isNaN(objId) || objId % 1 !== 0) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.getPageInfoByObjId\");\r\n    }\r\n    for (var pageNumber in pagesContext) {\r\n      if (pagesContext[pageNumber].objId === objId) {\r\n        break;\r\n      }\r\n    }\r\n    return getPageInfo(pageNumber);\r\n  });\r\n\r\n  var getCurrentPageInfo = (API.__private__.getCurrentPageInfo = API.getCurrentPageInfo = function() {\r\n    return {\r\n      objId: pagesContext[currentPage].objId,\r\n      pageNumber: currentPage,\r\n      pageContext: pagesContext[currentPage]\r\n    };\r\n  });\r\n\r\n  /**\r\n   * Adds (and transfers the focus to) new page to the PDF document.\r\n   * @param format {String/Array} The format of the new page. Can be: <ul><li>a0 - a10</li><li>b0 - b10</li><li>c0 - c10</li><li>dl</li><li>letter</li><li>government-letter</li><li>legal</li><li>junior-legal</li><li>ledger</li><li>tabloid</li><li>credit-card</li></ul><br />\r\n   * Default is \"a4\". If you want to use your own format just pass instead of one of the above predefined formats the size as an number-array, e.g. [595.28, 841.89]\r\n   * @param orientation {string} Orientation of the new page. Possible values are \"portrait\" or \"landscape\" (or shortcuts \"p\" (Default), \"l\").\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   *\r\n   * @memberof jsPDF#\r\n   * @name addPage\r\n   */\r\n  API.addPage = function() {\r\n    _addPage.apply(this, arguments);\r\n    return this;\r\n  };\r\n  /**\r\n   * Adds (and transfers the focus to) new page to the PDF document.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   *\r\n   * @memberof jsPDF#\r\n   * @name setPage\r\n   * @param {number} page Switch the active page to the page number specified (indexed starting at 1).\r\n   * @example\r\n   * doc = jsPDF()\r\n   * doc.addPage()\r\n   * doc.addPage()\r\n   * doc.text('I am on page 3', 10, 10)\r\n   * doc.setPage(1)\r\n   * doc.text('I am on page 1', 10, 10)\r\n   */\r\n  API.setPage = function() {\r\n    _setPage.apply(this, arguments);\r\n    setOutputDestination.call(this, pages[currentPage]);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @name insertPage\r\n   * @memberof jsPDF#\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @param {Object} beforePage\r\n   * @returns {jsPDF}\r\n   */\r\n  API.insertPage = function(beforePage) {\r\n    this.addPage();\r\n    this.movePage(currentPage, beforePage);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @name movePage\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @instance\r\n   * @param {number} targetPage\r\n   * @param {number} beforePage\r\n   * @returns {jsPDF}\r\n   */\r\n  API.movePage = function(targetPage, beforePage) {\r\n    var tmpPages, tmpPagesContext;\r\n    if (targetPage > beforePage) {\r\n      tmpPages = pages[targetPage];\r\n      tmpPagesContext = pagesContext[targetPage];\r\n      for (var i = targetPage; i > beforePage; i--) {\r\n        pages[i] = pages[i - 1];\r\n        pagesContext[i] = pagesContext[i - 1];\r\n      }\r\n      pages[beforePage] = tmpPages;\r\n      pagesContext[beforePage] = tmpPagesContext;\r\n      this.setPage(beforePage);\r\n    } else if (targetPage < beforePage) {\r\n      tmpPages = pages[targetPage];\r\n      tmpPagesContext = pagesContext[targetPage];\r\n      for (var j = targetPage; j < beforePage; j++) {\r\n        pages[j] = pages[j + 1];\r\n        pagesContext[j] = pagesContext[j + 1];\r\n      }\r\n      pages[beforePage] = tmpPages;\r\n      pagesContext[beforePage] = tmpPagesContext;\r\n      this.setPage(beforePage);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Deletes a page from the PDF.\r\n   * @name deletePage\r\n   * @memberof jsPDF#\r\n   * @function\r\n   * @param {number} targetPage\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   */\r\n  API.deletePage = function() {\r\n    _deletePage.apply(this, arguments);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds text to page. Supports adding multiline text when 'text' argument is an Array of Strings.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @param {String|Array} text String or array of strings to be added to the page. Each line is shifted one line down per font, spacing settings declared before this call.\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page.\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page.\r\n   * @param {Object} [options] - Collection of settings signaling how the text must be encoded.\r\n   * @param {string} [options.align=left] - The alignment of the text, possible values: left, center, right, justify.\r\n   * @param {string} [options.baseline=alphabetic] - Sets text baseline used when drawing the text, possible values: alphabetic, ideographic, bottom, top, middle, hanging\r\n   * @param {number|Matrix} [options.angle=0] - Rotate the text clockwise or counterclockwise. Expects the angle in degree.\r\n   * @param {number} [options.rotationDirection=1] - Direction of the rotation. 0 = clockwise, 1 = counterclockwise.\r\n   * @param {number} [options.charSpace=0] - The space between each letter.\r\n   * @param {number} [options.horizontalScale=1] - Horizontal scale of the text as a factor of the regular size.\r\n   * @param {number} [options.lineHeightFactor=1.15] - The lineheight of each line.\r\n   * @param {Object} [options.flags] - Flags for to8bitStream.\r\n   * @param {boolean} [options.flags.noBOM=true] - Don't add BOM to Unicode-text.\r\n   * @param {boolean} [options.flags.autoencode=true] - Autoencode the Text.\r\n   * @param {number} [options.maxWidth=0] - Split the text by given width, 0 = no split.\r\n   * @param {string} [options.renderingMode=fill] - Set how the text should be rendered, possible values: fill, stroke, fillThenStroke, invisible, fillAndAddForClipping, strokeAndAddPathForClipping, fillThenStrokeAndAddToPathForClipping, addToPathForClipping.\r\n   * @param {boolean} [options.isInputVisual] - Option for the BidiEngine\r\n   * @param {boolean} [options.isOutputVisual] - Option for the BidiEngine\r\n   * @param {boolean} [options.isInputRtl] - Option for the BidiEngine\r\n   * @param {boolean} [options.isOutputRtl] - Option for the BidiEngine\r\n   * @param {boolean} [options.isSymmetricSwapping] - Option for the BidiEngine\r\n   * @param {number|Matrix} transform If transform is a number the text will be rotated by this value around the anchor set by x and y.\r\n   *\r\n   * If it is a Matrix, this matrix gets directly applied to the text, which allows shearing\r\n   * effects etc.; the x and y offsets are then applied AFTER the coordinate system has been established by this\r\n   * matrix. This means passing a rotation matrix that is equivalent to some rotation angle will in general yield a\r\n   * DIFFERENT result. A matrix is only allowed in \"advanced\" API mode.\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name text\r\n   */\r\n  API.__private__.text = API.text = function(text, x, y, options, transform) {\r\n    /*\r\n     * Inserts something like this into PDF\r\n     *   BT\r\n     *    /F1 16 Tf  % Font name + size\r\n     *    16 TL % How many units down for next line in multiline text\r\n     *    0 g % color\r\n     *    28.35 813.54 Td % position\r\n     *    (line one) Tj\r\n     *    T* (line two) Tj\r\n     *    T* (line three) Tj\r\n     *   ET\r\n     */\r\n    options = options || {};\r\n    var scope = options.scope || this;\r\n    var payload, da, angle, align, charSpace, maxWidth, flags, horizontalScale;\r\n\r\n    // Pre-August-2012 the order of arguments was function(x, y, text, flags)\r\n    // in effort to make all calls have similar signature like\r\n    //   function(data, coordinates... , miscellaneous)\r\n    // this method had its args flipped.\r\n    // code below allows backward compatibility with old arg order.\r\n    if (\r\n      typeof text === \"number\" &&\r\n      typeof x === \"number\" &&\r\n      (typeof y === \"string\" || Array.isArray(y))\r\n    ) {\r\n      var tmp = y;\r\n      y = x;\r\n      x = text;\r\n      text = tmp;\r\n    }\r\n\r\n    var transformationMatrix;\r\n\r\n    if (arguments[3] instanceof Matrix === false) {\r\n      flags = arguments[3];\r\n      angle = arguments[4];\r\n      align = arguments[5];\r\n\r\n      if (typeof flags !== \"object\" || flags === null) {\r\n        if (typeof angle === \"string\") {\r\n          align = angle;\r\n          angle = null;\r\n        }\r\n        if (typeof flags === \"string\") {\r\n          align = flags;\r\n          flags = null;\r\n        }\r\n        if (typeof flags === \"number\") {\r\n          angle = flags;\r\n          flags = null;\r\n        }\r\n        options = {\r\n          flags: flags,\r\n          angle: angle,\r\n          align: align\r\n        };\r\n      }\r\n    } else {\r\n      advancedApiModeTrap(\r\n        \"The transform parameter of text() with a Matrix value\"\r\n      );\r\n      transformationMatrix = transform;\r\n    }\r\n\r\n    if (isNaN(x) || isNaN(y) || typeof text === \"undefined\" || text === null) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.text\");\r\n    }\r\n\r\n    if (text.length === 0) {\r\n      return scope;\r\n    }\r\n\r\n    var xtra = \"\";\r\n    var isHex = false;\r\n    var lineHeight =\r\n      typeof options.lineHeightFactor === \"number\"\r\n        ? options.lineHeightFactor\r\n        : lineHeightFactor;\r\n    var scaleFactor = scope.internal.scaleFactor;\r\n\r\n    function ESC(s) {\r\n      s = s.split(\"\\t\").join(Array(options.TabLen || 9).join(\" \"));\r\n      return pdfEscape(s, flags);\r\n    }\r\n\r\n    function transformTextToSpecialArray(text) {\r\n      //we don't want to destroy original text array, so cloning it\r\n      var sa = text.concat();\r\n      var da = [];\r\n      var len = sa.length;\r\n      var curDa;\r\n      //we do array.join('text that must not be PDFescaped\")\r\n      //thus, pdfEscape each component separately\r\n      while (len--) {\r\n        curDa = sa.shift();\r\n        if (typeof curDa === \"string\") {\r\n          da.push(curDa);\r\n        } else {\r\n          if (\r\n            Array.isArray(text) &&\r\n            (curDa.length === 1 ||\r\n              (curDa[1] === undefined && curDa[2] === undefined))\r\n          ) {\r\n            da.push(curDa[0]);\r\n          } else {\r\n            da.push([curDa[0], curDa[1], curDa[2]]);\r\n          }\r\n        }\r\n      }\r\n      return da;\r\n    }\r\n\r\n    function processTextByFunction(text, processingFunction) {\r\n      var result;\r\n      if (typeof text === \"string\") {\r\n        result = processingFunction(text)[0];\r\n      } else if (Array.isArray(text)) {\r\n        //we don't want to destroy original text array, so cloning it\r\n        var sa = text.concat();\r\n        var da = [];\r\n        var len = sa.length;\r\n        var curDa;\r\n        var tmpResult;\r\n        //we do array.join('text that must not be PDFescaped\")\r\n        //thus, pdfEscape each component separately\r\n        while (len--) {\r\n          curDa = sa.shift();\r\n          if (typeof curDa === \"string\") {\r\n            da.push(processingFunction(curDa)[0]);\r\n          } else if (Array.isArray(curDa) && typeof curDa[0] === \"string\") {\r\n            tmpResult = processingFunction(curDa[0], curDa[1], curDa[2]);\r\n            da.push([tmpResult[0], tmpResult[1], tmpResult[2]]);\r\n          }\r\n        }\r\n        result = da;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    //Check if text is of type String\r\n    var textIsOfTypeString = false;\r\n    var tmpTextIsOfTypeString = true;\r\n\r\n    if (typeof text === \"string\") {\r\n      textIsOfTypeString = true;\r\n    } else if (Array.isArray(text)) {\r\n      //we don't want to destroy original text array, so cloning it\r\n      var sa = text.concat();\r\n      da = [];\r\n      var len = sa.length;\r\n      var curDa;\r\n      //we do array.join('text that must not be PDFescaped\")\r\n      //thus, pdfEscape each component separately\r\n      while (len--) {\r\n        curDa = sa.shift();\r\n        if (\r\n          typeof curDa !== \"string\" ||\r\n          (Array.isArray(curDa) && typeof curDa[0] !== \"string\")\r\n        ) {\r\n          tmpTextIsOfTypeString = false;\r\n        }\r\n      }\r\n      textIsOfTypeString = tmpTextIsOfTypeString;\r\n    }\r\n    if (textIsOfTypeString === false) {\r\n      throw new Error(\r\n        'Type of text must be string or Array. \"' +\r\n          text +\r\n          '\" is not recognized.'\r\n      );\r\n    }\r\n\r\n    //If there are any newlines in text, we assume\r\n    //the user wanted to print multiple lines, so break the\r\n    //text up into an array. If the text is already an array,\r\n    //we assume the user knows what they are doing.\r\n    //Convert text into an array anyway to simplify\r\n    //later code.\r\n\r\n    if (typeof text === \"string\") {\r\n      if (text.match(/[\\r?\\n]/)) {\r\n        text = text.split(/\\r\\n|\\r|\\n/g);\r\n      } else {\r\n        text = [text];\r\n      }\r\n    }\r\n\r\n    //baseline\r\n    var height = activeFontSize / scope.internal.scaleFactor;\r\n    var descent = height * (lineHeight - 1);\r\n\r\n    switch (options.baseline) {\r\n      case \"bottom\":\r\n        y -= descent;\r\n        break;\r\n      case \"top\":\r\n        y += height - descent;\r\n        break;\r\n      case \"hanging\":\r\n        y += height - 2 * descent;\r\n        break;\r\n      case \"middle\":\r\n        y += height / 2 - descent;\r\n        break;\r\n      case \"ideographic\":\r\n      case \"alphabetic\":\r\n      default:\r\n        // do nothing, everything is fine\r\n        break;\r\n    }\r\n\r\n    //multiline\r\n    maxWidth = options.maxWidth || 0;\r\n\r\n    if (maxWidth > 0) {\r\n      if (typeof text === \"string\") {\r\n        text = scope.splitTextToSize(text, maxWidth);\r\n      } else if (Object.prototype.toString.call(text) === \"[object Array]\") {\r\n        text = text.reduce(function(acc, textLine) {\r\n          return acc.concat(scope.splitTextToSize(textLine, maxWidth));\r\n        }, []);\r\n      }\r\n    }\r\n\r\n    //creating Payload-Object to make text byRef\r\n    payload = {\r\n      text: text,\r\n      x: x,\r\n      y: y,\r\n      options: options,\r\n      mutex: {\r\n        pdfEscape: pdfEscape,\r\n        activeFontKey: activeFontKey,\r\n        fonts: fonts,\r\n        activeFontSize: activeFontSize\r\n      }\r\n    };\r\n    events.publish(\"preProcessText\", payload);\r\n\r\n    text = payload.text;\r\n    options = payload.options;\r\n\r\n    //angle\r\n    angle = options.angle;\r\n\r\n    if (\r\n      transformationMatrix instanceof Matrix === false &&\r\n      angle &&\r\n      typeof angle === \"number\"\r\n    ) {\r\n      angle *= Math.PI / 180;\r\n\r\n      if (options.rotationDirection === 0) {\r\n        angle = -angle;\r\n      }\r\n\r\n      if (apiMode === ApiMode.ADVANCED) {\r\n        angle = -angle;\r\n      }\r\n\r\n      var c = Math.cos(angle);\r\n      var s = Math.sin(angle);\r\n      transformationMatrix = new Matrix(c, s, -s, c, 0, 0);\r\n    } else if (angle && angle instanceof Matrix) {\r\n      transformationMatrix = angle;\r\n    }\r\n\r\n    if (apiMode === ApiMode.ADVANCED && !transformationMatrix) {\r\n      transformationMatrix = identityMatrix;\r\n    }\r\n\r\n    //charSpace\r\n\r\n    charSpace = options.charSpace || activeCharSpace;\r\n\r\n    if (typeof charSpace !== \"undefined\") {\r\n      xtra += hpf(scale(charSpace)) + \" Tc\\n\";\r\n      this.setCharSpace(this.getCharSpace() || 0);\r\n    }\r\n\r\n    horizontalScale = options.horizontalScale;\r\n    if (typeof horizontalScale !== \"undefined\") {\r\n      xtra += hpf(horizontalScale * 100) + \" Tz\\n\";\r\n    }\r\n\r\n    //lang\r\n\r\n    var lang = options.lang;\r\n\r\n    if (lang) {\r\n      //    xtra += \"/Lang (\" + lang +\")\\n\";\r\n    }\r\n\r\n    //renderingMode\r\n    var renderingMode = -1;\r\n    var parmRenderingMode =\r\n      typeof options.renderingMode !== \"undefined\"\r\n        ? options.renderingMode\r\n        : options.stroke;\r\n    var pageContext = scope.internal.getCurrentPageInfo().pageContext;\r\n\r\n    switch (parmRenderingMode) {\r\n      case 0:\r\n      case false:\r\n      case \"fill\":\r\n        renderingMode = 0;\r\n        break;\r\n      case 1:\r\n      case true:\r\n      case \"stroke\":\r\n        renderingMode = 1;\r\n        break;\r\n      case 2:\r\n      case \"fillThenStroke\":\r\n        renderingMode = 2;\r\n        break;\r\n      case 3:\r\n      case \"invisible\":\r\n        renderingMode = 3;\r\n        break;\r\n      case 4:\r\n      case \"fillAndAddForClipping\":\r\n        renderingMode = 4;\r\n        break;\r\n      case 5:\r\n      case \"strokeAndAddPathForClipping\":\r\n        renderingMode = 5;\r\n        break;\r\n      case 6:\r\n      case \"fillThenStrokeAndAddToPathForClipping\":\r\n        renderingMode = 6;\r\n        break;\r\n      case 7:\r\n      case \"addToPathForClipping\":\r\n        renderingMode = 7;\r\n        break;\r\n    }\r\n\r\n    var usedRenderingMode =\r\n      typeof pageContext.usedRenderingMode !== \"undefined\"\r\n        ? pageContext.usedRenderingMode\r\n        : -1;\r\n\r\n    //if the coder wrote it explicitly to use a specific\r\n    //renderingMode, then use it\r\n    if (renderingMode !== -1) {\r\n      xtra += renderingMode + \" Tr\\n\";\r\n      //otherwise check if we used the rendering Mode already\r\n      //if so then set the rendering Mode...\r\n    } else if (usedRenderingMode !== -1) {\r\n      xtra += \"0 Tr\\n\";\r\n    }\r\n\r\n    if (renderingMode !== -1) {\r\n      pageContext.usedRenderingMode = renderingMode;\r\n    }\r\n\r\n    //align\r\n    align = options.align || \"left\";\r\n    var leading = activeFontSize * lineHeight;\r\n    var pageWidth = scope.internal.pageSize.getWidth();\r\n    var activeFont = fonts[activeFontKey];\r\n    charSpace = options.charSpace || activeCharSpace;\r\n    maxWidth = options.maxWidth || 0;\r\n\r\n    var lineWidths;\r\n    flags = Object.assign({ autoencode: true, noBOM: true }, options.flags);\r\n\r\n    var wordSpacingPerLine = [];\r\n\r\n    if (Object.prototype.toString.call(text) === \"[object Array]\") {\r\n      da = transformTextToSpecialArray(text);\r\n      var newY;\r\n      if (align !== \"left\") {\r\n        lineWidths = da.map(function(v) {\r\n          return (\r\n            (scope.getStringUnitWidth(v, {\r\n              font: activeFont,\r\n              charSpace: charSpace,\r\n              fontSize: activeFontSize,\r\n              doKerning: false\r\n            }) *\r\n              activeFontSize) /\r\n            scaleFactor\r\n          );\r\n        });\r\n      }\r\n      //The first line uses the \"main\" Td setting,\r\n      //and the subsequent lines are offset by the\r\n      //previous line's x coordinate.\r\n      var prevWidth = 0;\r\n      var newX;\r\n      if (align === \"right\") {\r\n        //The passed in x coordinate defines the\r\n        //rightmost point of the text.\r\n        x -= lineWidths[0];\r\n        text = [];\r\n        len = da.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (i === 0) {\r\n            newX = getHorizontalCoordinate(x);\r\n            newY = getVerticalCoordinate(y);\r\n          } else {\r\n            newX = scale(prevWidth - lineWidths[i]);\r\n            newY = -leading;\r\n          }\r\n          text.push([da[i], newX, newY]);\r\n          prevWidth = lineWidths[i];\r\n        }\r\n      } else if (align === \"center\") {\r\n        //The passed in x coordinate defines\r\n        //the center point.\r\n        x -= lineWidths[0] / 2;\r\n        text = [];\r\n        len = da.length;\r\n        for (var j = 0; j < len; j++) {\r\n          if (j === 0) {\r\n            newX = getHorizontalCoordinate(x);\r\n            newY = getVerticalCoordinate(y);\r\n          } else {\r\n            newX = scale((prevWidth - lineWidths[j]) / 2);\r\n            newY = -leading;\r\n          }\r\n          text.push([da[j], newX, newY]);\r\n          prevWidth = lineWidths[j];\r\n        }\r\n      } else if (align === \"left\") {\r\n        text = [];\r\n        len = da.length;\r\n        for (var h = 0; h < len; h++) {\r\n          text.push(da[h]);\r\n        }\r\n      } else if (align === \"justify\") {\r\n        text = [];\r\n        len = da.length;\r\n        maxWidth = maxWidth !== 0 ? maxWidth : pageWidth;\r\n\r\n        for (var l = 0; l < len; l++) {\r\n          newY = l === 0 ? getVerticalCoordinate(y) : -leading;\r\n          newX = l === 0 ? getHorizontalCoordinate(x) : 0;\r\n          if (l < len - 1) {\r\n            wordSpacingPerLine.push(\r\n              hpf(\r\n                scale(\r\n                  (maxWidth - lineWidths[l]) / (da[l].split(\" \").length - 1)\r\n                )\r\n              )\r\n            );\r\n          } else {\r\n            wordSpacingPerLine.push(0);\r\n          }\r\n          text.push([da[l], newX, newY]);\r\n        }\r\n      } else {\r\n        throw new Error(\r\n          'Unrecognized alignment option, use \"left\", \"center\", \"right\" or \"justify\".'\r\n        );\r\n      }\r\n    }\r\n\r\n    //R2L\r\n    var doReversing = typeof options.R2L === \"boolean\" ? options.R2L : R2L;\r\n    if (doReversing === true) {\r\n      text = processTextByFunction(text, function(text, posX, posY) {\r\n        return [\r\n          text\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\"),\r\n          posX,\r\n          posY\r\n        ];\r\n      });\r\n    }\r\n\r\n    //creating Payload-Object to make text byRef\r\n    payload = {\r\n      text: text,\r\n      x: x,\r\n      y: y,\r\n      options: options,\r\n      mutex: {\r\n        pdfEscape: pdfEscape,\r\n        activeFontKey: activeFontKey,\r\n        fonts: fonts,\r\n        activeFontSize: activeFontSize\r\n      }\r\n    };\r\n    events.publish(\"postProcessText\", payload);\r\n\r\n    text = payload.text;\r\n    isHex = payload.mutex.isHex || false;\r\n\r\n    //Escaping\r\n    var activeFontEncoding = fonts[activeFontKey].encoding;\r\n\r\n    if (\r\n      activeFontEncoding === \"WinAnsiEncoding\" ||\r\n      activeFontEncoding === \"StandardEncoding\"\r\n    ) {\r\n      text = processTextByFunction(text, function(text, posX, posY) {\r\n        return [ESC(text), posX, posY];\r\n      });\r\n    }\r\n\r\n    da = transformTextToSpecialArray(text);\r\n\r\n    text = [];\r\n    var STRING = 0;\r\n    var ARRAY = 1;\r\n    var variant = Array.isArray(da[0]) ? ARRAY : STRING;\r\n    var posX;\r\n    var posY;\r\n    var content;\r\n    var wordSpacing = \"\";\r\n\r\n    var generatePosition = function(\r\n      parmPosX,\r\n      parmPosY,\r\n      parmTransformationMatrix\r\n    ) {\r\n      var position = \"\";\r\n      if (parmTransformationMatrix instanceof Matrix) {\r\n        // It is kind of more intuitive to apply a plain rotation around the text anchor set by x and y\r\n        // but when the user supplies an arbitrary transformation matrix, the x and y offsets should be applied\r\n        // in the coordinate system established by this matrix\r\n        if (typeof options.angle === \"number\") {\r\n          parmTransformationMatrix = matrixMult(\r\n            parmTransformationMatrix,\r\n            new Matrix(1, 0, 0, 1, parmPosX, parmPosY)\r\n          );\r\n        } else {\r\n          parmTransformationMatrix = matrixMult(\r\n            new Matrix(1, 0, 0, 1, parmPosX, parmPosY),\r\n            parmTransformationMatrix\r\n          );\r\n        }\r\n\r\n        if (apiMode === ApiMode.ADVANCED) {\r\n          parmTransformationMatrix = matrixMult(\r\n            new Matrix(1, 0, 0, -1, 0, 0),\r\n            parmTransformationMatrix\r\n          );\r\n        }\r\n\r\n        position = parmTransformationMatrix.join(\" \") + \" Tm\\n\";\r\n      } else {\r\n        position = hpf(parmPosX) + \" \" + hpf(parmPosY) + \" Td\\n\";\r\n      }\r\n      return position;\r\n    };\r\n\r\n    for (var lineIndex = 0; lineIndex < da.length; lineIndex++) {\r\n      wordSpacing = \"\";\r\n\r\n      switch (variant) {\r\n        case ARRAY:\r\n          content =\r\n            (isHex ? \"<\" : \"(\") + da[lineIndex][0] + (isHex ? \">\" : \")\");\r\n          posX = parseFloat(da[lineIndex][1]);\r\n          posY = parseFloat(da[lineIndex][2]);\r\n          break;\r\n        case STRING:\r\n          content = (isHex ? \"<\" : \"(\") + da[lineIndex] + (isHex ? \">\" : \")\");\r\n          posX = getHorizontalCoordinate(x);\r\n          posY = getVerticalCoordinate(y);\r\n          break;\r\n      }\r\n\r\n      if (\r\n        typeof wordSpacingPerLine !== \"undefined\" &&\r\n        typeof wordSpacingPerLine[lineIndex] !== \"undefined\"\r\n      ) {\r\n        wordSpacing = wordSpacingPerLine[lineIndex] + \" Tw\\n\";\r\n      }\r\n\r\n      if (lineIndex === 0) {\r\n        text.push(\r\n          wordSpacing +\r\n            generatePosition(posX, posY, transformationMatrix) +\r\n            content\r\n        );\r\n      } else if (variant === STRING) {\r\n        text.push(wordSpacing + content);\r\n      } else if (variant === ARRAY) {\r\n        text.push(\r\n          wordSpacing +\r\n            generatePosition(posX, posY, transformationMatrix) +\r\n            content\r\n        );\r\n      }\r\n    }\r\n\r\n    text = variant === STRING ? text.join(\" Tj\\nT* \") : text.join(\" Tj\\n\");\r\n    text += \" Tj\\n\";\r\n\r\n    var result = \"BT\\n/\";\r\n    result += activeFontKey + \" \" + activeFontSize + \" Tf\\n\"; // font face, style, size\r\n    result += hpf(activeFontSize * lineHeight) + \" TL\\n\"; // line spacing\r\n    result += textColor + \"\\n\";\r\n    result += xtra;\r\n    result += text;\r\n    result += \"ET\";\r\n\r\n    out(result);\r\n    usedFonts[activeFontKey] = true;\r\n    return scope;\r\n  };\r\n\r\n  // PDF supports these path painting and clip path operators:\r\n  //\r\n  // S - stroke\r\n  // s - close/stroke\r\n  // f (F) - fill non-zero\r\n  // f* - fill evenodd\r\n  // B - fill stroke nonzero\r\n  // B* - fill stroke evenodd\r\n  // b - close fill stroke nonzero\r\n  // b* - close fill stroke evenodd\r\n  // n - nothing (consume path)\r\n  // W - clip nonzero\r\n  // W* - clip evenodd\r\n  //\r\n  // In order to keep the API small, we omit the close-and-fill/stroke operators and provide a separate close()\r\n  // method.\r\n  /**\r\n   *\r\n   * @name clip\r\n   * @function\r\n   * @instance\r\n   * @param {string} rule Only possible value is 'evenodd'\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @description All .clip() after calling drawing ops with a style argument of null.\r\n   */\r\n  var clip = (API.__private__.clip = API.clip = function(rule) {\r\n    // Call .clip() after calling drawing ops with a style argument of null\r\n    // W is the PDF clipping op\r\n    if (\"evenodd\" === rule) {\r\n      out(\"W*\");\r\n    } else {\r\n      out(\"W\");\r\n    }\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * @name clipEvenOdd\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @description Modify the current clip path by intersecting it with the current path using the even-odd rule. Note\r\n   * that this will NOT consume the current path. In order to only use this path for clipping call\r\n   * {@link API.discardPath} afterwards.\r\n   */\r\n  API.clipEvenOdd = function() {\r\n    return clip(\"evenodd\");\r\n  };\r\n\r\n  /**\r\n   * Consumes the current path without any effect. Mainly used in combination with {@link clip} or\r\n   * {@link clipEvenOdd}. The PDF \"n\" operator.\r\n   * @name discardPath\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.__private__.discardPath = API.discardPath = function() {\r\n    out(\"n\");\r\n    return this;\r\n  };\r\n\r\n  var isValidStyle = (API.__private__.isValidStyle = function(style) {\r\n    var validStyleVariants = [\r\n      undefined,\r\n      null,\r\n      \"S\",\r\n      \"D\",\r\n      \"F\",\r\n      \"DF\",\r\n      \"FD\",\r\n      \"f\",\r\n      \"f*\",\r\n      \"B\",\r\n      \"B*\",\r\n      \"n\"\r\n    ];\r\n    var result = false;\r\n    if (validStyleVariants.indexOf(style) !== -1) {\r\n      result = true;\r\n    }\r\n    return result;\r\n  });\r\n\r\n  API.__private__.setDefaultPathOperation = API.setDefaultPathOperation = function(\r\n    operator\r\n  ) {\r\n    if (isValidStyle(operator)) {\r\n      defaultPathOperation = operator;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  var getStyle = (API.__private__.getStyle = API.getStyle = function(style) {\r\n    // see path-painting operators in PDF spec\r\n    var op = defaultPathOperation; // stroke\r\n\r\n    switch (style) {\r\n      case \"D\":\r\n      case \"S\":\r\n        op = \"S\"; // stroke\r\n        break;\r\n      case \"F\":\r\n        op = \"f\"; // fill\r\n        break;\r\n      case \"FD\":\r\n      case \"DF\":\r\n        op = \"B\";\r\n        break;\r\n      case \"f\":\r\n      case \"f*\":\r\n      case \"B\":\r\n      case \"B*\":\r\n        /*\r\n               Allow direct use of these PDF path-painting operators:\r\n               - f    fill using nonzero winding number rule\r\n               - f*    fill using even-odd rule\r\n               - B    fill then stroke with fill using non-zero winding number rule\r\n               - B*    fill then stroke with fill using even-odd rule\r\n               */\r\n        op = style;\r\n        break;\r\n    }\r\n    return op;\r\n  });\r\n\r\n  /**\r\n   * Close the current path. The PDF \"h\" operator.\r\n   * @name close\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  var close = (API.close = function() {\r\n    out(\"h\");\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Stroke the path. The PDF \"S\" operator.\r\n   * @name stroke\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.stroke = function() {\r\n    out(\"S\");\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Fill the current path using the nonzero winding number rule. If a pattern is provided, the path will be filled\r\n   * with this pattern, otherwise with the current fill color. Equivalent to the PDF \"f\" operator.\r\n   * @name fill\r\n   * @function\r\n   * @instance\r\n   * @param {PatternData=} pattern If provided the path will be filled with this pattern\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.fill = function(pattern) {\r\n    fillWithOptionalPattern(\"f\", pattern);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Fill the current path using the even-odd rule. The PDF f* operator.\r\n   * @see API.fill\r\n   * @name fillEvenOdd\r\n   * @function\r\n   * @instance\r\n   * @param {PatternData=} pattern If provided the path will be filled with this pattern\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.fillEvenOdd = function(pattern) {\r\n    fillWithOptionalPattern(\"f*\", pattern);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Fill using the nonzero winding number rule and then stroke the current Path. The PDF \"B\" operator.\r\n   * @see API.fill\r\n   * @name fillStroke\r\n   * @function\r\n   * @instance\r\n   * @param {PatternData=} pattern If provided the path will be stroked with this pattern\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.fillStroke = function(pattern) {\r\n    fillWithOptionalPattern(\"B\", pattern);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Fill using the even-odd rule and then stroke the current Path. The PDF \"B\" operator.\r\n   * @see API.fill\r\n   * @name fillStrokeEvenOdd\r\n   * @function\r\n   * @instance\r\n   * @param {PatternData=} pattern If provided the path will be fill-stroked with this pattern\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.fillStrokeEvenOdd = function(pattern) {\r\n    fillWithOptionalPattern(\"B*\", pattern);\r\n    return this;\r\n  };\r\n\r\n  var fillWithOptionalPattern = function(style, pattern) {\r\n    if (typeof pattern === \"object\") {\r\n      fillWithPattern(pattern, style);\r\n    } else {\r\n      out(style);\r\n    }\r\n  };\r\n\r\n  var putStyle = function(style) {\r\n    if (\r\n      style === null ||\r\n      (apiMode === ApiMode.ADVANCED && style === undefined)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    style = getStyle(style);\r\n\r\n    // stroking / filling / both the path\r\n    out(style);\r\n  };\r\n\r\n  function cloneTilingPattern(patternKey, boundingBox, xStep, yStep, matrix) {\r\n    var clone = new TilingPattern(\r\n      boundingBox || this.boundingBox,\r\n      xStep || this.xStep,\r\n      yStep || this.yStep,\r\n      this.gState,\r\n      matrix || this.matrix\r\n    );\r\n    clone.stream = this.stream;\r\n    var key = patternKey + \"$$\" + this.cloneIndex++ + \"$$\";\r\n    addPattern(key, clone);\r\n    return clone;\r\n  }\r\n\r\n  var fillWithPattern = function(patternData, style) {\r\n    var patternId = patternMap[patternData.key];\r\n    var pattern = patterns[patternId];\r\n\r\n    if (pattern instanceof ShadingPattern) {\r\n      out(\"q\");\r\n\r\n      out(clipRuleFromStyle(style));\r\n\r\n      if (pattern.gState) {\r\n        API.setGState(pattern.gState);\r\n      }\r\n      out(patternData.matrix.toString() + \" cm\");\r\n      out(\"/\" + patternId + \" sh\");\r\n      out(\"Q\");\r\n    } else if (pattern instanceof TilingPattern) {\r\n      // pdf draws patterns starting at the bottom left corner and they are not affected by the global transformation,\r\n      // so we must flip them\r\n      var matrix = new Matrix(1, 0, 0, -1, 0, getPageHeight());\r\n\r\n      if (patternData.matrix) {\r\n        matrix = matrix.multiply(patternData.matrix || identityMatrix);\r\n        // we cannot apply a matrix to the pattern on use so we must abuse the pattern matrix and create new instances\r\n        // for each use\r\n        patternId = cloneTilingPattern.call(\r\n          pattern,\r\n          patternData.key,\r\n          patternData.boundingBox,\r\n          patternData.xStep,\r\n          patternData.yStep,\r\n          matrix\r\n        ).id;\r\n      }\r\n\r\n      out(\"q\");\r\n      out(\"/Pattern cs\");\r\n      out(\"/\" + patternId + \" scn\");\r\n\r\n      if (pattern.gState) {\r\n        API.setGState(pattern.gState);\r\n      }\r\n\r\n      out(style);\r\n      out(\"Q\");\r\n    }\r\n  };\r\n\r\n  var clipRuleFromStyle = function(style) {\r\n    switch (style) {\r\n      case \"f\":\r\n      case \"F\":\r\n        return \"W n\";\r\n      case \"f*\":\r\n        return \"W* n\";\r\n      case \"B\":\r\n        return \"W S\";\r\n      case \"B*\":\r\n        return \"W* S\";\r\n\r\n      // these two are for compatibility reasons (in the past, calling any primitive method with a shading pattern\r\n      // and \"n\"/\"S\" as style would still fill/fill and stroke the path)\r\n      case \"S\":\r\n        return \"W S\";\r\n      case \"n\":\r\n        return \"W n\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Begin a new subpath by moving the current point to coordinates (x, y). The PDF \"m\" operator.\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @name moveTo\r\n   * @function\r\n   * @instance\r\n   * @memberof jsPDF#\r\n   * @returns {jsPDF}\r\n   */\r\n  var moveTo = (API.moveTo = function(x, y) {\r\n    out(hpf(scale(x)) + \" \" + hpf(transformScaleY(y)) + \" m\");\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Append a straight line segment from the current point to the point (x, y). The PDF \"l\" operator.\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @memberof jsPDF#\r\n   * @name lineTo\r\n   * @function\r\n   * @instance\r\n   * @memberof jsPDF#\r\n   * @returns {jsPDF}\r\n   */\r\n  var lineTo = (API.lineTo = function(x, y) {\r\n    out(hpf(scale(x)) + \" \" + hpf(transformScaleY(y)) + \" l\");\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Append a cubic Bézier curve to the current path. The curve shall extend from the current point to the point\r\n   * (x3, y3), using (x1, y1) and (x2, y2) as Bézier control points. The new current point shall be (x3, x3).\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} x3\r\n   * @param {number} y3\r\n   * @memberof jsPDF#\r\n   * @name curveTo\r\n   * @function\r\n   * @instance\r\n   * @memberof jsPDF#\r\n   * @returns {jsPDF}\r\n   */\r\n  var curveTo = (API.curveTo = function(x1, y1, x2, y2, x3, y3) {\r\n    out(\r\n      [\r\n        hpf(scale(x1)),\r\n        hpf(transformScaleY(y1)),\r\n        hpf(scale(x2)),\r\n        hpf(transformScaleY(y2)),\r\n        hpf(scale(x3)),\r\n        hpf(transformScaleY(y3)),\r\n        \"c\"\r\n      ].join(\" \")\r\n    );\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Draw a line on the current page.\r\n   *\r\n   * @name line\r\n   * @function\r\n   * @instance\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {string} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument. default: 'S'\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   */\r\n  API.__private__.line = API.line = function(x1, y1, x2, y2, style) {\r\n    if (\r\n      isNaN(x1) ||\r\n      isNaN(y1) ||\r\n      isNaN(x2) ||\r\n      isNaN(y2) ||\r\n      !isValidStyle(style)\r\n    ) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.line\");\r\n    }\r\n    if (apiMode === ApiMode.COMPAT) {\r\n      return this.lines([[x2 - x1, y2 - y1]], x1, y1, [1, 1], style || \"S\");\r\n    } else {\r\n      return this.lines([[x2 - x1, y2 - y1]], x1, y1, [1, 1]).stroke();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @typedef {Object} PatternData\r\n   * {Matrix|undefined} matrix\r\n   * {Number|undefined} xStep\r\n   * {Number|undefined} yStep\r\n   * {Array.<Number>|undefined} boundingBox\r\n   */\r\n\r\n  /**\r\n   * Adds series of curves (straight lines or cubic bezier curves) to canvas, starting at `x`, `y` coordinates.\r\n   * All data points in `lines` are relative to last line origin.\r\n   * `x`, `y` become x1,y1 for first line / curve in the set.\r\n   * For lines you only need to specify [x2, y2] - (ending point) vector against x1, y1 starting point.\r\n   * For bezier curves you need to specify [x2,y2,x3,y3,x4,y4] - vectors to control points 1, 2, ending point. All vectors are against the start of the curve - x1,y1.\r\n   *\r\n   * @example .lines([[2,2],[-2,2],[1,1,2,2,3,3],[2,1]], 212,110, [1,1], 'F', false) // line, line, bezier curve, line\r\n   * @param {Array} lines Array of *vector* shifts as pairs (lines) or sextets (cubic bezier curves).\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} scale (Defaults to [1.0,1.0]) x,y Scaling factor for all vectors. Elements can be any floating number Sub-one makes drawing smaller. Over-one grows the drawing. Negative flips the direction.\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @param {Boolean=} closed If true, the path is closed with a straight line from the end of the last curve to the starting point.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name lines\r\n   */\r\n  API.__private__.lines = API.lines = function(\r\n    lines,\r\n    x,\r\n    y,\r\n    scale,\r\n    style,\r\n    closed\r\n  ) {\r\n    var scalex, scaley, i, l, leg, x2, y2, x3, y3, x4, y4, tmp;\r\n\r\n    // Pre-August-2012 the order of arguments was function(x, y, lines, scale, style)\r\n    // in effort to make all calls have similar signature like\r\n    //   function(content, coordinateX, coordinateY , miscellaneous)\r\n    // this method had its args flipped.\r\n    // code below allows backward compatibility with old arg order.\r\n    if (typeof lines === \"number\") {\r\n      tmp = y;\r\n      y = x;\r\n      x = lines;\r\n      lines = tmp;\r\n    }\r\n\r\n    scale = scale || [1, 1];\r\n    closed = closed || false;\r\n\r\n    if (\r\n      isNaN(x) ||\r\n      isNaN(y) ||\r\n      !Array.isArray(lines) ||\r\n      !Array.isArray(scale) ||\r\n      !isValidStyle(style) ||\r\n      typeof closed !== \"boolean\"\r\n    ) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.lines\");\r\n    }\r\n\r\n    // starting point\r\n    moveTo(x, y);\r\n\r\n    scalex = scale[0];\r\n    scaley = scale[1];\r\n    l = lines.length;\r\n    //, x2, y2 // bezier only. In page default measurement \"units\", *after* scaling\r\n    //, x3, y3 // bezier only. In page default measurement \"units\", *after* scaling\r\n    // ending point for all, lines and bezier. . In page default measurement \"units\", *after* scaling\r\n    x4 = x; // last / ending point = starting point for first item.\r\n    y4 = y; // last / ending point = starting point for first item.\r\n\r\n    for (i = 0; i < l; i++) {\r\n      leg = lines[i];\r\n      if (leg.length === 2) {\r\n        // simple line\r\n        x4 = leg[0] * scalex + x4; // here last x4 was prior ending point\r\n        y4 = leg[1] * scaley + y4; // here last y4 was prior ending point\r\n        lineTo(x4, y4);\r\n      } else {\r\n        // bezier curve\r\n        x2 = leg[0] * scalex + x4; // here last x4 is prior ending point\r\n        y2 = leg[1] * scaley + y4; // here last y4 is prior ending point\r\n        x3 = leg[2] * scalex + x4; // here last x4 is prior ending point\r\n        y3 = leg[3] * scaley + y4; // here last y4 is prior ending point\r\n        x4 = leg[4] * scalex + x4; // here last x4 was prior ending point\r\n        y4 = leg[5] * scaley + y4; // here last y4 was prior ending point\r\n        curveTo(x2, y2, x3, y3, x4, y4);\r\n      }\r\n    }\r\n\r\n    if (closed) {\r\n      close();\r\n    }\r\n\r\n    putStyle(style);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Similar to {@link API.lines} but all coordinates are interpreted as absolute coordinates instead of relative.\r\n   * @param {Array<Object>} lines An array of {op: operator, c: coordinates} object, where op is one of \"m\" (move to), \"l\" (line to)\r\n   * \"c\" (cubic bezier curve) and \"h\" (close (sub)path)). c is an array of coordinates. \"m\" and \"l\" expect two, \"c\"\r\n   * six and \"h\" an empty array (or undefined).\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name path\r\n   */\r\n  API.path = function(lines) {\r\n    for (var i = 0; i < lines.length; i++) {\r\n      var leg = lines[i];\r\n      var coords = leg.c;\r\n      switch (leg.op) {\r\n        case \"m\":\r\n          moveTo(coords[0], coords[1]);\r\n          break;\r\n        case \"l\":\r\n          lineTo(coords[0], coords[1]);\r\n          break;\r\n        case \"c\":\r\n          curveTo.apply(this, coords);\r\n          break;\r\n        case \"h\":\r\n          close();\r\n          break;\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds a rectangle to PDF.\r\n   *\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} w Width (in units declared at inception of PDF document)\r\n   * @param {number} h Height (in units declared at inception of PDF document)\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name rect\r\n   */\r\n  API.__private__.rect = API.rect = function(x, y, w, h, style) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h) || !isValidStyle(style)) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.rect\");\r\n    }\r\n    if (apiMode === ApiMode.COMPAT) {\r\n      h = -h;\r\n    }\r\n\r\n    out(\r\n      [\r\n        hpf(scale(x)),\r\n        hpf(transformScaleY(y)),\r\n        hpf(scale(w)),\r\n        hpf(scale(h)),\r\n        \"re\"\r\n      ].join(\" \")\r\n    );\r\n\r\n    putStyle(style);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds a triangle to PDF.\r\n   *\r\n   * @param {number} x1 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y1 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} x2 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y2 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} x3 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y3 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name triangle\r\n   */\r\n  API.__private__.triangle = API.triangle = function(\r\n    x1,\r\n    y1,\r\n    x2,\r\n    y2,\r\n    x3,\r\n    y3,\r\n    style\r\n  ) {\r\n    if (\r\n      isNaN(x1) ||\r\n      isNaN(y1) ||\r\n      isNaN(x2) ||\r\n      isNaN(y2) ||\r\n      isNaN(x3) ||\r\n      isNaN(y3) ||\r\n      !isValidStyle(style)\r\n    ) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.triangle\");\r\n    }\r\n    this.lines(\r\n      [\r\n        [x2 - x1, y2 - y1], // vector to point 2\r\n        [x3 - x2, y3 - y2], // vector to point 3\r\n        [x1 - x3, y1 - y3] // closing vector back to point 1\r\n      ],\r\n      x1,\r\n      y1, // start of path\r\n      [1, 1],\r\n      style,\r\n      true\r\n    );\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds a rectangle with rounded corners to PDF.\r\n   *\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} w Width (in units declared at inception of PDF document)\r\n   * @param {number} h Height (in units declared at inception of PDF document)\r\n   * @param {number} rx Radius along x axis (in units declared at inception of PDF document)\r\n   * @param {number} ry Radius along y axis (in units declared at inception of PDF document)\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name roundedRect\r\n   */\r\n  API.__private__.roundedRect = API.roundedRect = function(\r\n    x,\r\n    y,\r\n    w,\r\n    h,\r\n    rx,\r\n    ry,\r\n    style\r\n  ) {\r\n    if (\r\n      isNaN(x) ||\r\n      isNaN(y) ||\r\n      isNaN(w) ||\r\n      isNaN(h) ||\r\n      isNaN(rx) ||\r\n      isNaN(ry) ||\r\n      !isValidStyle(style)\r\n    ) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.roundedRect\");\r\n    }\r\n    var MyArc = (4 / 3) * (Math.SQRT2 - 1);\r\n\r\n    rx = Math.min(rx, w * 0.5);\r\n    ry = Math.min(ry, h * 0.5);\r\n\r\n    this.lines(\r\n      [\r\n        [w - 2 * rx, 0],\r\n        [rx * MyArc, 0, rx, ry - ry * MyArc, rx, ry],\r\n        [0, h - 2 * ry],\r\n        [0, ry * MyArc, -(rx * MyArc), ry, -rx, ry],\r\n        [-w + 2 * rx, 0],\r\n        [-(rx * MyArc), 0, -rx, -(ry * MyArc), -rx, -ry],\r\n        [0, -h + 2 * ry],\r\n        [0, -(ry * MyArc), rx * MyArc, -ry, rx, -ry]\r\n      ],\r\n      x + rx,\r\n      y, // start of path\r\n      [1, 1],\r\n      style,\r\n      true\r\n    );\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds an ellipse to PDF.\r\n   *\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} rx Radius along x axis (in units declared at inception of PDF document)\r\n   * @param {number} ry Radius along y axis (in units declared at inception of PDF document)\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name ellipse\r\n   */\r\n  API.__private__.ellipse = API.ellipse = function(x, y, rx, ry, style) {\r\n    if (\r\n      isNaN(x) ||\r\n      isNaN(y) ||\r\n      isNaN(rx) ||\r\n      isNaN(ry) ||\r\n      !isValidStyle(style)\r\n    ) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.ellipse\");\r\n    }\r\n    var lx = (4 / 3) * (Math.SQRT2 - 1) * rx,\r\n      ly = (4 / 3) * (Math.SQRT2 - 1) * ry;\r\n\r\n    moveTo(x + rx, y);\r\n    curveTo(x + rx, y - ly, x + lx, y - ry, x, y - ry);\r\n    curveTo(x - lx, y - ry, x - rx, y - ly, x - rx, y);\r\n    curveTo(x - rx, y + ly, x - lx, y + ry, x, y + ry);\r\n    curveTo(x + lx, y + ry, x + rx, y + ly, x + rx, y);\r\n\r\n    putStyle(style);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Adds an circle to PDF.\r\n   *\r\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n   * @param {number} r Radius (in units declared at inception of PDF document)\r\n   * @param {string=} style A string specifying the painting style or null. Valid styles include:\r\n   * 'S' [default] - stroke,\r\n   * 'F' - fill,\r\n   * and 'DF' (or 'FD') -  fill then stroke.\r\n   * In \"compat\" API mode, a null value postpones setting the style so that a shape may be composed using multiple\r\n   * method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n   *\r\n   * In \"advanced\" API mode this parameter is deprecated.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name circle\r\n   */\r\n  API.__private__.circle = API.circle = function(x, y, r, style) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(r) || !isValidStyle(style)) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.circle\");\r\n    }\r\n    return this.ellipse(x, y, r, r, style);\r\n  };\r\n\r\n  /**\r\n   * Sets text font face, variant for upcoming text elements.\r\n   * See output of jsPDF.getFontList() for possible font names, styles.\r\n   *\r\n   * @param {string} fontName Font name or family. Example: \"times\".\r\n   * @param {string} fontStyle Font style or variant. Example: \"italic\".\r\n   * @param {number | string} fontWeight Weight of the Font. Example: \"normal\" | 400\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setFont\r\n   */\r\n  API.setFont = function(fontName, fontStyle, fontWeight) {\r\n    if (fontWeight) {\r\n      fontStyle = combineFontStyleAndFontWeight(fontStyle, fontWeight);\r\n    }\r\n    activeFontKey = getFont(fontName, fontStyle, {\r\n      disableWarning: false\r\n    });\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets text font face, variant for upcoming text elements.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {Object}\r\n   * @memberof jsPDF#\r\n   * @name getFont\r\n   */\r\n  var getFontEntry = (API.__private__.getFont = API.getFont = function() {\r\n    return fonts[getFont.apply(API, arguments)];\r\n  });\r\n\r\n  /**\r\n   * Returns an object - a tree of fontName to fontStyle relationships available to\r\n   * active PDF document.\r\n   *\r\n   * @public\r\n   * @function\r\n   * @instance\r\n   * @returns {Object} Like {'times':['normal', 'italic', ... ], 'arial':['normal', 'bold', ... ], ... }\r\n   * @memberof jsPDF#\r\n   * @name getFontList\r\n   */\r\n  API.__private__.getFontList = API.getFontList = function() {\r\n    var list = {},\r\n      fontName,\r\n      fontStyle;\r\n\r\n    for (fontName in fontmap) {\r\n      if (fontmap.hasOwnProperty(fontName)) {\r\n        list[fontName] = [];\r\n        for (fontStyle in fontmap[fontName]) {\r\n          if (fontmap[fontName].hasOwnProperty(fontStyle)) {\r\n            list[fontName].push(fontStyle);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return list;\r\n  };\r\n\r\n  /**\r\n   * Add a custom font to the current instance.\r\n   *\r\n   * @param {string} postScriptName PDF specification full name for the font.\r\n   * @param {string} id PDF-document-instance-specific label assinged to the font.\r\n   * @param {string} fontStyle Style of the Font.\r\n   * @param {number | string} fontWeight Weight of the Font.\r\n   * @param {Object} encoding Encoding_name-to-Font_metrics_object mapping.\r\n   * @function\r\n   * @instance\r\n   * @memberof jsPDF#\r\n   * @name addFont\r\n   * @returns {string} fontId\r\n   */\r\n  API.addFont = function(\r\n    postScriptName,\r\n    fontName,\r\n    fontStyle,\r\n    fontWeight,\r\n    encoding\r\n  ) {\r\n    var encodingOptions = [\r\n      \"StandardEncoding\",\r\n      \"MacRomanEncoding\",\r\n      \"Identity-H\",\r\n      \"WinAnsiEncoding\"\r\n    ];\r\n    if (arguments[3] && encodingOptions.indexOf(arguments[3]) !== -1) {\r\n      //IE 11 fix\r\n      encoding = arguments[3];\r\n    } else if (arguments[3] && encodingOptions.indexOf(arguments[3]) == -1) {\r\n      fontStyle = combineFontStyleAndFontWeight(fontStyle, fontWeight);\r\n    }\r\n    encoding = encoding || \"Identity-H\";\r\n    return addFont.call(this, postScriptName, fontName, fontStyle, encoding);\r\n  };\r\n\r\n  var lineWidth = options.lineWidth || 0.200025; // 2mm\r\n  /**\r\n   * Gets the line width, default: 0.200025.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {number} lineWidth\r\n   * @memberof jsPDF#\r\n   * @name getLineWidth\r\n   */\r\n  var getLineWidth = (API.__private__.getLineWidth = API.getLineWidth = function() {\r\n    return lineWidth;\r\n  });\r\n\r\n  /**\r\n   * Sets line width for upcoming lines.\r\n   *\r\n   * @param {number} width Line width (in units declared at inception of PDF document).\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineWidth\r\n   */\r\n  var setLineWidth = (API.__private__.setLineWidth = API.setLineWidth = function(\r\n    width\r\n  ) {\r\n    lineWidth = width;\r\n    out(hpf(scale(width)) + \" w\");\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Sets the dash pattern for upcoming lines.\r\n   *\r\n   * To reset the settings simply call the method without any parameters.\r\n   * @param {Array<number>} dashArray An array containing 0-2 numbers. The first number sets the length of the\r\n   * dashes, the second number the length of the gaps. If the second number is missing, the gaps are considered\r\n   * to be as long as the dashes. An empty array means solid, unbroken lines.\r\n   * @param {number} dashPhase The phase lines start with.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineDashPattern\r\n   */\r\n  API.__private__.setLineDash = jsPDF.API.setLineDash = jsPDF.API.setLineDashPattern = function(\r\n    dashArray,\r\n    dashPhase\r\n  ) {\r\n    dashArray = dashArray || [];\r\n    dashPhase = dashPhase || 0;\r\n\r\n    if (isNaN(dashPhase) || !Array.isArray(dashArray)) {\r\n      throw new Error(\"Invalid arguments passed to jsPDF.setLineDash\");\r\n    }\r\n\r\n    dashArray = dashArray\r\n      .map(function(x) {\r\n        return hpf(scale(x));\r\n      })\r\n      .join(\" \");\r\n    dashPhase = hpf(scale(dashPhase));\r\n\r\n    out(\"[\" + dashArray + \"] \" + dashPhase + \" d\");\r\n    return this;\r\n  };\r\n\r\n  var lineHeightFactor;\r\n\r\n  var getLineHeight = (API.__private__.getLineHeight = API.getLineHeight = function() {\r\n    return activeFontSize * lineHeightFactor;\r\n  });\r\n\r\n  API.__private__.getLineHeight = API.getLineHeight = function() {\r\n    return activeFontSize * lineHeightFactor;\r\n  };\r\n\r\n  /**\r\n   * Sets the LineHeightFactor of proportion.\r\n   *\r\n   * @param {number} value LineHeightFactor value. Default: 1.15.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineHeightFactor\r\n   */\r\n  var setLineHeightFactor = (API.__private__.setLineHeightFactor = API.setLineHeightFactor = function(\r\n    value\r\n  ) {\r\n    value = value || 1.15;\r\n    if (typeof value === \"number\") {\r\n      lineHeightFactor = value;\r\n    }\r\n    return this;\r\n  });\r\n\r\n  /**\r\n   * Gets the LineHeightFactor, default: 1.15.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {number} lineHeightFactor\r\n   * @memberof jsPDF#\r\n   * @name getLineHeightFactor\r\n   */\r\n  var getLineHeightFactor = (API.__private__.getLineHeightFactor = API.getLineHeightFactor = function() {\r\n    return lineHeightFactor;\r\n  });\r\n\r\n  setLineHeightFactor(options.lineHeight);\r\n\r\n  var getHorizontalCoordinate = (API.__private__.getHorizontalCoordinate = function(\r\n    value\r\n  ) {\r\n    return scale(value);\r\n  });\r\n\r\n  var getVerticalCoordinate = (API.__private__.getVerticalCoordinate = function(\r\n    value\r\n  ) {\r\n    if (apiMode === ApiMode.ADVANCED) {\r\n      return value;\r\n    } else {\r\n      var pageHeight =\r\n        pagesContext[currentPage].mediaBox.topRightY -\r\n        pagesContext[currentPage].mediaBox.bottomLeftY;\r\n      return pageHeight - scale(value);\r\n    }\r\n  });\r\n\r\n  var getHorizontalCoordinateString = (API.__private__.getHorizontalCoordinateString = API.getHorizontalCoordinateString = function(\r\n    value\r\n  ) {\r\n    return hpf(getHorizontalCoordinate(value));\r\n  });\r\n\r\n  var getVerticalCoordinateString = (API.__private__.getVerticalCoordinateString = API.getVerticalCoordinateString = function(\r\n    value\r\n  ) {\r\n    return hpf(getVerticalCoordinate(value));\r\n  });\r\n\r\n  var strokeColor = options.strokeColor || \"0 G\";\r\n\r\n  /**\r\n   *  Gets the stroke color for upcoming elements.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {string} colorAsHex\r\n   * @memberof jsPDF#\r\n   * @name getDrawColor\r\n   */\r\n  API.__private__.getStrokeColor = API.getDrawColor = function() {\r\n    return decodeColorString(strokeColor);\r\n  };\r\n\r\n  /**\r\n   * Sets the stroke color for upcoming elements.\r\n   *\r\n   * Depending on the number of arguments given, Gray, RGB, or CMYK\r\n   * color space is implied.\r\n   *\r\n   * When only ch1 is given, \"Gray\" color space is implied and it\r\n   * must be a value in the range from 0.00 (solid black) to to 1.00 (white)\r\n   * if values are communicated as String types, or in range from 0 (black)\r\n   * to 255 (white) if communicated as Number type.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When only ch1,ch2,ch3 are given, \"RGB\" color space is implied and each\r\n   * value must be in the range from 0.00 (minimum intensity) to to 1.00\r\n   * (max intensity) if values are communicated as String types, or\r\n   * from 0 (min intensity) to to 255 (max intensity) if values are communicated\r\n   * as Number types.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When ch1,ch2,ch3,ch4 are given, \"CMYK\" color space is implied and each\r\n   * value must be a in the range from 0.00 (0% concentration) to to\r\n   * 1.00 (100% concentration)\r\n   *\r\n   * Because JavaScript treats fixed point numbers badly (rounds to\r\n   * floating point nearest to binary representation) it is highly advised to\r\n   * communicate the fractional numbers as String types, not JavaScript Number type.\r\n   *\r\n   * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.\r\n   * @param {Number} ch2 Color channel value.\r\n   * @param {Number} ch3 Color channel value.\r\n   * @param {Number} ch4 Color channel value.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setDrawColor\r\n   */\r\n  API.__private__.setStrokeColor = API.setDrawColor = function(\r\n    ch1,\r\n    ch2,\r\n    ch3,\r\n    ch4\r\n  ) {\r\n    var options = {\r\n      ch1: ch1,\r\n      ch2: ch2,\r\n      ch3: ch3,\r\n      ch4: ch4,\r\n      pdfColorType: \"draw\",\r\n      precision: 2\r\n    };\r\n\r\n    strokeColor = encodeColorString(options);\r\n    out(strokeColor);\r\n    return this;\r\n  };\r\n\r\n  var fillColor = options.fillColor || \"0 g\";\r\n\r\n  /**\r\n   * Gets the fill color for upcoming elements.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {string} colorAsHex\r\n   * @memberof jsPDF#\r\n   * @name getFillColor\r\n   */\r\n  API.__private__.getFillColor = API.getFillColor = function() {\r\n    return decodeColorString(fillColor);\r\n  };\r\n\r\n  /**\r\n   * Sets the fill color for upcoming elements.\r\n   *\r\n   * Depending on the number of arguments given, Gray, RGB, or CMYK\r\n   * color space is implied.\r\n   *\r\n   * When only ch1 is given, \"Gray\" color space is implied and it\r\n   * must be a value in the range from 0.00 (solid black) to to 1.00 (white)\r\n   * if values are communicated as String types, or in range from 0 (black)\r\n   * to 255 (white) if communicated as Number type.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When only ch1,ch2,ch3 are given, \"RGB\" color space is implied and each\r\n   * value must be in the range from 0.00 (minimum intensity) to to 1.00\r\n   * (max intensity) if values are communicated as String types, or\r\n   * from 0 (min intensity) to to 255 (max intensity) if values are communicated\r\n   * as Number types.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When ch1,ch2,ch3,ch4 are given, \"CMYK\" color space is implied and each\r\n   * value must be a in the range from 0.00 (0% concentration) to to\r\n   * 1.00 (100% concentration)\r\n   *\r\n   * Because JavaScript treats fixed point numbers badly (rounds to\r\n   * floating point nearest to binary representation) it is highly advised to\r\n   * communicate the fractional numbers as String types, not JavaScript Number type.\r\n   *\r\n   * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.\r\n   * @param {Number} ch2 Color channel value.\r\n   * @param {Number} ch3 Color channel value.\r\n   * @param {Number} ch4 Color channel value.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setFillColor\r\n   */\r\n  API.__private__.setFillColor = API.setFillColor = function(\r\n    ch1,\r\n    ch2,\r\n    ch3,\r\n    ch4\r\n  ) {\r\n    var options = {\r\n      ch1: ch1,\r\n      ch2: ch2,\r\n      ch3: ch3,\r\n      ch4: ch4,\r\n      pdfColorType: \"fill\",\r\n      precision: 2\r\n    };\r\n\r\n    fillColor = encodeColorString(options);\r\n    out(fillColor);\r\n    return this;\r\n  };\r\n\r\n  var textColor = options.textColor || \"0 g\";\r\n  /**\r\n   * Gets the text color for upcoming elements.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {string} colorAsHex\r\n   * @memberof jsPDF#\r\n   * @name getTextColor\r\n   */\r\n  var getTextColor = (API.__private__.getTextColor = API.getTextColor = function() {\r\n    return decodeColorString(textColor);\r\n  });\r\n  /**\r\n   * Sets the text color for upcoming elements.\r\n   *\r\n   * Depending on the number of arguments given, Gray, RGB, or CMYK\r\n   * color space is implied.\r\n   *\r\n   * When only ch1 is given, \"Gray\" color space is implied and it\r\n   * must be a value in the range from 0.00 (solid black) to to 1.00 (white)\r\n   * if values are communicated as String types, or in range from 0 (black)\r\n   * to 255 (white) if communicated as Number type.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When only ch1,ch2,ch3 are given, \"RGB\" color space is implied and each\r\n   * value must be in the range from 0.00 (minimum intensity) to to 1.00\r\n   * (max intensity) if values are communicated as String types, or\r\n   * from 0 (min intensity) to to 255 (max intensity) if values are communicated\r\n   * as Number types.\r\n   * The RGB-like 0-255 range is provided for backward compatibility.\r\n   *\r\n   * When ch1,ch2,ch3,ch4 are given, \"CMYK\" color space is implied and each\r\n   * value must be a in the range from 0.00 (0% concentration) to to\r\n   * 1.00 (100% concentration)\r\n   *\r\n   * Because JavaScript treats fixed point numbers badly (rounds to\r\n   * floating point nearest to binary representation) it is highly advised to\r\n   * communicate the fractional numbers as String types, not JavaScript Number type.\r\n   *\r\n   * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.\r\n   * @param {Number} ch2 Color channel value.\r\n   * @param {Number} ch3 Color channel value.\r\n   * @param {Number} ch4 Color channel value.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setTextColor\r\n   */\r\n  API.__private__.setTextColor = API.setTextColor = function(\r\n    ch1,\r\n    ch2,\r\n    ch3,\r\n    ch4\r\n  ) {\r\n    var options = {\r\n      ch1: ch1,\r\n      ch2: ch2,\r\n      ch3: ch3,\r\n      ch4: ch4,\r\n      pdfColorType: \"text\",\r\n      precision: 3\r\n    };\r\n    textColor = encodeColorString(options);\r\n\r\n    return this;\r\n  };\r\n\r\n  var activeCharSpace = options.charSpace;\r\n\r\n  /**\r\n   * Get global value of CharSpace.\r\n   *\r\n   * @function\r\n   * @instance\r\n   * @returns {number} charSpace\r\n   * @memberof jsPDF#\r\n   * @name getCharSpace\r\n   */\r\n  var getCharSpace = (API.__private__.getCharSpace = API.getCharSpace = function() {\r\n    return parseFloat(activeCharSpace || 0);\r\n  });\r\n\r\n  /**\r\n   * Set global value of CharSpace.\r\n   *\r\n   * @param {number} charSpace\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF} jsPDF-instance\r\n   * @memberof jsPDF#\r\n   * @name setCharSpace\r\n   */\r\n  API.__private__.setCharSpace = API.setCharSpace = function(charSpace) {\r\n    if (isNaN(charSpace)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.setCharSpace\");\r\n    }\r\n    activeCharSpace = charSpace;\r\n    return this;\r\n  };\r\n\r\n  var lineCapID = 0;\r\n  /**\r\n   * Is an Object providing a mapping from human-readable to\r\n   * integer flag values designating the varieties of line cap\r\n   * and join styles.\r\n   *\r\n   * @memberof jsPDF#\r\n   * @name CapJoinStyles\r\n   */\r\n  API.CapJoinStyles = {\r\n    0: 0,\r\n    butt: 0,\r\n    but: 0,\r\n    miter: 0,\r\n    1: 1,\r\n    round: 1,\r\n    rounded: 1,\r\n    circle: 1,\r\n    2: 2,\r\n    projecting: 2,\r\n    project: 2,\r\n    square: 2,\r\n    bevel: 2\r\n  };\r\n\r\n  /**\r\n   * Sets the line cap styles.\r\n   * See {jsPDF.CapJoinStyles} for variants.\r\n   *\r\n   * @param {String|Number} style A string or number identifying the type of line cap.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineCap\r\n   */\r\n  API.__private__.setLineCap = API.setLineCap = function(style) {\r\n    var id = API.CapJoinStyles[style];\r\n    if (id === undefined) {\r\n      throw new Error(\r\n        \"Line cap style of '\" +\r\n          style +\r\n          \"' is not recognized. See or extend .CapJoinStyles property for valid styles\"\r\n      );\r\n    }\r\n    lineCapID = id;\r\n    out(id + \" J\");\r\n\r\n    return this;\r\n  };\r\n\r\n  var lineJoinID = 0;\r\n  /**\r\n   * Sets the line join styles.\r\n   * See {jsPDF.CapJoinStyles} for variants.\r\n   *\r\n   * @param {String|Number} style A string or number identifying the type of line join.\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineJoin\r\n   */\r\n  API.__private__.setLineJoin = API.setLineJoin = function(style) {\r\n    var id = API.CapJoinStyles[style];\r\n    if (id === undefined) {\r\n      throw new Error(\r\n        \"Line join style of '\" +\r\n          style +\r\n          \"' is not recognized. See or extend .CapJoinStyles property for valid styles\"\r\n      );\r\n    }\r\n    lineJoinID = id;\r\n    out(id + \" j\");\r\n\r\n    return this;\r\n  };\r\n\r\n  var miterLimit;\r\n  /**\r\n   * Sets the miterLimit property, which effects the maximum miter length.\r\n   *\r\n   * @param {number} length The length of the miter\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setLineMiterLimit\r\n   */\r\n  API.__private__.setLineMiterLimit = API.__private__.setMiterLimit = API.setLineMiterLimit = API.setMiterLimit = function(\r\n    length\r\n  ) {\r\n    length = length || 0;\r\n    if (isNaN(length)) {\r\n      throw new Error(\"Invalid argument passed to jsPDF.setLineMiterLimit\");\r\n    }\r\n    out(hpf(scale(length)) + \" M\");\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * An object representing a pdf graphics state.\r\n   * @class GState\r\n   */\r\n\r\n  /**\r\n   *\r\n   * @param parameters A parameter object that contains all properties this graphics state wants to set.\r\n   * Supported are: opacity, stroke-opacity\r\n   * @constructor\r\n   */\r\n  API.GState = GState;\r\n\r\n  /**\r\n   * Sets a either previously added {@link GState} (via {@link addGState}) or a new {@link GState}.\r\n   * @param {String|GState} gState If type is string, a previously added GState is used, if type is GState\r\n   * it will be added before use.\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setGState\r\n   */\r\n  API.setGState = function(gState) {\r\n    if (typeof gState === \"string\") {\r\n      gState = gStates[gStatesMap[gState]];\r\n    } else {\r\n      gState = addGState(null, gState);\r\n    }\r\n\r\n    if (!gState.equals(activeGState)) {\r\n      out(\"/\" + gState.id + \" gs\");\r\n      activeGState = gState;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adds a new Graphics State. Duplicates are automatically eliminated.\r\n   * @param {String} key Might also be null, if no later reference to this gState is needed\r\n   * @param {Object} gState The gState object\r\n   */\r\n  var addGState = function(key, gState) {\r\n    // only add it if it is not already present (the keys provided by the user must be unique!)\r\n    if (key && gStatesMap[key]) return;\r\n    var duplicate = false;\r\n    for (var s in gStates) {\r\n      if (gStates.hasOwnProperty(s)) {\r\n        if (gStates[s].equals(gState)) {\r\n          duplicate = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (duplicate) {\r\n      gState = gStates[s];\r\n    } else {\r\n      var gStateKey = \"GS\" + (Object.keys(gStates).length + 1).toString(10);\r\n      gStates[gStateKey] = gState;\r\n      gState.id = gStateKey;\r\n    }\r\n\r\n    // several user keys may point to the same GState object\r\n    key && (gStatesMap[key] = gState.id);\r\n\r\n    events.publish(\"addGState\", gState);\r\n\r\n    return gState;\r\n  };\r\n\r\n  /**\r\n   * Adds a new {@link GState} for later use. See {@link setGState}.\r\n   * @param {String} key\r\n   * @param {GState} gState\r\n   * @function\r\n   * @instance\r\n   * @returns {jsPDF}\r\n   *\r\n   * @memberof jsPDF#\r\n   * @name addGState\r\n   */\r\n  API.addGState = function(key, gState) {\r\n    addGState(key, gState);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Saves the current graphics state (\"pushes it on the stack\"). It can be restored by {@link restoreGraphicsState}\r\n   * later. Here, the general pdf graphics state is meant, also including the current transformation matrix,\r\n   * fill and stroke colors etc.\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name saveGraphicsState\r\n   */\r\n  API.saveGraphicsState = function() {\r\n    out(\"q\");\r\n    // as we cannot set font key and size independently we must keep track of both\r\n    fontStateStack.push({\r\n      key: activeFontKey,\r\n      size: activeFontSize,\r\n      color: textColor\r\n    });\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Restores a previously saved graphics state saved by {@link saveGraphicsState} (\"pops the stack\").\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name restoreGraphicsState\r\n   */\r\n  API.restoreGraphicsState = function() {\r\n    out(\"Q\");\r\n\r\n    // restore previous font state\r\n    var fontState = fontStateStack.pop();\r\n    activeFontKey = fontState.key;\r\n    activeFontSize = fontState.size;\r\n    textColor = fontState.color;\r\n\r\n    activeGState = null;\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Appends this matrix to the left of all previously applied matrices.\r\n   *\r\n   * @param {Matrix} matrix\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name setCurrentTransformationMatrix\r\n   */\r\n  API.setCurrentTransformationMatrix = function(matrix) {\r\n    out(matrix.toString() + \" cm\");\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Inserts a debug comment into the generated pdf.\r\n   * @function\r\n   * @instance\r\n   * @param {String} text\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name comment\r\n   */\r\n  API.comment = function(text) {\r\n    out(\"#\" + text);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Point\r\n   */\r\n  var Point = function(x, y) {\r\n    var _x = x || 0;\r\n    Object.defineProperty(this, \"x\", {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _x;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _x = parseFloat(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    var _y = y || 0;\r\n    Object.defineProperty(this, \"y\", {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _y;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _y = parseFloat(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    var _type = \"pt\";\r\n    Object.defineProperty(this, \"type\", {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _type;\r\n      },\r\n      set: function(value) {\r\n        _type = value.toString();\r\n      }\r\n    });\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Rectangle\r\n   */\r\n  var Rectangle = function(x, y, w, h) {\r\n    Point.call(this, x, y);\r\n    this.type = \"rect\";\r\n\r\n    var _w = w || 0;\r\n    Object.defineProperty(this, \"w\", {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _w;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _w = parseFloat(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    var _h = h || 0;\r\n    Object.defineProperty(this, \"h\", {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _h;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _h = parseFloat(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * FormObject/RenderTarget\r\n   */\r\n\r\n  var RenderTarget = function() {\r\n    this.page = page;\r\n    this.currentPage = currentPage;\r\n    this.pages = pages.slice(0);\r\n    this.pagesContext = pagesContext.slice(0);\r\n    this.x = pageX;\r\n    this.y = pageY;\r\n    this.matrix = pageMatrix;\r\n    this.width = getPageWidth(currentPage);\r\n    this.height = getPageHeight(currentPage);\r\n    this.outputDestination = outputDestination;\r\n\r\n    this.id = \"\"; // set by endFormObject()\r\n    this.objectNumber = -1; // will be set by putXObject()\r\n  };\r\n\r\n  RenderTarget.prototype.restore = function() {\r\n    page = this.page;\r\n    currentPage = this.currentPage;\r\n    pagesContext = this.pagesContext;\r\n    pages = this.pages;\r\n    pageX = this.x;\r\n    pageY = this.y;\r\n    pageMatrix = this.matrix;\r\n    setPageWidth(currentPage, this.width);\r\n    setPageHeight(currentPage, this.height);\r\n    outputDestination = this.outputDestination;\r\n  };\r\n\r\n  var beginNewRenderTarget = function(x, y, width, height, matrix) {\r\n    // save current state\r\n    renderTargetStack.push(new RenderTarget());\r\n\r\n    // clear pages\r\n    page = currentPage = 0;\r\n    pages = [];\r\n    pageX = x;\r\n    pageY = y;\r\n\r\n    pageMatrix = matrix;\r\n\r\n    beginPage([width, height]);\r\n  };\r\n\r\n  var endFormObject = function(key) {\r\n    // only add it if it is not already present (the keys provided by the user must be unique!)\r\n    if (renderTargetMap[key]) {\r\n      renderTargetStack.pop().restore();\r\n      return;\r\n    }\r\n\r\n    // save the created xObject\r\n    var newXObject = new RenderTarget();\r\n\r\n    var xObjectId = \"Xo\" + (Object.keys(renderTargets).length + 1).toString(10);\r\n    newXObject.id = xObjectId;\r\n\r\n    renderTargetMap[key] = xObjectId;\r\n    renderTargets[xObjectId] = newXObject;\r\n\r\n    events.publish(\"addFormObject\", newXObject);\r\n\r\n    // restore state from stack\r\n    renderTargetStack.pop().restore();\r\n  };\r\n\r\n  /**\r\n   * Starts a new pdf form object, which means that all consequent draw calls target a new independent object\r\n   * until {@link endFormObject} is called. The created object can be referenced and drawn later using\r\n   * {@link doFormObject}. Nested form objects are possible.\r\n   * x, y, width, height set the bounding box that is used to clip the content.\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {Matrix} matrix The matrix that will be applied to convert the form objects coordinate system to\r\n   * the parent's.\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name beginFormObject\r\n   */\r\n  API.beginFormObject = function(x, y, width, height, matrix) {\r\n    // The user can set the output target to a new form object. Nested form objects are possible.\r\n    // Currently, they use the resource dictionary of the surrounding stream. This should be changed, as\r\n    // the PDF-Spec states:\r\n    // \"In PDF 1.2 and later versions, form XObjects may be independent of the content streams in which\r\n    // they appear, and this is strongly recommended although not requiredIn PDF 1.2 and later versions,\r\n    // form XObjects may be independent of the content streams in which they appear, and this is strongly\r\n    // recommended although not required\"\r\n    beginNewRenderTarget(x, y, width, height, matrix);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Completes and saves the form object.\r\n   * @param {String} key The key by which this form object can be referenced.\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name endFormObject\r\n   */\r\n  API.endFormObject = function(key) {\r\n    endFormObject(key);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Draws the specified form object by referencing to the respective pdf XObject created with\r\n   * {@link API.beginFormObject} and {@link endFormObject}.\r\n   * The location is determined by matrix.\r\n   *\r\n   * @param {String} key The key to the form object.\r\n   * @param {Matrix} matrix The matrix applied before drawing the form object.\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name doFormObject\r\n   */\r\n  API.doFormObject = function(key, matrix) {\r\n    var xObject = renderTargets[renderTargetMap[key]];\r\n    out(\"q\");\r\n    out(matrix.toString() + \" cm\");\r\n    out(\"/\" + xObject.id + \" Do\");\r\n    out(\"Q\");\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Returns the form object specified by key.\r\n   * @param key {String}\r\n   * @returns {{x: number, y: number, width: number, height: number, matrix: Matrix}}\r\n   * @function\r\n   * @returns {jsPDF}\r\n   * @memberof jsPDF#\r\n   * @name getFormObject\r\n   */\r\n  API.getFormObject = function(key) {\r\n    var xObject = renderTargets[renderTargetMap[key]];\r\n    return {\r\n      x: xObject.x,\r\n      y: xObject.y,\r\n      width: xObject.width,\r\n      height: xObject.height,\r\n      matrix: xObject.matrix\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Saves as PDF document. An alias of jsPDF.output('save', 'filename.pdf').\r\n   * Uses FileSaver.js-method saveAs.\r\n   *\r\n   * @memberof jsPDF#\r\n   * @name save\r\n   * @function\r\n   * @instance\r\n   * @param  {string} filename The filename including extension.\r\n   * @param  {Object} options An Object with additional options, possible options: 'returnPromise'.\r\n   * @returns {jsPDF|Promise} jsPDF-instance     */\r\n  API.save = function(filename, options) {\r\n    filename = filename || \"generated.pdf\";\r\n\r\n    options = options || {};\r\n    options.returnPromise = options.returnPromise || false;\r\n\r\n    if (options.returnPromise === false) {\r\n      saveAs(getBlob(buildDocument()), filename);\r\n      if (typeof saveAs.unload === \"function\") {\r\n        if (globalObject.setTimeout) {\r\n          setTimeout(saveAs.unload, 911);\r\n        }\r\n      }\r\n      return this;\r\n    } else {\r\n      return new Promise(function(resolve, reject) {\r\n        try {\r\n          var result = saveAs(getBlob(buildDocument()), filename);\r\n          if (typeof saveAs.unload === \"function\") {\r\n            if (globalObject.setTimeout) {\r\n              setTimeout(saveAs.unload, 911);\r\n            }\r\n          }\r\n          resolve(result);\r\n        } catch (e) {\r\n          reject(e.message);\r\n        }\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  // applying plugins (more methods) ON TOP of built-in API.\r\n  // this is intentional as we allow plugins to override\r\n  // built-ins\r\n  for (var plugin in jsPDF.API) {\r\n    if (jsPDF.API.hasOwnProperty(plugin)) {\r\n      if (plugin === \"events\" && jsPDF.API.events.length) {\r\n        (function(events, newEvents) {\r\n          // jsPDF.API.events is a JS Array of Arrays\r\n          // where each Array is a pair of event name, handler\r\n          // Events were added by plugins to the jsPDF instantiator.\r\n          // These are always added to the new instance and some ran\r\n          // during instantiation.\r\n          var eventname, handler_and_args, i;\r\n\r\n          for (i = newEvents.length - 1; i !== -1; i--) {\r\n            // subscribe takes 3 args: 'topic', function, runonce_flag\r\n            // if undefined, runonce is false.\r\n            // users can attach callback directly,\r\n            // or they can attach an array with [callback, runonce_flag]\r\n            // that's what the \"apply\" magic is for below.\r\n            eventname = newEvents[i][0];\r\n            handler_and_args = newEvents[i][1];\r\n            events.subscribe.apply(\r\n              events,\r\n              [eventname].concat(\r\n                typeof handler_and_args === \"function\"\r\n                  ? [handler_and_args]\r\n                  : handler_and_args\r\n              )\r\n            );\r\n          }\r\n        })(events, jsPDF.API.events);\r\n      } else {\r\n        API[plugin] = jsPDF.API[plugin];\r\n      }\r\n    }\r\n  }\r\n\r\n  var getPageWidth = (API.getPageWidth = function(pageNumber) {\r\n    pageNumber = pageNumber || currentPage;\r\n    return (\r\n      (pagesContext[pageNumber].mediaBox.topRightX -\r\n        pagesContext[pageNumber].mediaBox.bottomLeftX) /\r\n      scaleFactor\r\n    );\r\n  });\r\n\r\n  var setPageWidth = (API.setPageWidth = function(pageNumber, value) {\r\n    pagesContext[pageNumber].mediaBox.topRightX =\r\n      value * scaleFactor + pagesContext[pageNumber].mediaBox.bottomLeftX;\r\n  });\r\n\r\n  var getPageHeight = (API.getPageHeight = function(pageNumber) {\r\n    pageNumber = pageNumber || currentPage;\r\n    return (\r\n      (pagesContext[pageNumber].mediaBox.topRightY -\r\n        pagesContext[pageNumber].mediaBox.bottomLeftY) /\r\n      scaleFactor\r\n    );\r\n  });\r\n\r\n  var setPageHeight = (API.setPageHeight = function(pageNumber, value) {\r\n    pagesContext[pageNumber].mediaBox.topRightY =\r\n      value * scaleFactor + pagesContext[pageNumber].mediaBox.bottomLeftY;\r\n  });\r\n\r\n  /**\r\n   * Object exposing internal API to plugins\r\n   * @public\r\n   * @ignore\r\n   */\r\n  API.internal = {\r\n    pdfEscape: pdfEscape,\r\n    getStyle: getStyle,\r\n    getFont: getFontEntry,\r\n    getFontSize: getFontSize,\r\n    getCharSpace: getCharSpace,\r\n    getTextColor: getTextColor,\r\n    getLineHeight: getLineHeight,\r\n    getLineHeightFactor: getLineHeightFactor,\r\n    getLineWidth: getLineWidth,\r\n    write: write,\r\n    getHorizontalCoordinate: getHorizontalCoordinate,\r\n    getVerticalCoordinate: getVerticalCoordinate,\r\n    getCoordinateString: getHorizontalCoordinateString,\r\n    getVerticalCoordinateString: getVerticalCoordinateString,\r\n    collections: {},\r\n    newObject: newObject,\r\n    newAdditionalObject: newAdditionalObject,\r\n    newObjectDeferred: newObjectDeferred,\r\n    newObjectDeferredBegin: newObjectDeferredBegin,\r\n    getFilters: getFilters,\r\n    putStream: putStream,\r\n    events: events,\r\n    scaleFactor: scaleFactor,\r\n    pageSize: {\r\n      getWidth: function() {\r\n        return getPageWidth(currentPage);\r\n      },\r\n      setWidth: function(value) {\r\n        setPageWidth(currentPage, value);\r\n      },\r\n      getHeight: function() {\r\n        return getPageHeight(currentPage);\r\n      },\r\n      setHeight: function(value) {\r\n        setPageHeight(currentPage, value);\r\n      }\r\n    },\r\n    encryptionOptions: encryptionOptions,\r\n    encryption: encryption,\r\n    getEncryptor: getEncryptor,\r\n    output: output,\r\n    getNumberOfPages: getNumberOfPages,\r\n    pages: pages,\r\n    out: out,\r\n    f2: f2,\r\n    f3: f3,\r\n    getPageInfo: getPageInfo,\r\n    getPageInfoByObjId: getPageInfoByObjId,\r\n    getCurrentPageInfo: getCurrentPageInfo,\r\n    getPDFVersion: getPdfVersion,\r\n    Point: Point,\r\n    Rectangle: Rectangle,\r\n    Matrix: Matrix,\r\n    hasHotfix: hasHotfix //Expose the hasHotfix check so plugins can also check them.\r\n  };\r\n\r\n  Object.defineProperty(API.internal.pageSize, \"width\", {\r\n    get: function() {\r\n      return getPageWidth(currentPage);\r\n    },\r\n    set: function(value) {\r\n      setPageWidth(currentPage, value);\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n  Object.defineProperty(API.internal.pageSize, \"height\", {\r\n    get: function() {\r\n      return getPageHeight(currentPage);\r\n    },\r\n    set: function(value) {\r\n      setPageHeight(currentPage, value);\r\n    },\r\n    enumerable: true,\r\n    configurable: true\r\n  });\r\n\r\n  //////////////////////////////////////////////////////\r\n  // continuing initialization of jsPDF Document object\r\n  //////////////////////////////////////////////////////\r\n  // Add the first page automatically\r\n  addFonts.call(API, standardFonts);\r\n  activeFontKey = \"F1\";\r\n  _addPage(format, orientation);\r\n\r\n  events.publish(\"initialized\");\r\n  return API;\r\n}\r\n\r\n/**\r\n * jsPDF.API is a STATIC property of jsPDF class.\r\n * jsPDF.API is an object you can add methods and properties to.\r\n * The methods / properties you add will show up in new jsPDF objects.\r\n *\r\n * One property is prepopulated. It is the 'events' Object. Plugin authors can add topics,\r\n * callbacks to this object. These will be reassigned to all new instances of jsPDF.\r\n *\r\n * @static\r\n * @public\r\n * @memberof jsPDF#\r\n * @name API\r\n *\r\n * @example\r\n * jsPDF.API.mymethod = function(){\r\n *   // 'this' will be ref to internal API object. see jsPDF source\r\n *   // , so you can refer to built-in methods like so:\r\n *   //     this.line(....)\r\n *   //     this.text(....)\r\n * }\r\n * var pdfdoc = new jsPDF()\r\n * pdfdoc.mymethod() // <- !!!!!!\r\n */\r\njsPDF.API = {\r\n  events: []\r\n};\r\n/**\r\n * The version of jsPDF.\r\n * @name version\r\n * @type {string}\r\n * @memberof jsPDF#\r\n */\r\njsPDF.version = \"0.0.0\";\r\n\r\nexport { jsPDF, ShadingPattern, TilingPattern, GState };\r\nexport default jsPDF;\r\n","/* global jsPDF */\n/**\n * @license\n * Copyright (c) 2016 Alexander Weidt,\n * https://github.com/BiggA94\n *\n * Licensed under the MIT License. http://opensource.org/licenses/mit-license\n */\n\n/**\n * jsPDF AcroForm Plugin\n * @module AcroForm\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\nvar jsPDFAPI = jsPDF.API;\nvar scaleFactor = 1;\n\nvar pdfEscape = function(value) {\n  return value\n    .replace(/\\\\/g, \"\\\\\\\\\")\n    .replace(/\\(/g, \"\\\\(\")\n    .replace(/\\)/g, \"\\\\)\");\n};\nvar pdfUnescape = function(value) {\n  return value\n    .replace(/\\\\\\\\/g, \"\\\\\")\n    .replace(/\\\\\\(/g, \"(\")\n    .replace(/\\\\\\)/g, \")\");\n};\n\nvar f2 = function(number) {\n  return number.toFixed(2); // Ie, %.2f\n};\n\nvar f5 = function(number) {\n  return number.toFixed(5); // Ie, %.2f\n};\n\njsPDFAPI.__acroform__ = {};\nvar inherit = function(child, parent) {\n  child.prototype = Object.create(parent.prototype);\n  child.prototype.constructor = child;\n};\n\nvar scale = function(x) {\n  return x * scaleFactor;\n};\n\nvar createFormXObject = function(formObject) {\n  var xobj = new AcroFormXObject();\n  var height = AcroFormAppearance.internal.getHeight(formObject) || 0;\n  var width = AcroFormAppearance.internal.getWidth(formObject) || 0;\n  xobj.BBox = [0, 0, Number(f2(width)), Number(f2(height))];\n  return xobj;\n};\n\n/**\n * Bit-Operations\n */\nvar setBit = (jsPDFAPI.__acroform__.setBit = function(number, bitPosition) {\n  number = number || 0;\n  bitPosition = bitPosition || 0;\n\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.setBit\"\n    );\n  }\n  var bitMask = 1 << bitPosition;\n\n  number |= bitMask;\n\n  return number;\n});\n\nvar clearBit = (jsPDFAPI.__acroform__.clearBit = function(number, bitPosition) {\n  number = number || 0;\n  bitPosition = bitPosition || 0;\n\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.clearBit\"\n    );\n  }\n  var bitMask = 1 << bitPosition;\n\n  number &= ~bitMask;\n\n  return number;\n});\n\nvar getBit = (jsPDFAPI.__acroform__.getBit = function(number, bitPosition) {\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.getBit\"\n    );\n  }\n  return (number & (1 << bitPosition)) === 0 ? 0 : 1;\n});\n\n/*\n * Ff starts counting the bit position at 1 and not like javascript at 0\n */\nvar getBitForPdf = (jsPDFAPI.__acroform__.getBitForPdf = function(\n  number,\n  bitPosition\n) {\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf\"\n    );\n  }\n  return getBit(number, bitPosition - 1);\n});\n\nvar setBitForPdf = (jsPDFAPI.__acroform__.setBitForPdf = function(\n  number,\n  bitPosition\n) {\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf\"\n    );\n  }\n  return setBit(number, bitPosition - 1);\n});\n\nvar clearBitForPdf = (jsPDFAPI.__acroform__.clearBitForPdf = function(\n  number,\n  bitPosition\n) {\n  if (isNaN(number) || isNaN(bitPosition)) {\n    throw new Error(\n      \"Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf\"\n    );\n  }\n  return clearBit(number, bitPosition - 1);\n});\n\nvar calculateCoordinates = (jsPDFAPI.__acroform__.calculateCoordinates = function(\n  args,\n  scope\n) {\n  var getHorizontalCoordinate = scope.internal.getHorizontalCoordinate;\n  var getVerticalCoordinate = scope.internal.getVerticalCoordinate;\n  var x = args[0];\n  var y = args[1];\n  var w = args[2];\n  var h = args[3];\n\n  var coordinates = {};\n\n  coordinates.lowerLeft_X = getHorizontalCoordinate(x) || 0;\n  coordinates.lowerLeft_Y = getVerticalCoordinate(y + h) || 0;\n  coordinates.upperRight_X = getHorizontalCoordinate(x + w) || 0;\n  coordinates.upperRight_Y = getVerticalCoordinate(y) || 0;\n\n  return [\n    Number(f2(coordinates.lowerLeft_X)),\n    Number(f2(coordinates.lowerLeft_Y)),\n    Number(f2(coordinates.upperRight_X)),\n    Number(f2(coordinates.upperRight_Y))\n  ];\n});\n\nvar calculateAppearanceStream = function(formObject) {\n  if (formObject.appearanceStreamContent) {\n    return formObject.appearanceStreamContent;\n  }\n\n  if (!formObject.V && !formObject.DV) {\n    return;\n  }\n\n  // else calculate it\n\n  var stream = [];\n  var text = formObject._V || formObject.DV;\n  var calcRes = calculateX(formObject, text);\n  var fontKey = formObject.scope.internal.getFont(\n    formObject.fontName,\n    formObject.fontStyle\n  ).id;\n\n  //PDF 32000-1:2008, page 444\n  stream.push(\"/Tx BMC\");\n  stream.push(\"q\");\n  stream.push(\"BT\"); // Begin Text\n  stream.push(formObject.scope.__private__.encodeColorString(formObject.color));\n  stream.push(\"/\" + fontKey + \" \" + f2(calcRes.fontSize) + \" Tf\");\n  stream.push(\"1 0 0 1 0 0 Tm\"); // Transformation Matrix\n  stream.push(calcRes.text);\n  stream.push(\"ET\"); // End Text\n  stream.push(\"Q\");\n  stream.push(\"EMC\");\n\n  var appearanceStreamContent = createFormXObject(formObject);\n  appearanceStreamContent.scope = formObject.scope;\n  appearanceStreamContent.stream = stream.join(\"\\n\");\n  return appearanceStreamContent;\n};\n\nvar calculateX = function(formObject, text) {\n  var maxFontSize =\n    formObject.fontSize === 0 ? formObject.maxFontSize : formObject.fontSize;\n  var returnValue = {\n    text: \"\",\n    fontSize: \"\"\n  };\n  // Remove Brackets\n  text = text.substr(0, 1) == \"(\" ? text.substr(1) : text;\n  text =\n    text.substr(text.length - 1) == \")\"\n      ? text.substr(0, text.length - 1)\n      : text;\n  // split into array of words\n  var textSplit = text.split(\" \");\n  if (formObject.multiline) {\n    textSplit = textSplit.map(word => word.split(\"\\n\"));\n  } else {\n    textSplit = textSplit.map(word => [word]);\n  }\n\n  var fontSize = maxFontSize; // The Starting fontSize (The Maximum)\n  var lineSpacing = 2;\n  var borderPadding = 2;\n\n  var height = AcroFormAppearance.internal.getHeight(formObject) || 0;\n  height = height < 0 ? -height : height;\n  var width = AcroFormAppearance.internal.getWidth(formObject) || 0;\n  width = width < 0 ? -width : width;\n\n  var isSmallerThanWidth = function(i, lastLine, fontSize) {\n    if (i + 1 < textSplit.length) {\n      var tmp = lastLine + \" \" + textSplit[i + 1][0];\n      var TextWidth = calculateFontSpace(tmp, formObject, fontSize).width;\n      var FieldWidth = width - 2 * borderPadding;\n      return TextWidth <= FieldWidth;\n    } else {\n      return false;\n    }\n  };\n\n  fontSize++;\n  FontSize: while (fontSize > 0) {\n    text = \"\";\n    fontSize--;\n    var textHeight = calculateFontSpace(\"3\", formObject, fontSize).height;\n    var startY = formObject.multiline\n      ? height - fontSize\n      : (height - textHeight) / 2;\n    startY += lineSpacing;\n    var startX;\n\n    var lastY = startY;\n    var firstWordInLine = 0,\n      lastWordInLine = 0;\n    var lastLength;\n    var currWord = 0;\n\n    if (fontSize <= 0) {\n      // In case, the Text doesn't fit at all\n      fontSize = 12;\n      text = \"(...) Tj\\n\";\n      text +=\n        \"% Width of Text: \" +\n        calculateFontSpace(text, formObject, fontSize).width +\n        \", FieldWidth:\" +\n        width +\n        \"\\n\";\n      break;\n    }\n\n    var lastLine = \"\";\n    var lineCount = 0;\n    Line: for (var i = 0; i < textSplit.length; i++) {\n      if (textSplit.hasOwnProperty(i)) {\n        let isWithNewLine = false;\n        if (textSplit[i].length !== 1 && currWord !== textSplit[i].length - 1) {\n          if (\n            (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n            height\n          ) {\n            continue FontSize;\n          }\n\n          lastLine += textSplit[i][currWord];\n          isWithNewLine = true;\n          lastWordInLine = i;\n          i--;\n        } else {\n          lastLine += textSplit[i][currWord] + \" \";\n          lastLine =\n            lastLine.substr(lastLine.length - 1) == \" \"\n              ? lastLine.substr(0, lastLine.length - 1)\n              : lastLine;\n          var key = parseInt(i);\n          var nextLineIsSmaller = isSmallerThanWidth(key, lastLine, fontSize);\n          var isLastWord = i >= textSplit.length - 1;\n\n          if (nextLineIsSmaller && !isLastWord) {\n            lastLine += \" \";\n            currWord = 0;\n            continue; // Line\n          } else if (!nextLineIsSmaller && !isLastWord) {\n            if (!formObject.multiline) {\n              continue FontSize;\n            } else {\n              if (\n                (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n                height\n              ) {\n                // If the Text is higher than the\n                // FieldObject\n                continue FontSize;\n              }\n              lastWordInLine = key;\n              // go on\n            }\n          } else if (isLastWord) {\n            lastWordInLine = key;\n          } else {\n            if (\n              formObject.multiline &&\n              (textHeight + lineSpacing) * (lineCount + 2) + lineSpacing >\n                height\n            ) {\n              // If the Text is higher than the FieldObject\n              continue FontSize;\n            }\n          }\n        }\n        // Remove last blank\n\n        var line = \"\";\n\n        for (var x = firstWordInLine; x <= lastWordInLine; x++) {\n          var currLine = textSplit[x];\n          if (formObject.multiline) {\n            if (x === lastWordInLine) {\n              line += currLine[currWord] + \" \";\n              currWord = (currWord + 1) % currLine.length;\n              continue;\n            }\n            if (x === firstWordInLine) {\n              line += currLine[currLine.length - 1] + \" \";\n              continue;\n            }\n          }\n          line += currLine[0] + \" \";\n        }\n\n        // Remove last blank\n        line =\n          line.substr(line.length - 1) == \" \"\n            ? line.substr(0, line.length - 1)\n            : line;\n        // lastLength -= blankSpace.width;\n        lastLength = calculateFontSpace(line, formObject, fontSize).width;\n\n        // Calculate startX\n        switch (formObject.textAlign) {\n          case \"right\":\n            startX = width - lastLength - borderPadding;\n            break;\n          case \"center\":\n            startX = (width - lastLength) / 2;\n            break;\n          case \"left\":\n          default:\n            startX = borderPadding;\n            break;\n        }\n        text += f2(startX) + \" \" + f2(lastY) + \" Td\\n\";\n        text += \"(\" + pdfEscape(line) + \") Tj\\n\";\n        // reset X in PDF\n        text += -f2(startX) + \" 0 Td\\n\";\n\n        // After a Line, adjust y position\n        lastY = -(fontSize + lineSpacing);\n\n        // Reset for next iteration step\n        lastLength = 0;\n        firstWordInLine = isWithNewLine ? lastWordInLine : lastWordInLine + 1;\n        lineCount++;\n\n        lastLine = \"\";\n        continue Line;\n      }\n    }\n    break;\n  }\n\n  returnValue.text = text;\n  returnValue.fontSize = fontSize;\n\n  return returnValue;\n};\n\n/**\n * Small workaround for calculating the TextMetric approximately.\n *\n * @param text\n * @param fontsize\n * @returns {TextMetrics} (Has Height and Width)\n */\nvar calculateFontSpace = function(text, formObject, fontSize) {\n  var font = formObject.scope.internal.getFont(\n    formObject.fontName,\n    formObject.fontStyle\n  );\n  var width =\n    formObject.scope.getStringUnitWidth(text, {\n      font: font,\n      fontSize: parseFloat(fontSize),\n      charSpace: 0\n    }) * parseFloat(fontSize);\n  var height =\n    formObject.scope.getStringUnitWidth(\"3\", {\n      font: font,\n      fontSize: parseFloat(fontSize),\n      charSpace: 0\n    }) *\n    parseFloat(fontSize) *\n    1.5;\n  return { height: height, width: width };\n};\n\nvar acroformPluginTemplate = {\n  fields: [],\n  xForms: [],\n  /**\n   * acroFormDictionaryRoot contains information about the AcroForm\n   * Dictionary 0: The Event-Token, the AcroFormDictionaryCallback has\n   * 1: The Object ID of the Root\n   */\n  acroFormDictionaryRoot: null,\n  /**\n   * After the PDF gets evaluated, the reference to the root has to be\n   * reset, this indicates, whether the root has already been printed\n   * out\n   */\n  printedOut: false,\n  internal: null,\n  isInitialized: false\n};\n\nvar annotReferenceCallback = function(scope) {\n  //set objId to undefined and force it to get a new objId on buildDocument\n  scope.internal.acroformPlugin.acroFormDictionaryRoot.objId = undefined;\n  var fields = scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields;\n  for (var i in fields) {\n    if (fields.hasOwnProperty(i)) {\n      var formObject = fields[i];\n      //set objId to undefined and force it to get a new objId on buildDocument\n      formObject.objId = undefined;\n      // add Annot Reference!\n      if (formObject.hasAnnotation) {\n        // If theres an Annotation Widget in the Form Object, put the\n        // Reference in the /Annot array\n        createAnnotationReference(formObject, scope);\n      }\n    }\n  }\n};\n\nvar putForm = function(formObject) {\n  if (formObject.scope.internal.acroformPlugin.printedOut) {\n    formObject.scope.internal.acroformPlugin.printedOut = false;\n    formObject.scope.internal.acroformPlugin.acroFormDictionaryRoot = null;\n  }\n  formObject.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(\n    formObject\n  );\n};\n/**\n * Create the Reference to the widgetAnnotation, so that it gets referenced\n * in the Annot[] int the+ (Requires the Annotation Plugin)\n */\nvar createAnnotationReference = function(object, scope) {\n  var options = {\n    type: \"reference\",\n    object: object\n  };\n  var findEntry = function(entry) {\n    return entry.type === options.type && entry.object === options.object;\n  };\n  if (\n    scope.internal\n      .getPageInfo(object.page)\n      .pageContext.annotations.find(findEntry) === undefined\n  ) {\n    scope.internal\n      .getPageInfo(object.page)\n      .pageContext.annotations.push(options);\n  }\n};\n\n// Callbacks\n\nvar putCatalogCallback = function(scope) {\n  // Put reference to AcroForm to DocumentCatalog\n  if (\n    typeof scope.internal.acroformPlugin.acroFormDictionaryRoot !== \"undefined\"\n  ) {\n    // for safety, shouldn't normally be the case\n    scope.internal.write(\n      \"/AcroForm \" +\n        scope.internal.acroformPlugin.acroFormDictionaryRoot.objId +\n        \" \" +\n        0 +\n        \" R\"\n    );\n  } else {\n    throw new Error(\"putCatalogCallback: Root missing.\");\n  }\n};\n\n/**\n * Adds /Acroform X 0 R to Document Catalog, and creates the AcroForm\n * Dictionary\n */\nvar AcroFormDictionaryCallback = function(scope) {\n  // Remove event\n  scope.internal.events.unsubscribe(\n    scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID\n  );\n  delete scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID;\n  scope.internal.acroformPlugin.printedOut = true;\n};\n\n/**\n * Creates the single Fields and writes them into the Document\n *\n * If fieldArray is set, use the fields that are inside it instead of the\n * fields from the AcroRoot (for the FormXObjects...)\n */\nvar createFieldCallback = function(fieldArray, scope) {\n  var standardFields = !fieldArray;\n\n  if (!fieldArray) {\n    // in case there is no fieldArray specified, we want to print out\n    // the Fields of the AcroForm\n    // Print out Root\n    scope.internal.newObjectDeferredBegin(\n      scope.internal.acroformPlugin.acroFormDictionaryRoot.objId,\n      true\n    );\n    scope.internal.acroformPlugin.acroFormDictionaryRoot.putStream();\n  }\n\n  fieldArray =\n    fieldArray || scope.internal.acroformPlugin.acroFormDictionaryRoot.Kids;\n\n  for (var i in fieldArray) {\n    if (fieldArray.hasOwnProperty(i)) {\n      var fieldObject = fieldArray[i];\n      var keyValueList = [];\n      var oldRect = fieldObject.Rect;\n\n      if (fieldObject.Rect) {\n        fieldObject.Rect = calculateCoordinates(fieldObject.Rect, scope);\n      }\n\n      // Start Writing the Object\n      scope.internal.newObjectDeferredBegin(fieldObject.objId, true);\n\n      fieldObject.DA = AcroFormAppearance.createDefaultAppearanceStream(\n        fieldObject\n      );\n\n      if (\n        typeof fieldObject === \"object\" &&\n        typeof fieldObject.getKeyValueListForStream === \"function\"\n      ) {\n        keyValueList = fieldObject.getKeyValueListForStream();\n      }\n\n      fieldObject.Rect = oldRect;\n\n      if (\n        fieldObject.hasAppearanceStream &&\n        !fieldObject.appearanceStreamContent\n      ) {\n        // Calculate Appearance\n        var appearance = calculateAppearanceStream(fieldObject);\n        keyValueList.push({ key: \"AP\", value: \"<</N \" + appearance + \">>\" });\n\n        scope.internal.acroformPlugin.xForms.push(appearance);\n      }\n\n      // Assume AppearanceStreamContent is a Array with N,R,D (at least\n      // one of them!)\n      if (fieldObject.appearanceStreamContent) {\n        var appearanceStreamString = \"\";\n        // Iterate over N,R and D\n        for (var k in fieldObject.appearanceStreamContent) {\n          if (fieldObject.appearanceStreamContent.hasOwnProperty(k)) {\n            var value = fieldObject.appearanceStreamContent[k];\n            appearanceStreamString += \"/\" + k + \" \";\n            appearanceStreamString += \"<<\";\n            if (Object.keys(value).length >= 1 || Array.isArray(value)) {\n              // appearanceStream is an Array or Object!\n              for (var i in value) {\n                if (value.hasOwnProperty(i)) {\n                  var obj = value[i];\n                  if (typeof obj === \"function\") {\n                    // if Function is referenced, call it in order\n                    // to get the FormXObject\n                    obj = obj.call(scope, fieldObject);\n                  }\n                  appearanceStreamString += \"/\" + i + \" \" + obj + \" \";\n\n                  // In case the XForm is already used, e.g. OffState\n                  // of CheckBoxes, don't add it\n                  if (!(scope.internal.acroformPlugin.xForms.indexOf(obj) >= 0))\n                    scope.internal.acroformPlugin.xForms.push(obj);\n                }\n              }\n            } else {\n              obj = value;\n              if (typeof obj === \"function\") {\n                // if Function is referenced, call it in order to\n                // get the FormXObject\n                obj = obj.call(scope, fieldObject);\n              }\n              appearanceStreamString += \"/\" + i + \" \" + obj;\n              if (!(scope.internal.acroformPlugin.xForms.indexOf(obj) >= 0))\n                scope.internal.acroformPlugin.xForms.push(obj);\n            }\n            appearanceStreamString += \">>\";\n          }\n        }\n\n        // appearance stream is a normal Object..\n        keyValueList.push({\n          key: \"AP\",\n          value: \"<<\\n\" + appearanceStreamString + \">>\"\n        });\n      }\n\n      scope.internal.putStream({\n        additionalKeyValues: keyValueList,\n        objectId: fieldObject.objId\n      });\n\n      scope.internal.out(\"endobj\");\n    }\n  }\n  if (standardFields) {\n    createXFormObjectCallback(scope.internal.acroformPlugin.xForms, scope);\n  }\n};\n\nvar createXFormObjectCallback = function(fieldArray, scope) {\n  for (var i in fieldArray) {\n    if (fieldArray.hasOwnProperty(i)) {\n      var key = i;\n      var fieldObject = fieldArray[i];\n      // Start Writing the Object\n      scope.internal.newObjectDeferredBegin(fieldObject.objId, true);\n\n      if (\n        typeof fieldObject === \"object\" &&\n        typeof fieldObject.putStream === \"function\"\n      ) {\n        fieldObject.putStream();\n      }\n      delete fieldArray[key];\n    }\n  }\n};\n\nvar initializeAcroForm = function(scope, formObject) {\n  formObject.scope = scope;\n  if (\n    scope.internal !== undefined &&\n    (scope.internal.acroformPlugin === undefined ||\n      scope.internal.acroformPlugin.isInitialized === false)\n  ) {\n    AcroFormField.FieldNum = 0;\n    scope.internal.acroformPlugin = JSON.parse(\n      JSON.stringify(acroformPluginTemplate)\n    );\n    if (scope.internal.acroformPlugin.acroFormDictionaryRoot) {\n      throw new Error(\"Exception while creating AcroformDictionary\");\n    }\n    scaleFactor = scope.internal.scaleFactor;\n    // The Object Number of the AcroForm Dictionary\n    scope.internal.acroformPlugin.acroFormDictionaryRoot = new AcroFormDictionary();\n    scope.internal.acroformPlugin.acroFormDictionaryRoot.scope = scope;\n\n    // add Callback for creating the AcroForm Dictionary\n    scope.internal.acroformPlugin.acroFormDictionaryRoot._eventID = scope.internal.events.subscribe(\n      \"postPutResources\",\n      function() {\n        AcroFormDictionaryCallback(scope);\n      }\n    );\n\n    scope.internal.events.subscribe(\"buildDocument\", function() {\n      annotReferenceCallback(scope);\n    }); // buildDocument\n\n    // Register event, that is triggered when the DocumentCatalog is\n    // written, in order to add /AcroForm\n\n    scope.internal.events.subscribe(\"putCatalog\", function() {\n      putCatalogCallback(scope);\n    });\n\n    // Register event, that creates all Fields\n    scope.internal.events.subscribe(\"postPutPages\", function(fieldArray) {\n      createFieldCallback(fieldArray, scope);\n    });\n\n    scope.internal.acroformPlugin.isInitialized = true;\n  }\n};\n\n//PDF 32000-1:2008, page 26, 7.3.6\nvar arrayToPdfArray = (jsPDFAPI.__acroform__.arrayToPdfArray = function(\n  array,\n  objId,\n  scope\n) {\n  var encryptor = function(data) {\n    return data;\n  };\n  if (Array.isArray(array)) {\n    var content = \"[\";\n    for (var i = 0; i < array.length; i++) {\n      if (i !== 0) {\n        content += \" \";\n      }\n      switch (typeof array[i]) {\n        case \"boolean\":\n        case \"number\":\n        case \"object\":\n          content += array[i].toString();\n          break;\n        case \"string\":\n          if (array[i].substr(0, 1) !== \"/\") {\n            if (typeof objId !== \"undefined\" && scope)\n              encryptor = scope.internal.getEncryptor(objId);\n            content += \"(\" + pdfEscape(encryptor(array[i].toString())) + \")\";\n          } else {\n            content += array[i].toString();\n          }\n          break;\n      }\n    }\n    content += \"]\";\n    return content;\n  }\n  throw new Error(\n    \"Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray\"\n  );\n});\nfunction getMatches(string, regex, index) {\n  index || (index = 1); // default to the first capturing group\n  var matches = [];\n  var match;\n  while ((match = regex.exec(string))) {\n    matches.push(match[index]);\n  }\n  return matches;\n}\nvar pdfArrayToStringArray = function(array) {\n  var result = [];\n  if (typeof array === \"string\") {\n    result = getMatches(array, /\\((.*?)\\)/g);\n  }\n  return result;\n};\n\nvar toPdfString = function(string, objId, scope) {\n  var encryptor = function(data) {\n    return data;\n  };\n  if (typeof objId !== \"undefined\" && scope)\n    encryptor = scope.internal.getEncryptor(objId);\n  string = string || \"\";\n  string.toString();\n  string = \"(\" + pdfEscape(encryptor(string)) + \")\";\n  return string;\n};\n\n// ##########################\n// Classes\n// ##########################\n\n/**\n * @class AcroFormPDFObject\n * @classdesc A AcroFormPDFObject\n */\nvar AcroFormPDFObject = function() {\n  this._objId = undefined;\n  this._scope = undefined;\n\n  /**\n   * @name AcroFormPDFObject#objId\n   * @type {any}\n   */\n  Object.defineProperty(this, \"objId\", {\n    get: function() {\n      if (typeof this._objId === \"undefined\") {\n        if (typeof this.scope === \"undefined\") {\n          return undefined;\n        }\n        this._objId = this.scope.internal.newObjectDeferred();\n      }\n      return this._objId;\n    },\n    set: function(value) {\n      this._objId = value;\n    }\n  });\n  Object.defineProperty(this, \"scope\", {\n    value: this._scope,\n    writable: true\n  });\n};\n\n/**\n * @function AcroFormPDFObject.toString\n */\nAcroFormPDFObject.prototype.toString = function() {\n  return this.objId + \" 0 R\";\n};\n\nAcroFormPDFObject.prototype.putStream = function() {\n  var keyValueList = this.getKeyValueListForStream();\n  this.scope.internal.putStream({\n    data: this.stream,\n    additionalKeyValues: keyValueList,\n    objectId: this.objId\n  });\n  this.scope.internal.out(\"endobj\");\n};\n\n/**\n * Returns an key-value-List of all non-configurable Variables from the Object\n *\n * @name getKeyValueListForStream\n * @returns {string}\n */\nAcroFormPDFObject.prototype.getKeyValueListForStream = function() {\n  var keyValueList = [];\n  var keys = Object.getOwnPropertyNames(this).filter(function(key) {\n    return (\n      key != \"content\" &&\n      key != \"appearanceStreamContent\" &&\n      key != \"scope\" &&\n      key != \"objId\" &&\n      key.substring(0, 1) != \"_\"\n    );\n  });\n\n  for (var i in keys) {\n    if (Object.getOwnPropertyDescriptor(this, keys[i]).configurable === false) {\n      var key = keys[i];\n      var value = this[key];\n\n      if (value) {\n        if (Array.isArray(value)) {\n          keyValueList.push({\n            key: key,\n            value: arrayToPdfArray(value, this.objId, this.scope)\n          });\n        } else if (value instanceof AcroFormPDFObject) {\n          // In case it is a reference to another PDFObject,\n          // take the reference number\n          value.scope = this.scope;\n          keyValueList.push({ key: key, value: value.objId + \" 0 R\" });\n        } else if (typeof value !== \"function\") {\n          keyValueList.push({ key: key, value: value });\n        }\n      }\n    }\n  }\n  return keyValueList;\n};\n\nvar AcroFormXObject = function() {\n  AcroFormPDFObject.call(this);\n\n  Object.defineProperty(this, \"Type\", {\n    value: \"/XObject\",\n    configurable: false,\n    writable: true\n  });\n\n  Object.defineProperty(this, \"Subtype\", {\n    value: \"/Form\",\n    configurable: false,\n    writable: true\n  });\n\n  Object.defineProperty(this, \"FormType\", {\n    value: 1,\n    configurable: false,\n    writable: true\n  });\n\n  var _BBox = [];\n  Object.defineProperty(this, \"BBox\", {\n    configurable: false,\n    get: function() {\n      return _BBox;\n    },\n    set: function(value) {\n      _BBox = value;\n    }\n  });\n\n  Object.defineProperty(this, \"Resources\", {\n    value: \"2 0 R\",\n    configurable: false,\n    writable: true\n  });\n\n  var _stream;\n  Object.defineProperty(this, \"stream\", {\n    enumerable: false,\n    configurable: true,\n    set: function(value) {\n      _stream = value.trim();\n    },\n    get: function() {\n      if (_stream) {\n        return _stream;\n      } else {\n        return null;\n      }\n    }\n  });\n};\n\ninherit(AcroFormXObject, AcroFormPDFObject);\n\nvar AcroFormDictionary = function() {\n  AcroFormPDFObject.call(this);\n\n  var _Kids = [];\n\n  Object.defineProperty(this, \"Kids\", {\n    enumerable: false,\n    configurable: true,\n    get: function() {\n      if (_Kids.length > 0) {\n        return _Kids;\n      } else {\n        return undefined;\n      }\n    }\n  });\n  Object.defineProperty(this, \"Fields\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _Kids;\n    }\n  });\n\n  // Default Appearance\n  var _DA;\n  Object.defineProperty(this, \"DA\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      if (!_DA) {\n        return undefined;\n      }\n      var encryptor = function(data) {\n        return data;\n      };\n      if (this.scope) encryptor = this.scope.internal.getEncryptor(this.objId);\n      return \"(\" + pdfEscape(encryptor(_DA)) + \")\";\n    },\n    set: function(value) {\n      _DA = value;\n    }\n  });\n};\n\ninherit(AcroFormDictionary, AcroFormPDFObject);\n\n/**\n * The Field Object contains the Variables, that every Field needs\n *\n * @class AcroFormField\n * @classdesc An AcroForm FieldObject\n */\nvar AcroFormField = function() {\n  AcroFormPDFObject.call(this);\n\n  //Annotation-Flag See Table 165\n  var _F = 4;\n  Object.defineProperty(this, \"F\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _F;\n    },\n    set: function(value) {\n      if (!isNaN(value)) {\n        _F = value;\n      } else {\n        throw new Error(\n          'Invalid value \"' + value + '\" for attribute F supplied.'\n        );\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.2) If set, print the annotation when the page is printed. If clear, never print the annotation, regardless of wether is is displayed on the screen.\n   * NOTE 2 This can be useful for annotations representing interactive pushbuttons, which would serve no meaningful purpose on the printed page.\n   *\n   * @name AcroFormField#showWhenPrinted\n   * @default true\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"showWhenPrinted\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(_F, 3));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.F = setBitForPdf(_F, 3);\n      } else {\n        this.F = clearBitForPdf(_F, 3);\n      }\n    }\n  });\n\n  var _Ff = 0;\n  Object.defineProperty(this, \"Ff\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _Ff;\n    },\n    set: function(value) {\n      if (!isNaN(value)) {\n        _Ff = value;\n      } else {\n        throw new Error(\n          'Invalid value \"' + value + '\" for attribute Ff supplied.'\n        );\n      }\n    }\n  });\n\n  var _Rect = [];\n  Object.defineProperty(this, \"Rect\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      if (_Rect.length === 0) {\n        return undefined;\n      }\n      return _Rect;\n    },\n    set: function(value) {\n      if (typeof value !== \"undefined\") {\n        _Rect = value;\n      } else {\n        _Rect = [];\n      }\n    }\n  });\n\n  /**\n   * The x-position of the field.\n   *\n   * @name AcroFormField#x\n   * @default null\n   * @type {number}\n   */\n  Object.defineProperty(this, \"x\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (!_Rect || isNaN(_Rect[0])) {\n        return 0;\n      }\n      return _Rect[0];\n    },\n    set: function(value) {\n      _Rect[0] = value;\n    }\n  });\n\n  /**\n   * The y-position of the field.\n   *\n   * @name AcroFormField#y\n   * @default null\n   * @type {number}\n   */\n  Object.defineProperty(this, \"y\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (!_Rect || isNaN(_Rect[1])) {\n        return 0;\n      }\n      return _Rect[1];\n    },\n    set: function(value) {\n      _Rect[1] = value;\n    }\n  });\n\n  /**\n   * The width of the field.\n   *\n   * @name AcroFormField#width\n   * @default null\n   * @type {number}\n   */\n  Object.defineProperty(this, \"width\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (!_Rect || isNaN(_Rect[2])) {\n        return 0;\n      }\n      return _Rect[2];\n    },\n    set: function(value) {\n      _Rect[2] = value;\n    }\n  });\n\n  /**\n   * The height of the field.\n   *\n   * @name AcroFormField#height\n   * @default null\n   * @type {number}\n   */\n  Object.defineProperty(this, \"height\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (!_Rect || isNaN(_Rect[3])) {\n        return 0;\n      }\n      return _Rect[3];\n    },\n    set: function(value) {\n      _Rect[3] = value;\n    }\n  });\n\n  var _FT = \"\";\n  Object.defineProperty(this, \"FT\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return _FT;\n    },\n    set: function(value) {\n      switch (value) {\n        case \"/Btn\":\n        case \"/Tx\":\n        case \"/Ch\":\n        case \"/Sig\":\n          _FT = value;\n          break;\n        default:\n          throw new Error(\n            'Invalid value \"' + value + '\" for attribute FT supplied.'\n          );\n      }\n    }\n  });\n\n  var _T = null;\n\n  Object.defineProperty(this, \"T\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      if (!_T || _T.length < 1) {\n        // In case of a Child from a Radio´Group, you don't need a FieldName\n        if (this instanceof AcroFormChildClass) {\n          return undefined;\n        }\n        _T = \"FieldObject\" + AcroFormField.FieldNum++;\n      }\n      var encryptor = function(data) {\n        return data;\n      };\n      if (this.scope) encryptor = this.scope.internal.getEncryptor(this.objId);\n      return \"(\" + pdfEscape(encryptor(_T)) + \")\";\n    },\n    set: function(value) {\n      _T = value.toString();\n    }\n  });\n\n  /**\n   * (Optional) The partial field name (see 12.7.3.2, “Field Names”).\n   *\n   * @name AcroFormField#fieldName\n   * @default null\n   * @type {string}\n   */\n  Object.defineProperty(this, \"fieldName\", {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      return _T;\n    },\n    set: function(value) {\n      _T = value;\n    }\n  });\n\n  var _fontName = \"helvetica\";\n  /**\n   * The fontName of the font to be used.\n   *\n   * @name AcroFormField#fontName\n   * @default 'helvetica'\n   * @type {string}\n   */\n  Object.defineProperty(this, \"fontName\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _fontName;\n    },\n    set: function(value) {\n      _fontName = value;\n    }\n  });\n\n  var _fontStyle = \"normal\";\n  /**\n   * The fontStyle of the font to be used.\n   *\n   * @name AcroFormField#fontStyle\n   * @default 'normal'\n   * @type {string}\n   */\n  Object.defineProperty(this, \"fontStyle\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _fontStyle;\n    },\n    set: function(value) {\n      _fontStyle = value;\n    }\n  });\n\n  var _fontSize = 0;\n  /**\n   * The fontSize of the font to be used.\n   *\n   * @name AcroFormField#fontSize\n   * @default 0 (for auto)\n   * @type {number}\n   */\n  Object.defineProperty(this, \"fontSize\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _fontSize;\n    },\n    set: function(value) {\n      _fontSize = value;\n    }\n  });\n\n  var _maxFontSize = undefined;\n  /**\n   * The maximum fontSize of the font to be used.\n   *\n   * @name AcroFormField#maxFontSize\n   * @default 0 (for auto)\n   * @type {number}\n   */\n  Object.defineProperty(this, \"maxFontSize\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (_maxFontSize === undefined) {\n        // use the old default value here - the value is some kind of random as it depends on the scaleFactor (user unit)\n        // (\"50\" is transformed to the \"user space\" but then used in \"pdf space\")\n        return 50 / scaleFactor;\n      } else {\n        return _maxFontSize;\n      }\n    },\n    set: function(value) {\n      _maxFontSize = value;\n    }\n  });\n\n  var _color = \"black\";\n  /**\n   * The color of the text\n   *\n   * @name AcroFormField#color\n   * @default 'black'\n   * @type {string|rgba}\n   */\n  Object.defineProperty(this, \"color\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _color;\n    },\n    set: function(value) {\n      _color = value;\n    }\n  });\n\n  var _DA = \"/F1 0 Tf 0 g\";\n  // Defines the default appearance (Needed for variable Text)\n  Object.defineProperty(this, \"DA\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      if (\n        !_DA ||\n        this instanceof AcroFormChildClass ||\n        this instanceof AcroFormTextField\n      ) {\n        return undefined;\n      }\n      return toPdfString(_DA, this.objId, this.scope);\n    },\n    set: function(value) {\n      value = value.toString();\n      _DA = value;\n    }\n  });\n\n  var _DV = null;\n  Object.defineProperty(this, \"DV\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      if (!_DV) {\n        return undefined;\n      }\n      if (this instanceof AcroFormButton === false) {\n        return toPdfString(_DV, this.objId, this.scope);\n      }\n      return _DV;\n    },\n    set: function(value) {\n      value = value.toString();\n      if (this instanceof AcroFormButton === false) {\n        if (value.substr(0, 1) === \"(\") {\n          _DV = pdfUnescape(value.substr(1, value.length - 2));\n        } else {\n          _DV = pdfUnescape(value);\n        }\n      } else {\n        _DV = value;\n      }\n    }\n  });\n\n  /**\n   * (Optional; inheritable) The default value to which the field reverts when a reset-form action is executed (see 12.7.5.3, “Reset-Form Action”). The format of this value is the same as that of value.\n   *\n   * @name AcroFormField#defaultValue\n   * @default null\n   * @type {any}\n   */\n  Object.defineProperty(this, \"defaultValue\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (this instanceof AcroFormButton === true) {\n        return pdfUnescape(_DV.substr(1, _DV.length - 1));\n      } else {\n        return _DV;\n      }\n    },\n    set: function(value) {\n      value = value.toString();\n      if (this instanceof AcroFormButton === true) {\n        _DV = \"/\" + value;\n      } else {\n        _DV = value;\n      }\n    }\n  });\n\n  var _V = null;\n  Object.defineProperty(this, \"_V\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      if (!_V) {\n        return undefined;\n      }\n      return _V;\n    },\n    set: function(value) {\n      this.V = value;\n    }\n  });\n  Object.defineProperty(this, \"V\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      if (!_V) {\n        return undefined;\n      }\n      if (this instanceof AcroFormButton === false) {\n        return toPdfString(_V, this.objId, this.scope);\n      }\n      return _V;\n    },\n    set: function(value) {\n      value = value.toString();\n      if (this instanceof AcroFormButton === false) {\n        if (value.substr(0, 1) === \"(\") {\n          _V = pdfUnescape(value.substr(1, value.length - 2));\n        } else {\n          _V = pdfUnescape(value);\n        }\n      } else {\n        _V = value;\n      }\n    }\n  });\n\n  /**\n   * (Optional; inheritable) The field’s value, whose format varies depending on the field type. See the descriptions of individual field types for further information.\n   *\n   * @name AcroFormField#value\n   * @default null\n   * @type {any}\n   */\n  Object.defineProperty(this, \"value\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (this instanceof AcroFormButton === true) {\n        return pdfUnescape(_V.substr(1, _V.length - 1));\n      } else {\n        return _V;\n      }\n    },\n    set: function(value) {\n      value = value.toString();\n      if (this instanceof AcroFormButton === true) {\n        _V = \"/\" + value;\n      } else {\n        _V = value;\n      }\n    }\n  });\n\n  /**\n   * Check if field has annotations\n   *\n   * @name AcroFormField#hasAnnotation\n   * @readonly\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"hasAnnotation\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this.Rect;\n    }\n  });\n\n  Object.defineProperty(this, \"Type\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return this.hasAnnotation ? \"/Annot\" : null;\n    }\n  });\n\n  Object.defineProperty(this, \"Subtype\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return this.hasAnnotation ? \"/Widget\" : null;\n    }\n  });\n\n  var _hasAppearanceStream = false;\n  /**\n   * true if field has an appearanceStream\n   *\n   * @name AcroFormField#hasAppearanceStream\n   * @readonly\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"hasAppearanceStream\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _hasAppearanceStream;\n    },\n    set: function(value) {\n      value = Boolean(value);\n      _hasAppearanceStream = value;\n    }\n  });\n\n  /**\n   * The page on which the AcroFormField is placed\n   *\n   * @name AcroFormField#page\n   * @type {number}\n   */\n  var _page;\n  Object.defineProperty(this, \"page\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      if (!_page) {\n        return undefined;\n      }\n      return _page;\n    },\n    set: function(value) {\n      _page = value;\n    }\n  });\n\n  /**\n   * If set, the user may not change the value of the field. Any associated widget annotations will not interact with the user; that is, they will not respond to mouse clicks or change their appearance in response to mouse motions. This flag is useful for fields whose values are computed or imported from a database.\n   *\n   * @name AcroFormField#readOnly\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"readOnly\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 1));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 1);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 1);\n      }\n    }\n  });\n\n  /**\n   * If set, the field shall have a value at the time it is exported by a submitform action (see 12.7.5.2, “Submit-Form Action”).\n   *\n   * @name AcroFormField#required\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"required\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 2));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 2);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 2);\n      }\n    }\n  });\n\n  /**\n   * If set, the field shall not be exported by a submit-form action (see 12.7.5.2, “Submit-Form Action”)\n   *\n   * @name AcroFormField#noExport\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"noExport\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 3));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 3);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 3);\n      }\n    }\n  });\n\n  var _Q = null;\n  Object.defineProperty(this, \"Q\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      if (_Q === null) {\n        return undefined;\n      }\n      return _Q;\n    },\n    set: function(value) {\n      if ([0, 1, 2].indexOf(value) !== -1) {\n        _Q = value;\n      } else {\n        throw new Error(\n          'Invalid value \"' + value + '\" for attribute Q supplied.'\n        );\n      }\n    }\n  });\n\n  /**\n   * (Optional; inheritable) A code specifying the form of quadding (justification) that shall be used in displaying the text:\n   * 'left', 'center', 'right'\n   *\n   * @name AcroFormField#textAlign\n   * @default 'left'\n   * @type {string}\n   */\n  Object.defineProperty(this, \"textAlign\", {\n    get: function() {\n      var result;\n      switch (_Q) {\n        case 0:\n        default:\n          result = \"left\";\n          break;\n        case 1:\n          result = \"center\";\n          break;\n        case 2:\n          result = \"right\";\n          break;\n      }\n      return result;\n    },\n    configurable: true,\n    enumerable: true,\n    set: function(value) {\n      switch (value) {\n        case \"right\":\n        case 2:\n          _Q = 2;\n          break;\n        case \"center\":\n        case 1:\n          _Q = 1;\n          break;\n        case \"left\":\n        case 0:\n        default:\n          _Q = 0;\n      }\n    }\n  });\n};\n\ninherit(AcroFormField, AcroFormPDFObject);\n\n/**\n * @class AcroFormChoiceField\n * @extends AcroFormField\n */\nvar AcroFormChoiceField = function() {\n  AcroFormField.call(this);\n  // Field Type = Choice Field\n  this.FT = \"/Ch\";\n  // options\n  this.V = \"()\";\n\n  this.fontName = \"zapfdingbats\";\n  // Top Index\n  var _TI = 0;\n\n  Object.defineProperty(this, \"TI\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return _TI;\n    },\n    set: function(value) {\n      _TI = value;\n    }\n  });\n\n  /**\n   * (Optional) For scrollable list boxes, the top index (the index in the Opt array of the first option visible in the list). Default value: 0.\n   *\n   * @name AcroFormChoiceField#topIndex\n   * @default 0\n   * @type {number}\n   */\n  Object.defineProperty(this, \"topIndex\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _TI;\n    },\n    set: function(value) {\n      _TI = value;\n    }\n  });\n\n  var _Opt = [];\n  Object.defineProperty(this, \"Opt\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return arrayToPdfArray(_Opt, this.objId, this.scope);\n    },\n    set: function(value) {\n      _Opt = pdfArrayToStringArray(value);\n    }\n  });\n\n  /**\n   * @memberof AcroFormChoiceField\n   * @name getOptions\n   * @function\n   * @instance\n   * @returns {array} array of Options\n   */\n  this.getOptions = function() {\n    return _Opt;\n  };\n\n  /**\n   * @memberof AcroFormChoiceField\n   * @name setOptions\n   * @function\n   * @instance\n   * @param {array} value\n   */\n  this.setOptions = function(value) {\n    _Opt = value;\n    if (this.sort) {\n      _Opt.sort();\n    }\n  };\n\n  /**\n   * @memberof AcroFormChoiceField\n   * @name addOption\n   * @function\n   * @instance\n   * @param {string} value\n   */\n  this.addOption = function(value) {\n    value = value || \"\";\n    value = value.toString();\n    _Opt.push(value);\n    if (this.sort) {\n      _Opt.sort();\n    }\n  };\n\n  /**\n   * @memberof AcroFormChoiceField\n   * @name removeOption\n   * @function\n   * @instance\n   * @param {string} value\n   * @param {boolean} allEntries (default: false)\n   */\n  this.removeOption = function(value, allEntries) {\n    allEntries = allEntries || false;\n    value = value || \"\";\n    value = value.toString();\n\n    while (_Opt.indexOf(value) !== -1) {\n      _Opt.splice(_Opt.indexOf(value), 1);\n      if (allEntries === false) {\n        break;\n      }\n    }\n  };\n\n  /**\n   * If set, the field is a combo box; if clear, the field is a list box.\n   *\n   * @name AcroFormChoiceField#combo\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"combo\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 18));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 18);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 18);\n      }\n    }\n  });\n\n  /**\n   * If set, the combo box shall include an editable text box as well as a drop-down list; if clear, it shall include only a drop-down list. This flag shall be used only if the Combo flag is set.\n   *\n   * @name AcroFormChoiceField#edit\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"edit\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 19));\n    },\n    set: function(value) {\n      //PDF 32000-1:2008, page 444\n      if (this.combo === true) {\n        if (Boolean(value) === true) {\n          this.Ff = setBitForPdf(this.Ff, 19);\n        } else {\n          this.Ff = clearBitForPdf(this.Ff, 19);\n        }\n      }\n    }\n  });\n\n  /**\n   * If set, the field’s option items shall be sorted alphabetically. This flag is intended for use by writers, not by readers. Conforming readers shall display the options in the order in which they occur in the Opt array (see Table 231).\n   *\n   * @name AcroFormChoiceField#sort\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"sort\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 20));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 20);\n        _Opt.sort();\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 20);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.4) If set, more than one of the field’s option items may be selected simultaneously; if clear, at most one item shall be selected\n   *\n   * @name AcroFormChoiceField#multiSelect\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"multiSelect\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 22));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 22);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 22);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.4) If set, text entered in the field shall not be spellchecked. This flag shall not be used unless the Combo and Edit flags are both set.\n   *\n   * @name AcroFormChoiceField#doNotSpellCheck\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"doNotSpellCheck\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 23));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 23);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 23);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.5) If set, the new value shall be committed as soon as a selection is made (commonly with the pointing device). In this case, supplying a value for a field involves three actions: selecting the field for fill-in, selecting a choice for the fill-in value, and leaving that field, which finalizes or “commits” the data choice and triggers any actions associated with the entry or changing of this data. If this flag is on, then processing does not wait for leaving the field action to occur, but immediately proceeds to the third step.\n   * This option enables applications to perform an action once a selection is made, without requiring the user to exit the field. If clear, the new value is not committed until the user exits the field.\n   *\n   * @name AcroFormChoiceField#commitOnSelChange\n   * @default false\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"commitOnSelChange\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 27));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 27);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 27);\n      }\n    }\n  });\n\n  this.hasAppearanceStream = false;\n};\ninherit(AcroFormChoiceField, AcroFormField);\n\n/**\n * @class AcroFormListBox\n * @extends AcroFormChoiceField\n * @extends AcroFormField\n */\nvar AcroFormListBox = function() {\n  AcroFormChoiceField.call(this);\n  this.fontName = \"helvetica\";\n\n  //PDF 32000-1:2008, page 444\n  this.combo = false;\n};\ninherit(AcroFormListBox, AcroFormChoiceField);\n\n/**\n * @class AcroFormComboBox\n * @extends AcroFormListBox\n * @extends AcroFormChoiceField\n * @extends AcroFormField\n */\nvar AcroFormComboBox = function() {\n  AcroFormListBox.call(this);\n  this.combo = true;\n};\ninherit(AcroFormComboBox, AcroFormListBox);\n\n/**\n * @class AcroFormEditBox\n * @extends AcroFormComboBox\n * @extends AcroFormListBox\n * @extends AcroFormChoiceField\n * @extends AcroFormField\n */\nvar AcroFormEditBox = function() {\n  AcroFormComboBox.call(this);\n  this.edit = true;\n};\ninherit(AcroFormEditBox, AcroFormComboBox);\n\n/**\n * @class AcroFormButton\n * @extends AcroFormField\n */\nvar AcroFormButton = function() {\n  AcroFormField.call(this);\n  this.FT = \"/Btn\";\n\n  /**\n   * (Radio buttons only) If set, exactly one radio button shall be selected at all times; selecting the currently selected button has no effect. If clear, clicking the selected button deselects it, leaving no button selected.\n   *\n   * @name AcroFormButton#noToggleToOff\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"noToggleToOff\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 15));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 15);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 15);\n      }\n    }\n  });\n\n  /**\n   * If set, the field is a set of radio buttons; if clear, the field is a checkbox. This flag may be set only if the Pushbutton flag is clear.\n   *\n   * @name AcroFormButton#radio\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"radio\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 16));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 16);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 16);\n      }\n    }\n  });\n\n  /**\n   * If set, the field is a pushbutton that does not retain a permanent value.\n   *\n   * @name AcroFormButton#pushButton\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"pushButton\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 17));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 17);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 17);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value for the on state will turn on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).\n   *\n   * @name AcroFormButton#radioIsUnison\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"radioIsUnison\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 26));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 26);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 26);\n      }\n    }\n  });\n\n  var _MK = {};\n  Object.defineProperty(this, \"MK\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      var encryptor = function(data) {\n        return data;\n      };\n      if (this.scope) encryptor = this.scope.internal.getEncryptor(this.objId);\n      if (Object.keys(_MK).length !== 0) {\n        var result = [];\n        result.push(\"<<\");\n        var key;\n        for (key in _MK) {\n          result.push(\"/\" + key + \" (\" + pdfEscape(encryptor(_MK[key])) + \")\");\n        }\n        result.push(\">>\");\n        return result.join(\"\\n\");\n      }\n      return undefined;\n    },\n    set: function(value) {\n      if (typeof value === \"object\") {\n        _MK = value;\n      }\n    }\n  });\n\n  /**\n   * From the PDF reference:\n   * (Optional, button fields only) The widget annotation's normal caption which shall be displayed when it is not interacting with the user.\n   * Unlike the remaining entries listed in this Table which apply only to widget annotations associated with pushbutton fields (see Pushbuttons in 12.7.4.2, \"Button Fields\"), the CA entry may be used with any type of button field, including check boxes (see Check Boxes in 12.7.4.2, \"Button Fields\") and radio buttons (Radio Buttons in 12.7.4.2, \"Button Fields\").\n   *\n   * - '8' = Cross,\n   * - 'l' =  Circle,\n   * - '' = nothing\n   * @name AcroFormButton#caption\n   * @type {string}\n   */\n  Object.defineProperty(this, \"caption\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _MK.CA || \"\";\n    },\n    set: function(value) {\n      if (typeof value === \"string\") {\n        _MK.CA = value;\n      }\n    }\n  });\n\n  var _AS;\n  Object.defineProperty(this, \"AS\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _AS;\n    },\n    set: function(value) {\n      _AS = value;\n    }\n  });\n\n  /**\n   * (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2) The annotation's appearance state, which selects the applicable appearance stream from an appearance subdictionary (see Section 12.5.5, \"Appearance Streams\")\n   *\n   * @name AcroFormButton#appearanceState\n   * @type {any}\n   */\n  Object.defineProperty(this, \"appearanceState\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _AS.substr(1, _AS.length - 1);\n    },\n    set: function(value) {\n      _AS = \"/\" + value;\n    }\n  });\n};\ninherit(AcroFormButton, AcroFormField);\n\n/**\n * @class AcroFormPushButton\n * @extends AcroFormButton\n * @extends AcroFormField\n */\nvar AcroFormPushButton = function() {\n  AcroFormButton.call(this);\n  this.pushButton = true;\n};\ninherit(AcroFormPushButton, AcroFormButton);\n\n/**\n * @class AcroFormRadioButton\n * @extends AcroFormButton\n * @extends AcroFormField\n */\nvar AcroFormRadioButton = function() {\n  AcroFormButton.call(this);\n  this.radio = true;\n  this.pushButton = false;\n\n  var _Kids = [];\n  Object.defineProperty(this, \"Kids\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return _Kids;\n    },\n    set: function(value) {\n      if (typeof value !== \"undefined\") {\n        _Kids = value;\n      } else {\n        _Kids = [];\n      }\n    }\n  });\n};\ninherit(AcroFormRadioButton, AcroFormButton);\n\n/**\n * The Child class of a RadioButton (the radioGroup) -> The single Buttons\n *\n * @class AcroFormChildClass\n * @extends AcroFormField\n * @ignore\n */\nvar AcroFormChildClass = function() {\n  AcroFormField.call(this);\n\n  var _parent;\n  Object.defineProperty(this, \"Parent\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _parent;\n    },\n    set: function(value) {\n      _parent = value;\n    }\n  });\n\n  var _optionName;\n  Object.defineProperty(this, \"optionName\", {\n    enumerable: false,\n    configurable: true,\n    get: function() {\n      return _optionName;\n    },\n    set: function(value) {\n      _optionName = value;\n    }\n  });\n\n  var _MK = {};\n  Object.defineProperty(this, \"MK\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      var encryptor = function(data) {\n        return data;\n      };\n      if (this.scope) encryptor = this.scope.internal.getEncryptor(this.objId);\n      var result = [];\n      result.push(\"<<\");\n      var key;\n      for (key in _MK) {\n        result.push(\"/\" + key + \" (\" + pdfEscape(encryptor(_MK[key])) + \")\");\n      }\n      result.push(\">>\");\n      return result.join(\"\\n\");\n    },\n    set: function(value) {\n      if (typeof value === \"object\") {\n        _MK = value;\n      }\n    }\n  });\n\n  /**\n   * From the PDF reference:\n   * (Optional, button fields only) The widget annotation's normal caption which shall be displayed when it is not interacting with the user.\n   * Unlike the remaining entries listed in this Table which apply only to widget annotations associated with pushbutton fields (see Pushbuttons in 12.7.4.2, \"Button Fields\"), the CA entry may be used with any type of button field, including check boxes (see Check Boxes in 12.7.4.2, \"Button Fields\") and radio buttons (Radio Buttons in 12.7.4.2, \"Button Fields\").\n   *\n   * - '8' = Cross,\n   * - 'l' =  Circle,\n   * - '' = nothing\n   * @name AcroFormButton#caption\n   * @type {string}\n   */\n  Object.defineProperty(this, \"caption\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _MK.CA || \"\";\n    },\n    set: function(value) {\n      if (typeof value === \"string\") {\n        _MK.CA = value;\n      }\n    }\n  });\n\n  var _AS;\n  Object.defineProperty(this, \"AS\", {\n    enumerable: false,\n    configurable: false,\n    get: function() {\n      return _AS;\n    },\n    set: function(value) {\n      _AS = value;\n    }\n  });\n\n  /**\n   * (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2) The annotation's appearance state, which selects the applicable appearance stream from an appearance subdictionary (see Section 12.5.5, \"Appearance Streams\")\n   *\n   * @name AcroFormButton#appearanceState\n   * @type {any}\n   */\n  Object.defineProperty(this, \"appearanceState\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _AS.substr(1, _AS.length - 1);\n    },\n    set: function(value) {\n      _AS = \"/\" + value;\n    }\n  });\n  this.caption = \"l\";\n  this.appearanceState = \"Off\";\n  // todo: set AppearanceType as variable that can be set from the\n  // outside...\n  this._AppearanceType = AcroFormAppearance.RadioButton.Circle;\n  // The Default appearanceType is the Circle\n  this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(\n    this.optionName\n  );\n};\ninherit(AcroFormChildClass, AcroFormField);\n\nAcroFormRadioButton.prototype.setAppearance = function(appearance) {\n  if (!(\"createAppearanceStream\" in appearance && \"getCA\" in appearance)) {\n    throw new Error(\n      \"Couldn't assign Appearance to RadioButton. Appearance was Invalid!\"\n    );\n  }\n  for (var objId in this.Kids) {\n    if (this.Kids.hasOwnProperty(objId)) {\n      var child = this.Kids[objId];\n      child.appearanceStreamContent = appearance.createAppearanceStream(\n        child.optionName\n      );\n      child.caption = appearance.getCA();\n    }\n  }\n};\n\nAcroFormRadioButton.prototype.createOption = function(name) {\n  // Create new Child for RadioGroup\n  var child = new AcroFormChildClass();\n  child.Parent = this;\n  child.optionName = name;\n  // Add to Parent\n  this.Kids.push(child);\n\n  addField.call(this.scope, child);\n\n  return child;\n};\n\n/**\n * @class AcroFormCheckBox\n * @extends AcroFormButton\n * @extends AcroFormField\n */\nvar AcroFormCheckBox = function() {\n  AcroFormButton.call(this);\n\n  this.fontName = \"zapfdingbats\";\n  this.caption = \"3\";\n  this.appearanceState = \"On\";\n  this.value = \"On\";\n  this.textAlign = \"center\";\n  this.appearanceStreamContent = AcroFormAppearance.CheckBox.createAppearanceStream();\n};\ninherit(AcroFormCheckBox, AcroFormButton);\n\n/**\n * @class AcroFormTextField\n * @extends AcroFormField\n */\nvar AcroFormTextField = function() {\n  AcroFormField.call(this);\n  this.FT = \"/Tx\";\n\n  /**\n   * If set, the field may contain multiple lines of text; if clear, the field’s text shall be restricted to a single line.\n   *\n   * @name AcroFormTextField#multiline\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"multiline\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 13));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 13);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 13);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.4) If set, the text entered in the field represents the pathname of a file whose contents shall be submitted as the value of the field.\n   *\n   * @name AcroFormTextField#fileSelect\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"fileSelect\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 21));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 21);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 21);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.4) If set, text entered in the field shall not be spell-checked.\n   *\n   * @name AcroFormTextField#doNotSpellCheck\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"doNotSpellCheck\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 23));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 23);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 23);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.4) If set, the field shall not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text than fits within its annotation rectangle. Once the field is full, no further text shall be accepted for interactive form filling; for noninteractive form filling, the filler should take care not to add more character than will visibly fit in the defined area.\n   *\n   * @name AcroFormTextField#doNotScroll\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"doNotScroll\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 24));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 24);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 24);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.5) May be set only if the MaxLen entry is present in the text field dictionary (see Table 229) and if the Multiline, Password, and FileSelect flags are clear. If set, the field shall be automatically divided into as many equally spaced positions, or combs, as the value of MaxLen, and the text is laid out into those combs.\n   *\n   * @name AcroFormTextField#comb\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"comb\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 25));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 25);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 25);\n      }\n    }\n  });\n\n  /**\n   * (PDF 1.5) If set, the value of this field shall be a rich text string (see 12.7.3.4, “Rich Text Strings”). If the field has a value, the RV entry of the field dictionary (Table 222) shall specify the rich text string.\n   *\n   * @name AcroFormTextField#richText\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"richText\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 26));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 26);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 26);\n      }\n    }\n  });\n\n  var _MaxLen = null;\n  Object.defineProperty(this, \"MaxLen\", {\n    enumerable: true,\n    configurable: false,\n    get: function() {\n      return _MaxLen;\n    },\n    set: function(value) {\n      _MaxLen = value;\n    }\n  });\n\n  /**\n   * (Optional; inheritable) The maximum length of the field’s text, in characters.\n   *\n   * @name AcroFormTextField#maxLength\n   * @type {number}\n   */\n  Object.defineProperty(this, \"maxLength\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return _MaxLen;\n    },\n    set: function(value) {\n      if (Number.isInteger(value)) {\n        _MaxLen = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, \"hasAppearanceStream\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return this.V || this.DV;\n    }\n  });\n};\ninherit(AcroFormTextField, AcroFormField);\n\n/**\n * @class AcroFormPasswordField\n * @extends AcroFormTextField\n * @extends AcroFormField\n */\nvar AcroFormPasswordField = function() {\n  AcroFormTextField.call(this);\n\n  /**\n   * If set, the field is intended for entering a secure password that should not be echoed visibly to the screen. Characters typed from the keyboard shall instead be echoed in some unreadable form, such as asterisks or bullet characters.\n   * NOTE To protect password confidentiality, readers should never store the value of the text field in the PDF file if this flag is set.\n   *\n   * @name AcroFormTextField#password\n   * @type {boolean}\n   */\n  Object.defineProperty(this, \"password\", {\n    enumerable: true,\n    configurable: true,\n    get: function() {\n      return Boolean(getBitForPdf(this.Ff, 14));\n    },\n    set: function(value) {\n      if (Boolean(value) === true) {\n        this.Ff = setBitForPdf(this.Ff, 14);\n      } else {\n        this.Ff = clearBitForPdf(this.Ff, 14);\n      }\n    }\n  });\n  this.password = true;\n};\ninherit(AcroFormPasswordField, AcroFormTextField);\n\n// Contains Methods for creating standard appearances\nvar AcroFormAppearance = {\n  CheckBox: {\n    createAppearanceStream: function() {\n      var appearance = {\n        N: {\n          On: AcroFormAppearance.CheckBox.YesNormal\n        },\n        D: {\n          On: AcroFormAppearance.CheckBox.YesPushDown,\n          Off: AcroFormAppearance.CheckBox.OffPushDown\n        }\n      };\n\n      return appearance;\n    },\n    /**\n     * Returns the standard On Appearance for a CheckBox\n     *\n     * @returns {AcroFormXObject}\n     */\n    YesPushDown: function(formObject) {\n      var xobj = createFormXObject(formObject);\n      xobj.scope = formObject.scope;\n      var stream = [];\n      var fontKey = formObject.scope.internal.getFont(\n        formObject.fontName,\n        formObject.fontStyle\n      ).id;\n      var encodedColor = formObject.scope.__private__.encodeColorString(\n        formObject.color\n      );\n      var calcRes = calculateX(formObject, formObject.caption);\n      stream.push(\"0.749023 g\");\n      stream.push(\n        \"0 0 \" +\n          f2(AcroFormAppearance.internal.getWidth(formObject)) +\n          \" \" +\n          f2(AcroFormAppearance.internal.getHeight(formObject)) +\n          \" re\"\n      );\n      stream.push(\"f\");\n      stream.push(\"BMC\");\n      stream.push(\"q\");\n      stream.push(\"0 0 1 rg\");\n      stream.push(\n        \"/\" + fontKey + \" \" + f2(calcRes.fontSize) + \" Tf \" + encodedColor\n      );\n      stream.push(\"BT\");\n      stream.push(calcRes.text);\n      stream.push(\"ET\");\n      stream.push(\"Q\");\n      stream.push(\"EMC\");\n      xobj.stream = stream.join(\"\\n\");\n      return xobj;\n    },\n\n    YesNormal: function(formObject) {\n      var xobj = createFormXObject(formObject);\n      xobj.scope = formObject.scope;\n      var fontKey = formObject.scope.internal.getFont(\n        formObject.fontName,\n        formObject.fontStyle\n      ).id;\n      var encodedColor = formObject.scope.__private__.encodeColorString(\n        formObject.color\n      );\n      var stream = [];\n      var height = AcroFormAppearance.internal.getHeight(formObject);\n      var width = AcroFormAppearance.internal.getWidth(formObject);\n      var calcRes = calculateX(formObject, formObject.caption);\n      stream.push(\"1 g\");\n      stream.push(\"0 0 \" + f2(width) + \" \" + f2(height) + \" re\");\n      stream.push(\"f\");\n      stream.push(\"q\");\n      stream.push(\"0 0 1 rg\");\n      stream.push(\"0 0 \" + f2(width - 1) + \" \" + f2(height - 1) + \" re\");\n      stream.push(\"W\");\n      stream.push(\"n\");\n      stream.push(\"0 g\");\n      stream.push(\"BT\");\n      stream.push(\n        \"/\" + fontKey + \" \" + f2(calcRes.fontSize) + \" Tf \" + encodedColor\n      );\n      stream.push(calcRes.text);\n      stream.push(\"ET\");\n      stream.push(\"Q\");\n      xobj.stream = stream.join(\"\\n\");\n      return xobj;\n    },\n\n    /**\n     * Returns the standard Off Appearance for a CheckBox\n     *\n     * @returns {AcroFormXObject}\n     */\n    OffPushDown: function(formObject) {\n      var xobj = createFormXObject(formObject);\n      xobj.scope = formObject.scope;\n      var stream = [];\n      stream.push(\"0.749023 g\");\n      stream.push(\n        \"0 0 \" +\n          f2(AcroFormAppearance.internal.getWidth(formObject)) +\n          \" \" +\n          f2(AcroFormAppearance.internal.getHeight(formObject)) +\n          \" re\"\n      );\n      stream.push(\"f\");\n      xobj.stream = stream.join(\"\\n\");\n      return xobj;\n    }\n  },\n\n  RadioButton: {\n    Circle: {\n      createAppearanceStream: function(name) {\n        var appearanceStreamContent = {\n          D: {\n            Off: AcroFormAppearance.RadioButton.Circle.OffPushDown\n          },\n          N: {}\n        };\n        appearanceStreamContent.N[name] =\n          AcroFormAppearance.RadioButton.Circle.YesNormal;\n        appearanceStreamContent.D[name] =\n          AcroFormAppearance.RadioButton.Circle.YesPushDown;\n        return appearanceStreamContent;\n      },\n      getCA: function() {\n        return \"l\";\n      },\n\n      YesNormal: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var stream = [];\n        // Make the Radius of the Circle relative to min(height, width) of formObject\n        var DotRadius =\n          AcroFormAppearance.internal.getWidth(formObject) <=\n          AcroFormAppearance.internal.getHeight(formObject)\n            ? AcroFormAppearance.internal.getWidth(formObject) / 4\n            : AcroFormAppearance.internal.getHeight(formObject) / 4;\n        // The Borderpadding...\n        DotRadius = Number((DotRadius * 0.9).toFixed(5));\n        var c = AcroFormAppearance.internal.Bezier_C;\n        var DotRadiusBezier = Number((DotRadius * c).toFixed(5));\n        /*\n         * The Following is a Circle created with Bezier-Curves.\n         */\n        stream.push(\"q\");\n        stream.push(\n          \"1 0 0 1 \" +\n            f5(AcroFormAppearance.internal.getWidth(formObject) / 2) +\n            \" \" +\n            f5(AcroFormAppearance.internal.getHeight(formObject) / 2) +\n            \" cm\"\n        );\n        stream.push(DotRadius + \" 0 m\");\n        stream.push(\n          DotRadius +\n            \" \" +\n            DotRadiusBezier +\n            \" \" +\n            DotRadiusBezier +\n            \" \" +\n            DotRadius +\n            \" 0 \" +\n            DotRadius +\n            \" c\"\n        );\n        stream.push(\n          \"-\" +\n            DotRadiusBezier +\n            \" \" +\n            DotRadius +\n            \" -\" +\n            DotRadius +\n            \" \" +\n            DotRadiusBezier +\n            \" -\" +\n            DotRadius +\n            \" 0 c\"\n        );\n        stream.push(\n          \"-\" +\n            DotRadius +\n            \" -\" +\n            DotRadiusBezier +\n            \" -\" +\n            DotRadiusBezier +\n            \" -\" +\n            DotRadius +\n            \" 0 -\" +\n            DotRadius +\n            \" c\"\n        );\n        stream.push(\n          DotRadiusBezier +\n            \" -\" +\n            DotRadius +\n            \" \" +\n            DotRadius +\n            \" -\" +\n            DotRadiusBezier +\n            \" \" +\n            DotRadius +\n            \" 0 c\"\n        );\n        stream.push(\"f\");\n        stream.push(\"Q\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      },\n      YesPushDown: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var stream = [];\n        var DotRadius =\n          AcroFormAppearance.internal.getWidth(formObject) <=\n          AcroFormAppearance.internal.getHeight(formObject)\n            ? AcroFormAppearance.internal.getWidth(formObject) / 4\n            : AcroFormAppearance.internal.getHeight(formObject) / 4;\n        // The Borderpadding...\n        DotRadius = Number((DotRadius * 0.9).toFixed(5));\n        // Save results for later use; no need to waste\n        // processor ticks on doing math\n        var k = Number((DotRadius * 2).toFixed(5));\n        var kc = Number((k * AcroFormAppearance.internal.Bezier_C).toFixed(5));\n        var dc = Number(\n          (DotRadius * AcroFormAppearance.internal.Bezier_C).toFixed(5)\n        );\n\n        stream.push(\"0.749023 g\");\n        stream.push(\"q\");\n        stream.push(\n          \"1 0 0 1 \" +\n            f5(AcroFormAppearance.internal.getWidth(formObject) / 2) +\n            \" \" +\n            f5(AcroFormAppearance.internal.getHeight(formObject) / 2) +\n            \" cm\"\n        );\n        stream.push(k + \" 0 m\");\n        stream.push(k + \" \" + kc + \" \" + kc + \" \" + k + \" 0 \" + k + \" c\");\n        stream.push(\n          \"-\" + kc + \" \" + k + \" -\" + k + \" \" + kc + \" -\" + k + \" 0 c\"\n        );\n        stream.push(\n          \"-\" + k + \" -\" + kc + \" -\" + kc + \" -\" + k + \" 0 -\" + k + \" c\"\n        );\n        stream.push(kc + \" -\" + k + \" \" + k + \" -\" + kc + \" \" + k + \" 0 c\");\n        stream.push(\"f\");\n        stream.push(\"Q\");\n        stream.push(\"0 g\");\n        stream.push(\"q\");\n        stream.push(\n          \"1 0 0 1 \" +\n            f5(AcroFormAppearance.internal.getWidth(formObject) / 2) +\n            \" \" +\n            f5(AcroFormAppearance.internal.getHeight(formObject) / 2) +\n            \" cm\"\n        );\n        stream.push(DotRadius + \" 0 m\");\n        stream.push(\n          \"\" +\n            DotRadius +\n            \" \" +\n            dc +\n            \" \" +\n            dc +\n            \" \" +\n            DotRadius +\n            \" 0 \" +\n            DotRadius +\n            \" c\"\n        );\n        stream.push(\n          \"-\" +\n            dc +\n            \" \" +\n            DotRadius +\n            \" -\" +\n            DotRadius +\n            \" \" +\n            dc +\n            \" -\" +\n            DotRadius +\n            \" 0 c\"\n        );\n        stream.push(\n          \"-\" +\n            DotRadius +\n            \" -\" +\n            dc +\n            \" -\" +\n            dc +\n            \" -\" +\n            DotRadius +\n            \" 0 -\" +\n            DotRadius +\n            \" c\"\n        );\n        stream.push(\n          dc +\n            \" -\" +\n            DotRadius +\n            \" \" +\n            DotRadius +\n            \" -\" +\n            dc +\n            \" \" +\n            DotRadius +\n            \" 0 c\"\n        );\n        stream.push(\"f\");\n        stream.push(\"Q\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      },\n      OffPushDown: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var stream = [];\n        var DotRadius =\n          AcroFormAppearance.internal.getWidth(formObject) <=\n          AcroFormAppearance.internal.getHeight(formObject)\n            ? AcroFormAppearance.internal.getWidth(formObject) / 4\n            : AcroFormAppearance.internal.getHeight(formObject) / 4;\n        // The Borderpadding...\n        DotRadius = Number((DotRadius * 0.9).toFixed(5));\n        // Save results for later use; no need to waste\n        // processor ticks on doing math\n        var k = Number((DotRadius * 2).toFixed(5));\n        var kc = Number((k * AcroFormAppearance.internal.Bezier_C).toFixed(5));\n\n        stream.push(\"0.749023 g\");\n        stream.push(\"q\");\n        stream.push(\n          \"1 0 0 1 \" +\n            f5(AcroFormAppearance.internal.getWidth(formObject) / 2) +\n            \" \" +\n            f5(AcroFormAppearance.internal.getHeight(formObject) / 2) +\n            \" cm\"\n        );\n        stream.push(k + \" 0 m\");\n        stream.push(k + \" \" + kc + \" \" + kc + \" \" + k + \" 0 \" + k + \" c\");\n        stream.push(\n          \"-\" + kc + \" \" + k + \" -\" + k + \" \" + kc + \" -\" + k + \" 0 c\"\n        );\n        stream.push(\n          \"-\" + k + \" -\" + kc + \" -\" + kc + \" -\" + k + \" 0 -\" + k + \" c\"\n        );\n        stream.push(kc + \" -\" + k + \" \" + k + \" -\" + kc + \" \" + k + \" 0 c\");\n        stream.push(\"f\");\n        stream.push(\"Q\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      }\n    },\n\n    Cross: {\n      /**\n       * Creates the Actual AppearanceDictionary-References\n       *\n       * @param {string} name\n       * @returns {Object}\n       * @ignore\n       */\n      createAppearanceStream: function(name) {\n        var appearanceStreamContent = {\n          D: {\n            Off: AcroFormAppearance.RadioButton.Cross.OffPushDown\n          },\n          N: {}\n        };\n        appearanceStreamContent.N[name] =\n          AcroFormAppearance.RadioButton.Cross.YesNormal;\n        appearanceStreamContent.D[name] =\n          AcroFormAppearance.RadioButton.Cross.YesPushDown;\n        return appearanceStreamContent;\n      },\n      getCA: function() {\n        return \"8\";\n      },\n\n      YesNormal: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var stream = [];\n        var cross = AcroFormAppearance.internal.calculateCross(formObject);\n        stream.push(\"q\");\n        stream.push(\n          \"1 1 \" +\n            f2(AcroFormAppearance.internal.getWidth(formObject) - 2) +\n            \" \" +\n            f2(AcroFormAppearance.internal.getHeight(formObject) - 2) +\n            \" re\"\n        );\n        stream.push(\"W\");\n        stream.push(\"n\");\n        stream.push(f2(cross.x1.x) + \" \" + f2(cross.x1.y) + \" m\");\n        stream.push(f2(cross.x2.x) + \" \" + f2(cross.x2.y) + \" l\");\n        stream.push(f2(cross.x4.x) + \" \" + f2(cross.x4.y) + \" m\");\n        stream.push(f2(cross.x3.x) + \" \" + f2(cross.x3.y) + \" l\");\n        stream.push(\"s\");\n        stream.push(\"Q\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      },\n      YesPushDown: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var cross = AcroFormAppearance.internal.calculateCross(formObject);\n        var stream = [];\n        stream.push(\"0.749023 g\");\n        stream.push(\n          \"0 0 \" +\n            f2(AcroFormAppearance.internal.getWidth(formObject)) +\n            \" \" +\n            f2(AcroFormAppearance.internal.getHeight(formObject)) +\n            \" re\"\n        );\n        stream.push(\"f\");\n        stream.push(\"q\");\n        stream.push(\n          \"1 1 \" +\n            f2(AcroFormAppearance.internal.getWidth(formObject) - 2) +\n            \" \" +\n            f2(AcroFormAppearance.internal.getHeight(formObject) - 2) +\n            \" re\"\n        );\n        stream.push(\"W\");\n        stream.push(\"n\");\n        stream.push(f2(cross.x1.x) + \" \" + f2(cross.x1.y) + \" m\");\n        stream.push(f2(cross.x2.x) + \" \" + f2(cross.x2.y) + \" l\");\n        stream.push(f2(cross.x4.x) + \" \" + f2(cross.x4.y) + \" m\");\n        stream.push(f2(cross.x3.x) + \" \" + f2(cross.x3.y) + \" l\");\n        stream.push(\"s\");\n        stream.push(\"Q\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      },\n      OffPushDown: function(formObject) {\n        var xobj = createFormXObject(formObject);\n        xobj.scope = formObject.scope;\n        var stream = [];\n        stream.push(\"0.749023 g\");\n        stream.push(\n          \"0 0 \" +\n            f2(AcroFormAppearance.internal.getWidth(formObject)) +\n            \" \" +\n            f2(AcroFormAppearance.internal.getHeight(formObject)) +\n            \" re\"\n        );\n        stream.push(\"f\");\n        xobj.stream = stream.join(\"\\n\");\n        return xobj;\n      }\n    }\n  },\n\n  /**\n   * Returns the standard Appearance\n   *\n   * @returns {AcroFormXObject}\n   */\n  createDefaultAppearanceStream: function(formObject) {\n    // Set Helvetica to Standard Font (size: auto)\n    // Color: Black\n    var fontKey = formObject.scope.internal.getFont(\n      formObject.fontName,\n      formObject.fontStyle\n    ).id;\n    var encodedColor = formObject.scope.__private__.encodeColorString(\n      formObject.color\n    );\n    var fontSize = formObject.fontSize;\n    var result = \"/\" + fontKey + \" \" + fontSize + \" Tf \" + encodedColor;\n    return result;\n  }\n};\n\nAcroFormAppearance.internal = {\n  Bezier_C: 0.551915024494,\n\n  calculateCross: function(formObject) {\n    var width = AcroFormAppearance.internal.getWidth(formObject);\n    var height = AcroFormAppearance.internal.getHeight(formObject);\n    var a = Math.min(width, height);\n\n    var cross = {\n      x1: {\n        // upperLeft\n        x: (width - a) / 2,\n        y: (height - a) / 2 + a // height - borderPadding\n      },\n      x2: {\n        // lowerRight\n        x: (width - a) / 2 + a,\n        y: (height - a) / 2 // borderPadding\n      },\n      x3: {\n        // lowerLeft\n        x: (width - a) / 2,\n        y: (height - a) / 2 // borderPadding\n      },\n      x4: {\n        // upperRight\n        x: (width - a) / 2 + a,\n        y: (height - a) / 2 + a // height - borderPadding\n      }\n    };\n\n    return cross;\n  }\n};\nAcroFormAppearance.internal.getWidth = function(formObject) {\n  var result = 0;\n  if (typeof formObject === \"object\") {\n    result = scale(formObject.Rect[2]);\n  }\n  return result;\n};\nAcroFormAppearance.internal.getHeight = function(formObject) {\n  var result = 0;\n  if (typeof formObject === \"object\") {\n    result = scale(formObject.Rect[3]);\n  }\n  return result;\n};\n\n// Public:\n\n/**\n * Add an AcroForm-Field to the jsPDF-instance\n *\n * @name addField\n * @function\n * @instance\n * @param {Object} fieldObject\n * @returns {jsPDF}\n */\nvar addField = (jsPDFAPI.addField = function(fieldObject) {\n  initializeAcroForm(this, fieldObject);\n\n  if (fieldObject instanceof AcroFormField) {\n    putForm(fieldObject);\n  } else {\n    throw new Error(\"Invalid argument passed to jsPDF.addField.\");\n  }\n  fieldObject.page = fieldObject.scope.internal.getCurrentPageInfo().pageNumber;\n  return this;\n});\n\njsPDFAPI.AcroFormChoiceField = AcroFormChoiceField;\njsPDFAPI.AcroFormListBox = AcroFormListBox;\njsPDFAPI.AcroFormComboBox = AcroFormComboBox;\njsPDFAPI.AcroFormEditBox = AcroFormEditBox;\njsPDFAPI.AcroFormButton = AcroFormButton;\njsPDFAPI.AcroFormPushButton = AcroFormPushButton;\njsPDFAPI.AcroFormRadioButton = AcroFormRadioButton;\njsPDFAPI.AcroFormCheckBox = AcroFormCheckBox;\njsPDFAPI.AcroFormTextField = AcroFormTextField;\njsPDFAPI.AcroFormPasswordField = AcroFormPasswordField;\njsPDFAPI.AcroFormAppearance = AcroFormAppearance;\n\njsPDFAPI.AcroForm = {\n  ChoiceField: AcroFormChoiceField,\n  ListBox: AcroFormListBox,\n  ComboBox: AcroFormComboBox,\n  EditBox: AcroFormEditBox,\n  Button: AcroFormButton,\n  PushButton: AcroFormPushButton,\n  RadioButton: AcroFormRadioButton,\n  CheckBox: AcroFormCheckBox,\n  TextField: AcroFormTextField,\n  PasswordField: AcroFormPasswordField,\n  Appearance: AcroFormAppearance\n};\n\njsPDF.AcroForm = {\n  ChoiceField: AcroFormChoiceField,\n  ListBox: AcroFormListBox,\n  ComboBox: AcroFormComboBox,\n  EditBox: AcroFormEditBox,\n  Button: AcroFormButton,\n  PushButton: AcroFormPushButton,\n  RadioButton: AcroFormRadioButton,\n  CheckBox: AcroFormCheckBox,\n  TextField: AcroFormTextField,\n  PasswordField: AcroFormPasswordField,\n  Appearance: AcroFormAppearance\n};\n\nvar AcroForm = jsPDF.AcroForm;\n\nexport {\n  AcroForm,\n  AcroFormChoiceField,\n  AcroFormListBox,\n  AcroFormComboBox,\n  AcroFormEditBox,\n  AcroFormButton,\n  AcroFormPushButton,\n  AcroFormRadioButton,\n  AcroFormCheckBox,\n  AcroFormTextField,\n  AcroFormPasswordField,\n  AcroFormAppearance\n};\n","function toLookup(arr) {\n  return arr.reduce(function(lookup, name, index) {\n    lookup[name] = index;\n\n    return lookup;\n  }, {});\n}\n\nvar fontStyleOrder = {\n  italic: [\"italic\", \"oblique\", \"normal\"],\n  oblique: [\"oblique\", \"italic\", \"normal\"],\n  normal: [\"normal\", \"oblique\", \"italic\"]\n};\n\nvar fontStretchOrder = [\n  \"ultra-condensed\",\n  \"extra-condensed\",\n  \"condensed\",\n  \"semi-condensed\",\n  \"normal\",\n  \"semi-expanded\",\n  \"expanded\",\n  \"extra-expanded\",\n  \"ultra-expanded\"\n];\n\n// For a given font-stretch value, we need to know where to start our search\n// from in the fontStretchOrder list.\nvar fontStretchLookup = toLookup(fontStretchOrder);\n\nvar fontWeights = [100, 200, 300, 400, 500, 600, 700, 800, 900];\nvar fontWeightsLookup = toLookup(fontWeights);\n\nfunction normalizeFontStretch(stretch) {\n  stretch = stretch || \"normal\";\n\n  return typeof fontStretchLookup[stretch] === \"number\" ? stretch : \"normal\";\n}\n\nfunction normalizeFontStyle(style) {\n  style = style || \"normal\";\n\n  return fontStyleOrder[style] ? style : \"normal\";\n}\n\nfunction normalizeFontWeight(weight) {\n  if (!weight) {\n    return 400;\n  }\n\n  if (typeof weight === \"number\") {\n    // Ignore values which aren't valid font-weights.\n    return weight >= 100 && weight <= 900 && weight % 100 === 0 ? weight : 400;\n  }\n\n  if (/^\\d00$/.test(weight)) {\n    return parseInt(weight);\n  }\n\n  switch (weight) {\n    case \"bold\":\n      return 700;\n\n    case \"normal\":\n    default:\n      return 400;\n  }\n}\n\nexport function normalizeFontFace(fontFace) {\n  var family = fontFace.family.replace(/\"|'/g, \"\").toLowerCase();\n\n  var style = normalizeFontStyle(fontFace.style);\n  var weight = normalizeFontWeight(fontFace.weight);\n  var stretch = normalizeFontStretch(fontFace.stretch);\n\n  return {\n    family: family,\n    style: style,\n    weight: weight,\n    stretch: stretch,\n    src: fontFace.src || [],\n\n    // The ref property maps this font-face to the font\n    // added by the .addFont() method.\n    ref: fontFace.ref || {\n      name: family,\n      style: [stretch, style, weight].join(\" \")\n    }\n  };\n}\n\n/**\n * Turns a list of font-faces into a map, for easier lookup when resolving\n * fonts.\n * @private\n */\nexport function buildFontFaceMap(fontFaces) {\n  var map = {};\n\n  for (var i = 0; i < fontFaces.length; ++i) {\n    var normalized = normalizeFontFace(fontFaces[i]);\n\n    var name = normalized.family;\n    var stretch = normalized.stretch;\n    var style = normalized.style;\n    var weight = normalized.weight;\n\n    map[name] = map[name] || {};\n\n    map[name][stretch] = map[name][stretch] || {};\n    map[name][stretch][style] = map[name][stretch][style] || {};\n    map[name][stretch][style][weight] = normalized;\n  }\n\n  return map;\n}\n\n/**\n * Searches a map of stretches, weights, etc. in the given direction and\n * then, if no match has been found, in the opposite directions.\n *\n * @param {Object.<string, any>} matchingSet A map of the various font variations.\n * @param {any[]} order The order of the different variations\n * @param {number} pivot The starting point of the search in the order list.\n * @param {number} dir The initial direction of the search (desc = -1, asc = 1)\n * @private\n */\n\nfunction searchFromPivot(matchingSet, order, pivot, dir) {\n  var i;\n\n  for (i = pivot; i >= 0 && i < order.length; i += dir) {\n    if (matchingSet[order[i]]) {\n      return matchingSet[order[i]];\n    }\n  }\n\n  for (i = pivot; i >= 0 && i < order.length; i -= dir) {\n    if (matchingSet[order[i]]) {\n      return matchingSet[order[i]];\n    }\n  }\n}\n\nfunction resolveFontStretch(stretch, matchingSet) {\n  if (matchingSet[stretch]) {\n    return matchingSet[stretch];\n  }\n\n  var pivot = fontStretchLookup[stretch];\n\n  // If the font-stretch value is normal or more condensed, we want to\n  // start with a descending search, otherwise we should do ascending.\n  var dir = pivot <= fontStretchLookup[\"normal\"] ? -1 : 1;\n  var match = searchFromPivot(matchingSet, fontStretchOrder, pivot, dir);\n\n  if (!match) {\n    // Since a font-family cannot exist without having at least one stretch value\n    // we should never reach this point.\n    throw new Error(\n      \"Could not find a matching font-stretch value for \" + stretch\n    );\n  }\n\n  return match;\n}\n\nfunction resolveFontStyle(fontStyle, matchingSet) {\n  if (matchingSet[fontStyle]) {\n    return matchingSet[fontStyle];\n  }\n\n  var ordering = fontStyleOrder[fontStyle];\n\n  for (var i = 0; i < ordering.length; ++i) {\n    if (matchingSet[ordering[i]]) {\n      return matchingSet[ordering[i]];\n    }\n  }\n\n  // Since a font-family cannot exist without having at least one style value\n  // we should never reach this point.\n  throw new Error(\"Could not find a matching font-style for \" + fontStyle);\n}\n\nfunction resolveFontWeight(weight, matchingSet) {\n  if (matchingSet[weight]) {\n    return matchingSet[weight];\n  }\n\n  if (weight === 400 && matchingSet[500]) {\n    return matchingSet[500];\n  }\n\n  if (weight === 500 && matchingSet[400]) {\n    return matchingSet[400];\n  }\n\n  var pivot = fontWeightsLookup[weight];\n\n  // If the font-stretch value is normal or more condensed, we want to\n  // start with a descending search, otherwise we should do ascending.\n  var dir = weight < 400 ? -1 : 1;\n  var match = searchFromPivot(matchingSet, fontWeights, pivot, dir);\n\n  if (!match) {\n    // Since a font-family cannot exist without having at least one stretch value\n    // we should never reach this point.\n    throw new Error(\n      \"Could not find a matching font-weight for value \" + weight\n    );\n  }\n\n  return match;\n}\n\nvar defaultGenericFontFamilies = {\n  \"sans-serif\": \"helvetica\",\n  fixed: \"courier\",\n  monospace: \"courier\",\n  terminal: \"courier\",\n  cursive: \"times\",\n  fantasy: \"times\",\n  serif: \"times\"\n};\n\nvar systemFonts = {\n  caption: \"times\",\n  icon: \"times\",\n  menu: \"times\",\n  \"message-box\": \"times\",\n  \"small-caption\": \"times\",\n  \"status-bar\": \"times\"\n};\n\nfunction ruleToString(rule) {\n  return [rule.stretch, rule.style, rule.weight, rule.family].join(\" \");\n}\n\nexport function resolveFontFace(fontFaceMap, rules, opts) {\n  opts = opts || {};\n\n  var defaultFontFamily = opts.defaultFontFamily || \"times\";\n  var genericFontFamilies = Object.assign(\n    {},\n    defaultGenericFontFamilies,\n    opts.genericFontFamilies || {}\n  );\n\n  var rule = null;\n  var matches = null;\n\n  for (var i = 0; i < rules.length; ++i) {\n    rule = normalizeFontFace(rules[i]);\n\n    if (genericFontFamilies[rule.family]) {\n      rule.family = genericFontFamilies[rule.family];\n    }\n\n    if (fontFaceMap.hasOwnProperty(rule.family)) {\n      matches = fontFaceMap[rule.family];\n\n      break;\n    }\n  }\n\n  // Always fallback to a known font family.\n  matches = matches || fontFaceMap[defaultFontFamily];\n\n  if (!matches) {\n    // At this point we should definitiely have a font family, but if we\n    // don't there is something wrong with our configuration\n    throw new Error(\n      \"Could not find a font-family for the rule '\" +\n        ruleToString(rule) +\n        \"' and default family '\" +\n        defaultFontFamily +\n        \"'.\"\n    );\n  }\n\n  matches = resolveFontStretch(rule.stretch, matches);\n  matches = resolveFontStyle(rule.style, matches);\n  matches = resolveFontWeight(rule.weight, matches);\n\n  if (!matches) {\n    // We should've fount\n    throw new Error(\n      \"Failed to resolve a font for the rule '\" + ruleToString(rule) + \"'.\"\n    );\n  }\n\n  return matches;\n}\n\n/**\n * Builds a style id for use with the addFont() method.\n * @param {FontFace} font\n * @private\n */\nexport function toStyleName(font) {\n  return [font.weight, font.style, font.stretch].join(\" \");\n}\n\nfunction eatWhiteSpace(input) {\n  return input.trimLeft();\n}\n\nfunction parseQuotedFontFamily(input, quote) {\n  var index = 0;\n\n  while (index < input.length) {\n    var current = input.charAt(index);\n\n    if (current === quote) {\n      return [input.substring(0, index), input.substring(index + 1)];\n    }\n\n    index += 1;\n  }\n\n  // Unexpected end of input\n  return null;\n}\n\nfunction parseNonQuotedFontFamily(input) {\n  // It implements part of the identifier parser here: https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n  //\n  // NOTE: This parser pretty much ignores escaped identifiers and that there is a thing called unicode.\n  //\n  // Breakdown of regexp:\n  // -[a-z_]     - when identifier starts with a hyphen, you're not allowed to have another hyphen or a digit\n  // [a-z_]      - allow a-z and underscore at beginning of input\n  // [a-z0-9_-]* - after that, anything goes\n  var match = input.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);\n\n  // non quoted value contains illegal characters\n  if (match === null) {\n    return null;\n  }\n\n  return [match[0], input.substring(match[0].length)];\n}\n\nvar defaultFont = [\"times\"];\n\nexport function parseFontFamily(input) {\n  var result = [];\n  var ch, parsed;\n  var remaining = input.trim();\n\n  if (remaining === \"\") {\n    return defaultFont;\n  }\n\n  if (remaining in systemFonts) {\n    return [systemFonts[remaining]];\n  }\n\n  while (remaining !== \"\") {\n    parsed = null;\n    remaining = eatWhiteSpace(remaining);\n    ch = remaining.charAt(0);\n\n    switch (ch) {\n      case '\"':\n      case \"'\":\n        parsed = parseQuotedFontFamily(remaining.substring(1), ch);\n        break;\n\n      default:\n        parsed = parseNonQuotedFontFamily(remaining);\n        break;\n    }\n\n    if (parsed === null) {\n      return defaultFont;\n    }\n\n    result.push(parsed[0]);\n\n    remaining = eatWhiteSpace(parsed[1]);\n\n    // We expect end of input or a comma separator here\n    if (remaining !== \"\" && remaining.charAt(0) !== \",\") {\n      return defaultFont;\n    }\n\n    remaining = remaining.replace(/^,/, \"\");\n  }\n\n  return result;\n}\n","/** @license\n * jsPDF addImage plugin\n * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/\n *               2013 Chris Dowling, https://github.com/gingerchris\n *               2013 Trinh Ho, https://github.com/ineedfat\n *               2013 Edwin Alejandro Perez, https://github.com/eaparango\n *               2013 Norah Smith, https://github.com/burnburnrocket\n *               2014 Diego Casorran, https://github.com/diegocr\n *               2014 James Robb, https://github.com/jamesbrobb\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/**\n * @name addImage\n * @module\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { atob, btoa } from \"../libs/AtobBtoa.js\";\n\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var namespace = \"addImage_\";\n  jsPDFAPI.__addimage__ = {};\n\n  var UNKNOWN = \"UNKNOWN\";\n\n  // Heuristic selection of a good batch for large array .apply. Not limiting make the call overflow.\n  // With too small batch iteration will be slow as more calls are made,\n  // higher values cause larger and slower garbage collection.\n  var ARRAY_APPLY_BATCH = 8192;\n\n  var imageFileTypeHeaders = {\n    PNG: [[0x89, 0x50, 0x4e, 0x47]],\n    TIFF: [\n      [0x4d, 0x4d, 0x00, 0x2a], //Motorola\n      [0x49, 0x49, 0x2a, 0x00] //Intel\n    ],\n    JPEG: [\n      [\n        0xff,\n        0xd8,\n        0xff,\n        0xe0,\n        undefined,\n        undefined,\n        0x4a,\n        0x46,\n        0x49,\n        0x46,\n        0x00\n      ], //JFIF\n      [\n        0xff,\n        0xd8,\n        0xff,\n        0xe1,\n        undefined,\n        undefined,\n        0x45,\n        0x78,\n        0x69,\n        0x66,\n        0x00,\n        0x00\n      ], //Exif\n      [0xff, 0xd8, 0xff, 0xdb], //JPEG RAW\n      [0xff, 0xd8, 0xff, 0xee] //EXIF RAW\n    ],\n    JPEG2000: [[0x00, 0x00, 0x00, 0x0c, 0x6a, 0x50, 0x20, 0x20]],\n    GIF87a: [[0x47, 0x49, 0x46, 0x38, 0x37, 0x61]],\n    GIF89a: [[0x47, 0x49, 0x46, 0x38, 0x39, 0x61]],\n    WEBP: [\n      [\n        0x52,\n        0x49,\n        0x46,\n        0x46,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        0x57,\n        0x45,\n        0x42,\n        0x50\n      ]\n    ],\n    BMP: [\n      [0x42, 0x4d], //BM - Windows 3.1x, 95, NT, ... etc.\n      [0x42, 0x41], //BA - OS/2 struct bitmap array\n      [0x43, 0x49], //CI - OS/2 struct color icon\n      [0x43, 0x50], //CP - OS/2 const color pointer\n      [0x49, 0x43], //IC - OS/2 struct icon\n      [0x50, 0x54] //PT - OS/2 pointer\n    ]\n  };\n\n  /**\n   * Recognize filetype of Image by magic-bytes\n   *\n   * https://en.wikipedia.org/wiki/List_of_file_signatures\n   *\n   * @name getImageFileTypeByImageData\n   * @public\n   * @function\n   * @param {string|arraybuffer} imageData imageData as binary String or arraybuffer\n   * @param {string} format format of file if filetype-recognition fails, e.g. 'JPEG'\n   *\n   * @returns {string} filetype of Image\n   */\n  var getImageFileTypeByImageData = (jsPDFAPI.__addimage__.getImageFileTypeByImageData = function(\n    imageData,\n    fallbackFormat\n  ) {\n    fallbackFormat = fallbackFormat || UNKNOWN;\n    var i;\n    var j;\n    var result = UNKNOWN;\n    var headerSchemata;\n    var compareResult;\n    var fileType;\n\n    if (\n      fallbackFormat === \"RGBA\" ||\n      (imageData.data !== undefined &&\n        imageData.data instanceof Uint8ClampedArray &&\n        \"height\" in imageData &&\n        \"width\" in imageData)\n    ) {\n      return \"RGBA\";\n    }\n\n    if (isArrayBufferView(imageData)) {\n      for (fileType in imageFileTypeHeaders) {\n        headerSchemata = imageFileTypeHeaders[fileType];\n        for (i = 0; i < headerSchemata.length; i += 1) {\n          compareResult = true;\n          for (j = 0; j < headerSchemata[i].length; j += 1) {\n            if (headerSchemata[i][j] === undefined) {\n              continue;\n            }\n            if (headerSchemata[i][j] !== imageData[j]) {\n              compareResult = false;\n              break;\n            }\n          }\n          if (compareResult === true) {\n            result = fileType;\n            break;\n          }\n        }\n      }\n    } else {\n      for (fileType in imageFileTypeHeaders) {\n        headerSchemata = imageFileTypeHeaders[fileType];\n        for (i = 0; i < headerSchemata.length; i += 1) {\n          compareResult = true;\n          for (j = 0; j < headerSchemata[i].length; j += 1) {\n            if (headerSchemata[i][j] === undefined) {\n              continue;\n            }\n            if (headerSchemata[i][j] !== imageData.charCodeAt(j)) {\n              compareResult = false;\n              break;\n            }\n          }\n          if (compareResult === true) {\n            result = fileType;\n            break;\n          }\n        }\n      }\n    }\n\n    if (result === UNKNOWN && fallbackFormat !== UNKNOWN) {\n      result = fallbackFormat;\n    }\n    return result;\n  });\n\n  // Image functionality ported from pdf.js\n  var putImage = function(image) {\n    var out = this.internal.write;\n    var putStream = this.internal.putStream;\n    var getFilters = this.internal.getFilters;\n\n    var filter = getFilters();\n    while (filter.indexOf(\"FlateEncode\") !== -1) {\n      filter.splice(filter.indexOf(\"FlateEncode\"), 1);\n    }\n\n    image.objectId = this.internal.newObject();\n\n    var additionalKeyValues = [];\n    additionalKeyValues.push({ key: \"Type\", value: \"/XObject\" });\n    additionalKeyValues.push({ key: \"Subtype\", value: \"/Image\" });\n    additionalKeyValues.push({ key: \"Width\", value: image.width });\n    additionalKeyValues.push({ key: \"Height\", value: image.height });\n\n    if (image.colorSpace === color_spaces.INDEXED) {\n      additionalKeyValues.push({\n        key: \"ColorSpace\",\n        value:\n          \"[/Indexed /DeviceRGB \" +\n          // if an indexed png defines more than one colour with transparency, we've created a sMask\n          (image.palette.length / 3 - 1) +\n          \" \" +\n          (\"sMask\" in image && typeof image.sMask !== \"undefined\"\n            ? image.objectId + 2\n            : image.objectId + 1) +\n          \" 0 R]\"\n      });\n    } else {\n      additionalKeyValues.push({\n        key: \"ColorSpace\",\n        value: \"/\" + image.colorSpace\n      });\n      if (image.colorSpace === color_spaces.DEVICE_CMYK) {\n        additionalKeyValues.push({ key: \"Decode\", value: \"[1 0 1 0 1 0 1 0]\" });\n      }\n    }\n    additionalKeyValues.push({\n      key: \"BitsPerComponent\",\n      value: image.bitsPerComponent\n    });\n    if (\n      \"decodeParameters\" in image &&\n      typeof image.decodeParameters !== \"undefined\"\n    ) {\n      additionalKeyValues.push({\n        key: \"DecodeParms\",\n        value: \"<<\" + image.decodeParameters + \">>\"\n      });\n    }\n    if (\"transparency\" in image && Array.isArray(image.transparency)) {\n      var transparency = \"\",\n        i = 0,\n        len = image.transparency.length;\n      for (; i < len; i++)\n        transparency +=\n          image.transparency[i] + \" \" + image.transparency[i] + \" \";\n\n      additionalKeyValues.push({\n        key: \"Mask\",\n        value: \"[\" + transparency + \"]\"\n      });\n    }\n    if (typeof image.sMask !== \"undefined\") {\n      additionalKeyValues.push({\n        key: \"SMask\",\n        value: image.objectId + 1 + \" 0 R\"\n      });\n    }\n\n    var alreadyAppliedFilters =\n      typeof image.filter !== \"undefined\" ? [\"/\" + image.filter] : undefined;\n\n    putStream({\n      data: image.data,\n      additionalKeyValues: additionalKeyValues,\n      alreadyAppliedFilters: alreadyAppliedFilters,\n      objectId: image.objectId\n    });\n\n    out(\"endobj\");\n\n    // Soft mask\n    if (\"sMask\" in image && typeof image.sMask !== \"undefined\") {\n      var decodeParameters =\n        \"/Predictor \" +\n        image.predictor +\n        \" /Colors 1 /BitsPerComponent \" +\n        image.bitsPerComponent +\n        \" /Columns \" +\n        image.width;\n      var sMask = {\n        width: image.width,\n        height: image.height,\n        colorSpace: \"DeviceGray\",\n        bitsPerComponent: image.bitsPerComponent,\n        decodeParameters: decodeParameters,\n        data: image.sMask\n      };\n      if (\"filter\" in image) {\n        sMask.filter = image.filter;\n      }\n      putImage.call(this, sMask);\n    }\n\n    //Palette\n    if (image.colorSpace === color_spaces.INDEXED) {\n      var objId = this.internal.newObject();\n      //out('<< /Filter / ' + img['f'] +' /Length ' + img['pal'].length + '>>');\n      //putStream(zlib.compress(img['pal']));\n      putStream({\n        data: arrayBufferToBinaryString(new Uint8Array(image.palette)),\n        objectId: objId\n      });\n      out(\"endobj\");\n    }\n  };\n  var putResourcesCallback = function() {\n    var images = this.internal.collections[namespace + \"images\"];\n    for (var i in images) {\n      putImage.call(this, images[i]);\n    }\n  };\n  var putXObjectsDictCallback = function() {\n    var images = this.internal.collections[namespace + \"images\"],\n      out = this.internal.write,\n      image;\n    for (var i in images) {\n      image = images[i];\n      out(\"/I\" + image.index, image.objectId, \"0\", \"R\");\n    }\n  };\n\n  var checkCompressValue = function(value) {\n    if (value && typeof value === \"string\") value = value.toUpperCase();\n    return value in jsPDFAPI.image_compression ? value : image_compression.NONE;\n  };\n\n  var initialize = function() {\n    if (!this.internal.collections[namespace + \"images\"]) {\n      this.internal.collections[namespace + \"images\"] = {};\n      this.internal.events.subscribe(\"putResources\", putResourcesCallback);\n      this.internal.events.subscribe(\"putXobjectDict\", putXObjectsDictCallback);\n    }\n  };\n\n  var getImages = function() {\n    var images = this.internal.collections[namespace + \"images\"];\n    initialize.call(this);\n    return images;\n  };\n  var getImageIndex = function() {\n    return Object.keys(this.internal.collections[namespace + \"images\"]).length;\n  };\n  var notDefined = function(value) {\n    return typeof value === \"undefined\" || value === null || value.length === 0;\n  };\n  var generateAliasFromImageData = function(imageData) {\n    if (typeof imageData === \"string\" || isArrayBufferView(imageData)) {\n      return sHashCode(imageData);\n    } else if (isArrayBufferView(imageData.data)) {\n      return sHashCode(imageData.data);\n    }\n\n    return null;\n  };\n\n  var isImageTypeSupported = function(type) {\n    return typeof jsPDFAPI[\"process\" + type.toUpperCase()] === \"function\";\n  };\n\n  var isDOMElement = function(object) {\n    return typeof object === \"object\" && object.nodeType === 1;\n  };\n\n  var getImageDataFromElement = function(element, format) {\n    //if element is an image which uses data url definition, just return the dataurl\n    if (element.nodeName === \"IMG\" && element.hasAttribute(\"src\")) {\n      var src = \"\" + element.getAttribute(\"src\");\n\n      //is base64 encoded dataUrl, directly process it\n      if (src.indexOf(\"data:image/\") === 0) {\n        return atob(\n          unescape(src)\n            .split(\"base64,\")\n            .pop()\n        );\n      }\n\n      //it is probably an url, try to load it\n      var tmpImageData = jsPDFAPI.loadFile(src, true);\n      if (tmpImageData !== undefined) {\n        return tmpImageData;\n      }\n    }\n\n    if (element.nodeName === \"CANVAS\") {\n      if (element.width === 0 || element.height === 0) {\n        throw new Error(\n          \"Given canvas must have data. Canvas width: \" +\n            element.width +\n            \", height: \" +\n            element.height\n        );\n      }\n      var mimeType;\n      switch (format) {\n        case \"PNG\":\n          mimeType = \"image/png\";\n          break;\n        case \"WEBP\":\n          mimeType = \"image/webp\";\n          break;\n        case \"JPEG\":\n        case \"JPG\":\n        default:\n          mimeType = \"image/jpeg\";\n          break;\n      }\n      return atob(\n        element\n          .toDataURL(mimeType, 1.0)\n          .split(\"base64,\")\n          .pop()\n      );\n    }\n  };\n\n  var checkImagesForAlias = function(alias) {\n    var images = this.internal.collections[namespace + \"images\"];\n    if (images) {\n      for (var e in images) {\n        if (alias === images[e].alias) {\n          return images[e];\n        }\n      }\n    }\n  };\n\n  var determineWidthAndHeight = function(width, height, image) {\n    if (!width && !height) {\n      width = -96;\n      height = -96;\n    }\n    if (width < 0) {\n      width = (-1 * image.width * 72) / width / this.internal.scaleFactor;\n    }\n    if (height < 0) {\n      height = (-1 * image.height * 72) / height / this.internal.scaleFactor;\n    }\n    if (width === 0) {\n      width = (height * image.width) / image.height;\n    }\n    if (height === 0) {\n      height = (width * image.height) / image.width;\n    }\n\n    return [width, height];\n  };\n\n  var writeImageToPDF = function(x, y, width, height, image, rotation) {\n    var dims = determineWidthAndHeight.call(this, width, height, image),\n      coord = this.internal.getCoordinateString,\n      vcoord = this.internal.getVerticalCoordinateString;\n\n    var images = getImages.call(this);\n\n    width = dims[0];\n    height = dims[1];\n    images[image.index] = image;\n\n    if (rotation) {\n      rotation *= Math.PI / 180;\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      //like in pdf Reference do it 4 digits instead of 2\n      var f4 = function(number) {\n        return number.toFixed(4);\n      };\n      var rotationTransformationMatrix = [\n        f4(c),\n        f4(s),\n        f4(s * -1),\n        f4(c),\n        0,\n        0,\n        \"cm\"\n      ];\n    }\n    this.internal.write(\"q\"); //Save graphics state\n    if (rotation) {\n      this.internal.write(\n        [1, \"0\", \"0\", 1, coord(x), vcoord(y + height), \"cm\"].join(\" \")\n      ); //Translate\n      this.internal.write(rotationTransformationMatrix.join(\" \")); //Rotate\n      this.internal.write(\n        [coord(width), \"0\", \"0\", coord(height), \"0\", \"0\", \"cm\"].join(\" \")\n      ); //Scale\n    } else {\n      this.internal.write(\n        [\n          coord(width),\n          \"0\",\n          \"0\",\n          coord(height),\n          coord(x),\n          vcoord(y + height),\n          \"cm\"\n        ].join(\" \")\n      ); //Translate and Scale\n    }\n\n    if (this.isAdvancedAPI()) {\n      // draw image bottom up when in \"advanced\" API mode\n      this.internal.write([1, 0, 0, -1, 0, 0, \"cm\"].join(\" \"));\n    }\n\n    this.internal.write(\"/I\" + image.index + \" Do\"); //Paint Image\n    this.internal.write(\"Q\"); //Restore graphics state\n  };\n\n  /**\n   * COLOR SPACES\n   */\n  var color_spaces = (jsPDFAPI.color_spaces = {\n    DEVICE_RGB: \"DeviceRGB\",\n    DEVICE_GRAY: \"DeviceGray\",\n    DEVICE_CMYK: \"DeviceCMYK\",\n    CAL_GREY: \"CalGray\",\n    CAL_RGB: \"CalRGB\",\n    LAB: \"Lab\",\n    ICC_BASED: \"ICCBased\",\n    INDEXED: \"Indexed\",\n    PATTERN: \"Pattern\",\n    SEPARATION: \"Separation\",\n    DEVICE_N: \"DeviceN\"\n  });\n\n  /**\n   * DECODE METHODS\n   */\n  jsPDFAPI.decode = {\n    DCT_DECODE: \"DCTDecode\",\n    FLATE_DECODE: \"FlateDecode\",\n    LZW_DECODE: \"LZWDecode\",\n    JPX_DECODE: \"JPXDecode\",\n    JBIG2_DECODE: \"JBIG2Decode\",\n    ASCII85_DECODE: \"ASCII85Decode\",\n    ASCII_HEX_DECODE: \"ASCIIHexDecode\",\n    RUN_LENGTH_DECODE: \"RunLengthDecode\",\n    CCITT_FAX_DECODE: \"CCITTFaxDecode\"\n  };\n\n  /**\n   * IMAGE COMPRESSION TYPES\n   */\n  var image_compression = (jsPDFAPI.image_compression = {\n    NONE: \"NONE\",\n    FAST: \"FAST\",\n    MEDIUM: \"MEDIUM\",\n    SLOW: \"SLOW\"\n  });\n\n  /**\n   * @name sHashCode\n   * @function\n   * @param {string} data\n   * @returns {string}\n   */\n  var sHashCode = (jsPDFAPI.__addimage__.sHashCode = function(data) {\n    var hash = 0,\n      i,\n      len;\n\n    if (typeof data === \"string\") {\n      len = data.length;\n      for (i = 0; i < len; i++) {\n        hash = (hash << 5) - hash + data.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n      }\n    } else if (isArrayBufferView(data)) {\n      len = data.byteLength / 2;\n      for (i = 0; i < len; i++) {\n        hash = (hash << 5) - hash + data[i];\n        hash |= 0; // Convert to 32bit integer\n      }\n    }\n    return hash;\n  });\n\n  /**\n   * Validates if given String is a valid Base64-String\n   *\n   * @name validateStringAsBase64\n   * @public\n   * @function\n   * @param {String} possible Base64-String\n   *\n   * @returns {boolean}\n   */\n  var validateStringAsBase64 = (jsPDFAPI.__addimage__.validateStringAsBase64 = function(\n    possibleBase64String\n  ) {\n    possibleBase64String = possibleBase64String || \"\";\n    possibleBase64String.toString().trim();\n\n    var result = true;\n\n    if (possibleBase64String.length === 0) {\n      result = false;\n    }\n\n    if (possibleBase64String.length % 4 !== 0) {\n      result = false;\n    }\n\n    if (\n      /^[A-Za-z0-9+/]+$/.test(\n        possibleBase64String.substr(0, possibleBase64String.length - 2)\n      ) === false\n    ) {\n      result = false;\n    }\n\n    if (\n      /^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(\n        possibleBase64String.substr(-2)\n      ) === false\n    ) {\n      result = false;\n    }\n    return result;\n  });\n\n  /**\n   * Strips out and returns info from a valid base64 data URI\n   *\n   * @name extractImageFromDataUrl\n   * @function\n   * @param {string} dataUrl a valid data URI of format 'data:[<MIME-type>][;base64],<data>'\n   * @returns {Array}an Array containing the following\n   * [0] the complete data URI\n   * [1] <MIME-type>\n   * [2] format - the second part of the mime-type i.e 'png' in 'image/png'\n   * [4] <data>\n   */\n  var extractImageFromDataUrl = (jsPDFAPI.__addimage__.extractImageFromDataUrl = function(\n    dataUrl\n  ) {\n    dataUrl = dataUrl || \"\";\n    var dataUrlParts = dataUrl.split(\"base64,\");\n    var result = null;\n\n    if (dataUrlParts.length === 2) {\n      var extractedInfo = /^data:(\\w*\\/\\w*);*(charset=(?!charset=)[\\w=-]*)*;*$/.exec(\n        dataUrlParts[0]\n      );\n      if (Array.isArray(extractedInfo)) {\n        result = {\n          mimeType: extractedInfo[1],\n          charset: extractedInfo[2],\n          data: dataUrlParts[1]\n        };\n      }\n    }\n    return result;\n  });\n\n  /**\n   * Check to see if ArrayBuffer is supported\n   *\n   * @name supportsArrayBuffer\n   * @function\n   * @returns {boolean}\n   */\n  var supportsArrayBuffer = (jsPDFAPI.__addimage__.supportsArrayBuffer = function() {\n    return (\n      typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\"\n    );\n  });\n\n  /**\n   * Tests supplied object to determine if ArrayBuffer\n   *\n   * @name isArrayBuffer\n   * @function\n   * @param {Object} object an Object\n   *\n   * @returns {boolean}\n   */\n  jsPDFAPI.__addimage__.isArrayBuffer = function(object) {\n    return supportsArrayBuffer() && object instanceof ArrayBuffer;\n  };\n\n  /**\n   * Tests supplied object to determine if it implements the ArrayBufferView (TypedArray) interface\n   *\n   * @name isArrayBufferView\n   * @function\n   * @param {Object} object an Object\n   * @returns {boolean}\n   */\n  var isArrayBufferView = (jsPDFAPI.__addimage__.isArrayBufferView = function(\n    object\n  ) {\n    return (\n      supportsArrayBuffer() &&\n      typeof Uint32Array !== \"undefined\" &&\n      (object instanceof Int8Array ||\n        object instanceof Uint8Array ||\n        (typeof Uint8ClampedArray !== \"undefined\" &&\n          object instanceof Uint8ClampedArray) ||\n        object instanceof Int16Array ||\n        object instanceof Uint16Array ||\n        object instanceof Int32Array ||\n        object instanceof Uint32Array ||\n        object instanceof Float32Array ||\n        object instanceof Float64Array)\n    );\n  });\n\n  /**\n   * Convert Binary String to ArrayBuffer\n   *\n   * @name binaryStringToUint8Array\n   * @public\n   * @function\n   * @param {string} BinaryString with ImageData\n   * @returns {Uint8Array}\n   */\n  var binaryStringToUint8Array = (jsPDFAPI.__addimage__.binaryStringToUint8Array = function(\n    binary_string\n  ) {\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n  });\n\n  /**\n   * Convert the Buffer to a Binary String\n   *\n   * @name arrayBufferToBinaryString\n   * @public\n   * @function\n   * @param {ArrayBuffer|ArrayBufferView} ArrayBuffer buffer or bufferView with ImageData\n   *\n   * @returns {String}\n   */\n  var arrayBufferToBinaryString = (jsPDFAPI.__addimage__.arrayBufferToBinaryString = function(\n    buffer\n  ) {\n    var out = \"\";\n    // There are calls with both ArrayBuffer and already converted Uint8Array or other BufferView.\n    // Do not copy the array if input is already an array.\n    var buf = isArrayBufferView(buffer) ? buffer : new Uint8Array(buffer);\n    for (var i = 0; i < buf.length; i += ARRAY_APPLY_BATCH) {\n      // Limit the amount of characters being parsed to prevent overflow.\n      // Note that while TextDecoder would be faster, it does not have the same\n      // functionality as fromCharCode with any provided encodings as of 3/2021.\n      out += String.fromCharCode.apply(\n        null,\n        buf.subarray(i, i + ARRAY_APPLY_BATCH)\n      );\n    }\n    return out;\n  });\n\n  /**\n   * Possible parameter for addImage, an RGBA buffer with size.\n   *\n   * @typedef {Object} RGBAData\n   * @property {Uint8ClampedArray} data - Single dimensional array of RGBA values. For example from canvas getImageData.\n   * @property {number} width - Image width as the data does not carry this information in itself.\n   * @property {number} height - Image height as the data does not carry this information in itself.\n   */\n\n  /**\n   * Adds an Image to the PDF.\n   *\n   * @name addImage\n   * @public\n   * @function\n   * @param {string|HTMLImageElement|HTMLCanvasElement|Uint8Array|RGBAData} imageData imageData as base64 encoded DataUrl or Image-HTMLElement or Canvas-HTMLElement or object containing RGBA array (like output from canvas.getImageData).\n   * @param {string} format format of file if filetype-recognition fails or in case of a Canvas-Element needs to be specified (default for Canvas is JPEG), e.g. 'JPEG', 'PNG', 'WEBP'\n   * @param {number} x x Coordinate (in units declared at inception of PDF document) against left edge of the page\n   * @param {number} y y Coordinate (in units declared at inception of PDF document) against upper edge of the page\n   * @param {number} width width of the image (in units declared at inception of PDF document)\n   * @param {number} height height of the Image (in units declared at inception of PDF document)\n   * @param {string} alias alias of the image (if used multiple times)\n   * @param {string} compression compression of the generated JPEG, can have the values 'NONE', 'FAST', 'MEDIUM' and 'SLOW'\n   * @param {number} rotation rotation of the image in degrees (0-359)\n   *\n   * @returns jsPDF\n   */\n  jsPDFAPI.addImage = function() {\n    var imageData, format, x, y, w, h, alias, compression, rotation;\n\n    imageData = arguments[0];\n    if (typeof arguments[1] === \"number\") {\n      format = UNKNOWN;\n      x = arguments[1];\n      y = arguments[2];\n      w = arguments[3];\n      h = arguments[4];\n      alias = arguments[5];\n      compression = arguments[6];\n      rotation = arguments[7];\n    } else {\n      format = arguments[1];\n      x = arguments[2];\n      y = arguments[3];\n      w = arguments[4];\n      h = arguments[5];\n      alias = arguments[6];\n      compression = arguments[7];\n      rotation = arguments[8];\n    }\n\n    if (\n      typeof imageData === \"object\" &&\n      !isDOMElement(imageData) &&\n      \"imageData\" in imageData\n    ) {\n      var options = imageData;\n\n      imageData = options.imageData;\n      format = options.format || format || UNKNOWN;\n      x = options.x || x || 0;\n      y = options.y || y || 0;\n      w = options.w || options.width || w;\n      h = options.h || options.height || h;\n      alias = options.alias || alias;\n      compression = options.compression || compression;\n      rotation = options.rotation || options.angle || rotation;\n    }\n\n    //If compression is not explicitly set, determine if we should use compression\n    var filter = this.internal.getFilters();\n    if (compression === undefined && filter.indexOf(\"FlateEncode\") !== -1) {\n      compression = \"SLOW\";\n    }\n\n    if (isNaN(x) || isNaN(y)) {\n      throw new Error(\"Invalid coordinates passed to jsPDF.addImage\");\n    }\n\n    initialize.call(this);\n\n    var image = processImageData.call(\n      this,\n      imageData,\n      format,\n      alias,\n      compression\n    );\n\n    writeImageToPDF.call(this, x, y, w, h, image, rotation);\n\n    return this;\n  };\n\n  var processImageData = function(imageData, format, alias, compression) {\n    var result, dataAsBinaryString;\n\n    if (\n      typeof imageData === \"string\" &&\n      getImageFileTypeByImageData(imageData) === UNKNOWN\n    ) {\n      imageData = unescape(imageData);\n      var tmpImageData = convertBase64ToBinaryString(imageData, false);\n\n      if (tmpImageData !== \"\") {\n        imageData = tmpImageData;\n      } else {\n        tmpImageData = jsPDFAPI.loadFile(imageData, true);\n        if (tmpImageData !== undefined) {\n          imageData = tmpImageData;\n        }\n      }\n    }\n\n    if (isDOMElement(imageData)) {\n      imageData = getImageDataFromElement(imageData, format);\n    }\n\n    format = getImageFileTypeByImageData(imageData, format);\n    if (!isImageTypeSupported(format)) {\n      throw new Error(\n        \"addImage does not support files of type '\" +\n          format +\n          \"', please ensure that a plugin for '\" +\n          format +\n          \"' support is added.\"\n      );\n    }\n\n    // now do the heavy lifting\n\n    if (notDefined(alias)) {\n      alias = generateAliasFromImageData(imageData);\n    }\n    result = checkImagesForAlias.call(this, alias);\n\n    if (!result) {\n      if (supportsArrayBuffer()) {\n        // no need to convert if imageData is already uint8array\n        if (!(imageData instanceof Uint8Array) && format !== \"RGBA\") {\n          dataAsBinaryString = imageData;\n          imageData = binaryStringToUint8Array(imageData);\n        }\n      }\n\n      result = this[\"process\" + format.toUpperCase()](\n        imageData,\n        getImageIndex.call(this),\n        alias,\n        checkCompressValue(compression),\n        dataAsBinaryString\n      );\n    }\n\n    if (!result) {\n      throw new Error(\"An unknown error occurred whilst processing the image.\");\n    }\n    return result;\n  };\n\n  /**\n   * @name convertBase64ToBinaryString\n   * @function\n   * @param {string} stringData\n   * @returns {string} binary string\n   */\n  var convertBase64ToBinaryString = (jsPDFAPI.__addimage__.convertBase64ToBinaryString = function(\n    stringData,\n    throwError\n  ) {\n    throwError = typeof throwError === \"boolean\" ? throwError : true;\n    var base64Info;\n    var imageData = \"\";\n    var rawData;\n\n    if (typeof stringData === \"string\") {\n      base64Info = extractImageFromDataUrl(stringData);\n      rawData = base64Info !== null ? base64Info.data : stringData;\n\n      try {\n        imageData = atob(rawData);\n      } catch (e) {\n        if (throwError) {\n          if (!validateStringAsBase64(rawData)) {\n            throw new Error(\n              \"Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString \"\n            );\n          } else {\n            throw new Error(\n              \"atob-Error in jsPDF.convertBase64ToBinaryString \" + e.message\n            );\n          }\n        }\n      }\n    }\n    return imageData;\n  });\n\n  /**\n   * @name getImageProperties\n   * @function\n   * @param {Object} imageData\n   * @returns {Object}\n   */\n  jsPDFAPI.getImageProperties = function(imageData) {\n    var image;\n    var tmpImageData = \"\";\n    var format;\n\n    if (isDOMElement(imageData)) {\n      imageData = getImageDataFromElement(imageData);\n    }\n\n    if (\n      typeof imageData === \"string\" &&\n      getImageFileTypeByImageData(imageData) === UNKNOWN\n    ) {\n      tmpImageData = convertBase64ToBinaryString(imageData, false);\n\n      if (tmpImageData === \"\") {\n        tmpImageData = jsPDFAPI.loadFile(imageData) || \"\";\n      }\n      imageData = tmpImageData;\n    }\n\n    format = getImageFileTypeByImageData(imageData);\n    if (!isImageTypeSupported(format)) {\n      throw new Error(\n        \"addImage does not support files of type '\" +\n          format +\n          \"', please ensure that a plugin for '\" +\n          format +\n          \"' support is added.\"\n      );\n    }\n\n    if (supportsArrayBuffer() && !(imageData instanceof Uint8Array)) {\n      imageData = binaryStringToUint8Array(imageData);\n    }\n\n    image = this[\"process\" + format.toUpperCase()](imageData);\n\n    if (!image) {\n      throw new Error(\"An unknown error occurred whilst processing the image\");\n    }\n\n    image.fileType = format;\n\n    return image;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\n/**\n * jsPDF Annotations PlugIn\n *\n * There are many types of annotations in a PDF document. Annotations are placed\n * on a page at a particular location. They are not 'attached' to an object.\n * <br />\n * This plugin current supports <br />\n * <li> Goto Page (set pageNumber and top in options)\n * <li> Goto Name (set name and top in options)\n * <li> Goto URL (set url in options)\n * <p>\n * \tThe destination magnification factor can also be specified when goto is a page number or a named destination. (see documentation below)\n *  (set magFactor in options).  XYZ is the default.\n * </p>\n * <p>\n *  Links, Text, Popup, and FreeText are supported.\n * </p>\n * <p>\n * Options In PDF spec Not Implemented Yet\n * <li> link border\n * <li> named target\n * <li> page coordinates\n * <li> destination page scaling and layout\n * <li> actions other than URL and GotoPage\n * <li> background / hover actions\n * </p>\n * @name annotations\n * @module\n */\n\n/*\n    Destination Magnification Factors\n    See PDF 1.3 Page 386 for meanings and options\n\n    [supported]\n\tXYZ (options; left top zoom)\n\tFit (no options)\n\tFitH (options: top)\n\tFitV (options: left)\n\n\t[not supported]\n\tFitR\n\tFitB\n\tFitBH\n\tFitBV\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var notEmpty = function(obj) {\n    if (typeof obj != \"undefined\") {\n      if (obj != \"\") {\n        return true;\n      }\n    }\n  };\n\n  jsPDF.API.events.push([\n    \"addPage\",\n    function(addPageData) {\n      var pageInfo = this.internal.getPageInfo(addPageData.pageNumber);\n      pageInfo.pageContext.annotations = [];\n    }\n  ]);\n\n  jsPDFAPI.events.push([\n    \"putPage\",\n    function(putPageData) {\n      var getHorizontalCoordinateString = this.internal.getCoordinateString;\n      var getVerticalCoordinateString = this.internal\n        .getVerticalCoordinateString;\n      var pageInfo = this.internal.getPageInfoByObjId(putPageData.objId);\n      var pageAnnos = putPageData.pageContext.annotations;\n\n      var anno, rect, line;\n      var found = false;\n      for (var a = 0; a < pageAnnos.length && !found; a++) {\n        anno = pageAnnos[a];\n        switch (anno.type) {\n          case \"link\":\n            if (\n              notEmpty(anno.options.url) ||\n              notEmpty(anno.options.pageNumber)\n            ) {\n              found = true;\n            }\n            break;\n          case \"reference\":\n          case \"text\":\n          case \"freetext\":\n            found = true;\n            break;\n        }\n      }\n      if (found == false) {\n        return;\n      }\n\n      this.internal.write(\"/Annots [\");\n      for (var i = 0; i < pageAnnos.length; i++) {\n        anno = pageAnnos[i];\n        var escape = this.internal.pdfEscape;\n        var encryptor = this.internal.getEncryptor(putPageData.objId);\n\n        switch (anno.type) {\n          case \"reference\":\n            // References to Widget Annotations (for AcroForm Fields)\n            this.internal.write(\" \" + anno.object.objId + \" 0 R \");\n            break;\n          case \"text\":\n            // Create a an object for both the text and the popup\n            var objText = this.internal.newAdditionalObject();\n            var objPopup = this.internal.newAdditionalObject();\n            var encryptorText = this.internal.getEncryptor(objText.objId);\n\n            var title = anno.title || \"Note\";\n            rect =\n              \"/Rect [\" +\n              getHorizontalCoordinateString(anno.bounds.x) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y + anno.bounds.h) +\n              \" \" +\n              getHorizontalCoordinateString(anno.bounds.x + anno.bounds.w) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y) +\n              \"] \";\n\n            line =\n              \"<</Type /Annot /Subtype /\" +\n              \"Text\" +\n              \" \" +\n              rect +\n              \"/Contents (\" +\n              escape(encryptorText(anno.contents)) +\n              \")\";\n            line += \" /Popup \" + objPopup.objId + \" 0 R\";\n            line += \" /P \" + pageInfo.objId + \" 0 R\";\n            line += \" /T (\" + escape(encryptorText(title)) + \") >>\";\n            objText.content = line;\n\n            var parent = objText.objId + \" 0 R\";\n            var popoff = 30;\n            rect =\n              \"/Rect [\" +\n              getHorizontalCoordinateString(anno.bounds.x + popoff) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y + anno.bounds.h) +\n              \" \" +\n              getHorizontalCoordinateString(\n                anno.bounds.x + anno.bounds.w + popoff\n              ) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y) +\n              \"] \";\n            line =\n              \"<</Type /Annot /Subtype /\" +\n              \"Popup\" +\n              \" \" +\n              rect +\n              \" /Parent \" +\n              parent;\n            if (anno.open) {\n              line += \" /Open true\";\n            }\n            line += \" >>\";\n            objPopup.content = line;\n\n            this.internal.write(objText.objId, \"0 R\", objPopup.objId, \"0 R\");\n\n            break;\n          case \"freetext\":\n            rect =\n              \"/Rect [\" +\n              getHorizontalCoordinateString(anno.bounds.x) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y) +\n              \" \" +\n              getHorizontalCoordinateString(anno.bounds.x + anno.bounds.w) +\n              \" \" +\n              getVerticalCoordinateString(anno.bounds.y + anno.bounds.h) +\n              \"] \";\n            var color = anno.color || \"#000000\";\n            line =\n              \"<</Type /Annot /Subtype /\" +\n              \"FreeText\" +\n              \" \" +\n              rect +\n              \"/Contents (\" +\n              escape(encryptor(anno.contents)) +\n              \")\";\n            line +=\n              \" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#\" +\n              color +\n              \")\";\n            line += \" /Border [0 0 0]\";\n            line += \" >>\";\n            this.internal.write(line);\n            break;\n          case \"link\":\n            if (anno.options.name) {\n              var loc = this.annotations._nameMap[anno.options.name];\n              anno.options.pageNumber = loc.page;\n              anno.options.top = loc.y;\n            } else {\n              if (!anno.options.top) {\n                anno.options.top = 0;\n              }\n            }\n\n            rect =\n              \"/Rect [\" +\n              anno.finalBounds.x +\n              \" \" +\n              anno.finalBounds.y +\n              \" \" +\n              anno.finalBounds.w +\n              \" \" +\n              anno.finalBounds.h +\n              \"] \";\n\n            line = \"\";\n            if (anno.options.url) {\n              line =\n                \"<</Type /Annot /Subtype /Link \" +\n                rect +\n                \"/Border [0 0 0] /A <</S /URI /URI (\" +\n                escape(encryptor(anno.options.url)) +\n                \") >>\";\n            } else if (anno.options.pageNumber) {\n              // first page is 0\n              var info = this.internal.getPageInfo(anno.options.pageNumber);\n              line =\n                \"<</Type /Annot /Subtype /Link \" +\n                rect +\n                \"/Border [0 0 0] /Dest [\" +\n                info.objId +\n                \" 0 R\";\n              anno.options.magFactor = anno.options.magFactor || \"XYZ\";\n              switch (anno.options.magFactor) {\n                case \"Fit\":\n                  line += \" /Fit]\";\n                  break;\n                case \"FitH\":\n                  line += \" /FitH \" + anno.options.top + \"]\";\n                  break;\n                case \"FitV\":\n                  anno.options.left = anno.options.left || 0;\n                  line += \" /FitV \" + anno.options.left + \"]\";\n                  break;\n                case \"XYZ\":\n                default:\n                  var top = getVerticalCoordinateString(anno.options.top);\n                  anno.options.left = anno.options.left || 0;\n                  // 0 or null zoom will not change zoom factor\n                  if (typeof anno.options.zoom === \"undefined\") {\n                    anno.options.zoom = 0;\n                  }\n                  line +=\n                    \" /XYZ \" +\n                    anno.options.left +\n                    \" \" +\n                    top +\n                    \" \" +\n                    anno.options.zoom +\n                    \"]\";\n                  break;\n              }\n            }\n\n            if (line != \"\") {\n              line += \" >>\";\n              this.internal.write(line);\n            }\n            break;\n        }\n      }\n      this.internal.write(\"]\");\n    }\n  ]);\n\n  /**\n   * @name createAnnotation\n   * @function\n   * @param {Object} options\n   */\n  jsPDFAPI.createAnnotation = function(options) {\n    var pageInfo = this.internal.getCurrentPageInfo();\n    switch (options.type) {\n      case \"link\":\n        this.link(\n          options.bounds.x,\n          options.bounds.y,\n          options.bounds.w,\n          options.bounds.h,\n          options\n        );\n        break;\n      case \"text\":\n      case \"freetext\":\n        pageInfo.pageContext.annotations.push(options);\n        break;\n    }\n  };\n\n  /**\n   * Create a link\n   *\n   * valid options\n   * <li> pageNumber or url [required]\n   * <p>If pageNumber is specified, top and zoom may also be specified</p>\n   * @name link\n   * @function\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   * @param {Object} options\n   */\n  jsPDFAPI.link = function(x, y, w, h, options) {\n    var pageInfo = this.internal.getCurrentPageInfo();\n    var getHorizontalCoordinateString = this.internal.getCoordinateString;\n    var getVerticalCoordinateString = this.internal.getVerticalCoordinateString;\n\n    pageInfo.pageContext.annotations.push({\n      finalBounds: {\n        x: getHorizontalCoordinateString(x),\n        y: getVerticalCoordinateString(y),\n        w: getHorizontalCoordinateString(x + w),\n        h: getVerticalCoordinateString(y + h)\n      },\n      options: options,\n      type: \"link\"\n    });\n  };\n\n  /**\n   * Currently only supports single line text.\n   * Returns the width of the text/link\n   *\n   * @name textWithLink\n   * @function\n   * @param {string} text\n   * @param {number} x\n   * @param {number} y\n   * @param {Object} options\n   * @returns {number} width the width of the text/link\n   */\n  jsPDFAPI.textWithLink = function(text, x, y, options) {\n    var totalLineWidth = this.getTextWidth(text);\n    var lineHeight = this.internal.getLineHeight() / this.internal.scaleFactor;\n    var linkHeight, linkWidth;\n\n    // Checking if maxWidth option is passed to determine lineWidth and number of lines for each line\n    if (options.maxWidth !== undefined) {\n      var { maxWidth } = options;\n      linkWidth = maxWidth;\n      var numOfLines = this.splitTextToSize(text, linkWidth).length;\n      linkHeight = Math.ceil(lineHeight * numOfLines);\n    } else {\n      linkWidth = totalLineWidth;\n      linkHeight = lineHeight;\n    }\n\n    this.text(text, x, y, options);\n\n    //TODO We really need the text baseline height to do this correctly.\n    // Or ability to draw text on top, bottom, center, or baseline.\n    y += lineHeight * 0.2;\n    //handle x position based on the align option\n    if (options.align === \"center\") {\n      x = x - totalLineWidth / 2; //since starting from center move the x position by half of text width\n    }\n    if (options.align === \"right\") {\n      x = x - totalLineWidth;\n    }\n    this.link(x, y - lineHeight, linkWidth, linkHeight, options);\n    return totalLineWidth;\n  };\n\n  //TODO move into external library\n  /**\n   * @name getTextWidth\n   * @function\n   * @param {string} text\n   * @returns {number} txtWidth\n   */\n  jsPDFAPI.getTextWidth = function(text) {\n    var fontSize = this.internal.getFontSize();\n    var txtWidth =\n      (this.getStringUnitWidth(text) * fontSize) / this.internal.scaleFactor;\n    return txtWidth;\n  };\n\n  return this;\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF arabic parser PlugIn\n *\n * @name arabic\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * Arabic shape substitutions: char code => (isolated, final, initial, medial).\n   * Arabic Substition A\n   */\n  var arabicSubstitionA = {\n    0x0621: [0xfe80], // ARABIC LETTER HAMZA\n    0x0622: [0xfe81, 0xfe82], // ARABIC LETTER ALEF WITH MADDA ABOVE\n    0x0623: [0xfe83, 0xfe84], // ARABIC LETTER ALEF WITH HAMZA ABOVE\n    0x0624: [0xfe85, 0xfe86], // ARABIC LETTER WAW WITH HAMZA ABOVE\n    0x0625: [0xfe87, 0xfe88], // ARABIC LETTER ALEF WITH HAMZA BELOW\n    0x0626: [0xfe89, 0xfe8a, 0xfe8b, 0xfe8c], // ARABIC LETTER YEH WITH HAMZA ABOVE\n    0x0627: [0xfe8d, 0xfe8e], // ARABIC LETTER ALEF\n    0x0628: [0xfe8f, 0xfe90, 0xfe91, 0xfe92], // ARABIC LETTER BEH\n    0x0629: [0xfe93, 0xfe94], // ARABIC LETTER TEH MARBUTA\n    0x062a: [0xfe95, 0xfe96, 0xfe97, 0xfe98], // ARABIC LETTER TEH\n    0x062b: [0xfe99, 0xfe9a, 0xfe9b, 0xfe9c], // ARABIC LETTER THEH\n    0x062c: [0xfe9d, 0xfe9e, 0xfe9f, 0xfea0], // ARABIC LETTER JEEM\n    0x062d: [0xfea1, 0xfea2, 0xfea3, 0xfea4], // ARABIC LETTER HAH\n    0x062e: [0xfea5, 0xfea6, 0xfea7, 0xfea8], // ARABIC LETTER KHAH\n    0x062f: [0xfea9, 0xfeaa], // ARABIC LETTER DAL\n    0x0630: [0xfeab, 0xfeac], // ARABIC LETTER THAL\n    0x0631: [0xfead, 0xfeae], // ARABIC LETTER REH\n    0x0632: [0xfeaf, 0xfeb0], // ARABIC LETTER ZAIN\n    0x0633: [0xfeb1, 0xfeb2, 0xfeb3, 0xfeb4], // ARABIC LETTER SEEN\n    0x0634: [0xfeb5, 0xfeb6, 0xfeb7, 0xfeb8], // ARABIC LETTER SHEEN\n    0x0635: [0xfeb9, 0xfeba, 0xfebb, 0xfebc], // ARABIC LETTER SAD\n    0x0636: [0xfebd, 0xfebe, 0xfebf, 0xfec0], // ARABIC LETTER DAD\n    0x0637: [0xfec1, 0xfec2, 0xfec3, 0xfec4], // ARABIC LETTER TAH\n    0x0638: [0xfec5, 0xfec6, 0xfec7, 0xfec8], // ARABIC LETTER ZAH\n    0x0639: [0xfec9, 0xfeca, 0xfecb, 0xfecc], // ARABIC LETTER AIN\n    0x063a: [0xfecd, 0xfece, 0xfecf, 0xfed0], // ARABIC LETTER GHAIN\n    0x0641: [0xfed1, 0xfed2, 0xfed3, 0xfed4], // ARABIC LETTER FEH\n    0x0642: [0xfed5, 0xfed6, 0xfed7, 0xfed8], // ARABIC LETTER QAF\n    0x0643: [0xfed9, 0xfeda, 0xfedb, 0xfedc], // ARABIC LETTER KAF\n    0x0644: [0xfedd, 0xfede, 0xfedf, 0xfee0], // ARABIC LETTER LAM\n    0x0645: [0xfee1, 0xfee2, 0xfee3, 0xfee4], // ARABIC LETTER MEEM\n    0x0646: [0xfee5, 0xfee6, 0xfee7, 0xfee8], // ARABIC LETTER NOON\n    0x0647: [0xfee9, 0xfeea, 0xfeeb, 0xfeec], // ARABIC LETTER HEH\n    0x0648: [0xfeed, 0xfeee], // ARABIC LETTER WAW\n    0x0649: [0xfeef, 0xfef0, 64488, 64489], // ARABIC LETTER ALEF MAKSURA\n    0x064a: [0xfef1, 0xfef2, 0xfef3, 0xfef4], // ARABIC LETTER YEH\n    0x0671: [0xfb50, 0xfb51], // ARABIC LETTER ALEF WASLA\n    0x0677: [0xfbdd], // ARABIC LETTER U WITH HAMZA ABOVE\n    0x0679: [0xfb66, 0xfb67, 0xfb68, 0xfb69], // ARABIC LETTER TTEH\n    0x067a: [0xfb5e, 0xfb5f, 0xfb60, 0xfb61], // ARABIC LETTER TTEHEH\n    0x067b: [0xfb52, 0xfb53, 0xfb54, 0xfb55], // ARABIC LETTER BEEH\n    0x067e: [0xfb56, 0xfb57, 0xfb58, 0xfb59], // ARABIC LETTER PEH\n    0x067f: [0xfb62, 0xfb63, 0xfb64, 0xfb65], // ARABIC LETTER TEHEH\n    0x0680: [0xfb5a, 0xfb5b, 0xfb5c, 0xfb5d], // ARABIC LETTER BEHEH\n    0x0683: [0xfb76, 0xfb77, 0xfb78, 0xfb79], // ARABIC LETTER NYEH\n    0x0684: [0xfb72, 0xfb73, 0xfb74, 0xfb75], // ARABIC LETTER DYEH\n    0x0686: [0xfb7a, 0xfb7b, 0xfb7c, 0xfb7d], // ARABIC LETTER TCHEH\n    0x0687: [0xfb7e, 0xfb7f, 0xfb80, 0xfb81], // ARABIC LETTER TCHEHEH\n    0x0688: [0xfb88, 0xfb89], // ARABIC LETTER DDAL\n    0x068c: [0xfb84, 0xfb85], // ARABIC LETTER DAHAL\n    0x068d: [0xfb82, 0xfb83], // ARABIC LETTER DDAHAL\n    0x068e: [0xfb86, 0xfb87], // ARABIC LETTER DUL\n    0x0691: [0xfb8c, 0xfb8d], // ARABIC LETTER RREH\n    0x0698: [0xfb8a, 0xfb8b], // ARABIC LETTER JEH\n    0x06a4: [0xfb6a, 0xfb6b, 0xfb6c, 0xfb6d], // ARABIC LETTER VEH\n    0x06a6: [0xfb6e, 0xfb6f, 0xfb70, 0xfb71], // ARABIC LETTER PEHEH\n    0x06a9: [0xfb8e, 0xfb8f, 0xfb90, 0xfb91], // ARABIC LETTER KEHEH\n    0x06ad: [0xfbd3, 0xfbd4, 0xfbd5, 0xfbd6], // ARABIC LETTER NG\n    0x06af: [0xfb92, 0xfb93, 0xfb94, 0xfb95], // ARABIC LETTER GAF\n    0x06b1: [0xfb9a, 0xfb9b, 0xfb9c, 0xfb9d], // ARABIC LETTER NGOEH\n    0x06b3: [0xfb96, 0xfb97, 0xfb98, 0xfb99], // ARABIC LETTER GUEH\n    0x06ba: [0xfb9e, 0xfb9f], // ARABIC LETTER NOON GHUNNA\n    0x06bb: [0xfba0, 0xfba1, 0xfba2, 0xfba3], // ARABIC LETTER RNOON\n    0x06be: [0xfbaa, 0xfbab, 0xfbac, 0xfbad], // ARABIC LETTER HEH DOACHASHMEE\n    0x06c0: [0xfba4, 0xfba5], // ARABIC LETTER HEH WITH YEH ABOVE\n    0x06c1: [0xfba6, 0xfba7, 0xfba8, 0xfba9], // ARABIC LETTER HEH GOAL\n    0x06c5: [0xfbe0, 0xfbe1], // ARABIC LETTER KIRGHIZ OE\n    0x06c6: [0xfbd9, 0xfbda], // ARABIC LETTER OE\n    0x06c7: [0xfbd7, 0xfbd8], // ARABIC LETTER U\n    0x06c8: [0xfbdb, 0xfbdc], // ARABIC LETTER YU\n    0x06c9: [0xfbe2, 0xfbe3], // ARABIC LETTER KIRGHIZ YU\n    0x06cb: [0xfbde, 0xfbdf], // ARABIC LETTER VE\n    0x06cc: [0xfbfc, 0xfbfd, 0xfbfe, 0xfbff], // ARABIC LETTER FARSI YEH\n    0x06d0: [0xfbe4, 0xfbe5, 0xfbe6, 0xfbe7], //ARABIC LETTER E\n    0x06d2: [0xfbae, 0xfbaf], // ARABIC LETTER YEH BARREE\n    0x06d3: [0xfbb0, 0xfbb1] // ARABIC LETTER YEH BARREE WITH HAMZA ABOVE\n  };\n\n  /*\n    var ligaturesSubstitutionA = {\n        0xFBEA: []// ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF ISOLATED FORM\n    };\n    */\n\n  var ligatures = {\n    0xfedf: {\n      0xfe82: 0xfef5, // ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE ISOLATED FORM\n      0xfe84: 0xfef7, // ARABIC LIGATURE LAM WITH ALEF WITH HAMZA ABOVE ISOLATED FORM\n      0xfe88: 0xfef9, // ARABIC LIGATURE LAM WITH ALEF WITH HAMZA BELOW ISOLATED FORM\n      0xfe8e: 0xfefb // ARABIC LIGATURE LAM WITH ALEF ISOLATED FORM\n    },\n    0xfee0: {\n      0xfe82: 0xfef6, // ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE FINAL FORM\n      0xfe84: 0xfef8, // ARABIC LIGATURE LAM WITH ALEF WITH HAMZA ABOVE FINAL FORM\n      0xfe88: 0xfefa, // ARABIC LIGATURE LAM WITH ALEF WITH HAMZA BELOW FINAL FORM\n      0xfe8e: 0xfefc // ARABIC LIGATURE LAM WITH ALEF FINAL FORM\n    },\n    0xfe8d: { 0xfedf: { 0xfee0: { 0xfeea: 0xfdf2 } } }, // ALLAH\n    0x0651: {\n      0x064c: 0xfc5e, // Shadda + Dammatan\n      0x064d: 0xfc5f, // Shadda + Kasratan\n      0x064e: 0xfc60, // Shadda + Fatha\n      0x064f: 0xfc61, // Shadda + Damma\n      0x0650: 0xfc62 // Shadda + Kasra\n    }\n  };\n\n  var arabic_diacritics = {\n    1612: 64606, // Shadda + Dammatan\n    1613: 64607, // Shadda + Kasratan\n    1614: 64608, // Shadda + Fatha\n    1615: 64609, // Shadda + Damma\n    1616: 64610 // Shadda + Kasra\n  };\n\n  var alfletter = [1570, 1571, 1573, 1575];\n\n  var noChangeInForm = -1;\n  var isolatedForm = 0;\n  var finalForm = 1;\n  var initialForm = 2;\n  var medialForm = 3;\n\n  jsPDFAPI.__arabicParser__ = {};\n\n  //private\n  var isInArabicSubstitutionA = (jsPDFAPI.__arabicParser__.isInArabicSubstitutionA = function(\n    letter\n  ) {\n    return typeof arabicSubstitionA[letter.charCodeAt(0)] !== \"undefined\";\n  });\n\n  var isArabicLetter = (jsPDFAPI.__arabicParser__.isArabicLetter = function(\n    letter\n  ) {\n    return (\n      typeof letter === \"string\" &&\n      /^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]+$/.test(\n        letter\n      )\n    );\n  });\n\n  var isArabicEndLetter = (jsPDFAPI.__arabicParser__.isArabicEndLetter = function(\n    letter\n  ) {\n    return (\n      isArabicLetter(letter) &&\n      isInArabicSubstitutionA(letter) &&\n      arabicSubstitionA[letter.charCodeAt(0)].length <= 2\n    );\n  });\n\n  var isArabicAlfLetter = (jsPDFAPI.__arabicParser__.isArabicAlfLetter = function(\n    letter\n  ) {\n    return (\n      isArabicLetter(letter) && alfletter.indexOf(letter.charCodeAt(0)) >= 0\n    );\n  });\n\n  jsPDFAPI.__arabicParser__.arabicLetterHasIsolatedForm = function(letter) {\n    return (\n      isArabicLetter(letter) &&\n      isInArabicSubstitutionA(letter) &&\n      arabicSubstitionA[letter.charCodeAt(0)].length >= 1\n    );\n  };\n\n  var arabicLetterHasFinalForm = (jsPDFAPI.__arabicParser__.arabicLetterHasFinalForm = function(\n    letter\n  ) {\n    return (\n      isArabicLetter(letter) &&\n      isInArabicSubstitutionA(letter) &&\n      arabicSubstitionA[letter.charCodeAt(0)].length >= 2\n    );\n  });\n\n  jsPDFAPI.__arabicParser__.arabicLetterHasInitialForm = function(letter) {\n    return (\n      isArabicLetter(letter) &&\n      isInArabicSubstitutionA(letter) &&\n      arabicSubstitionA[letter.charCodeAt(0)].length >= 3\n    );\n  };\n\n  var arabicLetterHasMedialForm = (jsPDFAPI.__arabicParser__.arabicLetterHasMedialForm = function(\n    letter\n  ) {\n    return (\n      isArabicLetter(letter) &&\n      isInArabicSubstitutionA(letter) &&\n      arabicSubstitionA[letter.charCodeAt(0)].length == 4\n    );\n  });\n\n  var resolveLigatures = (jsPDFAPI.__arabicParser__.resolveLigatures = function(\n    letters\n  ) {\n    var i = 0;\n    var tmpLigatures = ligatures;\n    var result = \"\";\n    var effectedLetters = 0;\n\n    for (i = 0; i < letters.length; i += 1) {\n      if (typeof tmpLigatures[letters.charCodeAt(i)] !== \"undefined\") {\n        effectedLetters++;\n        tmpLigatures = tmpLigatures[letters.charCodeAt(i)];\n\n        if (typeof tmpLigatures === \"number\") {\n          result += String.fromCharCode(tmpLigatures);\n          tmpLigatures = ligatures;\n          effectedLetters = 0;\n        }\n        if (i === letters.length - 1) {\n          tmpLigatures = ligatures;\n          result += letters.charAt(i - (effectedLetters - 1));\n          i = i - (effectedLetters - 1);\n          effectedLetters = 0;\n        }\n      } else {\n        tmpLigatures = ligatures;\n        result += letters.charAt(i - effectedLetters);\n        i = i - effectedLetters;\n        effectedLetters = 0;\n      }\n    }\n\n    return result;\n  });\n\n  jsPDFAPI.__arabicParser__.isArabicDiacritic = function(letter) {\n    return (\n      letter !== undefined &&\n      arabic_diacritics[letter.charCodeAt(0)] !== undefined\n    );\n  };\n\n  var getCorrectForm = (jsPDFAPI.__arabicParser__.getCorrectForm = function(\n    currentChar,\n    beforeChar,\n    nextChar\n  ) {\n    if (!isArabicLetter(currentChar)) {\n      return -1;\n    }\n\n    if (isInArabicSubstitutionA(currentChar) === false) {\n      return noChangeInForm;\n    }\n    if (\n      !arabicLetterHasFinalForm(currentChar) ||\n      (!isArabicLetter(beforeChar) && !isArabicLetter(nextChar)) ||\n      (!isArabicLetter(nextChar) && isArabicEndLetter(beforeChar)) ||\n      (isArabicEndLetter(currentChar) && !isArabicLetter(beforeChar)) ||\n      (isArabicEndLetter(currentChar) && isArabicAlfLetter(beforeChar)) ||\n      (isArabicEndLetter(currentChar) && isArabicEndLetter(beforeChar))\n    ) {\n      return isolatedForm;\n    }\n\n    if (\n      arabicLetterHasMedialForm(currentChar) &&\n      isArabicLetter(beforeChar) &&\n      !isArabicEndLetter(beforeChar) &&\n      isArabicLetter(nextChar) &&\n      arabicLetterHasFinalForm(nextChar)\n    ) {\n      return medialForm;\n    }\n\n    if (isArabicEndLetter(currentChar) || !isArabicLetter(nextChar)) {\n      return finalForm;\n    }\n    return initialForm;\n  });\n\n  /**\n   * @name processArabic\n   * @function\n   * @param {string} text\n   * @returns {string}\n   */\n  var parseArabic = function(text) {\n    text = text || \"\";\n\n    var result = \"\";\n    var i = 0;\n    var j = 0;\n    var position = 0;\n    var currentLetter = \"\";\n    var prevLetter = \"\";\n    var nextLetter = \"\";\n\n    var words = text.split(\"\\\\s+\");\n    var newWords = [];\n    for (i = 0; i < words.length; i += 1) {\n      newWords.push(\"\");\n      for (j = 0; j < words[i].length; j += 1) {\n        currentLetter = words[i][j];\n        prevLetter = words[i][j - 1];\n        nextLetter = words[i][j + 1];\n        if (isArabicLetter(currentLetter)) {\n          position = getCorrectForm(currentLetter, prevLetter, nextLetter);\n          if (position !== -1) {\n            newWords[i] += String.fromCharCode(\n              arabicSubstitionA[currentLetter.charCodeAt(0)][position]\n            );\n          } else {\n            newWords[i] += currentLetter;\n          }\n        } else {\n          newWords[i] += currentLetter;\n        }\n      }\n\n      newWords[i] = resolveLigatures(newWords[i]);\n    }\n    result = newWords.join(\" \");\n\n    return result;\n  };\n\n  var processArabic = (jsPDFAPI.__arabicParser__.processArabic = jsPDFAPI.processArabic = function() {\n    var text =\n      typeof arguments[0] === \"string\" ? arguments[0] : arguments[0].text;\n    var tmpText = [];\n    var result;\n\n    if (Array.isArray(text)) {\n      var i = 0;\n      tmpText = [];\n      for (i = 0; i < text.length; i += 1) {\n        if (Array.isArray(text[i])) {\n          tmpText.push([parseArabic(text[i][0]), text[i][1], text[i][2]]);\n        } else {\n          tmpText.push([parseArabic(text[i])]);\n        }\n      }\n      result = tmpText;\n    } else {\n      result = parseArabic(text);\n    }\n    if (typeof arguments[0] === \"string\") {\n      return result;\n    } else {\n      arguments[0].text = result;\n      return arguments[0];\n    }\n  });\n\n  jsPDFAPI.events.push([\"preProcessText\", processArabic]);\n})(jsPDF.API);\n","/** @license\n * jsPDF Autoprint Plugin\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * @name autoprint\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * Makes the PDF automatically open the print-Dialog when opened in a PDF-viewer.\n   *\n   * @name autoPrint\n   * @function\n   * @param {Object} options (optional) Set the attribute variant to 'non-conform' (default) or 'javascript' to activate different methods of automatic printing when opening in a PDF-viewer .\n   * @returns {jsPDF}\n   * @example\n   * var doc = new jsPDF();\n   * doc.text(10, 10, 'This is a test');\n   * doc.autoPrint({variant: 'non-conform'});\n   * doc.save('autoprint.pdf');\n   */\n  jsPDFAPI.autoPrint = function(options) {\n    \"use strict\";\n    var refAutoPrintTag;\n    options = options || {};\n    options.variant = options.variant || \"non-conform\";\n\n    switch (options.variant) {\n      case \"javascript\":\n        //https://github.com/Rob--W/pdf.js/commit/c676ecb5a0f54677b9f3340c3ef2cf42225453bb\n        this.addJS(\"print({});\");\n        break;\n      case \"non-conform\":\n      default:\n        this.internal.events.subscribe(\"postPutResources\", function() {\n          refAutoPrintTag = this.internal.newObject();\n          this.internal.out(\"<<\");\n          this.internal.out(\"/S /Named\");\n          this.internal.out(\"/Type /Action\");\n          this.internal.out(\"/N /Print\");\n          this.internal.out(\">>\");\n          this.internal.out(\"endobj\");\n        });\n\n        this.internal.events.subscribe(\"putCatalog\", function() {\n          this.internal.out(\"/OpenAction \" + refAutoPrintTag + \" 0 R\");\n        });\n        break;\n    }\n    return this;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF Canvas PlugIn\n * This plugin mimics the HTML5 Canvas\n *\n * The goal is to provide a way for current canvas users to print directly to a PDF.\n * @name canvas\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * @class Canvas\n   * @classdesc A Canvas Wrapper for jsPDF\n   */\n  var Canvas = function() {\n    var jsPdfInstance = undefined;\n    Object.defineProperty(this, \"pdf\", {\n      get: function() {\n        return jsPdfInstance;\n      },\n      set: function(value) {\n        jsPdfInstance = value;\n      }\n    });\n\n    var _width = 150;\n    /**\n     * The height property is a positive integer reflecting the height HTML attribute of the <canvas> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 150 is used.\n     * This is one of the two properties, the other being width, that controls the size of the canvas.\n     *\n     * @name width\n     */\n    Object.defineProperty(this, \"width\", {\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (isNaN(value) || Number.isInteger(value) === false || value < 0) {\n          _width = 150;\n        } else {\n          _width = value;\n        }\n        if (this.getContext(\"2d\").pageWrapXEnabled) {\n          this.getContext(\"2d\").pageWrapX = _width + 1;\n        }\n      }\n    });\n\n    var _height = 300;\n    /**\n     * The width property is a positive integer reflecting the width HTML attribute of the <canvas> element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 300 is used.\n     * This is one of the two properties, the other being height, that controls the size of the canvas.\n     *\n     * @name height\n     */\n    Object.defineProperty(this, \"height\", {\n      get: function() {\n        return _height;\n      },\n      set: function(value) {\n        if (isNaN(value) || Number.isInteger(value) === false || value < 0) {\n          _height = 300;\n        } else {\n          _height = value;\n        }\n        if (this.getContext(\"2d\").pageWrapYEnabled) {\n          this.getContext(\"2d\").pageWrapY = _height + 1;\n        }\n      }\n    });\n\n    var _childNodes = [];\n    Object.defineProperty(this, \"childNodes\", {\n      get: function() {\n        return _childNodes;\n      },\n      set: function(value) {\n        _childNodes = value;\n      }\n    });\n\n    var _style = {};\n    Object.defineProperty(this, \"style\", {\n      get: function() {\n        return _style;\n      },\n      set: function(value) {\n        _style = value;\n      }\n    });\n\n    Object.defineProperty(this, \"parentNode\", {});\n  };\n\n  /**\n   * The getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported.\n   *\n   * @name getContext\n   * @function\n   * @param {string} contextType Is a String containing the context identifier defining the drawing context associated to the canvas. Possible value is \"2d\", leading to the creation of a Context2D object representing a two-dimensional rendering context.\n   * @param {object} contextAttributes\n   */\n  Canvas.prototype.getContext = function(contextType, contextAttributes) {\n    contextType = contextType || \"2d\";\n    var key;\n\n    if (contextType !== \"2d\") {\n      return null;\n    }\n    for (key in contextAttributes) {\n      if (this.pdf.context2d.hasOwnProperty(key)) {\n        this.pdf.context2d[key] = contextAttributes[key];\n      }\n    }\n    this.pdf.context2d._canvas = this;\n    return this.pdf.context2d;\n  };\n\n  /**\n   * The toDataURL() method is just a stub to throw an error if accidently called.\n   *\n   * @name toDataURL\n   * @function\n   */\n  Canvas.prototype.toDataURL = function() {\n    throw new Error(\"toDataURL is not implemented.\");\n  };\n\n  jsPDFAPI.events.push([\n    \"initialized\",\n    function() {\n      this.canvas = new Canvas();\n      this.canvas.pdf = this;\n    }\n  ]);\n\n  return this;\n})(jsPDF.API);\n","/**\n * @license\n * ====================================================================\n * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\n *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br\n *               2013 Lee Driscoll, https://github.com/lsdriscoll\n *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n *               2014 James Hall, james@parall.ax\n *               2014 Diego Casorran, https://github.com/diegocr\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * @name cell\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var NO_MARGINS = { left: 0, top: 0, bottom: 0, right: 0 };\n\n  var px2pt = (0.264583 * 72) / 25.4;\n  var printingHeaderRow = false;\n\n  var _initialize = function() {\n    if (typeof this.internal.__cell__ === \"undefined\") {\n      this.internal.__cell__ = {};\n      this.internal.__cell__.padding = 3;\n      this.internal.__cell__.headerFunction = undefined;\n      this.internal.__cell__.margins = Object.assign({}, NO_MARGINS);\n      this.internal.__cell__.margins.width = this.getPageWidth();\n      _reset.call(this);\n    }\n  };\n\n  var _reset = function() {\n    this.internal.__cell__.lastCell = new Cell();\n    this.internal.__cell__.pages = 1;\n  };\n\n  var Cell = function() {\n    var _x = arguments[0];\n    Object.defineProperty(this, \"x\", {\n      enumerable: true,\n      get: function() {\n        return _x;\n      },\n      set: function(value) {\n        _x = value;\n      }\n    });\n    var _y = arguments[1];\n    Object.defineProperty(this, \"y\", {\n      enumerable: true,\n      get: function() {\n        return _y;\n      },\n      set: function(value) {\n        _y = value;\n      }\n    });\n    var _width = arguments[2];\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        _width = value;\n      }\n    });\n    var _height = arguments[3];\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      get: function() {\n        return _height;\n      },\n      set: function(value) {\n        _height = value;\n      }\n    });\n    var _text = arguments[4];\n    Object.defineProperty(this, \"text\", {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = value;\n      }\n    });\n    var _lineNumber = arguments[5];\n    Object.defineProperty(this, \"lineNumber\", {\n      enumerable: true,\n      get: function() {\n        return _lineNumber;\n      },\n      set: function(value) {\n        _lineNumber = value;\n      }\n    });\n    var _align = arguments[6];\n    Object.defineProperty(this, \"align\", {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        _align = value;\n      }\n    });\n\n    return this;\n  };\n\n  Cell.prototype.clone = function() {\n    return new Cell(\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.text,\n      this.lineNumber,\n      this.align\n    );\n  };\n\n  Cell.prototype.toArray = function() {\n    return [\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      this.text,\n      this.lineNumber,\n      this.align\n    ];\n  };\n\n  /**\n   * @name setHeaderFunction\n   * @function\n   * @param {function} func\n   */\n  jsPDFAPI.setHeaderFunction = function(func) {\n    _initialize.call(this);\n    this.internal.__cell__.headerFunction =\n      typeof func === \"function\" ? func : undefined;\n    return this;\n  };\n\n  /**\n   * @name getTextDimensions\n   * @function\n   * @param {string} txt\n   * @returns {Object} dimensions\n   */\n  jsPDFAPI.getTextDimensions = function(text, options) {\n    _initialize.call(this);\n    options = options || {};\n    var fontSize = options.fontSize || this.getFontSize();\n    var font = options.font || this.getFont();\n    var scaleFactor = options.scaleFactor || this.internal.scaleFactor;\n    var width = 0;\n    var amountOfLines = 0;\n    var height = 0;\n    var tempWidth = 0;\n    var scope = this;\n\n    if (!Array.isArray(text) && typeof text !== \"string\") {\n      if (typeof text === \"number\") {\n        text = String(text);\n      } else {\n        throw new Error(\n          \"getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.\"\n        );\n      }\n    }\n\n    const maxWidth = options.maxWidth;\n    if (maxWidth > 0) {\n      if (typeof text === \"string\") {\n        text = this.splitTextToSize(text, maxWidth);\n      } else if (Object.prototype.toString.call(text) === \"[object Array]\") {\n        text = text.reduce(function(acc, textLine) {\n          return acc.concat(scope.splitTextToSize(textLine, maxWidth));\n        }, []);\n      }\n    } else {\n      // Without the else clause, it will not work if you do not pass along maxWidth\n      text = Array.isArray(text) ? text : [text];\n    }\n\n    for (var i = 0; i < text.length; i++) {\n      tempWidth = this.getStringUnitWidth(text[i], { font: font }) * fontSize;\n      if (width < tempWidth) {\n        width = tempWidth;\n      }\n    }\n\n    if (width !== 0) {\n      amountOfLines = text.length;\n    }\n\n    width = width / scaleFactor;\n    height = Math.max(\n      (amountOfLines * fontSize * this.getLineHeightFactor() -\n        fontSize * (this.getLineHeightFactor() - 1)) /\n        scaleFactor,\n      0\n    );\n    return { w: width, h: height };\n  };\n\n  /**\n   * @name cellAddPage\n   * @function\n   */\n  jsPDFAPI.cellAddPage = function() {\n    _initialize.call(this);\n\n    this.addPage();\n\n    var margins = this.internal.__cell__.margins || NO_MARGINS;\n    this.internal.__cell__.lastCell = new Cell(\n      margins.left,\n      margins.top,\n      undefined,\n      undefined\n    );\n    this.internal.__cell__.pages += 1;\n\n    return this;\n  };\n\n  /**\n   * @name cell\n   * @function\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {string} text\n   * @param {number} lineNumber lineNumber\n   * @param {string} align\n   * @return {jsPDF} jsPDF-instance\n   */\n  var cell = (jsPDFAPI.cell = function() {\n    var currentCell;\n\n    if (arguments[0] instanceof Cell) {\n      currentCell = arguments[0];\n    } else {\n      currentCell = new Cell(\n        arguments[0],\n        arguments[1],\n        arguments[2],\n        arguments[3],\n        arguments[4],\n        arguments[5]\n      );\n    }\n    _initialize.call(this);\n    var lastCell = this.internal.__cell__.lastCell;\n    var padding = this.internal.__cell__.padding;\n    var margins = this.internal.__cell__.margins || NO_MARGINS;\n    var tableHeaderRow = this.internal.__cell__.tableHeaderRow;\n    var printHeaders = this.internal.__cell__.printHeaders;\n    // If this is not the first cell, we must change its position\n    if (typeof lastCell.lineNumber !== \"undefined\") {\n      if (lastCell.lineNumber === currentCell.lineNumber) {\n        //Same line\n        currentCell.x = (lastCell.x || 0) + (lastCell.width || 0);\n        currentCell.y = lastCell.y || 0;\n      } else {\n        //New line\n        if (\n          lastCell.y + lastCell.height + currentCell.height + margins.bottom >\n          this.getPageHeight()\n        ) {\n          this.cellAddPage();\n          currentCell.y = margins.top;\n          if (printHeaders && tableHeaderRow) {\n            this.printHeaderRow(currentCell.lineNumber, true);\n            currentCell.y += tableHeaderRow[0].height;\n          }\n        } else {\n          currentCell.y = lastCell.y + lastCell.height || currentCell.y;\n        }\n      }\n    }\n\n    if (typeof currentCell.text[0] !== \"undefined\") {\n      this.rect(\n        currentCell.x,\n        currentCell.y,\n        currentCell.width,\n        currentCell.height,\n        printingHeaderRow === true ? \"FD\" : undefined\n      );\n      if (currentCell.align === \"right\") {\n        this.text(\n          currentCell.text,\n          currentCell.x + currentCell.width - padding,\n          currentCell.y + padding,\n          { align: \"right\", baseline: \"top\" }\n        );\n      } else if (currentCell.align === \"center\") {\n        this.text(\n          currentCell.text,\n          currentCell.x + currentCell.width / 2,\n          currentCell.y + padding,\n          {\n            align: \"center\",\n            baseline: \"top\",\n            maxWidth: currentCell.width - padding - padding\n          }\n        );\n      } else {\n        this.text(\n          currentCell.text,\n          currentCell.x + padding,\n          currentCell.y + padding,\n          {\n            align: \"left\",\n            baseline: \"top\",\n            maxWidth: currentCell.width - padding - padding\n          }\n        );\n      }\n    }\n    this.internal.__cell__.lastCell = currentCell;\n    return this;\n  });\n\n  /**\n     * Create a table from a set of data.\n     * @name table\n     * @function\n     * @param {Integer} [x] : left-position for top-left corner of table\n     * @param {Integer} [y] top-position for top-left corner of table\n     * @param {Object[]} [data] An array of objects containing key-value pairs corresponding to a row of data.\n     * @param {String[]} [headers] Omit or null to auto-generate headers at a performance cost\n\n     * @param {Object} [config.printHeaders] True to print column headers at the top of every page\n     * @param {Object} [config.autoSize] True to dynamically set the column widths to match the widest cell value\n     * @param {Object} [config.margins] margin values for left, top, bottom, and width\n     * @param {Object} [config.fontSize] Integer fontSize to use (optional)\n     * @param {Object} [config.padding] cell-padding in pt to use (optional)\n     * @param {Object} [config.headerBackgroundColor] default is #c8c8c8 (optional)\n     * @param {Object} [config.headerTextColor] default is #000 (optional)\n     * @param {Object} [config.rowStart] callback to handle before print each row (optional)\n     * @param {Object} [config.cellStart] callback to handle before print each cell (optional)\n     * @returns {jsPDF} jsPDF-instance\n     */\n\n  jsPDFAPI.table = function(x, y, data, headers, config) {\n    _initialize.call(this);\n    if (!data) {\n      throw new Error(\"No data for PDF table.\");\n    }\n\n    config = config || {};\n\n    var headerNames = [],\n      headerLabels = [],\n      headerAligns = [],\n      i,\n      columnMatrix = {},\n      columnWidths = {},\n      column,\n      columnMinWidths = [],\n      j,\n      tableHeaderConfigs = [],\n      //set up defaults. If a value is provided in config, defaults will be overwritten:\n      autoSize = config.autoSize || false,\n      printHeaders = config.printHeaders === false ? false : true,\n      fontSize =\n        config.css && typeof config.css[\"font-size\"] !== \"undefined\"\n          ? config.css[\"font-size\"] * 16\n          : config.fontSize || 12,\n      margins =\n        config.margins ||\n        Object.assign({ width: this.getPageWidth() }, NO_MARGINS),\n      padding = typeof config.padding === \"number\" ? config.padding : 3,\n      headerBackgroundColor = config.headerBackgroundColor || \"#c8c8c8\",\n      headerTextColor = config.headerTextColor || \"#000\";\n\n    _reset.call(this);\n\n    this.internal.__cell__.printHeaders = printHeaders;\n    this.internal.__cell__.margins = margins;\n    this.internal.__cell__.table_font_size = fontSize;\n    this.internal.__cell__.padding = padding;\n    this.internal.__cell__.headerBackgroundColor = headerBackgroundColor;\n    this.internal.__cell__.headerTextColor = headerTextColor;\n    this.setFontSize(fontSize);\n\n    // Set header values\n    if (headers === undefined || headers === null) {\n      // No headers defined so we derive from data\n      headerNames = Object.keys(data[0]);\n      headerLabels = headerNames;\n      headerAligns = headerNames.map(function() {\n        return \"left\";\n      });\n    } else if (Array.isArray(headers) && typeof headers[0] === \"object\") {\n      headerNames = headers.map(function(header) {\n        return header.name;\n      });\n      headerLabels = headers.map(function(header) {\n        return header.prompt || header.name || \"\";\n      });\n      headerAligns = headers.map(function(header) {\n        return header.align || \"left\";\n      });\n      // Split header configs into names and prompts\n      for (i = 0; i < headers.length; i += 1) {\n        columnWidths[headers[i].name] = headers[i].width * px2pt;\n      }\n    } else if (Array.isArray(headers) && typeof headers[0] === \"string\") {\n      headerNames = headers;\n      headerLabels = headerNames;\n      headerAligns = headerNames.map(function() {\n        return \"left\";\n      });\n    }\n\n    if (\n      autoSize ||\n      (Array.isArray(headers) && typeof headers[0] === \"string\")\n    ) {\n      var headerName;\n      for (i = 0; i < headerNames.length; i += 1) {\n        headerName = headerNames[i];\n\n        // Create a matrix of columns e.g., {column_title: [row1_Record, row2_Record]}\n\n        columnMatrix[headerName] = data.map(function(rec) {\n          return rec[headerName];\n        });\n\n        // get header width\n        this.setFont(undefined, \"bold\");\n        columnMinWidths.push(\n          this.getTextDimensions(headerLabels[i], {\n            fontSize: this.internal.__cell__.table_font_size,\n            scaleFactor: this.internal.scaleFactor\n          }).w\n        );\n        column = columnMatrix[headerName];\n\n        // get cell widths\n        this.setFont(undefined, \"normal\");\n        for (j = 0; j < column.length; j += 1) {\n          columnMinWidths.push(\n            this.getTextDimensions(column[j], {\n              fontSize: this.internal.__cell__.table_font_size,\n              scaleFactor: this.internal.scaleFactor\n            }).w\n          );\n        }\n\n        // get final column width\n        columnWidths[headerName] =\n          Math.max.apply(null, columnMinWidths) + padding + padding;\n\n        //have to reset\n        columnMinWidths = [];\n      }\n    }\n\n    // -- Construct the table\n\n    if (printHeaders) {\n      var row = {};\n      for (i = 0; i < headerNames.length; i += 1) {\n        row[headerNames[i]] = {};\n        row[headerNames[i]].text = headerLabels[i];\n        row[headerNames[i]].align = headerAligns[i];\n      }\n\n      var rowHeight = calculateLineHeight.call(this, row, columnWidths);\n\n      // Construct the header row\n      tableHeaderConfigs = headerNames.map(function(value) {\n        return new Cell(\n          x,\n          y,\n          columnWidths[value],\n          rowHeight,\n          row[value].text,\n          undefined,\n          row[value].align\n        );\n      });\n\n      // Store the table header config\n      this.setTableHeaderRow(tableHeaderConfigs);\n\n      // Print the header for the start of the table\n      this.printHeaderRow(1, false);\n    }\n\n    // Construct the data rows\n\n    var align = headers.reduce(function(pv, cv) {\n      pv[cv.name] = cv.align;\n      return pv;\n    }, {});\n    for (i = 0; i < data.length; i += 1) {\n      if (\"rowStart\" in config && config.rowStart instanceof Function) {\n        config.rowStart(\n          {\n            row: i,\n            data: data[i]\n          },\n          this\n        );\n      }\n      var lineHeight = calculateLineHeight.call(this, data[i], columnWidths);\n\n      for (j = 0; j < headerNames.length; j += 1) {\n        var cellData = data[i][headerNames[j]];\n        if (\"cellStart\" in config && config.cellStart instanceof Function) {\n          config.cellStart(\n            {\n              row: i,\n              col: j,\n              data: cellData\n            },\n            this\n          );\n        }\n        cell.call(\n          this,\n          new Cell(\n            x,\n            y,\n            columnWidths[headerNames[j]],\n            lineHeight,\n            cellData,\n            i + 2,\n            align[headerNames[j]]\n          )\n        );\n      }\n    }\n    this.internal.__cell__.table_x = x;\n    this.internal.__cell__.table_y = y;\n    return this;\n  };\n\n  /**\n   * Calculate the height for containing the highest column\n   *\n   * @name calculateLineHeight\n   * @function\n   * @param {Object[]} model is the line of data we want to calculate the height of\n   * @param {Integer[]} columnWidths is size of each column\n   * @returns {number} lineHeight\n   * @private\n   */\n  var calculateLineHeight = function calculateLineHeight(model, columnWidths) {\n    var padding = this.internal.__cell__.padding;\n    var fontSize = this.internal.__cell__.table_font_size;\n    var scaleFactor = this.internal.scaleFactor;\n\n    return Object.keys(model)\n      .map(function(key) {\n        var value = model[key];\n        return this.splitTextToSize(\n          value.hasOwnProperty(\"text\") ? value.text : value,\n          columnWidths[key] - padding - padding\n        );\n      }, this)\n      .map(function(value) {\n        return (\n          (this.getLineHeightFactor() * value.length * fontSize) / scaleFactor +\n          padding +\n          padding\n        );\n      }, this)\n      .reduce(function(pv, cv) {\n        return Math.max(pv, cv);\n      }, 0);\n  };\n\n  /**\n   * Store the config for outputting a table header\n   *\n   * @name setTableHeaderRow\n   * @function\n   * @param {Object[]} config\n   * An array of cell configs that would define a header row: Each config matches the config used by jsPDFAPI.cell\n   * except the lineNumber parameter is excluded\n   */\n  jsPDFAPI.setTableHeaderRow = function(config) {\n    _initialize.call(this);\n    this.internal.__cell__.tableHeaderRow = config;\n  };\n\n  /**\n   * Output the store header row\n   *\n   * @name printHeaderRow\n   * @function\n   * @param {number} lineNumber The line number to output the header at\n   * @param {boolean} new_page\n   */\n  jsPDFAPI.printHeaderRow = function(lineNumber, new_page) {\n    _initialize.call(this);\n    if (!this.internal.__cell__.tableHeaderRow) {\n      throw new Error(\"Property tableHeaderRow does not exist.\");\n    }\n\n    var tableHeaderCell;\n\n    printingHeaderRow = true;\n    if (typeof this.internal.__cell__.headerFunction === \"function\") {\n      var position = this.internal.__cell__.headerFunction(\n        this,\n        this.internal.__cell__.pages\n      );\n      this.internal.__cell__.lastCell = new Cell(\n        position[0],\n        position[1],\n        position[2],\n        position[3],\n        undefined,\n        -1\n      );\n    }\n    this.setFont(undefined, \"bold\");\n\n    var tempHeaderConf = [];\n    for (var i = 0; i < this.internal.__cell__.tableHeaderRow.length; i += 1) {\n      tableHeaderCell = this.internal.__cell__.tableHeaderRow[i].clone();\n      if (new_page) {\n        tableHeaderCell.y = this.internal.__cell__.margins.top || 0;\n        tempHeaderConf.push(tableHeaderCell);\n      }\n      tableHeaderCell.lineNumber = lineNumber;\n      var currentTextColor = this.getTextColor();\n      this.setTextColor(this.internal.__cell__.headerTextColor);\n      this.setFillColor(this.internal.__cell__.headerBackgroundColor);\n      cell.call(this, tableHeaderCell);\n      this.setTextColor(currentTextColor);\n    }\n    if (tempHeaderConf.length > 0) {\n      this.setTableHeaderRow(tempHeaderConf);\n    }\n    this.setFont(undefined, \"normal\");\n    printingHeaderRow = false;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * ====================================================================\n * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF JavaScript plugin\n *\n * @name javascript\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n  var jsNamesObj, jsJsObj, text;\n  /**\n   * @name addJS\n   * @function\n   * @param {string} javascript The javascript to be embedded into the PDF-file.\n   * @returns {jsPDF}\n   */\n  jsPDFAPI.addJS = function(javascript) {\n    text = javascript;\n    this.internal.events.subscribe(\"postPutResources\", function() {\n      jsNamesObj = this.internal.newObject();\n      this.internal.out(\"<<\");\n      this.internal.out(\"/Names [(EmbeddedJS) \" + (jsNamesObj + 1) + \" 0 R]\");\n      this.internal.out(\">>\");\n      this.internal.out(\"endobj\");\n\n      jsJsObj = this.internal.newObject();\n      this.internal.out(\"<<\");\n      this.internal.out(\"/S /JavaScript\");\n      this.internal.out(\"/JS (\" + text + \")\");\n      this.internal.out(\">>\");\n      this.internal.out(\"endobj\");\n    });\n    this.internal.events.subscribe(\"putCatalog\", function() {\n      if (jsNamesObj !== undefined && jsJsObj !== undefined) {\n        this.internal.out(\"/Names <</JavaScript \" + jsNamesObj + \" 0 R>>\");\n      }\n    });\n    return this;\n  };\n})(jsPDF.API);\n","/* eslint-disable no-fallthrough */\r\n/* eslint-disable no-console */\r\n/**\r\n * @license\r\n * jsPDF Context2D PlugIn Copyright (c) 2014 Steven Spungin (TwelveTone LLC) steven@twelvetone.tv\r\n *\r\n * Licensed under the MIT License. http://opensource.org/licenses/mit-license\r\n */\r\n\r\nimport { jsPDF } from \"../jspdf.js\";\r\nimport { RGBColor } from \"../libs/rgbcolor.js\";\r\nimport { console } from \"../libs/console.js\";\r\nimport {\r\n  buildFontFaceMap,\r\n  parseFontFamily,\r\n  resolveFontFace\r\n} from \"../libs/fontFace.js\";\r\n\r\n/**\r\n * This plugin mimics the HTML5 CanvasRenderingContext2D.\r\n *\r\n * The goal is to provide a way for current canvas implementations to print directly to a PDF.\r\n *\r\n * @name context2d\r\n * @module\r\n */\r\n(function(jsPDFAPI) {\r\n  \"use strict\";\r\n  var ContextLayer = function(ctx) {\r\n    ctx = ctx || {};\r\n    this.isStrokeTransparent = ctx.isStrokeTransparent || false;\r\n    this.strokeOpacity = ctx.strokeOpacity || 1;\r\n    this.strokeStyle = ctx.strokeStyle || \"#000000\";\r\n    this.fillStyle = ctx.fillStyle || \"#000000\";\r\n    this.isFillTransparent = ctx.isFillTransparent || false;\r\n    this.fillOpacity = ctx.fillOpacity || 1;\r\n    this.font = ctx.font || \"10px sans-serif\";\r\n    this.textBaseline = ctx.textBaseline || \"alphabetic\";\r\n    this.textAlign = ctx.textAlign || \"left\";\r\n    this.lineWidth = ctx.lineWidth || 1;\r\n    this.lineJoin = ctx.lineJoin || \"miter\";\r\n    this.lineCap = ctx.lineCap || \"butt\";\r\n    this.path = ctx.path || [];\r\n    this.transform =\r\n      typeof ctx.transform !== \"undefined\"\r\n        ? ctx.transform.clone()\r\n        : new Matrix();\r\n    this.globalCompositeOperation = ctx.globalCompositeOperation || \"normal\";\r\n    this.globalAlpha = ctx.globalAlpha || 1.0;\r\n    this.clip_path = ctx.clip_path || [];\r\n    this.currentPoint = ctx.currentPoint || new Point();\r\n    this.miterLimit = ctx.miterLimit || 10.0;\r\n    this.lastPoint = ctx.lastPoint || new Point();\r\n    this.lineDashOffset = ctx.lineDashOffset || 0.0;\r\n    this.lineDash = ctx.lineDash || [];\r\n    this.margin = ctx.margin || [0, 0, 0, 0];\r\n    this.prevPageLastElemOffset = ctx.prevPageLastElemOffset || 0;\r\n\r\n    this.ignoreClearRect =\r\n      typeof ctx.ignoreClearRect === \"boolean\" ? ctx.ignoreClearRect : true;\r\n    return this;\r\n  };\r\n\r\n  //stub\r\n  var f2,\r\n    getHorizontalCoordinateString,\r\n    getVerticalCoordinateString,\r\n    getHorizontalCoordinate,\r\n    getVerticalCoordinate,\r\n    Point,\r\n    Rectangle,\r\n    Matrix,\r\n    _ctx;\r\n  jsPDFAPI.events.push([\r\n    \"initialized\",\r\n    function() {\r\n      this.context2d = new Context2D(this);\r\n\r\n      f2 = this.internal.f2;\r\n      getHorizontalCoordinateString = this.internal.getCoordinateString;\r\n      getVerticalCoordinateString = this.internal.getVerticalCoordinateString;\r\n      getHorizontalCoordinate = this.internal.getHorizontalCoordinate;\r\n      getVerticalCoordinate = this.internal.getVerticalCoordinate;\r\n      Point = this.internal.Point;\r\n      Rectangle = this.internal.Rectangle;\r\n      Matrix = this.internal.Matrix;\r\n      _ctx = new ContextLayer();\r\n    }\r\n  ]);\r\n\r\n  var Context2D = function(pdf) {\r\n    Object.defineProperty(this, \"canvas\", {\r\n      get: function() {\r\n        return { parentNode: false, style: false };\r\n      }\r\n    });\r\n\r\n    var _pdf = pdf;\r\n    Object.defineProperty(this, \"pdf\", {\r\n      get: function() {\r\n        return _pdf;\r\n      }\r\n    });\r\n\r\n    var _pageWrapXEnabled = false;\r\n    /**\r\n     * @name pageWrapXEnabled\r\n     * @type {boolean}\r\n     * @default false\r\n     */\r\n    Object.defineProperty(this, \"pageWrapXEnabled\", {\r\n      get: function() {\r\n        return _pageWrapXEnabled;\r\n      },\r\n      set: function(value) {\r\n        _pageWrapXEnabled = Boolean(value);\r\n      }\r\n    });\r\n\r\n    var _pageWrapYEnabled = false;\r\n    /**\r\n     * @name pageWrapYEnabled\r\n     * @type {boolean}\r\n     * @default true\r\n     */\r\n    Object.defineProperty(this, \"pageWrapYEnabled\", {\r\n      get: function() {\r\n        return _pageWrapYEnabled;\r\n      },\r\n      set: function(value) {\r\n        _pageWrapYEnabled = Boolean(value);\r\n      }\r\n    });\r\n\r\n    var _posX = 0;\r\n    /**\r\n     * @name posX\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Object.defineProperty(this, \"posX\", {\r\n      get: function() {\r\n        return _posX;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _posX = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    var _posY = 0;\r\n    /**\r\n     * @name posY\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Object.defineProperty(this, \"posY\", {\r\n      get: function() {\r\n        return _posY;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          _posY = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Gets or sets the page margin when using auto paging. Has no effect when {@link autoPaging} is off.\r\n     * @name margin\r\n     * @type {number|number[]}\r\n     * @default [0, 0, 0, 0]\r\n     */\r\n    Object.defineProperty(this, \"margin\", {\r\n      get: function() {\r\n        return _ctx.margin;\r\n      },\r\n      set: function(value) {\r\n        var margin;\r\n        if (typeof value === \"number\") {\r\n          margin = [value, value, value, value];\r\n        } else {\r\n          margin = new Array(4);\r\n          margin[0] = value[0];\r\n          margin[1] = value.length >= 2 ? value[1] : margin[0];\r\n          margin[2] = value.length >= 3 ? value[2] : margin[0];\r\n          margin[3] = value.length >= 4 ? value[3] : margin[1];\r\n        }\r\n        _ctx.margin = margin;\r\n      }\r\n    });\r\n\r\n    var _autoPaging = false;\r\n    /**\r\n     * Gets or sets the auto paging mode. When auto paging is enabled, the context2d will automatically draw on the\r\n     * next page if a shape or text chunk doesn't fit entirely on the current page. The context2d will create new\r\n     * pages if required.\r\n     *\r\n     * Context2d supports different modes:\r\n     * <ul>\r\n     * <li>\r\n     *   <code>false</code>: Auto paging is disabled.\r\n     * </li>\r\n     * <li>\r\n     *   <code>true</code> or <code>'slice'</code>: Will cut shapes or text chunks across page breaks. Will possibly\r\n     *   slice text in half, making it difficult to read.\r\n     * </li>\r\n     * <li>\r\n     *   <code>'text'</code>: Trys not to cut text in half across page breaks. Works best for documents consisting\r\n     *   mostly of a single column of text.\r\n     * </li>\r\n     * </ul>\r\n     * @name Context2D#autoPaging\r\n     * @type {boolean|\"slice\"|\"text\"}\r\n     * @default false\r\n     */\r\n    Object.defineProperty(this, \"autoPaging\", {\r\n      get: function() {\r\n        return _autoPaging;\r\n      },\r\n      set: function(value) {\r\n        _autoPaging = value;\r\n      }\r\n    });\r\n\r\n    var lastBreak = 0;\r\n    /**\r\n     * @name lastBreak\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Object.defineProperty(this, \"lastBreak\", {\r\n      get: function() {\r\n        return lastBreak;\r\n      },\r\n      set: function(value) {\r\n        lastBreak = value;\r\n      }\r\n    });\r\n\r\n    var pageBreaks = [];\r\n    /**\r\n     * Y Position of page breaks.\r\n     * @name pageBreaks\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Object.defineProperty(this, \"pageBreaks\", {\r\n      get: function() {\r\n        return pageBreaks;\r\n      },\r\n      set: function(value) {\r\n        pageBreaks = value;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @name ctx\r\n     * @type {object}\r\n     * @default {}\r\n     */\r\n    Object.defineProperty(this, \"ctx\", {\r\n      get: function() {\r\n        return _ctx;\r\n      },\r\n      set: function(value) {\r\n        if (value instanceof ContextLayer) {\r\n          _ctx = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @name path\r\n     * @type {array}\r\n     * @default []\r\n     */\r\n    Object.defineProperty(this, \"path\", {\r\n      get: function() {\r\n        return _ctx.path;\r\n      },\r\n      set: function(value) {\r\n        _ctx.path = value;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @name ctxStack\r\n     * @type {array}\r\n     * @default []\r\n     */\r\n    var _ctxStack = [];\r\n    Object.defineProperty(this, \"ctxStack\", {\r\n      get: function() {\r\n        return _ctxStack;\r\n      },\r\n      set: function(value) {\r\n        _ctxStack = value;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Sets or returns the color, gradient, or pattern used to fill the drawing\r\n     *\r\n     * @name fillStyle\r\n     * @default #000000\r\n     * @property {(color|gradient|pattern)} value The color of the drawing. Default value is #000000<br />\r\n     * A gradient object (linear or radial) used to fill the drawing (not supported by context2d)<br />\r\n     * A pattern object to use to fill the drawing (not supported by context2d)\r\n     */\r\n    Object.defineProperty(this, \"fillStyle\", {\r\n      get: function() {\r\n        return this.ctx.fillStyle;\r\n      },\r\n      set: function(value) {\r\n        var rgba;\r\n        rgba = getRGBA(value);\r\n\r\n        this.ctx.fillStyle = rgba.style;\r\n        this.ctx.isFillTransparent = rgba.a === 0;\r\n        this.ctx.fillOpacity = rgba.a;\r\n\r\n        this.pdf.setFillColor(rgba.r, rgba.g, rgba.b, { a: rgba.a });\r\n        this.pdf.setTextColor(rgba.r, rgba.g, rgba.b, { a: rgba.a });\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Sets or returns the color, gradient, or pattern used for strokes\r\n     *\r\n     * @name strokeStyle\r\n     * @default #000000\r\n     * @property {color} color A CSS color value that indicates the stroke color of the drawing. Default value is #000000 (not supported by context2d)\r\n     * @property {gradient} gradient A gradient object (linear or radial) used to create a gradient stroke (not supported by context2d)\r\n     * @property {pattern} pattern A pattern object used to create a pattern stroke (not supported by context2d)\r\n     */\r\n    Object.defineProperty(this, \"strokeStyle\", {\r\n      get: function() {\r\n        return this.ctx.strokeStyle;\r\n      },\r\n      set: function(value) {\r\n        var rgba = getRGBA(value);\r\n\r\n        this.ctx.strokeStyle = rgba.style;\r\n        this.ctx.isStrokeTransparent = rgba.a === 0;\r\n        this.ctx.strokeOpacity = rgba.a;\r\n\r\n        if (rgba.a === 0) {\r\n          this.pdf.setDrawColor(255, 255, 255);\r\n        } else if (rgba.a === 1) {\r\n          this.pdf.setDrawColor(rgba.r, rgba.g, rgba.b);\r\n        } else {\r\n          this.pdf.setDrawColor(rgba.r, rgba.g, rgba.b);\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Sets or returns the style of the end caps for a line\r\n     *\r\n     * @name lineCap\r\n     * @default butt\r\n     * @property {(butt|round|square)} lineCap butt A flat edge is added to each end of the line <br/>\r\n     * round A rounded end cap is added to each end of the line<br/>\r\n     * square A square end cap is added to each end of the line<br/>\r\n     */\r\n    Object.defineProperty(this, \"lineCap\", {\r\n      get: function() {\r\n        return this.ctx.lineCap;\r\n      },\r\n      set: function(value) {\r\n        if ([\"butt\", \"round\", \"square\"].indexOf(value) !== -1) {\r\n          this.ctx.lineCap = value;\r\n          this.pdf.setLineCap(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Sets or returns the current line width\r\n     *\r\n     * @name lineWidth\r\n     * @default 1\r\n     * @property {number} lineWidth The current line width, in pixels\r\n     */\r\n    Object.defineProperty(this, \"lineWidth\", {\r\n      get: function() {\r\n        return this.ctx.lineWidth;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          this.ctx.lineWidth = value;\r\n          this.pdf.setLineWidth(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Sets or returns the type of corner created, when two lines meet\r\n     */\r\n    Object.defineProperty(this, \"lineJoin\", {\r\n      get: function() {\r\n        return this.ctx.lineJoin;\r\n      },\r\n      set: function(value) {\r\n        if ([\"bevel\", \"round\", \"miter\"].indexOf(value) !== -1) {\r\n          this.ctx.lineJoin = value;\r\n          this.pdf.setLineJoin(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    /**\r\n     * A number specifying the miter limit ratio in coordinate space units. Zero, negative, Infinity, and NaN values are ignored. The default value is 10.0.\r\n     *\r\n     * @name miterLimit\r\n     * @default 10\r\n     */\r\n    Object.defineProperty(this, \"miterLimit\", {\r\n      get: function() {\r\n        return this.ctx.miterLimit;\r\n      },\r\n      set: function(value) {\r\n        if (!isNaN(value)) {\r\n          this.ctx.miterLimit = value;\r\n          this.pdf.setMiterLimit(value);\r\n        }\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(this, \"textBaseline\", {\r\n      get: function() {\r\n        return this.ctx.textBaseline;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.textBaseline = value;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(this, \"textAlign\", {\r\n      get: function() {\r\n        return this.ctx.textAlign;\r\n      },\r\n      set: function(value) {\r\n        if ([\"right\", \"end\", \"center\", \"left\", \"start\"].indexOf(value) !== -1) {\r\n          this.ctx.textAlign = value;\r\n        }\r\n      }\r\n    });\r\n\r\n    var _fontFaceMap = null;\r\n\r\n    function getFontFaceMap(pdf, fontFaces) {\r\n      if (_fontFaceMap === null) {\r\n        var fontMap = pdf.getFontList();\r\n\r\n        var convertedFontFaces = convertToFontFaces(fontMap);\r\n\r\n        _fontFaceMap = buildFontFaceMap(convertedFontFaces.concat(fontFaces));\r\n      }\r\n\r\n      return _fontFaceMap;\r\n    }\r\n\r\n    function convertToFontFaces(fontMap) {\r\n      var fontFaces = [];\r\n\r\n      Object.keys(fontMap).forEach(function(family) {\r\n        var styles = fontMap[family];\r\n\r\n        styles.forEach(function(style) {\r\n          var fontFace = null;\r\n\r\n          switch (style) {\r\n            case \"bold\":\r\n              fontFace = {\r\n                family: family,\r\n                weight: \"bold\"\r\n              };\r\n              break;\r\n\r\n            case \"italic\":\r\n              fontFace = {\r\n                family: family,\r\n                style: \"italic\"\r\n              };\r\n              break;\r\n\r\n            case \"bolditalic\":\r\n              fontFace = {\r\n                family: family,\r\n                weight: \"bold\",\r\n                style: \"italic\"\r\n              };\r\n              break;\r\n\r\n            case \"\":\r\n            case \"normal\":\r\n              fontFace = {\r\n                family: family\r\n              };\r\n              break;\r\n          }\r\n\r\n          // If font-face is still null here, it is a font with some styling we don't recognize and\r\n          // cannot map or it is a font added via the fontFaces option of .html().\r\n          if (fontFace !== null) {\r\n            fontFace.ref = {\r\n              name: family,\r\n              style: style\r\n            };\r\n\r\n            fontFaces.push(fontFace);\r\n          }\r\n        });\r\n      });\r\n\r\n      return fontFaces;\r\n    }\r\n\r\n    var _fontFaces = null;\r\n    /**\r\n     * A map of available font-faces, as passed in the options of\r\n     * .html(). If set a limited implementation of the font style matching\r\n     * algorithm defined by https://www.w3.org/TR/css-fonts-3/#font-matching-algorithm\r\n     * will be used. If not set it will fallback to previous behavior.\r\n     */\r\n\r\n    Object.defineProperty(this, \"fontFaces\", {\r\n      get: function() {\r\n        return _fontFaces;\r\n      },\r\n      set: function(value) {\r\n        _fontFaceMap = null;\r\n        _fontFaces = value;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(this, \"font\", {\r\n      get: function() {\r\n        return this.ctx.font;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.font = value;\r\n        var rx, matches;\r\n\r\n        //source: https://stackoverflow.com/a/10136041\r\n        // eslint-disable-next-line no-useless-escape\r\n        rx = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-_,\\\"\\'\\sa-z]+?)\\s*$/i;\r\n        matches = rx.exec(value);\r\n        if (matches !== null) {\r\n          var fontStyle = matches[1];\r\n          var fontVariant = matches[2];\r\n          var fontWeight = matches[3];\r\n          var fontSize = matches[4];\r\n          var lineHeight = matches[5];\r\n          var fontFamily = matches[6];\r\n        } else {\r\n          return;\r\n        }\r\n        var rxFontSize = /^([.\\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i;\r\n        var fontSizeUnit = rxFontSize.exec(fontSize)[2];\r\n\r\n        if (\"px\" === fontSizeUnit) {\r\n          fontSize = Math.floor(\r\n            parseFloat(fontSize) * this.pdf.internal.scaleFactor\r\n          );\r\n        } else if (\"em\" === fontSizeUnit) {\r\n          fontSize = Math.floor(parseFloat(fontSize) * this.pdf.getFontSize());\r\n        } else {\r\n          fontSize = Math.floor(\r\n            parseFloat(fontSize) * this.pdf.internal.scaleFactor\r\n          );\r\n        }\r\n\r\n        this.pdf.setFontSize(fontSize);\r\n        var parts = parseFontFamily(fontFamily);\r\n\r\n        if (this.fontFaces) {\r\n          var fontFaceMap = getFontFaceMap(this.pdf, this.fontFaces);\r\n\r\n          var rules = parts.map(function(ff) {\r\n            return {\r\n              family: ff,\r\n              stretch: \"normal\", // TODO: Extract font-stretch from font rule (perhaps write proper parser for it?)\r\n              weight: fontWeight,\r\n              style: fontStyle\r\n            };\r\n          });\r\n\r\n          var font = resolveFontFace(fontFaceMap, rules);\r\n          this.pdf.setFont(font.ref.name, font.ref.style);\r\n          return;\r\n        }\r\n\r\n        var style = \"\";\r\n        if (\r\n          fontWeight === \"bold\" ||\r\n          parseInt(fontWeight, 10) >= 700 ||\r\n          fontStyle === \"bold\"\r\n        ) {\r\n          style = \"bold\";\r\n        }\r\n\r\n        if (fontStyle === \"italic\") {\r\n          style += \"italic\";\r\n        }\r\n\r\n        if (style.length === 0) {\r\n          style = \"normal\";\r\n        }\r\n        var jsPdfFontName = \"\";\r\n\r\n        var fallbackFonts = {\r\n          arial: \"Helvetica\",\r\n          Arial: \"Helvetica\",\r\n          verdana: \"Helvetica\",\r\n          Verdana: \"Helvetica\",\r\n          helvetica: \"Helvetica\",\r\n          Helvetica: \"Helvetica\",\r\n          \"sans-serif\": \"Helvetica\",\r\n          fixed: \"Courier\",\r\n          monospace: \"Courier\",\r\n          terminal: \"Courier\",\r\n          cursive: \"Times\",\r\n          fantasy: \"Times\",\r\n          serif: \"Times\"\r\n        };\r\n\r\n        for (var i = 0; i < parts.length; i++) {\r\n          if (\r\n            this.pdf.internal.getFont(parts[i], style, {\r\n              noFallback: true,\r\n              disableWarning: true\r\n            }) !== undefined\r\n          ) {\r\n            jsPdfFontName = parts[i];\r\n            break;\r\n          } else if (\r\n            style === \"bolditalic\" &&\r\n            this.pdf.internal.getFont(parts[i], \"bold\", {\r\n              noFallback: true,\r\n              disableWarning: true\r\n            }) !== undefined\r\n          ) {\r\n            jsPdfFontName = parts[i];\r\n            style = \"bold\";\r\n          } else if (\r\n            this.pdf.internal.getFont(parts[i], \"normal\", {\r\n              noFallback: true,\r\n              disableWarning: true\r\n            }) !== undefined\r\n          ) {\r\n            jsPdfFontName = parts[i];\r\n            style = \"normal\";\r\n            break;\r\n          }\r\n        }\r\n        if (jsPdfFontName === \"\") {\r\n          for (var j = 0; j < parts.length; j++) {\r\n            if (fallbackFonts[parts[j]]) {\r\n              jsPdfFontName = fallbackFonts[parts[j]];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        jsPdfFontName = jsPdfFontName === \"\" ? \"Times\" : jsPdfFontName;\r\n        this.pdf.setFont(jsPdfFontName, style);\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(this, \"globalCompositeOperation\", {\r\n      get: function() {\r\n        return this.ctx.globalCompositeOperation;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.globalCompositeOperation = value;\r\n      }\r\n    });\r\n\r\n    Object.defineProperty(this, \"globalAlpha\", {\r\n      get: function() {\r\n        return this.ctx.globalAlpha;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.globalAlpha = value;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * A float specifying the amount of the line dash offset. The default value is 0.0.\r\n     *\r\n     * @name lineDashOffset\r\n     * @default 0.0\r\n     */\r\n    Object.defineProperty(this, \"lineDashOffset\", {\r\n      get: function() {\r\n        return this.ctx.lineDashOffset;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.lineDashOffset = value;\r\n        setLineDash.call(this);\r\n      }\r\n    });\r\n\r\n    // Not HTML API\r\n    Object.defineProperty(this, \"lineDash\", {\r\n      get: function() {\r\n        return this.ctx.lineDash;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.lineDash = value;\r\n        setLineDash.call(this);\r\n      }\r\n    });\r\n\r\n    // Not HTML API\r\n    Object.defineProperty(this, \"ignoreClearRect\", {\r\n      get: function() {\r\n        return this.ctx.ignoreClearRect;\r\n      },\r\n      set: function(value) {\r\n        this.ctx.ignoreClearRect = Boolean(value);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sets the line dash pattern used when stroking lines.\r\n   * @name setLineDash\r\n   * @function\r\n   * @description It uses an array of values that specify alternating lengths of lines and gaps which describe the pattern.\r\n   */\r\n  Context2D.prototype.setLineDash = function(dashArray) {\r\n    this.lineDash = dashArray;\r\n  };\r\n\r\n  /**\r\n   * gets the current line dash pattern.\r\n   * @name getLineDash\r\n   * @function\r\n   * @returns {Array} An Array of numbers that specify distances to alternately draw a line and a gap (in coordinate space units). If the number, when setting the elements, is odd, the elements of the array get copied and concatenated. For example, setting the line dash to [5, 15, 25] will result in getting back [5, 15, 25, 5, 15, 25].\r\n   */\r\n  Context2D.prototype.getLineDash = function() {\r\n    if (this.lineDash.length % 2) {\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash#return_value\r\n      return this.lineDash.concat(this.lineDash);\r\n    } else {\r\n      // The copied value is returned to prevent contamination from outside.\r\n      return this.lineDash.slice();\r\n    }\r\n  };\r\n\r\n  Context2D.prototype.fill = function() {\r\n    pathPreProcess.call(this, \"fill\", false);\r\n  };\r\n\r\n  /**\r\n   * Actually draws the path you have defined\r\n   *\r\n   * @name stroke\r\n   * @function\r\n   * @description The stroke() method actually draws the path you have defined with all those moveTo() and lineTo() methods. The default color is black.\r\n   */\r\n  Context2D.prototype.stroke = function() {\r\n    pathPreProcess.call(this, \"stroke\", false);\r\n  };\r\n\r\n  /**\r\n   * Begins a path, or resets the current\r\n   *\r\n   * @name beginPath\r\n   * @function\r\n   * @description The beginPath() method begins a path, or resets the current path.\r\n   */\r\n  Context2D.prototype.beginPath = function() {\r\n    this.path = [\r\n      {\r\n        type: \"begin\"\r\n      }\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Moves the path to the specified point in the canvas, without creating a line\r\n   *\r\n   * @name moveTo\r\n   * @function\r\n   * @param x {Number} The x-coordinate of where to move the path to\r\n   * @param y {Number} The y-coordinate of where to move the path to\r\n   */\r\n  Context2D.prototype.moveTo = function(x, y) {\r\n    if (isNaN(x) || isNaN(y)) {\r\n      console.error(\"jsPDF.context2d.moveTo: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.moveTo\");\r\n    }\r\n\r\n    var pt = this.ctx.transform.applyToPoint(new Point(x, y));\r\n\r\n    this.path.push({\r\n      type: \"mt\",\r\n      x: pt.x,\r\n      y: pt.y\r\n    });\r\n    this.ctx.lastPoint = new Point(x, y);\r\n  };\r\n\r\n  /**\r\n   * Creates a path from the current point back to the starting point\r\n   *\r\n   * @name closePath\r\n   * @function\r\n   * @description The closePath() method creates a path from the current point back to the starting point.\r\n   */\r\n  Context2D.prototype.closePath = function() {\r\n    var pathBegin = new Point(0, 0);\r\n    var i = 0;\r\n    for (i = this.path.length - 1; i !== -1; i--) {\r\n      if (this.path[i].type === \"begin\") {\r\n        if (\r\n          typeof this.path[i + 1] === \"object\" &&\r\n          typeof this.path[i + 1].x === \"number\"\r\n        ) {\r\n          pathBegin = new Point(this.path[i + 1].x, this.path[i + 1].y);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.path.push({\r\n      type: \"close\"\r\n    });\r\n    this.ctx.lastPoint = new Point(pathBegin.x, pathBegin.y);\r\n  };\r\n\r\n  /**\r\n   * Adds a new point and creates a line to that point from the last specified point in the canvas\r\n   *\r\n   * @name lineTo\r\n   * @function\r\n   * @param x The x-coordinate of where to create the line to\r\n   * @param y The y-coordinate of where to create the line to\r\n   * @description The lineTo() method adds a new point and creates a line TO that point FROM the last specified point in the canvas (this method does not draw the line).\r\n   */\r\n  Context2D.prototype.lineTo = function(x, y) {\r\n    if (isNaN(x) || isNaN(y)) {\r\n      console.error(\"jsPDF.context2d.lineTo: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.lineTo\");\r\n    }\r\n\r\n    var pt = this.ctx.transform.applyToPoint(new Point(x, y));\r\n\r\n    this.path.push({\r\n      type: \"lt\",\r\n      x: pt.x,\r\n      y: pt.y\r\n    });\r\n    this.ctx.lastPoint = new Point(pt.x, pt.y);\r\n  };\r\n\r\n  /**\r\n   * Clips a region of any shape and size from the original canvas\r\n   *\r\n   * @name clip\r\n   * @function\r\n   * @description The clip() method clips a region of any shape and size from the original canvas.\r\n   */\r\n  Context2D.prototype.clip = function() {\r\n    this.ctx.clip_path = JSON.parse(JSON.stringify(this.path));\r\n    pathPreProcess.call(this, null, true);\r\n  };\r\n\r\n  /**\r\n   * Creates a cubic Bézier curve\r\n   *\r\n   * @name quadraticCurveTo\r\n   * @function\r\n   * @param cpx {Number} The x-coordinate of the Bézier control point\r\n   * @param cpy {Number} The y-coordinate of the Bézier control point\r\n   * @param x {Number} The x-coordinate of the ending point\r\n   * @param y {Number} The y-coordinate of the ending point\r\n   * @description The quadraticCurveTo() method adds a point to the current path by using the specified control points that represent a quadratic Bézier curve.<br /><br /> A quadratic Bézier curve requires two points. The first point is a control point that is used in the quadratic Bézier calculation and the second point is the ending point for the curve. The starting point for the curve is the last point in the current path. If a path does not exist, use the beginPath() and moveTo() methods to define a starting point.\r\n   */\r\n  Context2D.prototype.quadraticCurveTo = function(cpx, cpy, x, y) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(cpx) || isNaN(cpy)) {\r\n      console.error(\r\n        \"jsPDF.context2d.quadraticCurveTo: Invalid arguments\",\r\n        arguments\r\n      );\r\n      throw new Error(\r\n        \"Invalid arguments passed to jsPDF.context2d.quadraticCurveTo\"\r\n      );\r\n    }\r\n\r\n    var pt0 = this.ctx.transform.applyToPoint(new Point(x, y));\r\n    var pt1 = this.ctx.transform.applyToPoint(new Point(cpx, cpy));\r\n\r\n    this.path.push({\r\n      type: \"qct\",\r\n      x1: pt1.x,\r\n      y1: pt1.y,\r\n      x: pt0.x,\r\n      y: pt0.y\r\n    });\r\n    this.ctx.lastPoint = new Point(pt0.x, pt0.y);\r\n  };\r\n\r\n  /**\r\n   * Creates a cubic Bézier curve\r\n   *\r\n   * @name bezierCurveTo\r\n   * @function\r\n   * @param cp1x {Number} The x-coordinate of the first Bézier control point\r\n   * @param cp1y {Number} The y-coordinate of the first Bézier control point\r\n   * @param cp2x {Number} The x-coordinate of the second Bézier control point\r\n   * @param cp2y {Number} The y-coordinate of the second Bézier control point\r\n   * @param x {Number} The x-coordinate of the ending point\r\n   * @param y {Number} The y-coordinate of the ending point\r\n   * @description The bezierCurveTo() method adds a point to the current path by using the specified control points that represent a cubic Bézier curve. <br /><br />A cubic bezier curve requires three points. The first two points are control points that are used in the cubic Bézier calculation and the last point is the ending point for the curve.  The starting point for the curve is the last point in the current path. If a path does not exist, use the beginPath() and moveTo() methods to define a starting point.\r\n   */\r\n  Context2D.prototype.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {\r\n    if (\r\n      isNaN(x) ||\r\n      isNaN(y) ||\r\n      isNaN(cp1x) ||\r\n      isNaN(cp1y) ||\r\n      isNaN(cp2x) ||\r\n      isNaN(cp2y)\r\n    ) {\r\n      console.error(\r\n        \"jsPDF.context2d.bezierCurveTo: Invalid arguments\",\r\n        arguments\r\n      );\r\n      throw new Error(\r\n        \"Invalid arguments passed to jsPDF.context2d.bezierCurveTo\"\r\n      );\r\n    }\r\n    var pt0 = this.ctx.transform.applyToPoint(new Point(x, y));\r\n    var pt1 = this.ctx.transform.applyToPoint(new Point(cp1x, cp1y));\r\n    var pt2 = this.ctx.transform.applyToPoint(new Point(cp2x, cp2y));\r\n\r\n    this.path.push({\r\n      type: \"bct\",\r\n      x1: pt1.x,\r\n      y1: pt1.y,\r\n      x2: pt2.x,\r\n      y2: pt2.y,\r\n      x: pt0.x,\r\n      y: pt0.y\r\n    });\r\n    this.ctx.lastPoint = new Point(pt0.x, pt0.y);\r\n  };\r\n\r\n  /**\r\n   * Creates an arc/curve (used to create circles, or parts of circles)\r\n   *\r\n   * @name arc\r\n   * @function\r\n   * @param x {Number} The x-coordinate of the center of the circle\r\n   * @param y {Number} The y-coordinate of the center of the circle\r\n   * @param radius {Number} The radius of the circle\r\n   * @param startAngle {Number} The starting angle, in radians (0 is at the 3 o'clock position of the arc's circle)\r\n   * @param endAngle {Number} The ending angle, in radians\r\n   * @param counterclockwise {Boolean} Optional. Specifies whether the drawing should be counterclockwise or clockwise. False is default, and indicates clockwise, while true indicates counter-clockwise.\r\n   * @description The arc() method creates an arc/curve (used to create circles, or parts of circles).\r\n   */\r\n  Context2D.prototype.arc = function(\r\n    x,\r\n    y,\r\n    radius,\r\n    startAngle,\r\n    endAngle,\r\n    counterclockwise\r\n  ) {\r\n    if (\r\n      isNaN(x) ||\r\n      isNaN(y) ||\r\n      isNaN(radius) ||\r\n      isNaN(startAngle) ||\r\n      isNaN(endAngle)\r\n    ) {\r\n      console.error(\"jsPDF.context2d.arc: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.arc\");\r\n    }\r\n    counterclockwise = Boolean(counterclockwise);\r\n\r\n    if (!this.ctx.transform.isIdentity) {\r\n      var xpt = this.ctx.transform.applyToPoint(new Point(x, y));\r\n      x = xpt.x;\r\n      y = xpt.y;\r\n\r\n      var x_radPt = this.ctx.transform.applyToPoint(new Point(0, radius));\r\n      var x_radPt0 = this.ctx.transform.applyToPoint(new Point(0, 0));\r\n      radius = Math.sqrt(\r\n        Math.pow(x_radPt.x - x_radPt0.x, 2) +\r\n          Math.pow(x_radPt.y - x_radPt0.y, 2)\r\n      );\r\n    }\r\n    if (Math.abs(endAngle - startAngle) >= 2 * Math.PI) {\r\n      startAngle = 0;\r\n      endAngle = 2 * Math.PI;\r\n    }\r\n\r\n    this.path.push({\r\n      type: \"arc\",\r\n      x: x,\r\n      y: y,\r\n      radius: radius,\r\n      startAngle: startAngle,\r\n      endAngle: endAngle,\r\n      counterclockwise: counterclockwise\r\n    });\r\n    // this.ctx.lastPoint(new Point(pt.x,pt.y));\r\n  };\r\n\r\n  /**\r\n   * Creates an arc/curve between two tangents\r\n   *\r\n   * @name arcTo\r\n   * @function\r\n   * @param x1 {Number} The x-coordinate of the first tangent\r\n   * @param y1 {Number} The y-coordinate of the first tangent\r\n   * @param x2 {Number} The x-coordinate of the second tangent\r\n   * @param y2 {Number} The y-coordinate of the second tangent\r\n   * @param radius The radius of the arc\r\n   * @description The arcTo() method creates an arc/curve between two tangents on the canvas.\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  Context2D.prototype.arcTo = function(x1, y1, x2, y2, radius) {\r\n    throw new Error(\"arcTo not implemented.\");\r\n  };\r\n\r\n  /**\r\n   * Creates a rectangle\r\n   *\r\n   * @name rect\r\n   * @function\r\n   * @param x {Number} The x-coordinate of the upper-left corner of the rectangle\r\n   * @param y {Number} The y-coordinate of the upper-left corner of the rectangle\r\n   * @param w {Number} The width of the rectangle, in pixels\r\n   * @param h {Number} The height of the rectangle, in pixels\r\n   * @description The rect() method creates a rectangle.\r\n   */\r\n  Context2D.prototype.rect = function(x, y, w, h) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h)) {\r\n      console.error(\"jsPDF.context2d.rect: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.rect\");\r\n    }\r\n    this.moveTo(x, y);\r\n    this.lineTo(x + w, y);\r\n    this.lineTo(x + w, y + h);\r\n    this.lineTo(x, y + h);\r\n    this.lineTo(x, y);\r\n    this.lineTo(x + w, y);\r\n    this.lineTo(x, y);\r\n  };\r\n\r\n  /**\r\n   * Draws a \"filled\" rectangle\r\n   *\r\n   * @name fillRect\r\n   * @function\r\n   * @param x {Number} The x-coordinate of the upper-left corner of the rectangle\r\n   * @param y {Number} The y-coordinate of the upper-left corner of the rectangle\r\n   * @param w {Number} The width of the rectangle, in pixels\r\n   * @param h {Number} The height of the rectangle, in pixels\r\n   * @description The fillRect() method draws a \"filled\" rectangle. The default color of the fill is black.\r\n   */\r\n  Context2D.prototype.fillRect = function(x, y, w, h) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h)) {\r\n      console.error(\"jsPDF.context2d.fillRect: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.fillRect\");\r\n    }\r\n    if (isFillTransparent.call(this)) {\r\n      return;\r\n    }\r\n    var tmp = {};\r\n    if (this.lineCap !== \"butt\") {\r\n      tmp.lineCap = this.lineCap;\r\n      this.lineCap = \"butt\";\r\n    }\r\n    if (this.lineJoin !== \"miter\") {\r\n      tmp.lineJoin = this.lineJoin;\r\n      this.lineJoin = \"miter\";\r\n    }\r\n\r\n    this.beginPath();\r\n    this.rect(x, y, w, h);\r\n    this.fill();\r\n\r\n    if (tmp.hasOwnProperty(\"lineCap\")) {\r\n      this.lineCap = tmp.lineCap;\r\n    }\r\n    if (tmp.hasOwnProperty(\"lineJoin\")) {\r\n      this.lineJoin = tmp.lineJoin;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *     Draws a rectangle (no fill)\r\n   *\r\n   * @name strokeRect\r\n   * @function\r\n   * @param x {Number} The x-coordinate of the upper-left corner of the rectangle\r\n   * @param y {Number} The y-coordinate of the upper-left corner of the rectangle\r\n   * @param w {Number} The width of the rectangle, in pixels\r\n   * @param h {Number} The height of the rectangle, in pixels\r\n   * @description The strokeRect() method draws a rectangle (no fill). The default color of the stroke is black.\r\n   */\r\n  Context2D.prototype.strokeRect = function strokeRect(x, y, w, h) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h)) {\r\n      console.error(\"jsPDF.context2d.strokeRect: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.strokeRect\");\r\n    }\r\n    if (isStrokeTransparent.call(this)) {\r\n      return;\r\n    }\r\n    this.beginPath();\r\n    this.rect(x, y, w, h);\r\n    this.stroke();\r\n  };\r\n\r\n  /**\r\n   * Clears the specified pixels within a given rectangle\r\n   *\r\n   * @name clearRect\r\n   * @function\r\n   * @param x {Number} The x-coordinate of the upper-left corner of the rectangle\r\n   * @param y {Number} The y-coordinate of the upper-left corner of the rectangle\r\n   * @param w {Number} The width of the rectangle to clear, in pixels\r\n   * @param h {Number} The height of the rectangle to clear, in pixels\r\n   * @description We cannot clear PDF commands that were already written to PDF, so we use white instead. <br />\r\n   * As a special case, read a special flag (ignoreClearRect) and do nothing if it is set.\r\n   * This results in all calls to clearRect() to do nothing, and keep the canvas transparent.\r\n   * This flag is stored in the save/restore context and is managed the same way as other drawing states.\r\n   *\r\n   */\r\n  Context2D.prototype.clearRect = function(x, y, w, h) {\r\n    if (isNaN(x) || isNaN(y) || isNaN(w) || isNaN(h)) {\r\n      console.error(\"jsPDF.context2d.clearRect: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.clearRect\");\r\n    }\r\n    if (this.ignoreClearRect) {\r\n      return;\r\n    }\r\n\r\n    this.fillStyle = \"#ffffff\";\r\n    this.fillRect(x, y, w, h);\r\n  };\r\n\r\n  /**\r\n   * Saves the state of the current context\r\n   *\r\n   * @name save\r\n   * @function\r\n   */\r\n  Context2D.prototype.save = function(doStackPush) {\r\n    doStackPush = typeof doStackPush === \"boolean\" ? doStackPush : true;\r\n    var tmpPageNumber = this.pdf.internal.getCurrentPageInfo().pageNumber;\r\n    for (var i = 0; i < this.pdf.internal.getNumberOfPages(); i++) {\r\n      this.pdf.setPage(i + 1);\r\n      this.pdf.internal.out(\"q\");\r\n    }\r\n    this.pdf.setPage(tmpPageNumber);\r\n\r\n    if (doStackPush) {\r\n      this.ctx.fontSize = this.pdf.internal.getFontSize();\r\n      var ctx = new ContextLayer(this.ctx);\r\n      this.ctxStack.push(this.ctx);\r\n      this.ctx = ctx;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns previously saved path state and attributes\r\n   *\r\n   * @name restore\r\n   * @function\r\n   */\r\n  Context2D.prototype.restore = function(doStackPop) {\r\n    doStackPop = typeof doStackPop === \"boolean\" ? doStackPop : true;\r\n    var tmpPageNumber = this.pdf.internal.getCurrentPageInfo().pageNumber;\r\n    for (var i = 0; i < this.pdf.internal.getNumberOfPages(); i++) {\r\n      this.pdf.setPage(i + 1);\r\n      this.pdf.internal.out(\"Q\");\r\n    }\r\n    this.pdf.setPage(tmpPageNumber);\r\n\r\n    if (doStackPop && this.ctxStack.length !== 0) {\r\n      this.ctx = this.ctxStack.pop();\r\n      this.fillStyle = this.ctx.fillStyle;\r\n      this.strokeStyle = this.ctx.strokeStyle;\r\n      this.font = this.ctx.font;\r\n      this.lineCap = this.ctx.lineCap;\r\n      this.lineWidth = this.ctx.lineWidth;\r\n      this.lineJoin = this.ctx.lineJoin;\r\n      this.lineDash = this.ctx.lineDash;\r\n      this.lineDashOffset = this.ctx.lineDashOffset;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @name toDataURL\r\n   * @function\r\n   */\r\n  Context2D.prototype.toDataURL = function() {\r\n    throw new Error(\"toDataUrl not implemented.\");\r\n  };\r\n\r\n  //helper functions\r\n\r\n  /**\r\n   * Get the decimal values of r, g, b and a\r\n   *\r\n   * @name getRGBA\r\n   * @function\r\n   * @private\r\n   * @ignore\r\n   */\r\n  var getRGBA = function(style) {\r\n    var rxRgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\r\n    var rxRgba = /rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/;\r\n    var rxTransparent = /transparent|rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*0+\\s*\\)/;\r\n\r\n    var r, g, b, a;\r\n\r\n    if (style.isCanvasGradient === true) {\r\n      style = style.getColor();\r\n    }\r\n\r\n    if (!style) {\r\n      return { r: 0, g: 0, b: 0, a: 0, style: style };\r\n    }\r\n\r\n    if (rxTransparent.test(style)) {\r\n      r = 0;\r\n      g = 0;\r\n      b = 0;\r\n      a = 0;\r\n    } else {\r\n      var matches = rxRgb.exec(style);\r\n      if (matches !== null) {\r\n        r = parseInt(matches[1]);\r\n        g = parseInt(matches[2]);\r\n        b = parseInt(matches[3]);\r\n        a = 1;\r\n      } else {\r\n        matches = rxRgba.exec(style);\r\n        if (matches !== null) {\r\n          r = parseInt(matches[1]);\r\n          g = parseInt(matches[2]);\r\n          b = parseInt(matches[3]);\r\n          a = parseFloat(matches[4]);\r\n        } else {\r\n          a = 1;\r\n\r\n          if (typeof style === \"string\" && style.charAt(0) !== \"#\") {\r\n            var rgbColor = new RGBColor(style);\r\n            if (rgbColor.ok) {\r\n              style = rgbColor.toHex();\r\n            } else {\r\n              style = \"#000000\";\r\n            }\r\n          }\r\n\r\n          if (style.length === 4) {\r\n            r = style.substring(1, 2);\r\n            r += r;\r\n            g = style.substring(2, 3);\r\n            g += g;\r\n            b = style.substring(3, 4);\r\n            b += b;\r\n          } else {\r\n            r = style.substring(1, 3);\r\n            g = style.substring(3, 5);\r\n            b = style.substring(5, 7);\r\n          }\r\n          r = parseInt(r, 16);\r\n          g = parseInt(g, 16);\r\n          b = parseInt(b, 16);\r\n        }\r\n      }\r\n    }\r\n    return { r: r, g: g, b: b, a: a, style: style };\r\n  };\r\n\r\n  /**\r\n   * @name isFillTransparent\r\n   * @function\r\n   * @private\r\n   * @ignore\r\n   * @returns {Boolean}\r\n   */\r\n  var isFillTransparent = function() {\r\n    return this.ctx.isFillTransparent || this.globalAlpha == 0;\r\n  };\r\n\r\n  /**\r\n   * @name isStrokeTransparent\r\n   * @function\r\n   * @private\r\n   * @ignore\r\n   * @returns {Boolean}\r\n   */\r\n  var isStrokeTransparent = function() {\r\n    return Boolean(this.ctx.isStrokeTransparent || this.globalAlpha == 0);\r\n  };\r\n\r\n  /**\r\n   * Draws \"filled\" text on the canvas\r\n   *\r\n   * @name fillText\r\n   * @function\r\n   * @param text {String} Specifies the text that will be written on the canvas\r\n   * @param x {Number} The x coordinate where to start painting the text (relative to the canvas)\r\n   * @param y {Number} The y coordinate where to start painting the text (relative to the canvas)\r\n   * @param maxWidth {Number} Optional. The maximum allowed width of the text, in pixels\r\n   * @description The fillText() method draws filled text on the canvas. The default color of the text is black.\r\n   */\r\n  Context2D.prototype.fillText = function(text, x, y, maxWidth) {\r\n    if (isNaN(x) || isNaN(y) || typeof text !== \"string\") {\r\n      console.error(\"jsPDF.context2d.fillText: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.fillText\");\r\n    }\r\n    maxWidth = isNaN(maxWidth) ? undefined : maxWidth;\r\n    if (isFillTransparent.call(this)) {\r\n      return;\r\n    }\r\n\r\n    var degs = rad2deg(this.ctx.transform.rotation);\r\n\r\n    // We only use X axis as scale hint\r\n    var scale = this.ctx.transform.scaleX;\r\n\r\n    putText.call(this, {\r\n      text: text,\r\n      x: x,\r\n      y: y,\r\n      scale: scale,\r\n      angle: degs,\r\n      align: this.textAlign,\r\n      maxWidth: maxWidth\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Draws text on the canvas (no fill)\r\n   *\r\n   * @name strokeText\r\n   * @function\r\n   * @param text {String} Specifies the text that will be written on the canvas\r\n   * @param x {Number} The x coordinate where to start painting the text (relative to the canvas)\r\n   * @param y {Number} The y coordinate where to start painting the text (relative to the canvas)\r\n   * @param maxWidth {Number} Optional. The maximum allowed width of the text, in pixels\r\n   * @description The strokeText() method draws text (with no fill) on the canvas. The default color of the text is black.\r\n   */\r\n  Context2D.prototype.strokeText = function(text, x, y, maxWidth) {\r\n    if (isNaN(x) || isNaN(y) || typeof text !== \"string\") {\r\n      console.error(\"jsPDF.context2d.strokeText: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.strokeText\");\r\n    }\r\n    if (isStrokeTransparent.call(this)) {\r\n      return;\r\n    }\r\n\r\n    maxWidth = isNaN(maxWidth) ? undefined : maxWidth;\r\n\r\n    var degs = rad2deg(this.ctx.transform.rotation);\r\n    var scale = this.ctx.transform.scaleX;\r\n\r\n    putText.call(this, {\r\n      text: text,\r\n      x: x,\r\n      y: y,\r\n      scale: scale,\r\n      renderingMode: \"stroke\",\r\n      angle: degs,\r\n      align: this.textAlign,\r\n      maxWidth: maxWidth\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Returns an object that contains the width of the specified text\r\n   *\r\n   * @name measureText\r\n   * @function\r\n   * @param text {String} The text to be measured\r\n   * @description The measureText() method returns an object that contains the width of the specified text, in pixels.\r\n   * @returns {Number}\r\n   */\r\n  Context2D.prototype.measureText = function(text) {\r\n    if (typeof text !== \"string\") {\r\n      console.error(\r\n        \"jsPDF.context2d.measureText: Invalid arguments\",\r\n        arguments\r\n      );\r\n      throw new Error(\r\n        \"Invalid arguments passed to jsPDF.context2d.measureText\"\r\n      );\r\n    }\r\n    var pdf = this.pdf;\r\n    var k = this.pdf.internal.scaleFactor;\r\n\r\n    var fontSize = pdf.internal.getFontSize();\r\n    var txtWidth =\r\n      (pdf.getStringUnitWidth(text) * fontSize) / pdf.internal.scaleFactor;\r\n    txtWidth *= Math.round(((k * 96) / 72) * 10000) / 10000;\r\n\r\n    var TextMetrics = function(options) {\r\n      options = options || {};\r\n      var _width = options.width || 0;\r\n      Object.defineProperty(this, \"width\", {\r\n        get: function() {\r\n          return _width;\r\n        }\r\n      });\r\n      return this;\r\n    };\r\n    return new TextMetrics({ width: txtWidth });\r\n  };\r\n\r\n  //Transformations\r\n\r\n  /**\r\n   * Scales the current drawing bigger or smaller\r\n   *\r\n   * @name scale\r\n   * @function\r\n   * @param scalewidth {Number} Scales the width of the current drawing (1=100%, 0.5=50%, 2=200%, etc.)\r\n   * @param scaleheight {Number} Scales the height of the current drawing (1=100%, 0.5=50%, 2=200%, etc.)\r\n   * @description The scale() method scales the current drawing, bigger or smaller.\r\n   */\r\n  Context2D.prototype.scale = function(scalewidth, scaleheight) {\r\n    if (isNaN(scalewidth) || isNaN(scaleheight)) {\r\n      console.error(\"jsPDF.context2d.scale: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.scale\");\r\n    }\r\n    var matrix = new Matrix(scalewidth, 0.0, 0.0, scaleheight, 0.0, 0.0);\r\n    this.ctx.transform = this.ctx.transform.multiply(matrix);\r\n  };\r\n\r\n  /**\r\n   * Rotates the current drawing\r\n   *\r\n   * @name rotate\r\n   * @function\r\n   * @param angle {Number} The rotation angle, in radians.\r\n   * @description To calculate from degrees to radians: degrees*Math.PI/180. <br />\r\n   * Example: to rotate 5 degrees, specify the following: 5*Math.PI/180\r\n   */\r\n  Context2D.prototype.rotate = function(angle) {\r\n    if (isNaN(angle)) {\r\n      console.error(\"jsPDF.context2d.rotate: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.rotate\");\r\n    }\r\n    var matrix = new Matrix(\r\n      Math.cos(angle),\r\n      Math.sin(angle),\r\n      -Math.sin(angle),\r\n      Math.cos(angle),\r\n      0.0,\r\n      0.0\r\n    );\r\n    this.ctx.transform = this.ctx.transform.multiply(matrix);\r\n  };\r\n\r\n  /**\r\n   * Remaps the (0,0) position on the canvas\r\n   *\r\n   * @name translate\r\n   * @function\r\n   * @param x {Number} The value to add to horizontal (x) coordinates\r\n   * @param y {Number} The value to add to vertical (y) coordinates\r\n   * @description The translate() method remaps the (0,0) position on the canvas.\r\n   */\r\n  Context2D.prototype.translate = function(x, y) {\r\n    if (isNaN(x) || isNaN(y)) {\r\n      console.error(\"jsPDF.context2d.translate: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.translate\");\r\n    }\r\n    var matrix = new Matrix(1.0, 0.0, 0.0, 1.0, x, y);\r\n    this.ctx.transform = this.ctx.transform.multiply(matrix);\r\n  };\r\n\r\n  /**\r\n   * Replaces the current transformation matrix for the drawing\r\n   *\r\n   * @name transform\r\n   * @function\r\n   * @param a {Number} Horizontal scaling\r\n   * @param b {Number} Horizontal skewing\r\n   * @param c {Number} Vertical skewing\r\n   * @param d {Number} Vertical scaling\r\n   * @param e {Number} Horizontal moving\r\n   * @param f {Number} Vertical moving\r\n   * @description Each object on the canvas has a current transformation matrix.<br /><br />The transform() method replaces the current transformation matrix. It multiplies the current transformation matrix with the matrix described by:<br /><br /><br /><br />a    c    e<br /><br />b    d    f<br /><br />0    0    1<br /><br />In other words, the transform() method lets you scale, rotate, move, and skew the current context.\r\n   */\r\n  Context2D.prototype.transform = function(a, b, c, d, e, f) {\r\n    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d) || isNaN(e) || isNaN(f)) {\r\n      console.error(\"jsPDF.context2d.transform: Invalid arguments\", arguments);\r\n      throw new Error(\"Invalid arguments passed to jsPDF.context2d.transform\");\r\n    }\r\n    var matrix = new Matrix(a, b, c, d, e, f);\r\n    this.ctx.transform = this.ctx.transform.multiply(matrix);\r\n  };\r\n\r\n  /**\r\n   * Resets the current transform to the identity matrix. Then runs transform()\r\n   *\r\n   * @name setTransform\r\n   * @function\r\n   * @param a {Number} Horizontal scaling\r\n   * @param b {Number} Horizontal skewing\r\n   * @param c {Number} Vertical skewing\r\n   * @param d {Number} Vertical scaling\r\n   * @param e {Number} Horizontal moving\r\n   * @param f {Number} Vertical moving\r\n   * @description Each object on the canvas has a current transformation matrix. <br /><br />The setTransform() method resets the current transform to the identity matrix, and then runs transform() with the same arguments.<br /><br />In other words, the setTransform() method lets you scale, rotate, move, and skew the current context.\r\n   */\r\n  Context2D.prototype.setTransform = function(a, b, c, d, e, f) {\r\n    a = isNaN(a) ? 1 : a;\r\n    b = isNaN(b) ? 0 : b;\r\n    c = isNaN(c) ? 0 : c;\r\n    d = isNaN(d) ? 1 : d;\r\n    e = isNaN(e) ? 0 : e;\r\n    f = isNaN(f) ? 0 : f;\r\n    this.ctx.transform = new Matrix(a, b, c, d, e, f);\r\n  };\r\n\r\n  /**\r\n   * Should only be used if pageWrapYEnabled is true\r\n   *\r\n   * @name setPageByYPosition\r\n   * @function\r\n   * @private\r\n   * @ignore\r\n   * @returns One-based Page Number\r\n   */\r\n  var setPageByYPosition = function(y) {\r\n    if (this.pageWrapYEnabled) {\r\n      this.lastBreak = 0;\r\n      var manualBreaks = 0;\r\n      var autoBreaks = 0;\r\n      for (var i = 0; i < this.pageBreaks.length; i++) {\r\n        if (y >= this.pageBreaks[i]) {\r\n          manualBreaks++;\r\n          if (this.lastBreak === 0) {\r\n            autoBreaks++;\r\n          }\r\n          var spaceBetweenLastBreak = this.pageBreaks[i] - this.lastBreak;\r\n          this.lastBreak = this.pageBreaks[i];\r\n          var pagesSinceLastBreak = Math.floor(\r\n            spaceBetweenLastBreak / this.pageWrapY\r\n          );\r\n          autoBreaks += pagesSinceLastBreak;\r\n        }\r\n      }\r\n      if (this.lastBreak === 0) {\r\n        var pagesSinceLastBreak = Math.floor(y / this.pageWrapY) + 1;\r\n        autoBreaks += pagesSinceLastBreak;\r\n      }\r\n      return autoBreaks + manualBreaks;\r\n    } else {\r\n      return this.pdf.internal.getCurrentPageInfo().pageNumber;\r\n    }\r\n  };\r\n\r\n  var hasMargins = function() {\r\n    return (\r\n      this.margin[0] > 0 ||\r\n      this.margin[1] > 0 ||\r\n      this.margin[2] > 0 ||\r\n      this.margin[3] > 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Draws an image, canvas, or video onto the canvas\r\n   *\r\n   * @function\r\n   * @param img {} Specifies the image, canvas, or video element to use\r\n   * @param sx {Number} Optional. The x coordinate where to start clipping\r\n   * @param sy {Number} Optional. The y coordinate where to start clipping\r\n   * @param swidth {Number} Optional. The width of the clipped image\r\n   * @param sheight {Number} Optional. The height of the clipped image\r\n   * @param x {Number} The x coordinate where to place the image on the canvas\r\n   * @param y {Number} The y coordinate where to place the image on the canvas\r\n   * @param width {Number} Optional. The width of the image to use (stretch or reduce the image)\r\n   * @param height {Number} Optional. The height of the image to use (stretch or reduce the image)\r\n   */\r\n  Context2D.prototype.drawImage = function(\r\n    img,\r\n    sx,\r\n    sy,\r\n    swidth,\r\n    sheight,\r\n    x,\r\n    y,\r\n    width,\r\n    height\r\n  ) {\r\n    var imageProperties = this.pdf.getImageProperties(img);\r\n    var factorX = 1;\r\n    var factorY = 1;\r\n    var isClip;\r\n\r\n    var clipFactorX = 1;\r\n    var clipFactorY = 1;\r\n\r\n    if (typeof swidth !== \"undefined\" && typeof width !== \"undefined\") {\r\n      isClip = true;\r\n      clipFactorX = width / swidth;\r\n      clipFactorY = height / sheight;\r\n      factorX = ((imageProperties.width / swidth) * width) / swidth;\r\n      factorY = ((imageProperties.height / sheight) * height) / sheight;\r\n    }\r\n\r\n    //is sx and sy are set and x and y not, set x and y with values of sx and sy\r\n    if (typeof x === \"undefined\") {\r\n      x = sx;\r\n      y = sy;\r\n      sx = 0;\r\n      sy = 0;\r\n    }\r\n\r\n    if (typeof swidth !== \"undefined\" && typeof width === \"undefined\") {\r\n      width = swidth;\r\n      height = sheight;\r\n    }\r\n    if (typeof swidth === \"undefined\" && typeof width === \"undefined\") {\r\n      width = imageProperties.width;\r\n      height = imageProperties.height;\r\n    }\r\n\r\n    var decomposedTransformationMatrix = this.ctx.transform.decompose();\r\n    var angle = rad2deg(decomposedTransformationMatrix.rotate.shx);\r\n    var matrix = new Matrix();\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.translate);\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.skew);\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.scale);\r\n    var xRect = matrix.applyToRectangle(\r\n      new Rectangle(\r\n        x - sx * clipFactorX,\r\n        y - sy * clipFactorY,\r\n        swidth * factorX,\r\n        sheight * factorY\r\n      )\r\n    );\r\n    var pageArray = getPagesByPath.call(this, xRect);\r\n    var pages = [];\r\n    for (var ii = 0; ii < pageArray.length; ii += 1) {\r\n      if (pages.indexOf(pageArray[ii]) === -1) {\r\n        pages.push(pageArray[ii]);\r\n      }\r\n    }\r\n\r\n    sortPages(pages);\r\n\r\n    var clipPath;\r\n    if (this.autoPaging) {\r\n      var min = pages[0];\r\n      var max = pages[pages.length - 1];\r\n      for (var i = min; i < max + 1; i++) {\r\n        this.pdf.setPage(i);\r\n\r\n        var pageWidthMinusMargins =\r\n          this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1];\r\n        var topMargin = i === 1 ? this.posY + this.margin[0] : this.margin[0];\r\n        var firstPageHeight =\r\n          this.pdf.internal.pageSize.height -\r\n          this.posY -\r\n          this.margin[0] -\r\n          this.margin[2];\r\n        var pageHeightMinusMargins =\r\n          this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2];\r\n        var previousPageHeightSum =\r\n          i === 1 ? 0 : firstPageHeight + (i - 2) * pageHeightMinusMargins;\r\n\r\n        if (this.ctx.clip_path.length !== 0) {\r\n          var tmpPaths = this.path;\r\n          clipPath = JSON.parse(JSON.stringify(this.ctx.clip_path));\r\n          this.path = pathPositionRedo(\r\n            clipPath,\r\n            this.posX + this.margin[3],\r\n            -previousPageHeightSum + topMargin + this.ctx.prevPageLastElemOffset\r\n          );\r\n          drawPaths.call(this, \"fill\", true);\r\n          this.path = tmpPaths;\r\n        }\r\n        var tmpRect = JSON.parse(JSON.stringify(xRect));\r\n        tmpRect = pathPositionRedo(\r\n          [tmpRect],\r\n          this.posX + this.margin[3],\r\n          -previousPageHeightSum + topMargin + this.ctx.prevPageLastElemOffset\r\n        )[0];\r\n\r\n        const needsClipping = (i > min || i < max) && hasMargins.call(this);\r\n\r\n        if (needsClipping) {\r\n          this.pdf.saveGraphicsState();\r\n          this.pdf\r\n            .rect(\r\n              this.margin[3],\r\n              this.margin[0],\r\n              pageWidthMinusMargins,\r\n              pageHeightMinusMargins,\r\n              null\r\n            )\r\n            .clip()\r\n            .discardPath();\r\n        }\r\n        this.pdf.addImage(\r\n          img,\r\n          \"JPEG\",\r\n          tmpRect.x,\r\n          tmpRect.y,\r\n          tmpRect.w,\r\n          tmpRect.h,\r\n          null,\r\n          null,\r\n          angle\r\n        );\r\n        if (needsClipping) {\r\n          this.pdf.restoreGraphicsState();\r\n        }\r\n      }\r\n    } else {\r\n      this.pdf.addImage(\r\n        img,\r\n        \"JPEG\",\r\n        xRect.x,\r\n        xRect.y,\r\n        xRect.w,\r\n        xRect.h,\r\n        null,\r\n        null,\r\n        angle\r\n      );\r\n    }\r\n  };\r\n\r\n  var getPagesByPath = function(path, pageWrapX, pageWrapY) {\r\n    var result = [];\r\n    pageWrapX = pageWrapX || this.pdf.internal.pageSize.width;\r\n    pageWrapY =\r\n      pageWrapY ||\r\n      this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2];\r\n    var yOffset = this.posY + this.ctx.prevPageLastElemOffset;\r\n\r\n    switch (path.type) {\r\n      default:\r\n      case \"mt\":\r\n      case \"lt\":\r\n        result.push(Math.floor((path.y + yOffset) / pageWrapY) + 1);\r\n        break;\r\n      case \"arc\":\r\n        result.push(\r\n          Math.floor((path.y + yOffset - path.radius) / pageWrapY) + 1\r\n        );\r\n        result.push(\r\n          Math.floor((path.y + yOffset + path.radius) / pageWrapY) + 1\r\n        );\r\n        break;\r\n      case \"qct\":\r\n        var rectOfQuadraticCurve = getQuadraticCurveBoundary(\r\n          this.ctx.lastPoint.x,\r\n          this.ctx.lastPoint.y,\r\n          path.x1,\r\n          path.y1,\r\n          path.x,\r\n          path.y\r\n        );\r\n        result.push(\r\n          Math.floor((rectOfQuadraticCurve.y + yOffset) / pageWrapY) + 1\r\n        );\r\n        result.push(\r\n          Math.floor(\r\n            (rectOfQuadraticCurve.y + rectOfQuadraticCurve.h + yOffset) /\r\n              pageWrapY\r\n          ) + 1\r\n        );\r\n        break;\r\n      case \"bct\":\r\n        var rectOfBezierCurve = getBezierCurveBoundary(\r\n          this.ctx.lastPoint.x,\r\n          this.ctx.lastPoint.y,\r\n          path.x1,\r\n          path.y1,\r\n          path.x2,\r\n          path.y2,\r\n          path.x,\r\n          path.y\r\n        );\r\n        result.push(\r\n          Math.floor((rectOfBezierCurve.y + yOffset) / pageWrapY) + 1\r\n        );\r\n        result.push(\r\n          Math.floor(\r\n            (rectOfBezierCurve.y + rectOfBezierCurve.h + yOffset) / pageWrapY\r\n          ) + 1\r\n        );\r\n        break;\r\n      case \"rect\":\r\n        result.push(Math.floor((path.y + yOffset) / pageWrapY) + 1);\r\n        result.push(Math.floor((path.y + path.h + yOffset) / pageWrapY) + 1);\r\n    }\r\n\r\n    for (var i = 0; i < result.length; i += 1) {\r\n      while (this.pdf.internal.getNumberOfPages() < result[i]) {\r\n        addPage.call(this);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  var addPage = function() {\r\n    var fillStyle = this.fillStyle;\r\n    var strokeStyle = this.strokeStyle;\r\n    var font = this.font;\r\n    var lineCap = this.lineCap;\r\n    var lineWidth = this.lineWidth;\r\n    var lineJoin = this.lineJoin;\r\n    this.pdf.addPage();\r\n    this.fillStyle = fillStyle;\r\n    this.strokeStyle = strokeStyle;\r\n    this.font = font;\r\n    this.lineCap = lineCap;\r\n    this.lineWidth = lineWidth;\r\n    this.lineJoin = lineJoin;\r\n  };\r\n\r\n  var pathPositionRedo = function(paths, x, y) {\r\n    for (var i = 0; i < paths.length; i++) {\r\n      switch (paths[i].type) {\r\n        case \"bct\":\r\n          paths[i].x2 += x;\r\n          paths[i].y2 += y;\r\n        case \"qct\":\r\n          paths[i].x1 += x;\r\n          paths[i].y1 += y;\r\n        case \"mt\":\r\n        case \"lt\":\r\n        case \"arc\":\r\n        default:\r\n          paths[i].x += x;\r\n          paths[i].y += y;\r\n      }\r\n    }\r\n    return paths;\r\n  };\r\n\r\n  var sortPages = function(pages) {\r\n    return pages.sort(function(a, b) {\r\n      return a - b;\r\n    });\r\n  };\r\n\r\n  var pathPreProcess = function(rule, isClip) {\r\n    var fillStyle = this.fillStyle;\r\n    var strokeStyle = this.strokeStyle;\r\n    var lineCap = this.lineCap;\r\n    var oldLineWidth = this.lineWidth;\r\n    var lineWidth = Math.abs(oldLineWidth * this.ctx.transform.scaleX);\r\n    var lineJoin = this.lineJoin;\r\n\r\n    var origPath = JSON.parse(JSON.stringify(this.path));\r\n    var xPath = JSON.parse(JSON.stringify(this.path));\r\n    var clipPath;\r\n    var tmpPath;\r\n    var pages = [];\r\n\r\n    for (var i = 0; i < xPath.length; i++) {\r\n      if (typeof xPath[i].x !== \"undefined\") {\r\n        var page = getPagesByPath.call(this, xPath[i]);\r\n\r\n        for (var ii = 0; ii < page.length; ii += 1) {\r\n          if (pages.indexOf(page[ii]) === -1) {\r\n            pages.push(page[ii]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var j = 0; j < pages.length; j++) {\r\n      while (this.pdf.internal.getNumberOfPages() < pages[j]) {\r\n        addPage.call(this);\r\n      }\r\n    }\r\n    sortPages(pages);\r\n\r\n    if (this.autoPaging) {\r\n      var min = pages[0];\r\n      var max = pages[pages.length - 1];\r\n      for (var k = min; k < max + 1; k++) {\r\n        this.pdf.setPage(k);\r\n\r\n        this.fillStyle = fillStyle;\r\n        this.strokeStyle = strokeStyle;\r\n        this.lineCap = lineCap;\r\n        this.lineWidth = lineWidth;\r\n        this.lineJoin = lineJoin;\r\n\r\n        var pageWidthMinusMargins =\r\n          this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1];\r\n        var topMargin = k === 1 ? this.posY + this.margin[0] : this.margin[0];\r\n        var firstPageHeight =\r\n          this.pdf.internal.pageSize.height -\r\n          this.posY -\r\n          this.margin[0] -\r\n          this.margin[2];\r\n        var pageHeightMinusMargins =\r\n          this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2];\r\n        var previousPageHeightSum =\r\n          k === 1 ? 0 : firstPageHeight + (k - 2) * pageHeightMinusMargins;\r\n\r\n        if (this.ctx.clip_path.length !== 0) {\r\n          var tmpPaths = this.path;\r\n          clipPath = JSON.parse(JSON.stringify(this.ctx.clip_path));\r\n          this.path = pathPositionRedo(\r\n            clipPath,\r\n            this.posX + this.margin[3],\r\n            -previousPageHeightSum + topMargin + this.ctx.prevPageLastElemOffset\r\n          );\r\n          drawPaths.call(this, rule, true);\r\n          this.path = tmpPaths;\r\n        }\r\n        tmpPath = JSON.parse(JSON.stringify(origPath));\r\n        this.path = pathPositionRedo(\r\n          tmpPath,\r\n          this.posX + this.margin[3],\r\n          -previousPageHeightSum + topMargin + this.ctx.prevPageLastElemOffset\r\n        );\r\n        if (isClip === false || k === 0) {\r\n          const needsClipping = (k > min || k < max) && hasMargins.call(this);\r\n          if (needsClipping) {\r\n            this.pdf.saveGraphicsState();\r\n            this.pdf\r\n              .rect(\r\n                this.margin[3],\r\n                this.margin[0],\r\n                pageWidthMinusMargins,\r\n                pageHeightMinusMargins,\r\n                null\r\n              )\r\n              .clip()\r\n              .discardPath();\r\n          }\r\n          drawPaths.call(this, rule, isClip);\r\n          if (needsClipping) {\r\n            this.pdf.restoreGraphicsState();\r\n          }\r\n        }\r\n        this.lineWidth = oldLineWidth;\r\n      }\r\n    } else {\r\n      this.lineWidth = lineWidth;\r\n      drawPaths.call(this, rule, isClip);\r\n      this.lineWidth = oldLineWidth;\r\n    }\r\n    this.path = origPath;\r\n  };\r\n\r\n  /**\r\n   * Processes the paths\r\n   *\r\n   * @function\r\n   * @param rule {String}\r\n   * @param isClip {Boolean}\r\n   * @private\r\n   * @ignore\r\n   */\r\n  var drawPaths = function(rule, isClip) {\r\n    if (rule === \"stroke\" && !isClip && isStrokeTransparent.call(this)) {\r\n      return;\r\n    }\r\n\r\n    if (rule !== \"stroke\" && !isClip && isFillTransparent.call(this)) {\r\n      return;\r\n    }\r\n\r\n    var moves = [];\r\n\r\n    //var alpha = (this.ctx.fillOpacity < 1) ? this.ctx.fillOpacity : this.ctx.globalAlpha;\r\n    var delta;\r\n    var xPath = this.path;\r\n    for (var i = 0; i < xPath.length; i++) {\r\n      var pt = xPath[i];\r\n\r\n      switch (pt.type) {\r\n        case \"begin\":\r\n          moves.push({\r\n            begin: true\r\n          });\r\n          break;\r\n\r\n        case \"close\":\r\n          moves.push({\r\n            close: true\r\n          });\r\n          break;\r\n\r\n        case \"mt\":\r\n          moves.push({\r\n            start: pt,\r\n            deltas: [],\r\n            abs: []\r\n          });\r\n          break;\r\n\r\n        case \"lt\":\r\n          var iii = moves.length;\r\n          if (xPath[i - 1] && !isNaN(xPath[i - 1].x)) {\r\n            delta = [pt.x - xPath[i - 1].x, pt.y - xPath[i - 1].y];\r\n            if (iii > 0) {\r\n              for (iii; iii >= 0; iii--) {\r\n                if (\r\n                  moves[iii - 1].close !== true &&\r\n                  moves[iii - 1].begin !== true\r\n                ) {\r\n                  moves[iii - 1].deltas.push(delta);\r\n                  moves[iii - 1].abs.push(pt);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          break;\r\n\r\n        case \"bct\":\r\n          delta = [\r\n            pt.x1 - xPath[i - 1].x,\r\n            pt.y1 - xPath[i - 1].y,\r\n            pt.x2 - xPath[i - 1].x,\r\n            pt.y2 - xPath[i - 1].y,\r\n            pt.x - xPath[i - 1].x,\r\n            pt.y - xPath[i - 1].y\r\n          ];\r\n          moves[moves.length - 1].deltas.push(delta);\r\n          break;\r\n\r\n        case \"qct\":\r\n          var x1 = xPath[i - 1].x + (2.0 / 3.0) * (pt.x1 - xPath[i - 1].x);\r\n          var y1 = xPath[i - 1].y + (2.0 / 3.0) * (pt.y1 - xPath[i - 1].y);\r\n          var x2 = pt.x + (2.0 / 3.0) * (pt.x1 - pt.x);\r\n          var y2 = pt.y + (2.0 / 3.0) * (pt.y1 - pt.y);\r\n          var x3 = pt.x;\r\n          var y3 = pt.y;\r\n          delta = [\r\n            x1 - xPath[i - 1].x,\r\n            y1 - xPath[i - 1].y,\r\n            x2 - xPath[i - 1].x,\r\n            y2 - xPath[i - 1].y,\r\n            x3 - xPath[i - 1].x,\r\n            y3 - xPath[i - 1].y\r\n          ];\r\n          moves[moves.length - 1].deltas.push(delta);\r\n          break;\r\n\r\n        case \"arc\":\r\n          moves.push({\r\n            deltas: [],\r\n            abs: [],\r\n            arc: true\r\n          });\r\n\r\n          if (Array.isArray(moves[moves.length - 1].abs)) {\r\n            moves[moves.length - 1].abs.push(pt);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    var style;\r\n    if (!isClip) {\r\n      if (rule === \"stroke\") {\r\n        style = \"stroke\";\r\n      } else {\r\n        style = \"fill\";\r\n      }\r\n    } else {\r\n      style = null;\r\n    }\r\n\r\n    var began = false;\r\n    for (var k = 0; k < moves.length; k++) {\r\n      if (moves[k].arc) {\r\n        var arcs = moves[k].abs;\r\n\r\n        for (var ii = 0; ii < arcs.length; ii++) {\r\n          var arc = arcs[ii];\r\n\r\n          if (arc.type === \"arc\") {\r\n            drawArc.call(\r\n              this,\r\n              arc.x,\r\n              arc.y,\r\n              arc.radius,\r\n              arc.startAngle,\r\n              arc.endAngle,\r\n              arc.counterclockwise,\r\n              undefined,\r\n              isClip,\r\n              !began\r\n            );\r\n          } else {\r\n            drawLine.call(this, arc.x, arc.y);\r\n          }\r\n          began = true;\r\n        }\r\n      } else if (moves[k].close === true) {\r\n        this.pdf.internal.out(\"h\");\r\n        began = false;\r\n      } else if (moves[k].begin !== true) {\r\n        var x = moves[k].start.x;\r\n        var y = moves[k].start.y;\r\n        drawLines.call(this, moves[k].deltas, x, y);\r\n        began = true;\r\n      }\r\n    }\r\n\r\n    if (style) {\r\n      putStyle.call(this, style);\r\n    }\r\n    if (isClip) {\r\n      doClip.call(this);\r\n    }\r\n  };\r\n\r\n  var getBaseline = function(y) {\r\n    var height =\r\n      this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor;\r\n    var descent = height * (this.pdf.internal.getLineHeightFactor() - 1);\r\n    switch (this.ctx.textBaseline) {\r\n      case \"bottom\":\r\n        return y - descent;\r\n      case \"top\":\r\n        return y + height - descent;\r\n      case \"hanging\":\r\n        return y + height - 2 * descent;\r\n      case \"middle\":\r\n        return y + height / 2 - descent;\r\n      case \"ideographic\":\r\n        // TODO not implemented\r\n        return y;\r\n      case \"alphabetic\":\r\n      default:\r\n        return y;\r\n    }\r\n  };\r\n\r\n  var getTextBottom = function(yBaseLine) {\r\n    var height =\r\n      this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor;\r\n    var descent = height * (this.pdf.internal.getLineHeightFactor() - 1);\r\n    return yBaseLine + descent;\r\n  };\r\n\r\n  Context2D.prototype.createLinearGradient = function createLinearGradient() {\r\n    var canvasGradient = function canvasGradient() {};\r\n\r\n    canvasGradient.colorStops = [];\r\n    canvasGradient.addColorStop = function(offset, color) {\r\n      this.colorStops.push([offset, color]);\r\n    };\r\n\r\n    canvasGradient.getColor = function() {\r\n      if (this.colorStops.length === 0) {\r\n        return \"#000000\";\r\n      }\r\n\r\n      return this.colorStops[0][1];\r\n    };\r\n\r\n    canvasGradient.isCanvasGradient = true;\r\n    return canvasGradient;\r\n  };\r\n  Context2D.prototype.createPattern = function createPattern() {\r\n    return this.createLinearGradient();\r\n  };\r\n  Context2D.prototype.createRadialGradient = function createRadialGradient() {\r\n    return this.createLinearGradient();\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param x Edge point X\r\n   * @param y Edge point Y\r\n   * @param r Radius\r\n   * @param a1 start angle\r\n   * @param a2 end angle\r\n   * @param counterclockwise\r\n   * @param style\r\n   * @param isClip\r\n   */\r\n  var drawArc = function(\r\n    x,\r\n    y,\r\n    r,\r\n    a1,\r\n    a2,\r\n    counterclockwise,\r\n    style,\r\n    isClip,\r\n    includeMove\r\n  ) {\r\n    // http://hansmuller-flex.blogspot.com/2011/10/more-about-approximating-circular-arcs.html\r\n    var curves = createArc.call(this, r, a1, a2, counterclockwise);\r\n\r\n    for (var i = 0; i < curves.length; i++) {\r\n      var curve = curves[i];\r\n      if (i === 0) {\r\n        if (includeMove) {\r\n          doMove.call(this, curve.x1 + x, curve.y1 + y);\r\n        } else {\r\n          drawLine.call(this, curve.x1 + x, curve.y1 + y);\r\n        }\r\n      }\r\n      drawCurve.call(\r\n        this,\r\n        x,\r\n        y,\r\n        curve.x2,\r\n        curve.y2,\r\n        curve.x3,\r\n        curve.y3,\r\n        curve.x4,\r\n        curve.y4\r\n      );\r\n    }\r\n\r\n    if (!isClip) {\r\n      putStyle.call(this, style);\r\n    } else {\r\n      doClip.call(this);\r\n    }\r\n  };\r\n\r\n  var putStyle = function(style) {\r\n    switch (style) {\r\n      case \"stroke\":\r\n        this.pdf.internal.out(\"S\");\r\n        break;\r\n      case \"fill\":\r\n        this.pdf.internal.out(\"f\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  var doClip = function() {\r\n    this.pdf.clip();\r\n    this.pdf.discardPath();\r\n  };\r\n\r\n  var doMove = function(x, y) {\r\n    this.pdf.internal.out(\r\n      getHorizontalCoordinateString(x) +\r\n        \" \" +\r\n        getVerticalCoordinateString(y) +\r\n        \" m\"\r\n    );\r\n  };\r\n\r\n  var putText = function(options) {\r\n    var textAlign;\r\n    switch (options.align) {\r\n      case \"right\":\r\n      case \"end\":\r\n        textAlign = \"right\";\r\n        break;\r\n      case \"center\":\r\n        textAlign = \"center\";\r\n        break;\r\n      case \"left\":\r\n      case \"start\":\r\n      default:\r\n        textAlign = \"left\";\r\n        break;\r\n    }\r\n\r\n    var textDimensions = this.pdf.getTextDimensions(options.text);\r\n    var yBaseLine = getBaseline.call(this, options.y);\r\n    var yBottom = getTextBottom.call(this, yBaseLine);\r\n    var yTop = yBottom - textDimensions.h;\r\n\r\n    var pt = this.ctx.transform.applyToPoint(new Point(options.x, yBaseLine));\r\n    var decomposedTransformationMatrix = this.ctx.transform.decompose();\r\n    var matrix = new Matrix();\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.translate);\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.skew);\r\n    matrix = matrix.multiply(decomposedTransformationMatrix.scale);\r\n\r\n    var baselineRect = this.ctx.transform.applyToRectangle(\r\n      new Rectangle(options.x, yBaseLine, textDimensions.w, textDimensions.h)\r\n    );\r\n    var textBounds = matrix.applyToRectangle(\r\n      new Rectangle(options.x, yTop, textDimensions.w, textDimensions.h)\r\n    );\r\n    var pageArray = getPagesByPath.call(this, textBounds);\r\n    var pages = [];\r\n    for (var ii = 0; ii < pageArray.length; ii += 1) {\r\n      if (pages.indexOf(pageArray[ii]) === -1) {\r\n        pages.push(pageArray[ii]);\r\n      }\r\n    }\r\n\r\n    sortPages(pages);\r\n\r\n    var clipPath, oldSize, oldLineWidth;\r\n    if (this.autoPaging) {\r\n      var min = pages[0];\r\n      var max = pages[pages.length - 1];\r\n      for (var i = min; i < max + 1; i++) {\r\n        this.pdf.setPage(i);\r\n\r\n        var topMargin = i === 1 ? this.posY + this.margin[0] : this.margin[0];\r\n        var firstPageHeight =\r\n          this.pdf.internal.pageSize.height -\r\n          this.posY -\r\n          this.margin[0] -\r\n          this.margin[2];\r\n        var pageHeightMinusBottomMargin =\r\n          this.pdf.internal.pageSize.height - this.margin[2];\r\n        var pageHeightMinusMargins =\r\n          pageHeightMinusBottomMargin - this.margin[0];\r\n        var pageWidthMinusRightMargin =\r\n          this.pdf.internal.pageSize.width - this.margin[1];\r\n        var pageWidthMinusMargins = pageWidthMinusRightMargin - this.margin[3];\r\n        var previousPageHeightSum =\r\n          i === 1 ? 0 : firstPageHeight + (i - 2) * pageHeightMinusMargins;\r\n\r\n        if (this.ctx.clip_path.length !== 0) {\r\n          var tmpPaths = this.path;\r\n          clipPath = JSON.parse(JSON.stringify(this.ctx.clip_path));\r\n          this.path = pathPositionRedo(\r\n            clipPath,\r\n            this.posX + this.margin[3],\r\n            -1 * previousPageHeightSum + topMargin\r\n          );\r\n          drawPaths.call(this, \"fill\", true);\r\n          this.path = tmpPaths;\r\n        }\r\n        var textBoundsOnPage = pathPositionRedo(\r\n          [JSON.parse(JSON.stringify(textBounds))],\r\n          this.posX + this.margin[3],\r\n          -previousPageHeightSum + topMargin + this.ctx.prevPageLastElemOffset\r\n        )[0];\r\n\r\n        if (options.scale >= 0.01) {\r\n          oldSize = this.pdf.internal.getFontSize();\r\n          this.pdf.setFontSize(oldSize * options.scale);\r\n          oldLineWidth = this.lineWidth;\r\n          this.lineWidth = oldLineWidth * options.scale;\r\n        }\r\n\r\n        var doSlice = this.autoPaging !== \"text\";\r\n\r\n        if (\r\n          doSlice ||\r\n          textBoundsOnPage.y + textBoundsOnPage.h <= pageHeightMinusBottomMargin\r\n        ) {\r\n          if (\r\n            doSlice ||\r\n            (textBoundsOnPage.y >= topMargin &&\r\n              textBoundsOnPage.x <= pageWidthMinusRightMargin)\r\n          ) {\r\n            var croppedText = doSlice\r\n              ? options.text\r\n              : this.pdf.splitTextToSize(\r\n                  options.text,\r\n                  options.maxWidth ||\r\n                    pageWidthMinusRightMargin - textBoundsOnPage.x\r\n                )[0];\r\n            var baseLineRectOnPage = pathPositionRedo(\r\n              [JSON.parse(JSON.stringify(baselineRect))],\r\n              this.posX + this.margin[3],\r\n              -previousPageHeightSum +\r\n                topMargin +\r\n                this.ctx.prevPageLastElemOffset\r\n            )[0];\r\n\r\n            const needsClipping =\r\n              doSlice && (i > min || i < max) && hasMargins.call(this);\r\n\r\n            if (needsClipping) {\r\n              this.pdf.saveGraphicsState();\r\n              this.pdf\r\n                .rect(\r\n                  this.margin[3],\r\n                  this.margin[0],\r\n                  pageWidthMinusMargins,\r\n                  pageHeightMinusMargins,\r\n                  null\r\n                )\r\n                .clip()\r\n                .discardPath();\r\n            }\r\n\r\n            this.pdf.text(\r\n              croppedText,\r\n              baseLineRectOnPage.x,\r\n              baseLineRectOnPage.y,\r\n              {\r\n                angle: options.angle,\r\n                align: textAlign,\r\n                renderingMode: options.renderingMode\r\n              }\r\n            );\r\n\r\n            if (needsClipping) {\r\n              this.pdf.restoreGraphicsState();\r\n            }\r\n          }\r\n        } else {\r\n          // This text is the last element of the page, but it got cut off due to the margin\r\n          // so we render it in the next page\r\n\r\n          if (textBoundsOnPage.y < pageHeightMinusBottomMargin) {\r\n            // As a result, all other elements have their y offset increased\r\n            this.ctx.prevPageLastElemOffset +=\r\n              pageHeightMinusBottomMargin - textBoundsOnPage.y;\r\n          }\r\n        }\r\n\r\n        if (options.scale >= 0.01) {\r\n          this.pdf.setFontSize(oldSize);\r\n          this.lineWidth = oldLineWidth;\r\n        }\r\n      }\r\n    } else {\r\n      if (options.scale >= 0.01) {\r\n        oldSize = this.pdf.internal.getFontSize();\r\n        this.pdf.setFontSize(oldSize * options.scale);\r\n        oldLineWidth = this.lineWidth;\r\n        this.lineWidth = oldLineWidth * options.scale;\r\n      }\r\n      this.pdf.text(options.text, pt.x + this.posX, pt.y + this.posY, {\r\n        angle: options.angle,\r\n        align: textAlign,\r\n        renderingMode: options.renderingMode,\r\n        maxWidth: options.maxWidth\r\n      });\r\n\r\n      if (options.scale >= 0.01) {\r\n        this.pdf.setFontSize(oldSize);\r\n        this.lineWidth = oldLineWidth;\r\n      }\r\n    }\r\n  };\r\n\r\n  var drawLine = function(x, y, prevX, prevY) {\r\n    prevX = prevX || 0;\r\n    prevY = prevY || 0;\r\n\r\n    this.pdf.internal.out(\r\n      getHorizontalCoordinateString(x + prevX) +\r\n        \" \" +\r\n        getVerticalCoordinateString(y + prevY) +\r\n        \" l\"\r\n    );\r\n  };\r\n\r\n  var drawLines = function(lines, x, y) {\r\n    return this.pdf.lines(lines, x, y, null, null);\r\n  };\r\n\r\n  var drawCurve = function(x, y, x1, y1, x2, y2, x3, y3) {\r\n    this.pdf.internal.out(\r\n      [\r\n        f2(getHorizontalCoordinate(x1 + x)),\r\n        f2(getVerticalCoordinate(y1 + y)),\r\n        f2(getHorizontalCoordinate(x2 + x)),\r\n        f2(getVerticalCoordinate(y2 + y)),\r\n        f2(getHorizontalCoordinate(x3 + x)),\r\n        f2(getVerticalCoordinate(y3 + y)),\r\n        \"c\"\r\n      ].join(\" \")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return a array of objects that represent bezier curves which approximate the circular arc centered at the origin, from startAngle to endAngle (radians) with the specified radius.\r\n   *\r\n   * Each bezier curve is an object with four points, where x1,y1 and x4,y4 are the arc's end points and x2,y2 and x3,y3 are the cubic bezier's control points.\r\n   * @function createArc\r\n   */\r\n  var createArc = function(radius, startAngle, endAngle, anticlockwise) {\r\n    var EPSILON = 0.00001; // Roughly 1/1000th of a degree, see below\r\n    var twoPi = Math.PI * 2;\r\n    var halfPi = Math.PI / 2.0;\r\n\r\n    while (startAngle > endAngle) {\r\n      startAngle = startAngle - twoPi;\r\n    }\r\n    var totalAngle = Math.abs(endAngle - startAngle);\r\n    if (totalAngle < twoPi) {\r\n      if (anticlockwise) {\r\n        totalAngle = twoPi - totalAngle;\r\n      }\r\n    }\r\n\r\n    // Compute the sequence of arc curves, up to PI/2 at a time.\r\n    var curves = [];\r\n\r\n    // clockwise or counterclockwise\r\n    var sgn = anticlockwise ? -1 : +1;\r\n\r\n    var a1 = startAngle;\r\n    for (; totalAngle > EPSILON; ) {\r\n      var remain = sgn * Math.min(totalAngle, halfPi);\r\n      var a2 = a1 + remain;\r\n      curves.push(createSmallArc.call(this, radius, a1, a2));\r\n      totalAngle -= Math.abs(a2 - a1);\r\n      a1 = a2;\r\n    }\r\n\r\n    return curves;\r\n  };\r\n\r\n  /**\r\n   * Cubic bezier approximation of a circular arc centered at the origin, from (radians) a1 to a2, where a2-a1 < pi/2. The arc's radius is r.\r\n   *\r\n   * Returns an object with four points, where x1,y1 and x4,y4 are the arc's end points and x2,y2 and x3,y3 are the cubic bezier's control points.\r\n   *\r\n   * This algorithm is based on the approach described in: A. Riškus, \"Approximation of a Cubic Bezier Curve by Circular Arcs and Vice Versa,\" Information Technology and Control, 35(4), 2006 pp. 371-378.\r\n   */\r\n  var createSmallArc = function(r, a1, a2) {\r\n    var a = (a2 - a1) / 2.0;\r\n\r\n    var x4 = r * Math.cos(a);\r\n    var y4 = r * Math.sin(a);\r\n    var x1 = x4;\r\n    var y1 = -y4;\r\n\r\n    var q1 = x1 * x1 + y1 * y1;\r\n    var q2 = q1 + x1 * x4 + y1 * y4;\r\n    var k2 = ((4 / 3) * (Math.sqrt(2 * q1 * q2) - q2)) / (x1 * y4 - y1 * x4);\r\n\r\n    var x2 = x1 - k2 * y1;\r\n    var y2 = y1 + k2 * x1;\r\n    var x3 = x2;\r\n    var y3 = -y2;\r\n\r\n    var ar = a + a1;\r\n    var cos_ar = Math.cos(ar);\r\n    var sin_ar = Math.sin(ar);\r\n\r\n    return {\r\n      x1: r * Math.cos(a1),\r\n      y1: r * Math.sin(a1),\r\n      x2: x2 * cos_ar - y2 * sin_ar,\r\n      y2: x2 * sin_ar + y2 * cos_ar,\r\n      x3: x3 * cos_ar - y3 * sin_ar,\r\n      y3: x3 * sin_ar + y3 * cos_ar,\r\n      x4: r * Math.cos(a2),\r\n      y4: r * Math.sin(a2)\r\n    };\r\n  };\r\n\r\n  var rad2deg = function(value) {\r\n    return (value * 180) / Math.PI;\r\n  };\r\n\r\n  var getQuadraticCurveBoundary = function(sx, sy, cpx, cpy, ex, ey) {\r\n    var midX1 = sx + (cpx - sx) * 0.5;\r\n    var midY1 = sy + (cpy - sy) * 0.5;\r\n    var midX2 = ex + (cpx - ex) * 0.5;\r\n    var midY2 = ey + (cpy - ey) * 0.5;\r\n    var resultX1 = Math.min(sx, ex, midX1, midX2);\r\n    var resultX2 = Math.max(sx, ex, midX1, midX2);\r\n    var resultY1 = Math.min(sy, ey, midY1, midY2);\r\n    var resultY2 = Math.max(sy, ey, midY1, midY2);\r\n    return new Rectangle(\r\n      resultX1,\r\n      resultY1,\r\n      resultX2 - resultX1,\r\n      resultY2 - resultY1\r\n    );\r\n  };\r\n\r\n  //De Casteljau algorithm\r\n  var getBezierCurveBoundary = function(ax, ay, bx, by, cx, cy, dx, dy) {\r\n    var tobx = bx - ax;\r\n    var toby = by - ay;\r\n    var tocx = cx - bx;\r\n    var tocy = cy - by;\r\n    var todx = dx - cx;\r\n    var tody = dy - cy;\r\n    var precision = 40;\r\n    var d,\r\n      i,\r\n      px,\r\n      py,\r\n      qx,\r\n      qy,\r\n      rx,\r\n      ry,\r\n      tx,\r\n      ty,\r\n      sx,\r\n      sy,\r\n      x,\r\n      y,\r\n      minx,\r\n      miny,\r\n      maxx,\r\n      maxy,\r\n      toqx,\r\n      toqy,\r\n      torx,\r\n      tory,\r\n      totx,\r\n      toty;\r\n    for (i = 0; i < precision + 1; i++) {\r\n      d = i / precision;\r\n      px = ax + d * tobx;\r\n      py = ay + d * toby;\r\n      qx = bx + d * tocx;\r\n      qy = by + d * tocy;\r\n      rx = cx + d * todx;\r\n      ry = cy + d * tody;\r\n      toqx = qx - px;\r\n      toqy = qy - py;\r\n      torx = rx - qx;\r\n      tory = ry - qy;\r\n\r\n      sx = px + d * toqx;\r\n      sy = py + d * toqy;\r\n      tx = qx + d * torx;\r\n      ty = qy + d * tory;\r\n      totx = tx - sx;\r\n      toty = ty - sy;\r\n\r\n      x = sx + d * totx;\r\n      y = sy + d * toty;\r\n      if (i == 0) {\r\n        minx = x;\r\n        miny = y;\r\n        maxx = x;\r\n        maxy = y;\r\n      } else {\r\n        minx = Math.min(minx, x);\r\n        miny = Math.min(miny, y);\r\n        maxx = Math.max(maxx, x);\r\n        maxy = Math.max(maxy, y);\r\n      }\r\n    }\r\n    return new Rectangle(\r\n      Math.round(minx),\r\n      Math.round(miny),\r\n      Math.round(maxx - minx),\r\n      Math.round(maxy - miny)\r\n    );\r\n  };\r\n\r\n  var getPrevLineDashValue = function(lineDash, lineDashOffset) {\r\n    return JSON.stringify({\r\n      lineDash: lineDash,\r\n      lineDashOffset: lineDashOffset\r\n    });\r\n  };\r\n\r\n  var setLineDash = function() {\r\n    // Avoid unnecessary line dash declarations.\r\n    if (\r\n      !this.prevLineDash &&\r\n      !this.ctx.lineDash.length &&\r\n      !this.ctx.lineDashOffset\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Avoid unnecessary line dash declarations.\r\n    const nextLineDash = getPrevLineDashValue(\r\n      this.ctx.lineDash,\r\n      this.ctx.lineDashOffset\r\n    );\r\n    if (this.prevLineDash !== nextLineDash) {\r\n      this.pdf.setLineDash(this.ctx.lineDash, this.ctx.lineDashOffset);\r\n      this.prevLineDash = nextLineDash;\r\n    }\r\n  };\r\n})(jsPDF.API);\r\n","/**\n * @license\n * jsPDF filters PlugIn\n * Copyright (c) 2014 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { zlibSync } from \"../libs/fflate.js\";\n\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var ASCII85Encode = function(a) {\n    var b, c, d, e, f, g, h, i, j, k;\n    // eslint-disable-next-line no-control-regex\n    for (\n      !/[^\\x00-\\xFF]/.test(a),\n        b = \"\\x00\\x00\\x00\\x00\".slice(a.length % 4 || 4),\n        a += b,\n        c = [],\n        d = 0,\n        e = a.length;\n      e > d;\n      d += 4\n    )\n      (f =\n        (a.charCodeAt(d) << 24) +\n        (a.charCodeAt(d + 1) << 16) +\n        (a.charCodeAt(d + 2) << 8) +\n        a.charCodeAt(d + 3)),\n        0 !== f\n          ? ((k = f % 85),\n            (f = (f - k) / 85),\n            (j = f % 85),\n            (f = (f - j) / 85),\n            (i = f % 85),\n            (f = (f - i) / 85),\n            (h = f % 85),\n            (f = (f - h) / 85),\n            (g = f % 85),\n            c.push(g + 33, h + 33, i + 33, j + 33, k + 33))\n          : c.push(122);\n    return (\n      (function(a, b) {\n        for (var c = b; c > 0; c--) a.pop();\n      })(c, b.length),\n      String.fromCharCode.apply(String, c) + \"~>\"\n    );\n  };\n\n  var ASCII85Decode = function(a) {\n    var c,\n      d,\n      e,\n      f,\n      g,\n      h = String,\n      l = \"length\",\n      w = 255,\n      x = \"charCodeAt\",\n      y = \"slice\",\n      z = \"replace\";\n    for (\n      \"~>\" === a[y](-2),\n        a = a[y](0, -2)\n          [z](/\\s/g, \"\")\n          [z](\"z\", \"!!!!!\"),\n        c = \"uuuuu\"[y](a[l] % 5 || 5),\n        a += c,\n        e = [],\n        f = 0,\n        g = a[l];\n      g > f;\n      f += 5\n    )\n      (d =\n        52200625 * (a[x](f) - 33) +\n        614125 * (a[x](f + 1) - 33) +\n        7225 * (a[x](f + 2) - 33) +\n        85 * (a[x](f + 3) - 33) +\n        (a[x](f + 4) - 33)),\n        e.push(w & (d >> 24), w & (d >> 16), w & (d >> 8), w & d);\n    return (\n      (function(a, b) {\n        for (var c = b; c > 0; c--) a.pop();\n      })(e, c[l]),\n      h.fromCharCode.apply(h, e)\n    );\n  };\n\n  var ASCIIHexEncode = function(value) {\n    return (\n      value\n        .split(\"\")\n        .map(function(value) {\n          return (\"0\" + value.charCodeAt().toString(16)).slice(-2);\n        })\n        .join(\"\") + \">\"\n    );\n  };\n\n  var ASCIIHexDecode = function(value) {\n    var regexCheckIfHex = new RegExp(/^([0-9A-Fa-f]{2})+$/);\n    value = value.replace(/\\s/g, \"\");\n    if (value.indexOf(\">\") !== -1) {\n      value = value.substr(0, value.indexOf(\">\"));\n    }\n    if (value.length % 2) {\n      value += \"0\";\n    }\n    if (regexCheckIfHex.test(value) === false) {\n      return \"\";\n    }\n    var result = \"\";\n    for (var i = 0; i < value.length; i += 2) {\n      result += String.fromCharCode(\"0x\" + (value[i] + value[i + 1]));\n    }\n    return result;\n  };\n  /*\n  var FlatePredictors = {\n      None: 1,\n      TIFF: 2,\n      PNG_None: 10,\n      PNG_Sub: 11,\n      PNG_Up: 12,\n      PNG_Average: 13,\n      PNG_Paeth: 14,\n      PNG_Optimum: 15\n  };\n  */\n\n  var FlateEncode = function(data) {\n    var arr = new Uint8Array(data.length);\n    var i = data.length;\n    while (i--) {\n      arr[i] = data.charCodeAt(i);\n    }\n    arr = zlibSync(arr);\n    data = arr.reduce(function(data, byte) {\n      return data + String.fromCharCode(byte);\n    }, \"\");\n    return data;\n  };\n\n  jsPDFAPI.processDataByFilters = function(origData, filterChain) {\n    \"use strict\";\n    var i = 0;\n    var data = origData || \"\";\n    var reverseChain = [];\n    filterChain = filterChain || [];\n\n    if (typeof filterChain === \"string\") {\n      filterChain = [filterChain];\n    }\n\n    for (i = 0; i < filterChain.length; i += 1) {\n      switch (filterChain[i]) {\n        case \"ASCII85Decode\":\n        case \"/ASCII85Decode\":\n          data = ASCII85Decode(data);\n          reverseChain.push(\"/ASCII85Encode\");\n          break;\n        case \"ASCII85Encode\":\n        case \"/ASCII85Encode\":\n          data = ASCII85Encode(data);\n          reverseChain.push(\"/ASCII85Decode\");\n          break;\n        case \"ASCIIHexDecode\":\n        case \"/ASCIIHexDecode\":\n          data = ASCIIHexDecode(data);\n          reverseChain.push(\"/ASCIIHexEncode\");\n          break;\n        case \"ASCIIHexEncode\":\n        case \"/ASCIIHexEncode\":\n          data = ASCIIHexEncode(data);\n          reverseChain.push(\"/ASCIIHexDecode\");\n          break;\n        case \"FlateEncode\":\n        case \"/FlateEncode\":\n          data = FlateEncode(data);\n          reverseChain.push(\"/FlateDecode\");\n          break;\n        default:\n          throw new Error(\n            'The filter: \"' + filterChain[i] + '\" is not implemented'\n          );\n      }\n    }\n\n    return { data: data, reverseChain: reverseChain.reverse().join(\" \") };\n  };\n})(jsPDF.API);\n","/**\n * @license\n * jsPDF fileloading PlugIn\n * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * @name fileloading\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * @name loadFile\n   * @function\n   * @param {string} url\n   * @param {boolean} sync\n   * @param {function} callback\n   * @returns {string|undefined} result\n   */\n  jsPDFAPI.loadFile = function(url, sync, callback) {\n    return browserRequest(url, sync, callback);\n\n  };\n\n  /**\n   * @name loadImageFile\n   * @function\n   * @param {string} path\n   * @param {boolean} sync\n   * @param {function} callback\n   */\n  jsPDFAPI.loadImageFile = jsPDFAPI.loadFile;\n\n  function browserRequest(url, sync, callback) {\n    sync = sync === false ? false : true;\n    callback = typeof callback === \"function\" ? callback : function() {};\n    var result = undefined;\n\n    var xhr = function(url, sync, callback) {\n      var request = new XMLHttpRequest();\n      var i = 0;\n\n      var sanitizeUnicode = function(data) {\n        var dataLength = data.length;\n        var charArray = [];\n        var StringFromCharCode = String.fromCharCode;\n\n        //Transform Unicode to ASCII\n        for (i = 0; i < dataLength; i += 1) {\n          charArray.push(StringFromCharCode(data.charCodeAt(i) & 0xff));\n        }\n        return charArray.join(\"\");\n      };\n\n      request.open(\"GET\", url, !sync);\n      // XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com]\n      request.overrideMimeType(\"text/plain; charset=x-user-defined\");\n\n      if (sync === false) {\n        request.onload = function() {\n          if (request.status === 200) {\n            callback(sanitizeUnicode(this.responseText));\n          } else {\n            callback(undefined);\n          }\n        };\n      }\n      request.send(null);\n\n      if (sync && request.status === 200) {\n        return sanitizeUnicode(request.responseText);\n      }\n    };\n    try {\n      result = xhr(url, sync, callback);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n    return result;\n  }\n\n  function nodeReadFile(url, sync, callback) {\n    sync = sync === false ? false : true;\n    var result = undefined;\n\n    var fs = require(\"fs\");\n    var path = require(\"path\");\n\n    url = path.resolve(url);\n    if (sync) {\n      try {\n        result = fs.readFileSync(url, { encoding: \"latin1\" });\n      } catch (e) {\n        return undefined;\n      }\n    } else {\n      fs.readFile(url, { encoding: \"latin1\" }, function(err, data) {\n        if (!callback) {\n          return;\n        }\n        if (err) {\n          callback(undefined);\n        }\n        callback(data);\n      });\n    }\n\n    return result;\n  }\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2018 Erik Koopmans\n * Released under the MIT License.\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { normalizeFontFace } from \"../libs/fontFace.js\";\nimport { globalObject } from \"../libs/globalObject.js\";\n\n/**\n * jsPDF html PlugIn\n *\n * @name html\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  function loadHtml2Canvas() {\n    return (function() {\n      if (globalObject[\"html2canvas\"]) {\n        return Promise.resolve(globalObject[\"html2canvas\"]);\n      }\n\n      return import(\"html2canvas\");\n\n    })()\n      .catch(function(e) {\n        return Promise.reject(new Error(\"Could not load html2canvas: \" + e));\n      })\n      .then(function(html2canvas) {\n        return html2canvas.default ? html2canvas.default : html2canvas;\n      });\n  }\n\n  function loadDomPurify() {\n    return (function() {\n      if (globalObject[\"DOMPurify\"]) {\n        return Promise.resolve(globalObject[\"DOMPurify\"]);\n      }\n\n      return import(\"dompurify\");\n\n    })()\n      .catch(function(e) {\n        return Promise.reject(new Error(\"Could not load dompurify: \" + e));\n      })\n      .then(function(dompurify) {\n        return dompurify.default ? dompurify.default : dompurify;\n      });\n  }\n\n  /**\n   * Determine the type of a variable/object.\n   *\n   * @private\n   * @ignore\n   */\n  var objType = function(obj) {\n    var type = typeof obj;\n    if (type === \"undefined\") return \"undefined\";\n    else if (type === \"string\" || obj instanceof String) return \"string\";\n    else if (type === \"number\" || obj instanceof Number) return \"number\";\n    else if (type === \"function\" || obj instanceof Function) return \"function\";\n    else if (!!obj && obj.constructor === Array) return \"array\";\n    else if (obj && obj.nodeType === 1) return \"element\";\n    else if (type === \"object\") return \"object\";\n    else return \"unknown\";\n  };\n\n  /**\n   * Create an HTML element with optional className, innerHTML, and style.\n   *\n   * @private\n   * @ignore\n   */\n  var createElement = function(tagName, opt) {\n    var el = document.createElement(tagName);\n    if (opt.className) el.className = opt.className;\n    if (opt.innerHTML && opt.dompurify) {\n      el.innerHTML = opt.dompurify.sanitize(opt.innerHTML);\n    }\n    for (var key in opt.style) {\n      el.style[key] = opt.style[key];\n    }\n    return el;\n  };\n\n  /**\n   * Deep-clone a node and preserve contents/properties.\n   *\n   * @private\n   * @ignore\n   */\n  var cloneNode = function(node, javascriptEnabled) {\n    // Recursively clone the node.\n    var clone =\n      node.nodeType === 3\n        ? document.createTextNode(node.nodeValue)\n        : node.cloneNode(false);\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (\n        javascriptEnabled === true ||\n        child.nodeType !== 1 ||\n        child.nodeName !== \"SCRIPT\"\n      ) {\n        clone.appendChild(cloneNode(child, javascriptEnabled));\n      }\n    }\n\n    if (node.nodeType === 1) {\n      // Preserve contents/properties of special nodes.\n      if (node.nodeName === \"CANVAS\") {\n        clone.width = node.width;\n        clone.height = node.height;\n        clone.getContext(\"2d\").drawImage(node, 0, 0);\n      } else if (node.nodeName === \"TEXTAREA\" || node.nodeName === \"SELECT\") {\n        clone.value = node.value;\n      }\n\n      // Preserve the node's scroll position when it loads.\n      clone.addEventListener(\n        \"load\",\n        function() {\n          clone.scrollTop = node.scrollTop;\n          clone.scrollLeft = node.scrollLeft;\n        },\n        true\n      );\n    }\n\n    // Return the cloned node.\n    return clone;\n  };\n\n  /* ----- CONSTRUCTOR ----- */\n\n  var Worker = function Worker(opt) {\n    // Create the root parent for the proto chain, and the starting Worker.\n    var root = Object.assign(\n      Worker.convert(Promise.resolve()),\n      JSON.parse(JSON.stringify(Worker.template))\n    );\n    var self = Worker.convert(Promise.resolve(), root);\n\n    // Set progress, optional settings, and return.\n    self = self.setProgress(1, Worker, 1, [Worker]);\n    self = self.set(opt);\n    return self;\n  };\n\n  // Boilerplate for subclassing Promise.\n  Worker.prototype = Object.create(Promise.prototype);\n  Worker.prototype.constructor = Worker;\n\n  // Converts/casts promises into Workers.\n  Worker.convert = function convert(promise, inherit) {\n    // Uses prototypal inheritance to receive changes made to ancestors' properties.\n    promise.__proto__ = inherit || Worker.prototype;\n    return promise;\n  };\n\n  Worker.template = {\n    prop: {\n      src: null,\n      container: null,\n      overlay: null,\n      canvas: null,\n      img: null,\n      pdf: null,\n      pageSize: null,\n      callback: function() {}\n    },\n    progress: {\n      val: 0,\n      state: null,\n      n: 0,\n      stack: []\n    },\n    opt: {\n      filename: \"file.pdf\",\n      margin: [0, 0, 0, 0],\n      enableLinks: true,\n      x: 0,\n      y: 0,\n      html2canvas: {},\n      jsPDF: {},\n      backgroundColor: \"transparent\"\n    }\n  };\n\n  /* ----- FROM / TO ----- */\n\n  Worker.prototype.from = function from(src, type) {\n    function getType(src) {\n      switch (objType(src)) {\n        case \"string\":\n          return \"string\";\n        case \"element\":\n          return src.nodeName.toLowerCase() === \"canvas\" ? \"canvas\" : \"element\";\n        default:\n          return \"unknown\";\n      }\n    }\n\n    return this.then(function from_main() {\n      type = type || getType(src);\n      switch (type) {\n        case \"string\":\n          return this.then(loadDomPurify).then(function(dompurify) {\n            return this.set({\n              src: createElement(\"div\", {\n                innerHTML: src,\n                dompurify: dompurify\n              })\n            });\n          });\n        case \"element\":\n          return this.set({ src: src });\n        case \"canvas\":\n          return this.set({ canvas: src });\n        case \"img\":\n          return this.set({ img: src });\n        default:\n          return this.error(\"Unknown source type.\");\n      }\n    });\n  };\n\n  Worker.prototype.to = function to(target) {\n    // Route the 'to' request to the appropriate method.\n    switch (target) {\n      case \"container\":\n        return this.toContainer();\n      case \"canvas\":\n        return this.toCanvas();\n      case \"img\":\n        return this.toImg();\n      case \"pdf\":\n        return this.toPdf();\n      default:\n        return this.error(\"Invalid target.\");\n    }\n  };\n\n  Worker.prototype.toContainer = function toContainer() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkSrc() {\n        return (\n          this.prop.src || this.error(\"Cannot duplicate - no source HTML.\")\n        );\n      },\n      function checkPageSize() {\n        return this.prop.pageSize || this.setPageSize();\n      }\n    ];\n    return this.thenList(prereqs).then(function toContainer_main() {\n      // Define the CSS styles for the container and its overlay parent.\n      var overlayCSS = {\n        position: \"fixed\",\n        overflow: \"hidden\",\n        zIndex: 1000,\n        left: \"-100000px\",\n        right: 0,\n        bottom: 0,\n        top: 0\n      };\n      var containerCSS = {\n        position: \"relative\",\n        display: \"inline-block\",\n        width:\n          (typeof this.opt.width === \"number\" &&\n          !isNaN(this.opt.width) &&\n          typeof this.opt.windowWidth === \"number\" &&\n          !isNaN(this.opt.windowWidth)\n            ? this.opt.windowWidth\n            : Math.max(\n                this.prop.src.clientWidth,\n                this.prop.src.scrollWidth,\n                this.prop.src.offsetWidth\n              )) + \"px\",\n        left: 0,\n        right: 0,\n        top: 0,\n        margin: \"auto\",\n        backgroundColor: this.opt.backgroundColor\n      }; // Set the overlay to hidden (could be changed in the future to provide a print preview).\n\n      var source = cloneNode(\n        this.prop.src,\n        this.opt.html2canvas.javascriptEnabled\n      );\n\n      if (source.tagName === \"BODY\") {\n        containerCSS.height =\n          Math.max(\n            document.body.scrollHeight,\n            document.body.offsetHeight,\n            document.documentElement.clientHeight,\n            document.documentElement.scrollHeight,\n            document.documentElement.offsetHeight\n          ) + \"px\";\n      }\n\n      this.prop.overlay = createElement(\"div\", {\n        className: \"html2pdf__overlay\",\n        style: overlayCSS\n      });\n      this.prop.container = createElement(\"div\", {\n        className: \"html2pdf__container\",\n        style: containerCSS\n      });\n      this.prop.container.appendChild(source);\n      this.prop.container.firstChild.appendChild(\n        createElement(\"div\", {\n          style: {\n            clear: \"both\",\n            border: \"0 none transparent\",\n            margin: 0,\n            padding: 0,\n            height: 0\n          }\n        })\n      );\n      this.prop.container.style.float = \"none\";\n      this.prop.overlay.appendChild(this.prop.container);\n      document.body.appendChild(this.prop.overlay);\n      this.prop.container.firstChild.style.position = \"relative\";\n      this.prop.container.height =\n        Math.max(\n          this.prop.container.firstChild.clientHeight,\n          this.prop.container.firstChild.scrollHeight,\n          this.prop.container.firstChild.offsetHeight\n        ) + \"px\";\n    });\n  };\n\n  Worker.prototype.toCanvas = function toCanvas() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkContainer() {\n        return (\n          document.body.contains(this.prop.container) || this.toContainer()\n        );\n      }\n    ];\n\n    // Fulfill prereqs then create the canvas.\n    return this.thenList(prereqs)\n      .then(loadHtml2Canvas)\n      .then(function toCanvas_main(html2canvas) {\n        // Handle old-fashioned 'onrendered' argument.\n        var options = Object.assign({}, this.opt.html2canvas);\n        delete options.onrendered;\n\n        return html2canvas(this.prop.container, options);\n      })\n      .then(function toCanvas_post(canvas) {\n        // Handle old-fashioned 'onrendered' argument.\n        var onRendered = this.opt.html2canvas.onrendered || function() {};\n        onRendered(canvas);\n\n        this.prop.canvas = canvas;\n        document.body.removeChild(this.prop.overlay);\n      });\n  };\n\n  Worker.prototype.toContext2d = function toContext2d() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkContainer() {\n        return (\n          document.body.contains(this.prop.container) || this.toContainer()\n        );\n      }\n    ];\n\n    // Fulfill prereqs then create the canvas.\n    return this.thenList(prereqs)\n      .then(loadHtml2Canvas)\n      .then(function toContext2d_main(html2canvas) {\n        // Handle old-fashioned 'onrendered' argument.\n\n        var pdf = this.opt.jsPDF;\n        var fontFaces = this.opt.fontFaces;\n\n        var scale =\n          typeof this.opt.width === \"number\" &&\n          !isNaN(this.opt.width) &&\n          typeof this.opt.windowWidth === \"number\" &&\n          !isNaN(this.opt.windowWidth)\n            ? this.opt.width / this.opt.windowWidth\n            : 1;\n\n        var options = Object.assign(\n          {\n            async: true,\n            allowTaint: true,\n            scale: scale,\n            scrollX: this.opt.scrollX || 0,\n            scrollY: this.opt.scrollY || 0,\n            backgroundColor: \"#ffffff\",\n            imageTimeout: 15000,\n            logging: true,\n            proxy: null,\n            removeContainer: true,\n            foreignObjectRendering: false,\n            useCORS: false\n          },\n          this.opt.html2canvas\n        );\n        delete options.onrendered;\n\n        pdf.context2d.autoPaging =\n          typeof this.opt.autoPaging === \"undefined\"\n            ? true\n            : this.opt.autoPaging;\n        pdf.context2d.posX = this.opt.x;\n        pdf.context2d.posY = this.opt.y;\n        pdf.context2d.margin = this.opt.margin;\n        pdf.context2d.fontFaces = fontFaces;\n\n        if (fontFaces) {\n          for (var i = 0; i < fontFaces.length; ++i) {\n            var font = fontFaces[i];\n            var src = font.src.find(function(src) {\n              return src.format === \"truetype\";\n            });\n\n            if (src) {\n              pdf.addFont(src.url, font.ref.name, font.ref.style);\n            }\n          }\n        }\n\n        options.windowHeight = options.windowHeight || 0;\n        options.windowHeight =\n          options.windowHeight == 0\n            ? Math.max(\n                this.prop.container.clientHeight,\n                this.prop.container.scrollHeight,\n                this.prop.container.offsetHeight\n              )\n            : options.windowHeight;\n\n        pdf.context2d.save(true);\n        return html2canvas(this.prop.container, options);\n      })\n      .then(function toContext2d_post(canvas) {\n        this.opt.jsPDF.context2d.restore(true);\n\n        // Handle old-fashioned 'onrendered' argument.\n        var onRendered = this.opt.html2canvas.onrendered || function() {};\n        onRendered(canvas);\n\n        this.prop.canvas = canvas;\n        document.body.removeChild(this.prop.overlay);\n      });\n  };\n\n  Worker.prototype.toImg = function toImg() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkCanvas() {\n        return this.prop.canvas || this.toCanvas();\n      }\n    ];\n\n    // Fulfill prereqs then create the image.\n    return this.thenList(prereqs).then(function toImg_main() {\n      var imgData = this.prop.canvas.toDataURL(\n        \"image/\" + this.opt.image.type,\n        this.opt.image.quality\n      );\n      this.prop.img = document.createElement(\"img\");\n      this.prop.img.src = imgData;\n    });\n  };\n\n  Worker.prototype.toPdf = function toPdf() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkContext2d() {\n        return this.toContext2d();\n      }\n      //function checkCanvas() { return this.prop.canvas || this.toCanvas(); }\n    ];\n\n    // Fulfill prereqs then create the image.\n    return this.thenList(prereqs).then(function toPdf_main() {\n      // Create local copies of frequently used properties.\n      this.prop.pdf = this.prop.pdf || this.opt.jsPDF;\n    });\n  };\n\n  /* ----- OUTPUT / SAVE ----- */\n\n  Worker.prototype.output = function output(type, options, src) {\n    // Redirect requests to the correct function (outputPdf / outputImg).\n    src = src || \"pdf\";\n    if (src.toLowerCase() === \"img\" || src.toLowerCase() === \"image\") {\n      return this.outputImg(type, options);\n    } else {\n      return this.outputPdf(type, options);\n    }\n  };\n\n  Worker.prototype.outputPdf = function outputPdf(type, options) {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkPdf() {\n        return this.prop.pdf || this.toPdf();\n      }\n    ];\n\n    // Fulfill prereqs then perform the appropriate output.\n    return this.thenList(prereqs).then(function outputPdf_main() {\n      /* Currently implemented output types:\n       *    https://rawgit.com/MrRio/jsPDF/master/docs/jspdf.js.html#line992\n       *  save(options), arraybuffer, blob, bloburi/bloburl,\n       *  datauristring/dataurlstring, dataurlnewwindow, datauri/dataurl\n       */\n      return this.prop.pdf.output(type, options);\n    });\n  };\n\n  Worker.prototype.outputImg = function outputImg(type) {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkImg() {\n        return this.prop.img || this.toImg();\n      }\n    ];\n\n    // Fulfill prereqs then perform the appropriate output.\n    return this.thenList(prereqs).then(function outputImg_main() {\n      switch (type) {\n        case undefined:\n        case \"img\":\n          return this.prop.img;\n        case \"datauristring\":\n        case \"dataurlstring\":\n          return this.prop.img.src;\n        case \"datauri\":\n        case \"dataurl\":\n          return (document.location.href = this.prop.img.src);\n        default:\n          throw 'Image output type \"' + type + '\" is not supported.';\n      }\n    });\n  };\n\n  Worker.prototype.save = function save(filename) {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkPdf() {\n        return this.prop.pdf || this.toPdf();\n      }\n    ];\n\n    // Fulfill prereqs, update the filename (if provided), and save the PDF.\n    return this.thenList(prereqs)\n      .set(filename ? { filename: filename } : null)\n      .then(function save_main() {\n        this.prop.pdf.save(this.opt.filename);\n      });\n  };\n\n  Worker.prototype.doCallback = function doCallback() {\n    // Set up function prerequisites.\n    var prereqs = [\n      function checkPdf() {\n        return this.prop.pdf || this.toPdf();\n      }\n    ];\n\n    // Fulfill prereqs, update the filename (if provided), and save the PDF.\n    return this.thenList(prereqs).then(function doCallback_main() {\n      this.prop.callback(this.prop.pdf);\n    });\n  };\n\n  /* ----- SET / GET ----- */\n\n  Worker.prototype.set = function set(opt) {\n    // TODO: Implement ordered pairs?\n\n    // Silently ignore invalid or empty input.\n    if (objType(opt) !== \"object\") {\n      return this;\n    }\n\n    // Build an array of setter functions to queue.\n    var fns = Object.keys(opt || {}).map(function(key) {\n      if (key in Worker.template.prop) {\n        // Set pre-defined properties.\n        return function set_prop() {\n          this.prop[key] = opt[key];\n        };\n      } else {\n        switch (key) {\n          case \"margin\":\n            return this.setMargin.bind(this, opt.margin);\n          case \"jsPDF\":\n            return function set_jsPDF() {\n              this.opt.jsPDF = opt.jsPDF;\n              return this.setPageSize();\n            };\n          case \"pageSize\":\n            return this.setPageSize.bind(this, opt.pageSize);\n          default:\n            // Set any other properties in opt.\n            return function set_opt() {\n              this.opt[key] = opt[key];\n            };\n        }\n      }\n    }, this);\n\n    // Set properties within the promise chain.\n    return this.then(function set_main() {\n      return this.thenList(fns);\n    });\n  };\n\n  Worker.prototype.get = function get(key, cbk) {\n    return this.then(function get_main() {\n      // Fetch the requested property, either as a predefined prop or in opt.\n      var val = key in Worker.template.prop ? this.prop[key] : this.opt[key];\n      return cbk ? cbk(val) : val;\n    });\n  };\n\n  Worker.prototype.setMargin = function setMargin(margin) {\n    return this.then(function setMargin_main() {\n      // Parse the margin property.\n      switch (objType(margin)) {\n        case \"number\":\n          margin = [margin, margin, margin, margin];\n        // eslint-disable-next-line no-fallthrough\n        case \"array\":\n          if (margin.length === 2) {\n            margin = [margin[0], margin[1], margin[0], margin[1]];\n          }\n          if (margin.length === 4) {\n            break;\n          }\n        // eslint-disable-next-line no-fallthrough\n        default:\n          return this.error(\"Invalid margin array.\");\n      }\n\n      // Set the margin property, then update pageSize.\n      this.opt.margin = margin;\n    }).then(this.setPageSize);\n  };\n\n  Worker.prototype.setPageSize = function setPageSize(pageSize) {\n    function toPx(val, k) {\n      return Math.floor(((val * k) / 72) * 96);\n    }\n\n    return this.then(function setPageSize_main() {\n      // Retrieve page-size based on jsPDF settings, if not explicitly provided.\n      pageSize = pageSize || jsPDF.getPageSize(this.opt.jsPDF);\n\n      // Add 'inner' field if not present.\n      if (!pageSize.hasOwnProperty(\"inner\")) {\n        pageSize.inner = {\n          width: pageSize.width - this.opt.margin[1] - this.opt.margin[3],\n          height: pageSize.height - this.opt.margin[0] - this.opt.margin[2]\n        };\n        pageSize.inner.px = {\n          width: toPx(pageSize.inner.width, pageSize.k),\n          height: toPx(pageSize.inner.height, pageSize.k)\n        };\n        pageSize.inner.ratio = pageSize.inner.height / pageSize.inner.width;\n      }\n\n      // Attach pageSize to this.\n      this.prop.pageSize = pageSize;\n    });\n  };\n\n  Worker.prototype.setProgress = function setProgress(val, state, n, stack) {\n    // Immediately update all progress values.\n    if (val != null) this.progress.val = val;\n    if (state != null) this.progress.state = state;\n    if (n != null) this.progress.n = n;\n    if (stack != null) this.progress.stack = stack;\n    this.progress.ratio = this.progress.val / this.progress.state;\n\n    // Return this for command chaining.\n    return this;\n  };\n\n  Worker.prototype.updateProgress = function updateProgress(\n    val,\n    state,\n    n,\n    stack\n  ) {\n    // Immediately update all progress values, using setProgress.\n    return this.setProgress(\n      val ? this.progress.val + val : null,\n      state ? state : null,\n      n ? this.progress.n + n : null,\n      stack ? this.progress.stack.concat(stack) : null\n    );\n  };\n\n  /* ----- PROMISE MAPPING ----- */\n\n  Worker.prototype.then = function then(onFulfilled, onRejected) {\n    // Wrap `this` for encapsulation.\n    var self = this;\n\n    return this.thenCore(onFulfilled, onRejected, function then_main(\n      onFulfilled,\n      onRejected\n    ) {\n      // Update progress while queuing, calling, and resolving `then`.\n      self.updateProgress(null, null, 1, [onFulfilled]);\n      return Promise.prototype.then\n        .call(this, function then_pre(val) {\n          self.updateProgress(null, onFulfilled);\n          return val;\n        })\n        .then(onFulfilled, onRejected)\n        .then(function then_post(val) {\n          self.updateProgress(1);\n          return val;\n        });\n    });\n  };\n\n  Worker.prototype.thenCore = function thenCore(\n    onFulfilled,\n    onRejected,\n    thenBase\n  ) {\n    // Handle optional thenBase parameter.\n    thenBase = thenBase || Promise.prototype.then;\n\n    // Wrap `this` for encapsulation and bind it to the promise handlers.\n    var self = this;\n    if (onFulfilled) {\n      onFulfilled = onFulfilled.bind(self);\n    }\n    if (onRejected) {\n      onRejected = onRejected.bind(self);\n    }\n\n    // Cast self into a Promise to avoid polyfills recursively defining `then`.\n    var isNative =\n      Promise.toString().indexOf(\"[native code]\") !== -1 &&\n      Promise.name === \"Promise\";\n    var selfPromise = isNative\n      ? self\n      : Worker.convert(Object.assign({}, self), Promise.prototype);\n\n    // Return the promise, after casting it into a Worker and preserving props.\n    var returnVal = thenBase.call(selfPromise, onFulfilled, onRejected);\n    return Worker.convert(returnVal, self.__proto__);\n  };\n\n  Worker.prototype.thenExternal = function thenExternal(\n    onFulfilled,\n    onRejected\n  ) {\n    // Call `then` and return a standard promise (exits the Worker chain).\n    return Promise.prototype.then.call(this, onFulfilled, onRejected);\n  };\n\n  Worker.prototype.thenList = function thenList(fns) {\n    // Queue a series of promise 'factories' into the promise chain.\n    var self = this;\n    fns.forEach(function thenList_forEach(fn) {\n      self = self.thenCore(fn);\n    });\n    return self;\n  };\n\n  Worker.prototype[\"catch\"] = function(onRejected) {\n    // Bind `this` to the promise handler, call `catch`, and return a Worker.\n    if (onRejected) {\n      onRejected = onRejected.bind(this);\n    }\n    var returnVal = Promise.prototype[\"catch\"].call(this, onRejected);\n    return Worker.convert(returnVal, this);\n  };\n\n  Worker.prototype.catchExternal = function catchExternal(onRejected) {\n    // Call `catch` and return a standard promise (exits the Worker chain).\n    return Promise.prototype[\"catch\"].call(this, onRejected);\n  };\n\n  Worker.prototype.error = function error(msg) {\n    // Throw the error in the Promise chain.\n    return this.then(function error_main() {\n      throw new Error(msg);\n    });\n  };\n\n  /* ----- ALIASES ----- */\n\n  Worker.prototype.using = Worker.prototype.set;\n  Worker.prototype.saveAs = Worker.prototype.save;\n  Worker.prototype.export = Worker.prototype.output;\n  Worker.prototype.run = Worker.prototype.then;\n\n  // Get dimensions of a PDF page, as determined by jsPDF.\n  jsPDF.getPageSize = function(orientation, unit, format) {\n    // Decode options object\n    if (typeof orientation === \"object\") {\n      var options = orientation;\n      orientation = options.orientation;\n      unit = options.unit || unit;\n      format = options.format || format;\n    }\n\n    // Default options\n    unit = unit || \"mm\";\n    format = format || \"a4\";\n    orientation = (\"\" + (orientation || \"P\")).toLowerCase();\n    var format_as_string = (\"\" + format).toLowerCase();\n\n    // Size in pt of various paper formats\n    var pageFormats = {\n      a0: [2383.94, 3370.39],\n      a1: [1683.78, 2383.94],\n      a2: [1190.55, 1683.78],\n      a3: [841.89, 1190.55],\n      a4: [595.28, 841.89],\n      a5: [419.53, 595.28],\n      a6: [297.64, 419.53],\n      a7: [209.76, 297.64],\n      a8: [147.4, 209.76],\n      a9: [104.88, 147.4],\n      a10: [73.7, 104.88],\n      b0: [2834.65, 4008.19],\n      b1: [2004.09, 2834.65],\n      b2: [1417.32, 2004.09],\n      b3: [1000.63, 1417.32],\n      b4: [708.66, 1000.63],\n      b5: [498.9, 708.66],\n      b6: [354.33, 498.9],\n      b7: [249.45, 354.33],\n      b8: [175.75, 249.45],\n      b9: [124.72, 175.75],\n      b10: [87.87, 124.72],\n      c0: [2599.37, 3676.54],\n      c1: [1836.85, 2599.37],\n      c2: [1298.27, 1836.85],\n      c3: [918.43, 1298.27],\n      c4: [649.13, 918.43],\n      c5: [459.21, 649.13],\n      c6: [323.15, 459.21],\n      c7: [229.61, 323.15],\n      c8: [161.57, 229.61],\n      c9: [113.39, 161.57],\n      c10: [79.37, 113.39],\n      dl: [311.81, 623.62],\n      letter: [612, 792],\n      \"government-letter\": [576, 756],\n      legal: [612, 1008],\n      \"junior-legal\": [576, 360],\n      ledger: [1224, 792],\n      tabloid: [792, 1224],\n      \"credit-card\": [153, 243]\n    };\n\n    var k;\n    // Unit conversion\n    switch (unit) {\n      case \"pt\":\n        k = 1;\n        break;\n      case \"mm\":\n        k = 72 / 25.4;\n        break;\n      case \"cm\":\n        k = 72 / 2.54;\n        break;\n      case \"in\":\n        k = 72;\n        break;\n      case \"px\":\n        k = 72 / 96;\n        break;\n      case \"pc\":\n        k = 12;\n        break;\n      case \"em\":\n        k = 12;\n        break;\n      case \"ex\":\n        k = 6;\n        break;\n      default:\n        throw \"Invalid unit: \" + unit;\n    }\n    var pageHeight = 0;\n    var pageWidth = 0;\n\n    // Dimensions are stored as user units and converted to points on output\n    if (pageFormats.hasOwnProperty(format_as_string)) {\n      pageHeight = pageFormats[format_as_string][1] / k;\n      pageWidth = pageFormats[format_as_string][0] / k;\n    } else {\n      try {\n        pageHeight = format[1];\n        pageWidth = format[0];\n      } catch (err) {\n        throw new Error(\"Invalid format: \" + format);\n      }\n    }\n\n    var tmp;\n    // Handle page orientation\n    if (orientation === \"p\" || orientation === \"portrait\") {\n      orientation = \"p\";\n      if (pageWidth > pageHeight) {\n        tmp = pageWidth;\n        pageWidth = pageHeight;\n        pageHeight = tmp;\n      }\n    } else if (orientation === \"l\" || orientation === \"landscape\") {\n      orientation = \"l\";\n      if (pageHeight > pageWidth) {\n        tmp = pageWidth;\n        pageWidth = pageHeight;\n        pageHeight = tmp;\n      }\n    } else {\n      throw \"Invalid orientation: \" + orientation;\n    }\n\n    // Return information (k is the unit conversion ratio from pts)\n    var info = {\n      width: pageWidth,\n      height: pageHeight,\n      unit: unit,\n      k: k,\n      orientation: orientation\n    };\n    return info;\n  };\n\n  /**\n   * @typedef FontFace\n   *\n   * The font-face type implements an interface similar to that of the font-face CSS rule,\n   * and is used by jsPDF to match fonts when the font property of CanvasRenderingContext2D\n   * is updated.\n   *\n   * All properties expect values similar to those in the font-face CSS rule. A difference\n   * is the font-family, which do not need to be enclosed in double-quotes when containing\n   * spaces like in CSS.\n   *\n   * @property {string} family The name of the font-family.\n   * @property {string|undefined} style The style that this font-face defines, e.g. 'italic'.\n   * @property {string|number|undefined} weight The weight of the font, either as a string or a number (400, 500, 600, e.g.)\n   * @property {string|undefined} stretch The stretch of the font, e.g. condensed, normal, expanded.\n   * @property {Object[]} src A list of URLs from where fonts of various formats can be fetched.\n   * @property {string} [src] url A URL to a font of a specific format.\n   * @property {string} [src] format Format of the font referenced by the URL.\n   */\n\n  /**\n   * Generate a PDF from an HTML element or string using.\n   *\n   * @name html\n   * @function\n   * @param {HTMLElement|string} source The source HTMLElement or a string containing HTML.\n   * @param {Object} [options] Collection of settings\n   * @param {function} [options.callback] The mandatory callback-function gets as first parameter the current jsPDF instance\n   * @param {(number|number[])=} [options.margin] Page margins [top, right, bottom, left]. Default is 0.\n   * @param {(boolean|'slice'|'text')=} [options.autoPaging] The auto paging mode.\n   * <ul>\n   * <li>\n   *   <code>false</code>: Auto paging is disabled.\n   * </li>\n   * <li>\n   *   <code>true</code> or <code>'slice'</code>: Will cut shapes or text chunks across page breaks. Will possibly\n   *   slice text in half, making it difficult to read.\n   * </li>\n   * <li>\n   *   <code>'text'</code>: Trys not to cut text in half across page breaks. Works best for documents consisting\n   *   mostly of a single column of text.\n   * </li>\n   * </ul>\n   * Default is <code>true</code>.\n   * @param {string} [options.filename] name of the file\n   * @param {HTMLOptionImage} [options.image] image settings when converting HTML to image\n   * @param {Html2CanvasOptions} [options.html2canvas] html2canvas options\n   * @param {FontFace[]} [options.fontFaces] A list of font-faces to match when resolving fonts. Fonts will be added to the PDF based on the specified URL. If omitted, the font match algorithm falls back to old algorithm.\n   * @param {jsPDF} [options.jsPDF] jsPDF instance\n   * @param {number=} [options.x] x position on the PDF document in jsPDF units.\n   * @param {number=} [options.y] y position on the PDF document in jsPDF units.\n   * @param {number=} [options.width] The target width in the PDF document in jsPDF units. The rendered element will be\n   * scaled such that it fits into the specified width. Has no effect if either the <code>html2canvas.scale<code> is\n   * specified or the <code>windowWidth</code> option is NOT specified.\n   * @param {number=} [options.windowWidth] The window width in CSS pixels. In contrast to the\n   * <code>html2canvas.windowWidth</code> option, this option affects the actual container size while rendering and\n   * does NOT affect CSS media queries. This option only has an effect, if the <code>width<code> option is also specified.\n   *\n   * @example\n   * var doc = new jsPDF();\n   *\n   * doc.html(document.body, {\n   *    callback: function (doc) {\n   *      doc.save();\n   *    },\n   *    x: 10,\n   *    y: 10\n   * });\n   */\n  jsPDFAPI.html = function(src, options) {\n    \"use strict\";\n\n    options = options || {};\n    options.callback = options.callback || function() {};\n    options.html2canvas = options.html2canvas || {};\n    options.html2canvas.canvas = options.html2canvas.canvas || this.canvas;\n    options.jsPDF = options.jsPDF || this;\n    options.fontFaces = options.fontFaces\n      ? options.fontFaces.map(normalizeFontFace)\n      : null;\n\n    // Create a new worker with the given options.\n    var worker = new Worker(options);\n\n    if (!options.worker) {\n      // If worker is not set to true, perform the traditional 'simple' operation.\n      return worker.from(src).doCallback();\n    } else {\n      // Otherwise, return the worker for new Promise-based operation.\n      return worker;\n    }\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF Outline PlugIn\n *\n * Generates a PDF Outline\n * @name outline\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var namesOid;\n  //var destsGoto = [];\n\n  jsPDFAPI.events.push([\n    \"postPutResources\",\n    function() {\n      var pdf = this;\n      var rx = /^(\\d+) 0 obj$/;\n\n      // Write action goto objects for each page\n      // this.outline.destsGoto = [];\n      // for (var i = 0; i < totalPages; i++) {\n      // var id = pdf.internal.newObject();\n      // this.outline.destsGoto.push(id);\n      // pdf.internal.write(\"<</D[\" + (i * 2 + 3) + \" 0 R /XYZ null\n      // null null]/S/GoTo>> endobj\");\n      // }\n      //\n      // for (var i = 0; i < dests.length; i++) {\n      // pdf.internal.write(\"(page_\" + (i + 1) + \")\" + dests[i] + \" 0\n      // R\");\n      // }\n      //\n      if (this.outline.root.children.length > 0) {\n        var lines = pdf.outline.render().split(/\\r\\n/);\n        for (var i = 0; i < lines.length; i++) {\n          var line = lines[i];\n          var m = rx.exec(line);\n          if (m != null) {\n            var oid = m[1];\n            pdf.internal.newObjectDeferredBegin(oid, false);\n          }\n          pdf.internal.write(line);\n        }\n      }\n\n      // This code will write named destination for each page reference\n      // (page_1, etc)\n      if (this.outline.createNamedDestinations) {\n        var totalPages = this.internal.pages.length;\n        // WARNING: this assumes jsPDF starts on page 3 and pageIDs\n        // follow 5, 7, 9, etc\n        // Write destination objects for each page\n        var dests = [];\n        for (var i = 0; i < totalPages; i++) {\n          var id = pdf.internal.newObject();\n          dests.push(id);\n          var info = pdf.internal.getPageInfo(i + 1);\n          pdf.internal.write(\n            \"<< /D[\" + info.objId + \" 0 R /XYZ null null null]>> endobj\"\n          );\n        }\n\n        // assign a name for each destination\n        var names2Oid = pdf.internal.newObject();\n        pdf.internal.write(\"<< /Names [ \");\n        for (var i = 0; i < dests.length; i++) {\n          pdf.internal.write(\"(page_\" + (i + 1) + \")\" + dests[i] + \" 0 R\");\n        }\n        pdf.internal.write(\" ] >>\", \"endobj\");\n\n        // var kids = pdf.internal.newObject();\n        // pdf.internal.write('<< /Kids [ ' + names2Oid + ' 0 R');\n        // pdf.internal.write(' ] >>', 'endobj');\n\n        namesOid = pdf.internal.newObject();\n        pdf.internal.write(\"<< /Dests \" + names2Oid + \" 0 R\");\n        pdf.internal.write(\">>\", \"endobj\");\n      }\n    }\n  ]);\n\n  jsPDFAPI.events.push([\n    \"putCatalog\",\n    function() {\n      var pdf = this;\n      if (pdf.outline.root.children.length > 0) {\n        pdf.internal.write(\n          \"/Outlines\",\n          this.outline.makeRef(this.outline.root)\n        );\n        if (this.outline.createNamedDestinations) {\n          pdf.internal.write(\"/Names \" + namesOid + \" 0 R\");\n        }\n        // Open with Bookmarks showing\n        // pdf.internal.write(\"/PageMode /UseOutlines\");\n      }\n    }\n  ]);\n\n  jsPDFAPI.events.push([\n    \"initialized\",\n    function() {\n      var pdf = this;\n\n      pdf.outline = {\n        createNamedDestinations: false,\n        root: {\n          children: []\n        }\n      };\n\n      /**\n       * Options: pageNumber\n       */\n      pdf.outline.add = function(parent, title, options) {\n        var item = {\n          title: title,\n          options: options,\n          children: []\n        };\n        if (parent == null) {\n          parent = this.root;\n        }\n        parent.children.push(item);\n        return item;\n      };\n\n      pdf.outline.render = function() {\n        this.ctx = {};\n        this.ctx.val = \"\";\n        this.ctx.pdf = pdf;\n\n        this.genIds_r(this.root);\n        this.renderRoot(this.root);\n        this.renderItems(this.root);\n\n        return this.ctx.val;\n      };\n\n      pdf.outline.genIds_r = function(node) {\n        node.id = pdf.internal.newObjectDeferred();\n        for (var i = 0; i < node.children.length; i++) {\n          this.genIds_r(node.children[i]);\n        }\n      };\n\n      pdf.outline.renderRoot = function(node) {\n        this.objStart(node);\n        this.line(\"/Type /Outlines\");\n        if (node.children.length > 0) {\n          this.line(\"/First \" + this.makeRef(node.children[0]));\n          this.line(\n            \"/Last \" + this.makeRef(node.children[node.children.length - 1])\n          );\n        }\n        this.line(\n          \"/Count \" +\n            this.count_r(\n              {\n                count: 0\n              },\n              node\n            )\n        );\n        this.objEnd();\n      };\n\n      pdf.outline.renderItems = function(node) {\n        var getVerticalCoordinateString = this.ctx.pdf.internal\n          .getVerticalCoordinateString;\n        for (var i = 0; i < node.children.length; i++) {\n          var item = node.children[i];\n          this.objStart(item);\n\n          this.line(\"/Title \" + this.makeString(item.title));\n\n          this.line(\"/Parent \" + this.makeRef(node));\n          if (i > 0) {\n            this.line(\"/Prev \" + this.makeRef(node.children[i - 1]));\n          }\n          if (i < node.children.length - 1) {\n            this.line(\"/Next \" + this.makeRef(node.children[i + 1]));\n          }\n          if (item.children.length > 0) {\n            this.line(\"/First \" + this.makeRef(item.children[0]));\n            this.line(\n              \"/Last \" + this.makeRef(item.children[item.children.length - 1])\n            );\n          }\n\n          var count = (this.count = this.count_r(\n            {\n              count: 0\n            },\n            item\n          ));\n          if (count > 0) {\n            this.line(\"/Count \" + count);\n          }\n\n          if (item.options) {\n            if (item.options.pageNumber) {\n              // Explicit Destination\n              //WARNING this assumes page ids are 3,5,7, etc.\n              var info = pdf.internal.getPageInfo(item.options.pageNumber);\n              this.line(\n                \"/Dest \" +\n                  \"[\" +\n                  info.objId +\n                  \" 0 R /XYZ 0 \" +\n                  getVerticalCoordinateString(0) +\n                  \" 0]\"\n              );\n              // this line does not work on all clients (pageNumber instead of page ref)\n              //this.line('/Dest ' + '[' + (item.options.pageNumber - 1) + ' /XYZ 0 ' + this.ctx.pdf.internal.pageSize.getHeight() + ' 0]');\n\n              // Named Destination\n              // this.line('/Dest (page_' + (item.options.pageNumber) + ')');\n\n              // Action Destination\n              // var id = pdf.internal.newObject();\n              // pdf.internal.write('<</D[' + (item.options.pageNumber - 1) + ' /XYZ null null null]/S/GoTo>> endobj');\n              // this.line('/A ' + id + ' 0 R' );\n            }\n          }\n          this.objEnd();\n        }\n        for (var z = 0; z < node.children.length; z++) {\n          this.renderItems(node.children[z]);\n        }\n      };\n\n      pdf.outline.line = function(text) {\n        this.ctx.val += text + \"\\r\\n\";\n      };\n\n      pdf.outline.makeRef = function(node) {\n        return node.id + \" 0 R\";\n      };\n\n      pdf.outline.makeString = function(val) {\n        return \"(\" + pdf.internal.pdfEscape(val) + \")\";\n      };\n\n      pdf.outline.objStart = function(node) {\n        this.ctx.val += \"\\r\\n\" + node.id + \" 0 obj\" + \"\\r\\n<<\\r\\n\";\n      };\n\n      pdf.outline.objEnd = function() {\n        this.ctx.val += \">> \\r\\n\" + \"endobj\" + \"\\r\\n\";\n      };\n\n      pdf.outline.count_r = function(ctx, node) {\n        for (var i = 0; i < node.children.length; i++) {\n          ctx.count++;\n          this.count_r(ctx, node.children[i]);\n        }\n        return ctx.count;\n      };\n    }\n  ]);\n\n  return this;\n})(jsPDF.API);\n","/**\n * @license\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF jpeg Support PlugIn\n *\n * @name jpeg_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * 0xc0 (SOF) Huffman  - Baseline DCT\n   * 0xc1 (SOF) Huffman  - Extended sequential DCT\n   * 0xc2 Progressive DCT (SOF2)\n   * 0xc3 Spatial (sequential) lossless (SOF3)\n   * 0xc4 Differential sequential DCT (SOF5)\n   * 0xc5 Differential progressive DCT (SOF6)\n   * 0xc6 Differential spatial (SOF7)\n   * 0xc7\n   */\n  var markers = [0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7];\n\n  //takes a string imgData containing the raw bytes of\n  //a jpeg image and returns [width, height]\n  //Algorithm from: http://www.64lines.com/jpeg-width-height\n  var getJpegInfo = function(imgData) {\n    var width, height, numcomponents;\n    var blockLength = imgData.charCodeAt(4) * 256 + imgData.charCodeAt(5);\n    var len = imgData.length;\n    var result = { width: 0, height: 0, numcomponents: 1 };\n    for (var i = 4; i < len; i += 2) {\n      i += blockLength;\n      if (markers.indexOf(imgData.charCodeAt(i + 1)) !== -1) {\n        height = imgData.charCodeAt(i + 5) * 256 + imgData.charCodeAt(i + 6);\n        width = imgData.charCodeAt(i + 7) * 256 + imgData.charCodeAt(i + 8);\n        numcomponents = imgData.charCodeAt(i + 9);\n        result = { width: width, height: height, numcomponents: numcomponents };\n        break;\n      } else {\n        blockLength =\n          imgData.charCodeAt(i + 2) * 256 + imgData.charCodeAt(i + 3);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @ignore\n   */\n  jsPDFAPI.processJPEG = function(\n    data,\n    index,\n    alias,\n    compression,\n    dataAsBinaryString,\n    colorSpace\n  ) {\n    var filter = this.decode.DCT_DECODE,\n      bpc = 8,\n      dims,\n      result = null;\n\n    if (\n      typeof data === \"string\" ||\n      this.__addimage__.isArrayBuffer(data) ||\n      this.__addimage__.isArrayBufferView(data)\n    ) {\n      // if we already have a stored binary string rep use that\n      data = dataAsBinaryString || data;\n      data = this.__addimage__.isArrayBuffer(data)\n        ? new Uint8Array(data)\n        : data;\n      data = this.__addimage__.isArrayBufferView(data)\n        ? this.__addimage__.arrayBufferToBinaryString(data)\n        : data;\n\n      dims = getJpegInfo(data);\n      switch (dims.numcomponents) {\n        case 1:\n          colorSpace = this.color_spaces.DEVICE_GRAY;\n          break;\n        case 4:\n          colorSpace = this.color_spaces.DEVICE_CMYK;\n          break;\n        case 3:\n          colorSpace = this.color_spaces.DEVICE_RGB;\n          break;\n      }\n\n      result = {\n        data: data,\n        width: dims.width,\n        height: dims.height,\n        colorSpace: colorSpace,\n        bitsPerComponent: bpc,\n        filter: filter,\n        index: index,\n        alias: alias\n      };\n    }\n    return result;\n  };\n})(jsPDF.API);\n","// Generated by CoffeeScript 1.4.0\n\n/**\n * @license\n * PNG.js\n * Copyright (c) 2011 Devon Govett\n * MIT LICENSE\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { unzlibSync } from \"./fflate.js\";\nimport { globalObject } from \"./globalObject.js\";\n\nvar PNG = (function() {\n  var APNG_BLEND_OP_OVER,\n    APNG_BLEND_OP_SOURCE,\n    APNG_DISPOSE_OP_BACKGROUND,\n    APNG_DISPOSE_OP_NONE,\n    APNG_DISPOSE_OP_PREVIOUS,\n    makeImage,\n    scratchCanvas,\n    scratchCtx;\n\n  APNG_DISPOSE_OP_NONE = 0;\n\n  APNG_DISPOSE_OP_BACKGROUND = 1;\n\n  APNG_DISPOSE_OP_PREVIOUS = 2;\n\n  APNG_BLEND_OP_SOURCE = 0;\n\n  APNG_BLEND_OP_OVER = 1;\n\n  function PNG(data) {\n    var chunkSize,\n      colors,\n      palLen,\n      delayDen,\n      delayNum,\n      frame,\n      i,\n      index,\n      key,\n      section,\n      palShort,\n      text,\n      _i,\n      _j,\n      _ref;\n    this.data = data;\n    this.pos = 8;\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.animation = null;\n    this.text = {};\n    frame = null;\n    while (true) {\n      chunkSize = this.readUInt32();\n      section = function() {\n        var _i, _results;\n        _results = [];\n        for (i = _i = 0; _i < 4; i = ++_i) {\n          _results.push(String.fromCharCode(this.data[this.pos++]));\n        }\n        return _results;\n      }\n        .call(this)\n        .join(\"\");\n      switch (section) {\n        case \"IHDR\":\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n        case \"acTL\":\n          this.animation = {\n            numFrames: this.readUInt32(),\n            numPlays: this.readUInt32() || Infinity,\n            frames: []\n          };\n          break;\n        case \"PLTE\":\n          this.palette = this.read(chunkSize);\n          break;\n        case \"fcTL\":\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n          this.pos += 4;\n          frame = {\n            width: this.readUInt32(),\n            height: this.readUInt32(),\n            xOffset: this.readUInt32(),\n            yOffset: this.readUInt32()\n          };\n          delayNum = this.readUInt16();\n          delayDen = this.readUInt16() || 100;\n          frame.delay = (1000 * delayNum) / delayDen;\n          frame.disposeOp = this.data[this.pos++];\n          frame.blendOp = this.data[this.pos++];\n          frame.data = [];\n          break;\n        case \"IDAT\":\n        case \"fdAT\":\n          if (section === \"fdAT\") {\n            this.pos += 4;\n            chunkSize -= 4;\n          }\n          data = (frame != null ? frame.data : void 0) || this.imgData;\n          for (\n            i = _i = 0;\n            0 <= chunkSize ? _i < chunkSize : _i > chunkSize;\n            i = 0 <= chunkSize ? ++_i : --_i\n          ) {\n            data.push(this.data[this.pos++]);\n          }\n          break;\n        case \"tRNS\":\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              palLen = this.palette.length / 3;\n              this.transparency.indexed = this.read(chunkSize);\n              if (this.transparency.indexed.length > palLen)\n                throw new Error(\"More transparent colors than palette size\");\n              /*\n               * According to the PNG spec trns should be increased to the same size as palette if shorter\n               */\n              //palShort = 255 - this.transparency.indexed.length;\n              palShort = palLen - this.transparency.indexed.length;\n              if (palShort > 0) {\n                for (\n                  i = _j = 0;\n                  0 <= palShort ? _j < palShort : _j > palShort;\n                  i = 0 <= palShort ? ++_j : --_j\n                ) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              this.transparency.rgb = this.read(chunkSize);\n          }\n          break;\n        case \"tEXt\":\n          text = this.read(chunkSize);\n          index = text.indexOf(0);\n          key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(\n            String,\n            text.slice(index + 1)\n          );\n          break;\n        case \"IEND\":\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n          this.colors = function() {\n            switch (this.colorType) {\n              case 0:\n              case 3:\n              case 4:\n                return 1;\n              case 2:\n              case 6:\n                return 3;\n            }\n          }.call(this);\n          this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\n          colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n          this.colorSpace = function() {\n            switch (this.colors) {\n              case 1:\n                return \"DeviceGray\";\n              case 3:\n                return \"DeviceRGB\";\n            }\n          }.call(this);\n          this.imgData = new Uint8Array(this.imgData);\n          return;\n        default:\n          this.pos += chunkSize;\n      }\n      this.pos += 4;\n      if (this.pos > this.data.length) {\n        throw new Error(\"Incomplete or corrupt PNG file\");\n      }\n    }\n  }\n\n  PNG.prototype.read = function(bytes) {\n    var i, _i, _results;\n    _results = [];\n    for (\n      i = _i = 0;\n      0 <= bytes ? _i < bytes : _i > bytes;\n      i = 0 <= bytes ? ++_i : --_i\n    ) {\n      _results.push(this.data[this.pos++]);\n    }\n    return _results;\n  };\n\n  PNG.prototype.readUInt32 = function() {\n    var b1, b2, b3, b4;\n    b1 = this.data[this.pos++] << 24;\n    b2 = this.data[this.pos++] << 16;\n    b3 = this.data[this.pos++] << 8;\n    b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  };\n\n  PNG.prototype.readUInt16 = function() {\n    var b1, b2;\n    b1 = this.data[this.pos++] << 8;\n    b2 = this.data[this.pos++];\n    return b1 | b2;\n  };\n\n  PNG.prototype.decodePixels = function(data) {\n    var pixelBytes = this.pixelBitlength / 8;\n    var fullPixels = new Uint8Array(this.width * this.height * pixelBytes);\n    var pos = 0;\n    var _this = this;\n\n    if (data == null) {\n      data = this.imgData;\n    }\n    if (data.length === 0) {\n      return new Uint8Array(0);\n    }\n\n    data = unzlibSync(data);\n    function pass(x0, y0, dx, dy) {\n      var abyte,\n        c,\n        col,\n        i,\n        left,\n        length,\n        p,\n        pa,\n        paeth,\n        pb,\n        pc,\n        pixels,\n        row,\n        scanlineLength,\n        upper,\n        upperLeft,\n        _i,\n        _j,\n        _k,\n        _l,\n        _m;\n      var w = Math.ceil((_this.width - x0) / dx),\n        h = Math.ceil((_this.height - y0) / dy);\n      var isFull = _this.width == w && _this.height == h;\n      scanlineLength = pixelBytes * w;\n      pixels = isFull ? fullPixels : new Uint8Array(scanlineLength * h);\n      length = data.length;\n      row = 0;\n      c = 0;\n      while (row < h && pos < length) {\n        switch (data[pos++]) {\n          case 0:\n            for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\n              pixels[c++] = data[pos++];\n            }\n            break;\n          case 1:\n            for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\n              abyte = data[pos++];\n              left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n              pixels[c++] = (abyte + left) % 256;\n            }\n            break;\n          case 2:\n            for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\n              abyte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              upper =\n                row &&\n                pixels[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              pixels[c++] = (upper + abyte) % 256;\n            }\n            break;\n          case 3:\n            for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\n              abyte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n              upper =\n                row &&\n                pixels[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              pixels[c++] = (abyte + Math.floor((left + upper) / 2)) % 256;\n            }\n            break;\n          case 4:\n            for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\n              abyte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\n              if (row === 0) {\n                upper = upperLeft = 0;\n              } else {\n                upper =\n                  pixels[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                upperLeft =\n                  col &&\n                  pixels[\n                    (row - 1) * scanlineLength +\n                      (col - 1) * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n              }\n              p = left + upper - upperLeft;\n              pa = Math.abs(p - left);\n              pb = Math.abs(p - upper);\n              pc = Math.abs(p - upperLeft);\n              if (pa <= pb && pa <= pc) {\n                paeth = left;\n              } else if (pb <= pc) {\n                paeth = upper;\n              } else {\n                paeth = upperLeft;\n              }\n              pixels[c++] = (abyte + paeth) % 256;\n            }\n            break;\n          default:\n            throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\n        }\n        if (!isFull) {\n          var fullPos = ((y0 + row * dy) * _this.width + x0) * pixelBytes;\n          var partPos = row * scanlineLength;\n          for (i = 0; i < w; i += 1) {\n            for (var j = 0; j < pixelBytes; j += 1)\n              fullPixels[fullPos++] = pixels[partPos++];\n            fullPos += (dx - 1) * pixelBytes;\n          }\n        }\n        row++;\n      }\n    }\n    if (_this.interlaceMethod == 1) {\n      /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n      pass(0, 0, 8, 8); // 1\n      /* NOTE these seem to follow the pattern:\n       * pass(x, 0, 2*x, 2*x);\n       * pass(0, x,   x, 2*x);\n       * with x being 4, 2, 1.\n       */\n      pass(4, 0, 8, 8); // 2\n      pass(0, 4, 4, 8); // 3\n\n      pass(2, 0, 4, 4); // 4\n      pass(0, 2, 2, 4); // 5\n\n      pass(1, 0, 2, 2); // 6\n      pass(0, 1, 1, 2); // 7\n    } else {\n      pass(0, 0, 1, 1);\n    }\n    return fullPixels;\n  };\n\n  PNG.prototype.decodePalette = function() {\n    var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\n    palette = this.palette;\n    transparency = this.transparency.indexed || [];\n    ret = new Uint8Array((transparency.length || 0) + palette.length);\n    pos = 0;\n    length = palette.length;\n    c = 0;\n    for (i = _i = 0, _ref = length; _i < _ref; i = _i += 3) {\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\n    }\n    return ret;\n  };\n\n  PNG.prototype.copyToImageData = function(imageData, pixels) {\n    var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\n    colors = this.colors;\n    palette = null;\n    alpha = this.hasAlphaChannel;\n    if (this.palette.length) {\n      palette =\n        (_ref = this._decodedPalette) != null\n          ? _ref\n          : (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n    data = imageData.data || imageData;\n    length = data.length;\n    input = palette || pixels;\n    i = j = 0;\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  };\n\n  PNG.prototype.decode = function() {\n    var ret;\n    ret = new Uint8Array(this.width * this.height * 4);\n    this.copyToImageData(ret, this.decodePixels());\n    return ret;\n  };\n\n  var hasBrowserCanvas = function() {\n    if (Object.prototype.toString.call(globalObject) === \"[object Window]\") {\n      try {\n        scratchCanvas = globalObject.document.createElement(\"canvas\");\n        scratchCtx = scratchCanvas.getContext(\"2d\");\n      } catch (e) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n\n  hasBrowserCanvas();\n\n  makeImage = function(imageData) {\n    if (hasBrowserCanvas() === true) {\n      var img;\n      scratchCtx.width = imageData.width;\n      scratchCtx.height = imageData.height;\n      scratchCtx.clearRect(0, 0, imageData.width, imageData.height);\n      scratchCtx.putImageData(imageData, 0, 0);\n      img = new Image();\n      img.src = scratchCanvas.toDataURL();\n      return img;\n    }\n    throw new Error(\"This method requires a Browser with Canvas-capability.\");\n  };\n\n  PNG.prototype.decodeFrames = function(ctx) {\n    var frame, i, imageData, pixels, _i, _len, _ref, _results;\n    if (!this.animation) {\n      return;\n    }\n    _ref = this.animation.frames;\n    _results = [];\n    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n      frame = _ref[i];\n      imageData = ctx.createImageData(frame.width, frame.height);\n      pixels = this.decodePixels(new Uint8Array(frame.data));\n      this.copyToImageData(imageData, pixels);\n      frame.imageData = imageData;\n      _results.push((frame.image = makeImage(imageData)));\n    }\n    return _results;\n  };\n\n  PNG.prototype.renderFrame = function(ctx, number) {\n    var frame, frames, prev;\n    frames = this.animation.frames;\n    frame = frames[number];\n    prev = frames[number - 1];\n    if (number === 0) {\n      ctx.clearRect(0, 0, this.width, this.height);\n    }\n    if (\n      (prev != null ? prev.disposeOp : void 0) === APNG_DISPOSE_OP_BACKGROUND\n    ) {\n      ctx.clearRect(prev.xOffset, prev.yOffset, prev.width, prev.height);\n    } else if (\n      (prev != null ? prev.disposeOp : void 0) === APNG_DISPOSE_OP_PREVIOUS\n    ) {\n      ctx.putImageData(prev.imageData, prev.xOffset, prev.yOffset);\n    }\n    if (frame.blendOp === APNG_BLEND_OP_SOURCE) {\n      ctx.clearRect(frame.xOffset, frame.yOffset, frame.width, frame.height);\n    }\n    return ctx.drawImage(frame.image, frame.xOffset, frame.yOffset);\n  };\n\n  PNG.prototype.animate = function(ctx) {\n    var doFrame,\n      frameNumber,\n      frames,\n      numFrames,\n      numPlays,\n      _ref,\n      _this = this;\n    frameNumber = 0;\n    (_ref = this.animation),\n      (numFrames = _ref.numFrames),\n      (frames = _ref.frames),\n      (numPlays = _ref.numPlays);\n    return (doFrame = function() {\n      var f, frame;\n      f = frameNumber++ % numFrames;\n      frame = frames[f];\n      _this.renderFrame(ctx, f);\n      if (numFrames > 1 && frameNumber / numFrames < numPlays) {\n        return (_this.animation._timeout = setTimeout(doFrame, frame.delay));\n      }\n    })();\n  };\n\n  PNG.prototype.stopAnimation = function() {\n    var _ref;\n    return clearTimeout(\n      (_ref = this.animation) != null ? _ref._timeout : void 0\n    );\n  };\n\n  PNG.prototype.render = function(canvas) {\n    var ctx, data;\n    if (canvas._png) {\n      canvas._png.stopAnimation();\n    }\n    canvas._png = this;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    ctx = canvas.getContext(\"2d\");\n    if (this.animation) {\n      this.decodeFrames(ctx);\n      return this.animate(ctx);\n    } else {\n      data = ctx.createImageData(this.width, this.height);\n      this.copyToImageData(data, this.decodePixels());\n      return ctx.putImageData(data, 0, 0);\n    }\n  };\n\n  return PNG;\n})();\n\nexport { PNG };\n","/** @license\n * MIT license.\n * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems\n *               2014 Diego Casorran, https://github.com/diegocr\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF split_text_to_size plugin\n *\n * @name split_text_to_size\n * @module\n */\n(function(API) {\n  \"use strict\";\n  /**\n   * Returns an array of length matching length of the 'word' string, with each\n   * cell occupied by the width of the char in that position.\n   *\n   * @name getCharWidthsArray\n   * @function\n   * @param {string} text\n   * @param {Object} options\n   * @returns {Array}\n   */\n  var getCharWidthsArray = (API.getCharWidthsArray = function(text, options) {\n    options = options || {};\n\n    var activeFont = options.font || this.internal.getFont();\n    var fontSize = options.fontSize || this.internal.getFontSize();\n    var charSpace = options.charSpace || this.internal.getCharSpace();\n\n    var widths = options.widths\n      ? options.widths\n      : activeFont.metadata.Unicode.widths;\n    var widthsFractionOf = widths.fof ? widths.fof : 1;\n    var kerning = options.kerning\n      ? options.kerning\n      : activeFont.metadata.Unicode.kerning;\n    var kerningFractionOf = kerning.fof ? kerning.fof : 1;\n    var doKerning = options.doKerning === false ? false : true;\n    var kerningValue = 0;\n\n    var i;\n    var length = text.length;\n    var char_code;\n    var prior_char_code = 0; //for kerning\n    var default_char_width = widths[0] || widthsFractionOf;\n    var output = [];\n\n    for (i = 0; i < length; i++) {\n      char_code = text.charCodeAt(i);\n\n      if (typeof activeFont.metadata.widthOfString === \"function\") {\n        output.push(\n          (activeFont.metadata.widthOfGlyph(\n            activeFont.metadata.characterToGlyph(char_code)\n          ) +\n            charSpace * (1000 / fontSize) || 0) / 1000\n        );\n      } else {\n        if (\n          doKerning &&\n          typeof kerning[char_code] === \"object\" &&\n          !isNaN(parseInt(kerning[char_code][prior_char_code], 10))\n        ) {\n          kerningValue =\n            kerning[char_code][prior_char_code] / kerningFractionOf;\n        } else {\n          kerningValue = 0;\n        }\n        output.push(\n          (widths[char_code] || default_char_width) / widthsFractionOf +\n            kerningValue\n        );\n      }\n      prior_char_code = char_code;\n    }\n\n    return output;\n  });\n\n  /**\n   * Returns a widths of string in a given font, if the font size is set as 1 point.\n   *\n   * In other words, this is \"proportional\" value. For 1 unit of font size, the length\n   * of the string will be that much.\n   *\n   * Multiply by font size to get actual width in *points*\n   * Then divide by 72 to get inches or divide by (72/25.6) to get 'mm' etc.\n   *\n   * @name getStringUnitWidth\n   * @public\n   * @function\n   * @param {string} text\n   * @param {string} options\n   * @returns {number} result\n   */\n  var getStringUnitWidth = (API.getStringUnitWidth = function(text, options) {\n    options = options || {};\n\n    var fontSize = options.fontSize || this.internal.getFontSize();\n    var font = options.font || this.internal.getFont();\n    var charSpace = options.charSpace || this.internal.getCharSpace();\n    var result = 0;\n\n    if (API.processArabic) {\n      text = API.processArabic(text);\n    }\n\n    if (typeof font.metadata.widthOfString === \"function\") {\n      result =\n        font.metadata.widthOfString(text, fontSize, charSpace) / fontSize;\n    } else {\n      result = getCharWidthsArray\n        .apply(this, arguments)\n        .reduce(function(pv, cv) {\n          return pv + cv;\n        }, 0);\n    }\n    return result;\n  });\n\n  /**\n  returns array of lines\n  */\n  var splitLongWord = function(word, widths_array, firstLineMaxLen, maxLen) {\n    var answer = [];\n\n    // 1st, chop off the piece that can fit on the hanging line.\n    var i = 0,\n      l = word.length,\n      workingLen = 0;\n    while (i !== l && workingLen + widths_array[i] < firstLineMaxLen) {\n      workingLen += widths_array[i];\n      i++;\n    }\n    // this is first line.\n    answer.push(word.slice(0, i));\n\n    // 2nd. Split the rest into maxLen pieces.\n    var startOfLine = i;\n    workingLen = 0;\n    while (i !== l) {\n      if (workingLen + widths_array[i] > maxLen) {\n        answer.push(word.slice(startOfLine, i));\n        workingLen = 0;\n        startOfLine = i;\n      }\n      workingLen += widths_array[i];\n      i++;\n    }\n    if (startOfLine !== i) {\n      answer.push(word.slice(startOfLine, i));\n    }\n\n    return answer;\n  };\n\n  // Note, all sizing inputs for this function must be in \"font measurement units\"\n  // By default, for PDF, it's \"point\".\n  var splitParagraphIntoLines = function(text, maxlen, options) {\n    // at this time works only on Western scripts, ones with space char\n    // separating the words. Feel free to expand.\n\n    if (!options) {\n      options = {};\n    }\n\n    var line = [],\n      lines = [line],\n      line_length = options.textIndent || 0,\n      separator_length = 0,\n      current_word_length = 0,\n      word,\n      widths_array,\n      words = text.split(\" \"),\n      spaceCharWidth = getCharWidthsArray.apply(this, [\" \", options])[0],\n      i,\n      l,\n      tmp,\n      lineIndent;\n\n    if (options.lineIndent === -1) {\n      lineIndent = words[0].length + 2;\n    } else {\n      lineIndent = options.lineIndent || 0;\n    }\n    if (lineIndent) {\n      var pad = Array(lineIndent).join(\" \"),\n        wrds = [];\n      words.map(function(wrd) {\n        wrd = wrd.split(/\\s*\\n/);\n        if (wrd.length > 1) {\n          wrds = wrds.concat(\n            wrd.map(function(wrd, idx) {\n              return (idx && wrd.length ? \"\\n\" : \"\") + wrd;\n            })\n          );\n        } else {\n          wrds.push(wrd[0]);\n        }\n      });\n      words = wrds;\n      lineIndent = getStringUnitWidth.apply(this, [pad, options]);\n    }\n\n    for (i = 0, l = words.length; i < l; i++) {\n      var force = 0;\n\n      word = words[i];\n      if (lineIndent && word[0] == \"\\n\") {\n        word = word.substr(1);\n        force = 1;\n      }\n      widths_array = getCharWidthsArray.apply(this, [word, options]);\n      current_word_length = widths_array.reduce(function(pv, cv) {\n        return pv + cv;\n      }, 0);\n\n      if (\n        line_length + separator_length + current_word_length > maxlen ||\n        force\n      ) {\n        if (current_word_length > maxlen) {\n          // this happens when you have space-less long URLs for example.\n          // we just chop these to size. We do NOT insert hiphens\n          tmp = splitLongWord.apply(this, [\n            word,\n            widths_array,\n            maxlen - (line_length + separator_length),\n            maxlen\n          ]);\n          // first line we add to existing line object\n          line.push(tmp.shift()); // it's ok to have extra space indicator there\n          // last line we make into new line object\n          line = [tmp.pop()];\n          // lines in the middle we apped to lines object as whole lines\n          while (tmp.length) {\n            lines.push([tmp.shift()]); // single fragment occupies whole line\n          }\n          current_word_length = widths_array\n            .slice(word.length - (line[0] ? line[0].length : 0))\n            .reduce(function(pv, cv) {\n              return pv + cv;\n            }, 0);\n        } else {\n          // just put it on a new line\n          line = [word];\n        }\n\n        // now we attach new line to lines\n        lines.push(line);\n        line_length = current_word_length + lineIndent;\n        separator_length = spaceCharWidth;\n      } else {\n        line.push(word);\n\n        line_length += separator_length + current_word_length;\n        separator_length = spaceCharWidth;\n      }\n    }\n\n    var postProcess;\n    if (lineIndent) {\n      postProcess = function(ln, idx) {\n        return (idx ? pad : \"\") + ln.join(\" \");\n      };\n    } else {\n      postProcess = function(ln) {\n        return ln.join(\" \");\n      };\n    }\n\n    return lines.map(postProcess);\n  };\n\n  /**\n   * Splits a given string into an array of strings. Uses 'size' value\n   * (in measurement units declared as default for the jsPDF instance)\n   * and the font's \"widths\" and \"Kerning\" tables, where available, to\n   * determine display length of a given string for a given font.\n   *\n   * We use character's 100% of unit size (height) as width when Width\n   * table or other default width is not available.\n   *\n   * @name splitTextToSize\n   * @public\n   * @function\n   * @param {string} text Unencoded, regular JavaScript (Unicode, UTF-16 / UCS-2) string.\n   * @param {number} size Nominal number, measured in units default to this instance of jsPDF.\n   * @param {Object} options Optional flags needed for chopper to do the right thing.\n   * @returns {Array} array Array with strings chopped to size.\n   */\n  API.splitTextToSize = function(text, maxlen, options) {\n    \"use strict\";\n\n    options = options || {};\n\n    var fsize = options.fontSize || this.internal.getFontSize(),\n      newOptions = function(options) {\n        var widths = {\n            0: 1\n          },\n          kerning = {};\n\n        if (!options.widths || !options.kerning) {\n          var f = this.internal.getFont(options.fontName, options.fontStyle),\n            encoding = \"Unicode\";\n          // NOT UTF8, NOT UTF16BE/LE, NOT UCS2BE/LE\n          // Actual JavaScript-native String's 16bit char codes used.\n          // no multi-byte logic here\n\n          if (f.metadata[encoding]) {\n            return {\n              widths: f.metadata[encoding].widths || widths,\n              kerning: f.metadata[encoding].kerning || kerning\n            };\n          } else {\n            return {\n              font: f.metadata,\n              fontSize: this.internal.getFontSize(),\n              charSpace: this.internal.getCharSpace()\n            };\n          }\n        } else {\n          return {\n            widths: options.widths,\n            kerning: options.kerning\n          };\n        }\n      }.call(this, options);\n\n    // first we split on end-of-line chars\n    var paragraphs;\n    if (Array.isArray(text)) {\n      paragraphs = text;\n    } else {\n      paragraphs = String(text).split(/\\r?\\n/);\n    }\n\n    // now we convert size (max length of line) into \"font size units\"\n    // at present time, the \"font size unit\" is always 'point'\n    // 'proportional' means, \"in proportion to font size\"\n    var fontUnit_maxLen = (1.0 * this.internal.scaleFactor * maxlen) / fsize;\n    // at this time, fsize is always in \"points\" regardless of the default measurement unit of the doc.\n    // this may change in the future?\n    // until then, proportional_maxlen is likely to be in 'points'\n\n    // If first line is to be indented (shorter or longer) than maxLen\n    // we indicate that by using CSS-style \"text-indent\" option.\n    // here it's in font units too (which is likely 'points')\n    // it can be negative (which makes the first line longer than maxLen)\n    newOptions.textIndent = options.textIndent\n      ? (options.textIndent * 1.0 * this.internal.scaleFactor) / fsize\n      : 0;\n    newOptions.lineIndent = options.lineIndent;\n\n    var i,\n      l,\n      output = [];\n    for (i = 0, l = paragraphs.length; i < l; i++) {\n      output = output.concat(\n        splitParagraphIntoLines.apply(this, [\n          paragraphs[i],\n          fontUnit_maxLen,\n          newOptions\n        ])\n      );\n    }\n\n    return output;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * (c) Dean McNamee <dean@gmail.com>, 2013.\n *\n * https://github.com/deanm/omggif\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n * including animation and compression.  It does not rely on any specific\n * underlying system, so should run in the browser, Node, or Plask.\n */\n\n\"use strict\";\n\nimport { console } from \"./console.js\";\n\nfunction GifWriter(buf, width, height, gopts) {\n  var p = 0;\n\n  var gopts = gopts === undefined ? {} : gopts;\n  var loop_count = gopts.loop === undefined ? null : gopts.loop;\n  var global_palette = gopts.palette === undefined ? null : gopts.palette;\n\n  if (width <= 0 || height <= 0 || width > 65535 || height > 65535)\n    throw new Error(\"Width/Height invalid.\");\n\n  function check_palette_and_num_colors(palette) {\n    var num_colors = palette.length;\n    if (num_colors < 2 || num_colors > 256 || num_colors & (num_colors - 1)) {\n      throw new Error(\n        \"Invalid code/color length, must be power of 2 and 2 .. 256.\"\n      );\n    }\n    return num_colors;\n  }\n\n  // - Header.\n  buf[p++] = 0x47;\n  buf[p++] = 0x49;\n  buf[p++] = 0x46; // GIF\n  buf[p++] = 0x38;\n  buf[p++] = 0x39;\n  buf[p++] = 0x61; // 89a\n\n  // Handling of Global Color Table (palette) and background index.\n  var gp_num_colors_pow2 = 0;\n  var background = 0;\n  if (global_palette !== null) {\n    var gp_num_colors = check_palette_and_num_colors(global_palette);\n    while ((gp_num_colors >>= 1)) ++gp_num_colors_pow2;\n    gp_num_colors = 1 << gp_num_colors_pow2;\n    --gp_num_colors_pow2;\n    if (gopts.background !== undefined) {\n      background = gopts.background;\n      if (background >= gp_num_colors)\n        throw new Error(\"Background index out of range.\");\n      // The GIF spec states that a background index of 0 should be ignored, so\n      // this is probably a mistake and you really want to set it to another\n      // slot in the palette.  But actually in the end most browsers, etc end\n      // up ignoring this almost completely (including for dispose background).\n      if (background === 0)\n        throw new Error(\"Background index explicitly passed as 0.\");\n    }\n  }\n\n  // - Logical Screen Descriptor.\n  // NOTE(deanm): w/h apparently ignored by implementations, but set anyway.\n  buf[p++] = width & 0xff;\n  buf[p++] = (width >> 8) & 0xff;\n  buf[p++] = height & 0xff;\n  buf[p++] = (height >> 8) & 0xff;\n  // NOTE: Indicates 0-bpp original color resolution (unused?).\n  buf[p++] = (global_palette !== null ? 0x80 : 0) | gp_num_colors_pow2; // Global Color Table Flag. // NOTE: No sort flag (unused?).\n  buf[p++] = background; // Background Color Index.\n  buf[p++] = 0; // Pixel aspect ratio (unused?).\n\n  // - Global Color Table\n  if (global_palette !== null) {\n    for (var i = 0, il = global_palette.length; i < il; ++i) {\n      var rgb = global_palette[i];\n      buf[p++] = (rgb >> 16) & 0xff;\n      buf[p++] = (rgb >> 8) & 0xff;\n      buf[p++] = rgb & 0xff;\n    }\n  }\n\n  if (loop_count !== null) {\n    // Netscape block for looping.\n    if (loop_count < 0 || loop_count > 65535)\n      throw new Error(\"Loop count invalid.\");\n    // Extension code, label, and length.\n    buf[p++] = 0x21;\n    buf[p++] = 0xff;\n    buf[p++] = 0x0b;\n    // NETSCAPE2.0\n    buf[p++] = 0x4e;\n    buf[p++] = 0x45;\n    buf[p++] = 0x54;\n    buf[p++] = 0x53;\n    buf[p++] = 0x43;\n    buf[p++] = 0x41;\n    buf[p++] = 0x50;\n    buf[p++] = 0x45;\n    buf[p++] = 0x32;\n    buf[p++] = 0x2e;\n    buf[p++] = 0x30;\n    // Sub-block\n    buf[p++] = 0x03;\n    buf[p++] = 0x01;\n    buf[p++] = loop_count & 0xff;\n    buf[p++] = (loop_count >> 8) & 0xff;\n    buf[p++] = 0x00; // Terminator.\n  }\n\n  var ended = false;\n\n  this.addFrame = function(x, y, w, h, indexed_pixels, opts) {\n    if (ended === true) {\n      --p;\n      ended = false;\n    } // Un-end.\n\n    opts = opts === undefined ? {} : opts;\n\n    // TODO(deanm): Bounds check x, y.  Do they need to be within the virtual\n    // canvas width/height, I imagine?\n    if (x < 0 || y < 0 || x > 65535 || y > 65535)\n      throw new Error(\"x/y invalid.\");\n\n    if (w <= 0 || h <= 0 || w > 65535 || h > 65535)\n      throw new Error(\"Width/Height invalid.\");\n\n    if (indexed_pixels.length < w * h)\n      throw new Error(\"Not enough pixels for the frame size.\");\n\n    var using_local_palette = true;\n    var palette = opts.palette;\n    if (palette === undefined || palette === null) {\n      using_local_palette = false;\n      palette = global_palette;\n    }\n\n    if (palette === undefined || palette === null)\n      throw new Error(\"Must supply either a local or global palette.\");\n\n    var num_colors = check_palette_and_num_colors(palette);\n\n    // Compute the min_code_size (power of 2), destroying num_colors.\n    var min_code_size = 0;\n    while ((num_colors >>= 1)) ++min_code_size;\n    num_colors = 1 << min_code_size; // Now we can easily get it back.\n\n    var delay = opts.delay === undefined ? 0 : opts.delay;\n\n    // From the spec:\n    //     0 -   No disposal specified. The decoder is\n    //           not required to take any action.\n    //     1 -   Do not dispose. The graphic is to be left\n    //           in place.\n    //     2 -   Restore to background color. The area used by the\n    //           graphic must be restored to the background color.\n    //     3 -   Restore to previous. The decoder is required to\n    //           restore the area overwritten by the graphic with\n    //           what was there prior to rendering the graphic.\n    //  4-7 -    To be defined.\n    // NOTE(deanm): Dispose background doesn't really work, apparently most\n    // browsers ignore the background palette index and clear to transparency.\n    var disposal = opts.disposal === undefined ? 0 : opts.disposal;\n    if (disposal < 0 || disposal > 3)\n      // 4-7 is reserved.\n      throw new Error(\"Disposal out of range.\");\n\n    var use_transparency = false;\n    var transparent_index = 0;\n    if (opts.transparent !== undefined && opts.transparent !== null) {\n      use_transparency = true;\n      transparent_index = opts.transparent;\n      if (transparent_index < 0 || transparent_index >= num_colors)\n        throw new Error(\"Transparent color index.\");\n    }\n\n    if (disposal !== 0 || use_transparency || delay !== 0) {\n      // - Graphics Control Extension\n      buf[p++] = 0x21;\n      buf[p++] = 0xf9; // Extension / Label.\n      buf[p++] = 4; // Byte size.\n\n      buf[p++] = (disposal << 2) | (use_transparency === true ? 1 : 0);\n      buf[p++] = delay & 0xff;\n      buf[p++] = (delay >> 8) & 0xff;\n      buf[p++] = transparent_index; // Transparent color index.\n      buf[p++] = 0; // Block Terminator.\n    }\n\n    // - Image Descriptor\n    buf[p++] = 0x2c; // Image Seperator.\n    buf[p++] = x & 0xff;\n    buf[p++] = (x >> 8) & 0xff; // Left.\n    buf[p++] = y & 0xff;\n    buf[p++] = (y >> 8) & 0xff; // Top.\n    buf[p++] = w & 0xff;\n    buf[p++] = (w >> 8) & 0xff;\n    buf[p++] = h & 0xff;\n    buf[p++] = (h >> 8) & 0xff;\n    // NOTE: No sort flag (unused?).\n    // TODO(deanm): Support interlace.\n    buf[p++] = using_local_palette === true ? 0x80 | (min_code_size - 1) : 0;\n\n    // - Local Color Table\n    if (using_local_palette === true) {\n      for (var i = 0, il = palette.length; i < il; ++i) {\n        var rgb = palette[i];\n        buf[p++] = (rgb >> 16) & 0xff;\n        buf[p++] = (rgb >> 8) & 0xff;\n        buf[p++] = rgb & 0xff;\n      }\n    }\n\n    p = GifWriterOutputLZWCodeStream(\n      buf,\n      p,\n      min_code_size < 2 ? 2 : min_code_size,\n      indexed_pixels\n    );\n\n    return p;\n  };\n\n  this.end = function() {\n    if (ended === false) {\n      buf[p++] = 0x3b; // Trailer.\n      ended = true;\n    }\n    return p;\n  };\n\n  this.getOutputBuffer = function() {\n    return buf;\n  };\n  this.setOutputBuffer = function(v) {\n    buf = v;\n  };\n  this.getOutputBufferPosition = function() {\n    return p;\n  };\n  this.setOutputBufferPosition = function(v) {\n    p = v;\n  };\n}\n\n// Main compression routine, palette indexes -> LZW code stream.\n// |index_stream| must have at least one entry.\nfunction GifWriterOutputLZWCodeStream(buf, p, min_code_size, index_stream) {\n  buf[p++] = min_code_size;\n  var cur_subblock = p++; // Pointing at the length field.\n\n  var clear_code = 1 << min_code_size;\n  var code_mask = clear_code - 1;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n\n  var cur_code_size = min_code_size + 1; // Number of bits per code.\n  var cur_shift = 0;\n  // We have at most 12-bit codes, so we should have to hold a max of 19\n  // bits here (and then we would write out).\n  var cur = 0;\n\n  function emit_bytes_to_buffer(bit_block_size) {\n    while (cur_shift >= bit_block_size) {\n      buf[p++] = cur & 0xff;\n      cur >>= 8;\n      cur_shift -= 8;\n      if (p === cur_subblock + 256) {\n        // Finished a subblock.\n        buf[cur_subblock] = 255;\n        cur_subblock = p++;\n      }\n    }\n  }\n\n  function emit_code(c) {\n    cur |= c << cur_shift;\n    cur_shift += cur_code_size;\n    emit_bytes_to_buffer(8);\n  }\n\n  // I am not an expert on the topic, and I don't want to write a thesis.\n  // However, it is good to outline here the basic algorithm and the few data\n  // structures and optimizations here that make this implementation fast.\n  // The basic idea behind LZW is to build a table of previously seen runs\n  // addressed by a short id (herein called output code).  All data is\n  // referenced by a code, which represents one or more values from the\n  // original input stream.  All input bytes can be referenced as the same\n  // value as an output code.  So if you didn't want any compression, you\n  // could more or less just output the original bytes as codes (there are\n  // some details to this, but it is the idea).  In order to achieve\n  // compression, values greater then the input range (codes can be up to\n  // 12-bit while input only 8-bit) represent a sequence of previously seen\n  // inputs.  The decompressor is able to build the same mapping while\n  // decoding, so there is always a shared common knowledge between the\n  // encoding and decoder, which is also important for \"timing\" aspects like\n  // how to handle variable bit width code encoding.\n  //\n  // One obvious but very important consequence of the table system is there\n  // is always a unique id (at most 12-bits) to map the runs.  'A' might be\n  // 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship\n  // can be used for an effecient lookup strategy for the code mapping.  We\n  // need to know if a run has been seen before, and be able to map that run\n  // to the output code.  Since we start with known unique ids (input bytes),\n  // and then from those build more unique ids (table entries), we can\n  // continue this chain (almost like a linked list) to always have small\n  // integer values that represent the current byte chains in the encoder.\n  // This means instead of tracking the input bytes (AAAABCD) to know our\n  // current state, we can track the table entry for AAAABC (it is guaranteed\n  // to exist by the nature of the algorithm) and the next character D.\n  // Therefor the tuple of (table_entry, byte) is guaranteed to also be\n  // unique.  This allows us to create a simple lookup key for mapping input\n  // sequences to codes (table indices) without having to store or search\n  // any of the code sequences.  So if 'AAAA' has a table entry of 12, the\n  // tuple of ('AAAA', K) for any input byte K will be unique, and can be our\n  // key.  This leads to a integer value at most 20-bits, which can always\n  // fit in an SMI value and be used as a fast sparse array / object key.\n\n  // Output code for the current contents of the index buffer.\n  var ib_code = index_stream[0] & code_mask; // Load first input index.\n  var code_table = {}; // Key'd on our 20-bit \"tuple\".\n\n  emit_code(clear_code); // Spec says first code should be a clear code.\n\n  // First index already loaded, process the rest of the stream.\n  for (var i = 1, il = index_stream.length; i < il; ++i) {\n    var k = index_stream[i] & code_mask;\n    var cur_key = (ib_code << 8) | k; // (prev, k) unique tuple.\n    var cur_code = code_table[cur_key]; // buffer + k.\n\n    // Check if we have to create a new code table entry.\n    if (cur_code === undefined) {\n      // We don't have buffer + k.\n      // Emit index buffer (without k).\n      // This is an inline version of emit_code, because this is the core\n      // writing routine of the compressor (and V8 cannot inline emit_code\n      // because it is a closure here in a different context).  Additionally\n      // we can call emit_byte_to_buffer less often, because we can have\n      // 30-bits (from our 31-bit signed SMI), and we know our codes will only\n      // be 12-bits, so can safely have 18-bits there without overflow.\n      // emit_code(ib_code);\n      cur |= ib_code << cur_shift;\n      cur_shift += cur_code_size;\n      while (cur_shift >= 8) {\n        buf[p++] = cur & 0xff;\n        cur >>= 8;\n        cur_shift -= 8;\n        if (p === cur_subblock + 256) {\n          // Finished a subblock.\n          buf[cur_subblock] = 255;\n          cur_subblock = p++;\n        }\n      }\n\n      if (next_code === 4096) {\n        // Table full, need a clear.\n        emit_code(clear_code);\n        next_code = eoi_code + 1;\n        cur_code_size = min_code_size + 1;\n        code_table = {};\n      } else {\n        // Table not full, insert a new entry.\n        // Increase our variable bit code sizes if necessary.  This is a bit\n        // tricky as it is based on \"timing\" between the encoding and\n        // decoder.  From the encoders perspective this should happen after\n        // we've already emitted the index buffer and are about to create the\n        // first table entry that would overflow our current code bit size.\n        if (next_code >= 1 << cur_code_size) ++cur_code_size;\n        code_table[cur_key] = next_code++; // Insert into code table.\n      }\n\n      ib_code = k; // Index buffer to single input k.\n    } else {\n      ib_code = cur_code; // Index buffer to sequence in code table.\n    }\n  }\n\n  emit_code(ib_code); // There will still be something in the index buffer.\n  emit_code(eoi_code); // End Of Information.\n\n  // Flush / finalize the sub-blocks stream to the buffer.\n  emit_bytes_to_buffer(1);\n\n  // Finish the sub-blocks, writing out any unfinished lengths and\n  // terminating with a sub-block of length 0.  If we have already started\n  // but not yet used a sub-block it can just become the terminator.\n  if (cur_subblock + 1 === p) {\n    // Started but unused.\n    buf[cur_subblock] = 0;\n  } else {\n    // Started and used, write length and additional terminator block.\n    buf[cur_subblock] = p - cur_subblock - 1;\n    buf[p++] = 0;\n  }\n  return p;\n}\n\nfunction GifReader(buf) {\n  var p = 0;\n\n  // - Header (GIF87a or GIF89a).\n  if (\n    buf[p++] !== 0x47 ||\n    buf[p++] !== 0x49 ||\n    buf[p++] !== 0x46 ||\n    buf[p++] !== 0x38 ||\n    ((buf[p++] + 1) & 0xfd) !== 0x38 ||\n    buf[p++] !== 0x61\n  ) {\n    throw new Error(\"Invalid GIF 87a/89a header.\");\n  }\n\n  // - Logical Screen Descriptor.\n  var width = buf[p++] | (buf[p++] << 8);\n  var height = buf[p++] | (buf[p++] << 8);\n  var pf0 = buf[p++]; // <Packed Fields>.\n  var global_palette_flag = pf0 >> 7;\n  var num_global_colors_pow2 = pf0 & 0x7;\n  var num_global_colors = 1 << (num_global_colors_pow2 + 1);\n  var background = buf[p++];\n  buf[p++]; // Pixel aspect ratio (unused?).\n\n  var global_palette_offset = null;\n  var global_palette_size = null;\n\n  if (global_palette_flag) {\n    global_palette_offset = p;\n    global_palette_size = num_global_colors;\n    p += num_global_colors * 3; // Seek past palette.\n  }\n\n  var no_eof = true;\n\n  var frames = [];\n\n  var delay = 0;\n  var transparent_index = null;\n  var disposal = 0; // 0 - No disposal specified.\n  var loop_count = null;\n\n  this.width = width;\n  this.height = height;\n\n  while (no_eof && p < buf.length) {\n    switch (buf[p++]) {\n      case 0x21: // Graphics Control Extension Block\n        switch (buf[p++]) {\n          case 0xff: // Application specific block\n            // Try if it's a Netscape block (with animation loop counter).\n            if (\n              buf[p] !== 0x0b || // 21 FF already read, check block size.\n              // NETSCAPE2.0\n              (buf[p + 1] == 0x4e &&\n                buf[p + 2] == 0x45 &&\n                buf[p + 3] == 0x54 &&\n                buf[p + 4] == 0x53 &&\n                buf[p + 5] == 0x43 &&\n                buf[p + 6] == 0x41 &&\n                buf[p + 7] == 0x50 &&\n                buf[p + 8] == 0x45 &&\n                buf[p + 9] == 0x32 &&\n                buf[p + 10] == 0x2e &&\n                buf[p + 11] == 0x30 &&\n                // Sub-block\n                buf[p + 12] == 0x03 &&\n                buf[p + 13] == 0x01 &&\n                buf[p + 16] == 0)\n            ) {\n              p += 14;\n              loop_count = buf[p++] | (buf[p++] << 8);\n              p++; // Skip terminator.\n            } else {\n              // We don't know what it is, just try to get past it.\n              p += 12;\n              while (true) {\n                // Seek through subblocks.\n                var block_size = buf[p++];\n                // Bad block size (ex: undefined from an out of bounds read).\n                if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n                if (block_size === 0) break; // 0 size is terminator\n                p += block_size;\n              }\n            }\n            break;\n\n          case 0xf9: // Graphics Control Extension\n            if (buf[p++] !== 0x4 || buf[p + 4] !== 0)\n              throw new Error(\"Invalid graphics extension block.\");\n            var pf1 = buf[p++];\n            delay = buf[p++] | (buf[p++] << 8);\n            transparent_index = buf[p++];\n            if ((pf1 & 1) === 0) transparent_index = null;\n            disposal = (pf1 >> 2) & 0x7;\n            p++; // Skip terminator.\n            break;\n\n          case 0xfe: // Comment Extension.\n            while (true) {\n              // Seek through subblocks.\n              var block_size = buf[p++];\n              // Bad block size (ex: undefined from an out of bounds read).\n              if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n              if (block_size === 0) break; // 0 size is terminator\n              // console.log(buf.slice(p, p+block_size).toString('ascii'));\n              p += block_size;\n            }\n            break;\n\n          default:\n            throw new Error(\n              \"Unknown graphic control label: 0x\" + buf[p - 1].toString(16)\n            );\n        }\n        break;\n\n      case 0x2c: // Image Descriptor.\n        var x = buf[p++] | (buf[p++] << 8);\n        var y = buf[p++] | (buf[p++] << 8);\n        var w = buf[p++] | (buf[p++] << 8);\n        var h = buf[p++] | (buf[p++] << 8);\n        var pf2 = buf[p++];\n        var local_palette_flag = pf2 >> 7;\n        var interlace_flag = (pf2 >> 6) & 1;\n        var num_local_colors_pow2 = pf2 & 0x7;\n        var num_local_colors = 1 << (num_local_colors_pow2 + 1);\n        var palette_offset = global_palette_offset;\n        var palette_size = global_palette_size;\n        var has_local_palette = false;\n        if (local_palette_flag) {\n          var has_local_palette = true;\n          palette_offset = p; // Override with local palette.\n          palette_size = num_local_colors;\n          p += num_local_colors * 3; // Seek past palette.\n        }\n\n        var data_offset = p;\n\n        p++; // codesize\n        while (true) {\n          var block_size = buf[p++];\n          // Bad block size (ex: undefined from an out of bounds read).\n          if (!(block_size >= 0)) throw Error(\"Invalid block size\");\n          if (block_size === 0) break; // 0 size is terminator\n          p += block_size;\n        }\n\n        frames.push({\n          x: x,\n          y: y,\n          width: w,\n          height: h,\n          has_local_palette: has_local_palette,\n          palette_offset: palette_offset,\n          palette_size: palette_size,\n          data_offset: data_offset,\n          data_length: p - data_offset,\n          transparent_index: transparent_index,\n          interlaced: !!interlace_flag,\n          delay: delay,\n          disposal: disposal\n        });\n        break;\n\n      case 0x3b: // Trailer Marker (end of file).\n        no_eof = false;\n        break;\n\n      default:\n        throw new Error(\"Unknown gif block: 0x\" + buf[p - 1].toString(16));\n        break;\n    }\n  }\n\n  this.numFrames = function() {\n    return frames.length;\n  };\n\n  this.loopCount = function() {\n    return loop_count;\n  };\n\n  this.frameInfo = function(frame_num) {\n    if (frame_num < 0 || frame_num >= frames.length)\n      throw new Error(\"Frame index out of range.\");\n    return frames[frame_num];\n  };\n\n  this.decodeAndBlitFrameBGRA = function(frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels); // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(\n      buf,\n      frame.data_offset,\n      index_stream,\n      num_pixels\n    );\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth = frame.width;\n    var framestride = width - framewidth;\n    var xleft = framewidth; // Number of subrect pixels left in scanline.\n\n    // Output indices of the top left and bottom right corners of the subrect.\n    var opbeg = (frame.y * width + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op = opbeg;\n\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7; // Pass 1.\n    }\n\n    var interlaceskip = 8; // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n\n      if (xleft === 0) {\n        // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) {\n          // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip - 1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = b;\n        pixels[op++] = g;\n        pixels[op++] = r;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n\n  // I will go to copy and paste hell one day...\n  this.decodeAndBlitFrameRGBA = function(frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels); // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(\n      buf,\n      frame.data_offset,\n      index_stream,\n      num_pixels\n    );\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth = frame.width;\n    var framestride = width - framewidth;\n    var xleft = framewidth; // Number of subrect pixels left in scanline.\n\n    // Output indices of the top left and bottom right corners of the subrect.\n    var opbeg = (frame.y * width + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op = opbeg;\n\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7; // Pass 1.\n    }\n\n    var interlaceskip = 8; // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n\n      if (xleft === 0) {\n        // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) {\n          // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip - 1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = r;\n        pixels[op++] = g;\n        pixels[op++] = b;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n}\n\nfunction GifReaderLZWOutputIndexStream(code_stream, p, output, output_length) {\n  var min_code_size = code_stream[p++];\n\n  var clear_code = 1 << min_code_size;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n\n  var cur_code_size = min_code_size + 1; // Number of bits per code.\n  // NOTE: This shares the same name as the encoder, but has a different\n  // meaning here.  Here this masks each code coming from the code stream.\n  var code_mask = (1 << cur_code_size) - 1;\n  var cur_shift = 0;\n  var cur = 0;\n\n  var op = 0; // Output pointer.\n\n  var subblock_size = code_stream[p++];\n\n  // TODO(deanm): Would using a TypedArray be any faster?  At least it would\n  // solve the fast mode / backing store uncertainty.\n  // var code_table = Array(4096);\n  var code_table = new Int32Array(4096); // Can be signed, we only use 20 bits.\n\n  var prev_code = null; // Track code-1.\n\n  while (true) {\n    // Read up to two bytes, making sure we always 12-bits for max sized code.\n    while (cur_shift < 16) {\n      if (subblock_size === 0) break; // No more data to be read.\n\n      cur |= code_stream[p++] << cur_shift;\n      cur_shift += 8;\n\n      if (subblock_size === 1) {\n        // Never let it get to 0 to hold logic above.\n        subblock_size = code_stream[p++]; // Next subblock.\n      } else {\n        --subblock_size;\n      }\n    }\n\n    // TODO(deanm): We should never really get here, we should have received\n    // and EOI.\n    if (cur_shift < cur_code_size) break;\n\n    var code = cur & code_mask;\n    cur >>= cur_code_size;\n    cur_shift -= cur_code_size;\n\n    // TODO(deanm): Maybe should check that the first code was a clear code,\n    // at least this is what you're supposed to do.  But actually our encoder\n    // now doesn't emit a clear code first anyway.\n    if (code === clear_code) {\n      // We don't actually have to clear the table.  This could be a good idea\n      // for greater error checking, but we don't really do any anyway.  We\n      // will just track it with next_code and overwrite old entries.\n\n      next_code = eoi_code + 1;\n      cur_code_size = min_code_size + 1;\n      code_mask = (1 << cur_code_size) - 1;\n\n      // Don't update prev_code ?\n      prev_code = null;\n      continue;\n    } else if (code === eoi_code) {\n      break;\n    }\n\n    // We have a similar situation as the decoder, where we want to store\n    // variable length entries (code table entries), but we want to do in a\n    // faster manner than an array of arrays.  The code below stores sort of a\n    // linked list within the code table, and then \"chases\" through it to\n    // construct the dictionary entries.  When a new entry is created, just the\n    // last byte is stored, and the rest (prefix) of the entry is only\n    // referenced by its table entry.  Then the code chases through the\n    // prefixes until it reaches a single byte code.  We have to chase twice,\n    // first to compute the length, and then to actually copy the data to the\n    // output (backwards, since we know the length).  The alternative would be\n    // storing something in an intermediate stack, but that doesn't make any\n    // more sense.  I implemented an approach where it also stored the length\n    // in the code table, although it's a bit tricky because you run out of\n    // bits (12 + 12 + 8), but I didn't measure much improvements (the table\n    // entries are generally not the long).  Even when I created benchmarks for\n    // very long table entries the complexity did not seem worth it.\n    // The code table stores the prefix entry in 12 bits and then the suffix\n    // byte in 8 bits, so each entry is 20 bits.\n\n    var chase_code = code < next_code ? code : prev_code;\n\n    // Chase what we will output, either {CODE} or {CODE-1}.\n    var chase_length = 0;\n    var chase = chase_code;\n    while (chase > clear_code) {\n      chase = code_table[chase] >> 8;\n      ++chase_length;\n    }\n\n    var k = chase;\n\n    var op_end = op + chase_length + (chase_code !== code ? 1 : 0);\n    if (op_end > output_length) {\n      console.log(\"Warning, gif stream longer than expected.\");\n      return;\n    }\n\n    // Already have the first byte from the chase, might as well write it fast.\n    output[op++] = k;\n\n    op += chase_length;\n    var b = op; // Track pointer, writing backwards.\n\n    if (chase_code !== code)\n      // The case of emitting {CODE-1} + k.\n      output[op++] = k;\n\n    chase = chase_code;\n    while (chase_length--) {\n      chase = code_table[chase];\n      output[--b] = chase & 0xff; // Write backwards.\n      chase >>= 8; // Pull down to the prefix code.\n    }\n\n    if (prev_code !== null && next_code < 4096) {\n      code_table[next_code++] = (prev_code << 8) | k;\n      // TODO(deanm): Figure out this clearing vs code growth logic better.  I\n      // have an feeling that it should just happen somewhere else, for now it\n      // is awkward between when we grow past the max and then hit a clear code.\n      // For now just check if we hit the max 12-bits (then a clear code should\n      // follow, also of course encoded in 12-bits).\n      if (next_code >= code_mask + 1 && cur_code_size < 12) {\n        ++cur_code_size;\n        code_mask = (code_mask << 1) | 1;\n      }\n    }\n\n    prev_code = code;\n  }\n\n  if (op !== output_length) {\n    console.log(\"Warning, gif stream shorter than expected.\");\n  }\n\n  return output;\n}\n\nexport { GifReader, GifWriter };\n","/**\n * @license\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nfunction JPEGEncoder(quality) {\n  var ffloor = Math.floor;\n  var YTable = new Array(64);\n  var UVTable = new Array(64);\n  var fdtbl_Y = new Array(64);\n  var fdtbl_UV = new Array(64);\n  var YDC_HT;\n  var UVDC_HT;\n  var YAC_HT;\n  var UVAC_HT;\n\n  var bitcode = new Array(65535);\n  var category = new Array(65535);\n  var outputfDCTQuant = new Array(64);\n  var DU = new Array(64);\n  var byteout = [];\n  var bytenew = 0;\n  var bytepos = 7;\n\n  var YDU = new Array(64);\n  var UDU = new Array(64);\n  var VDU = new Array(64);\n  var clt = new Array(256);\n  var RGB_YUV_TABLE = new Array(2048);\n  var currentQuality;\n\n  var ZigZag = [\n    0,\n    1,\n    5,\n    6,\n    14,\n    15,\n    27,\n    28,\n    2,\n    4,\n    7,\n    13,\n    16,\n    26,\n    29,\n    42,\n    3,\n    8,\n    12,\n    17,\n    25,\n    30,\n    41,\n    43,\n    9,\n    11,\n    18,\n    24,\n    31,\n    40,\n    44,\n    53,\n    10,\n    19,\n    23,\n    32,\n    39,\n    45,\n    52,\n    54,\n    20,\n    22,\n    33,\n    38,\n    46,\n    51,\n    55,\n    60,\n    21,\n    34,\n    37,\n    47,\n    50,\n    56,\n    59,\n    61,\n    35,\n    36,\n    48,\n    49,\n    57,\n    58,\n    62,\n    63\n  ];\n\n  var std_dc_luminance_nrcodes = [\n    0,\n    0,\n    1,\n    5,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ];\n  var std_dc_luminance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_luminance_nrcodes = [\n    0,\n    0,\n    2,\n    1,\n    3,\n    3,\n    2,\n    4,\n    3,\n    5,\n    5,\n    4,\n    4,\n    0,\n    0,\n    1,\n    0x7d\n  ];\n  var std_ac_luminance_values = [\n    0x01,\n    0x02,\n    0x03,\n    0x00,\n    0x04,\n    0x11,\n    0x05,\n    0x12,\n    0x21,\n    0x31,\n    0x41,\n    0x06,\n    0x13,\n    0x51,\n    0x61,\n    0x07,\n    0x22,\n    0x71,\n    0x14,\n    0x32,\n    0x81,\n    0x91,\n    0xa1,\n    0x08,\n    0x23,\n    0x42,\n    0xb1,\n    0xc1,\n    0x15,\n    0x52,\n    0xd1,\n    0xf0,\n    0x24,\n    0x33,\n    0x62,\n    0x72,\n    0x82,\n    0x09,\n    0x0a,\n    0x16,\n    0x17,\n    0x18,\n    0x19,\n    0x1a,\n    0x25,\n    0x26,\n    0x27,\n    0x28,\n    0x29,\n    0x2a,\n    0x34,\n    0x35,\n    0x36,\n    0x37,\n    0x38,\n    0x39,\n    0x3a,\n    0x43,\n    0x44,\n    0x45,\n    0x46,\n    0x47,\n    0x48,\n    0x49,\n    0x4a,\n    0x53,\n    0x54,\n    0x55,\n    0x56,\n    0x57,\n    0x58,\n    0x59,\n    0x5a,\n    0x63,\n    0x64,\n    0x65,\n    0x66,\n    0x67,\n    0x68,\n    0x69,\n    0x6a,\n    0x73,\n    0x74,\n    0x75,\n    0x76,\n    0x77,\n    0x78,\n    0x79,\n    0x7a,\n    0x83,\n    0x84,\n    0x85,\n    0x86,\n    0x87,\n    0x88,\n    0x89,\n    0x8a,\n    0x92,\n    0x93,\n    0x94,\n    0x95,\n    0x96,\n    0x97,\n    0x98,\n    0x99,\n    0x9a,\n    0xa2,\n    0xa3,\n    0xa4,\n    0xa5,\n    0xa6,\n    0xa7,\n    0xa8,\n    0xa9,\n    0xaa,\n    0xb2,\n    0xb3,\n    0xb4,\n    0xb5,\n    0xb6,\n    0xb7,\n    0xb8,\n    0xb9,\n    0xba,\n    0xc2,\n    0xc3,\n    0xc4,\n    0xc5,\n    0xc6,\n    0xc7,\n    0xc8,\n    0xc9,\n    0xca,\n    0xd2,\n    0xd3,\n    0xd4,\n    0xd5,\n    0xd6,\n    0xd7,\n    0xd8,\n    0xd9,\n    0xda,\n    0xe1,\n    0xe2,\n    0xe3,\n    0xe4,\n    0xe5,\n    0xe6,\n    0xe7,\n    0xe8,\n    0xe9,\n    0xea,\n    0xf1,\n    0xf2,\n    0xf3,\n    0xf4,\n    0xf5,\n    0xf6,\n    0xf7,\n    0xf8,\n    0xf9,\n    0xfa\n  ];\n\n  var std_dc_chrominance_nrcodes = [\n    0,\n    0,\n    3,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n  ];\n  var std_dc_chrominance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  var std_ac_chrominance_nrcodes = [\n    0,\n    0,\n    2,\n    1,\n    2,\n    4,\n    4,\n    3,\n    4,\n    7,\n    5,\n    4,\n    4,\n    0,\n    1,\n    2,\n    0x77\n  ];\n  var std_ac_chrominance_values = [\n    0x00,\n    0x01,\n    0x02,\n    0x03,\n    0x11,\n    0x04,\n    0x05,\n    0x21,\n    0x31,\n    0x06,\n    0x12,\n    0x41,\n    0x51,\n    0x07,\n    0x61,\n    0x71,\n    0x13,\n    0x22,\n    0x32,\n    0x81,\n    0x08,\n    0x14,\n    0x42,\n    0x91,\n    0xa1,\n    0xb1,\n    0xc1,\n    0x09,\n    0x23,\n    0x33,\n    0x52,\n    0xf0,\n    0x15,\n    0x62,\n    0x72,\n    0xd1,\n    0x0a,\n    0x16,\n    0x24,\n    0x34,\n    0xe1,\n    0x25,\n    0xf1,\n    0x17,\n    0x18,\n    0x19,\n    0x1a,\n    0x26,\n    0x27,\n    0x28,\n    0x29,\n    0x2a,\n    0x35,\n    0x36,\n    0x37,\n    0x38,\n    0x39,\n    0x3a,\n    0x43,\n    0x44,\n    0x45,\n    0x46,\n    0x47,\n    0x48,\n    0x49,\n    0x4a,\n    0x53,\n    0x54,\n    0x55,\n    0x56,\n    0x57,\n    0x58,\n    0x59,\n    0x5a,\n    0x63,\n    0x64,\n    0x65,\n    0x66,\n    0x67,\n    0x68,\n    0x69,\n    0x6a,\n    0x73,\n    0x74,\n    0x75,\n    0x76,\n    0x77,\n    0x78,\n    0x79,\n    0x7a,\n    0x82,\n    0x83,\n    0x84,\n    0x85,\n    0x86,\n    0x87,\n    0x88,\n    0x89,\n    0x8a,\n    0x92,\n    0x93,\n    0x94,\n    0x95,\n    0x96,\n    0x97,\n    0x98,\n    0x99,\n    0x9a,\n    0xa2,\n    0xa3,\n    0xa4,\n    0xa5,\n    0xa6,\n    0xa7,\n    0xa8,\n    0xa9,\n    0xaa,\n    0xb2,\n    0xb3,\n    0xb4,\n    0xb5,\n    0xb6,\n    0xb7,\n    0xb8,\n    0xb9,\n    0xba,\n    0xc2,\n    0xc3,\n    0xc4,\n    0xc5,\n    0xc6,\n    0xc7,\n    0xc8,\n    0xc9,\n    0xca,\n    0xd2,\n    0xd3,\n    0xd4,\n    0xd5,\n    0xd6,\n    0xd7,\n    0xd8,\n    0xd9,\n    0xda,\n    0xe2,\n    0xe3,\n    0xe4,\n    0xe5,\n    0xe6,\n    0xe7,\n    0xe8,\n    0xe9,\n    0xea,\n    0xf2,\n    0xf3,\n    0xf4,\n    0xf5,\n    0xf6,\n    0xf7,\n    0xf8,\n    0xf9,\n    0xfa\n  ];\n\n  function initQuantTables(sf) {\n    var YQT = [\n      16,\n      11,\n      10,\n      16,\n      24,\n      40,\n      51,\n      61,\n      12,\n      12,\n      14,\n      19,\n      26,\n      58,\n      60,\n      55,\n      14,\n      13,\n      16,\n      24,\n      40,\n      57,\n      69,\n      56,\n      14,\n      17,\n      22,\n      29,\n      51,\n      87,\n      80,\n      62,\n      18,\n      22,\n      37,\n      56,\n      68,\n      109,\n      103,\n      77,\n      24,\n      35,\n      55,\n      64,\n      81,\n      104,\n      113,\n      92,\n      49,\n      64,\n      78,\n      87,\n      103,\n      121,\n      120,\n      101,\n      72,\n      92,\n      95,\n      98,\n      112,\n      100,\n      103,\n      99\n    ];\n\n    for (var i = 0; i < 64; i++) {\n      var t = ffloor((YQT[i] * sf + 50) / 100);\n      t = Math.min(Math.max(t, 1), 255);\n      YTable[ZigZag[i]] = t;\n    }\n    var UVQT = [\n      17,\n      18,\n      24,\n      47,\n      99,\n      99,\n      99,\n      99,\n      18,\n      21,\n      26,\n      66,\n      99,\n      99,\n      99,\n      99,\n      24,\n      26,\n      56,\n      99,\n      99,\n      99,\n      99,\n      99,\n      47,\n      66,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99,\n      99\n    ];\n    for (var j = 0; j < 64; j++) {\n      var u = ffloor((UVQT[j] * sf + 50) / 100);\n      u = Math.min(Math.max(u, 1), 255);\n      UVTable[ZigZag[j]] = u;\n    }\n    var aasf = [\n      1.0,\n      1.387039845,\n      1.306562965,\n      1.175875602,\n      1.0,\n      0.785694958,\n      0.5411961,\n      0.275899379\n    ];\n    var k = 0;\n    for (var row = 0; row < 8; row++) {\n      for (var col = 0; col < 8; col++) {\n        fdtbl_Y[k] = 1.0 / (YTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        fdtbl_UV[k] = 1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0);\n        k++;\n      }\n    }\n  }\n\n  function computeHuffmanTbl(nrcodes, std_table) {\n    var codevalue = 0;\n    var pos_in_table = 0;\n    var HT = new Array();\n    for (var k = 1; k <= 16; k++) {\n      for (var j = 1; j <= nrcodes[k]; j++) {\n        HT[std_table[pos_in_table]] = [];\n        HT[std_table[pos_in_table]][0] = codevalue;\n        HT[std_table[pos_in_table]][1] = k;\n        pos_in_table++;\n        codevalue++;\n      }\n      codevalue *= 2;\n    }\n    return HT;\n  }\n\n  function initHuffmanTbl() {\n    YDC_HT = computeHuffmanTbl(\n      std_dc_luminance_nrcodes,\n      std_dc_luminance_values\n    );\n    UVDC_HT = computeHuffmanTbl(\n      std_dc_chrominance_nrcodes,\n      std_dc_chrominance_values\n    );\n    YAC_HT = computeHuffmanTbl(\n      std_ac_luminance_nrcodes,\n      std_ac_luminance_values\n    );\n    UVAC_HT = computeHuffmanTbl(\n      std_ac_chrominance_nrcodes,\n      std_ac_chrominance_values\n    );\n  }\n\n  function initCategoryNumber() {\n    var nrlower = 1;\n    var nrupper = 2;\n    for (var cat = 1; cat <= 15; cat++) {\n      //Positive numbers\n      for (var nr = nrlower; nr < nrupper; nr++) {\n        category[32767 + nr] = cat;\n        bitcode[32767 + nr] = [];\n        bitcode[32767 + nr][1] = cat;\n        bitcode[32767 + nr][0] = nr;\n      }\n      //Negative numbers\n      for (var nrneg = -(nrupper - 1); nrneg <= -nrlower; nrneg++) {\n        category[32767 + nrneg] = cat;\n        bitcode[32767 + nrneg] = [];\n        bitcode[32767 + nrneg][1] = cat;\n        bitcode[32767 + nrneg][0] = nrupper - 1 + nrneg;\n      }\n      nrlower <<= 1;\n      nrupper <<= 1;\n    }\n  }\n\n  function initRGBYUVTable() {\n    for (var i = 0; i < 256; i++) {\n      RGB_YUV_TABLE[i] = 19595 * i;\n      RGB_YUV_TABLE[(i + 256) >> 0] = 38470 * i;\n      RGB_YUV_TABLE[(i + 512) >> 0] = 7471 * i + 0x8000;\n      RGB_YUV_TABLE[(i + 768) >> 0] = -11059 * i;\n      RGB_YUV_TABLE[(i + 1024) >> 0] = -21709 * i;\n      RGB_YUV_TABLE[(i + 1280) >> 0] = 32768 * i + 0x807fff;\n      RGB_YUV_TABLE[(i + 1536) >> 0] = -27439 * i;\n      RGB_YUV_TABLE[(i + 1792) >> 0] = -5329 * i;\n    }\n  }\n\n  // IO functions\n  function writeBits(bs) {\n    var value = bs[0];\n    var posval = bs[1] - 1;\n    while (posval >= 0) {\n      if (value & (1 << posval)) {\n        bytenew |= 1 << bytepos;\n      }\n      posval--;\n      bytepos--;\n      if (bytepos < 0) {\n        if (bytenew == 0xff) {\n          writeByte(0xff);\n          writeByte(0);\n        } else {\n          writeByte(bytenew);\n        }\n        bytepos = 7;\n        bytenew = 0;\n      }\n    }\n  }\n\n  function writeByte(value) {\n    //byteout.push(clt[value]); // write char directly instead of converting later\n    byteout.push(value);\n  }\n\n  function writeWord(value) {\n    writeByte((value >> 8) & 0xff);\n    writeByte(value & 0xff);\n  }\n\n  // DCT & quantization core\n  function fDCTQuant(data, fdtbl) {\n    var d0, d1, d2, d3, d4, d5, d6, d7;\n    /* Pass 1: process rows. */\n    var dataOff = 0;\n    var i;\n    var I8 = 8;\n    var I64 = 64;\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 1];\n      d2 = data[dataOff + 2];\n      d3 = data[dataOff + 3];\n      d4 = data[dataOff + 4];\n      d5 = data[dataOff + 5];\n      d6 = data[dataOff + 6];\n      d7 = data[dataOff + 7];\n\n      var tmp0 = d0 + d7;\n      var tmp7 = d0 - d7;\n      var tmp1 = d1 + d6;\n      var tmp6 = d1 - d6;\n      var tmp2 = d2 + d5;\n      var tmp5 = d2 - d5;\n      var tmp3 = d3 + d4;\n      var tmp4 = d3 - d4;\n\n      /* Even part */\n      var tmp10 = tmp0 + tmp3; /* phase 2 */\n      var tmp13 = tmp0 - tmp3;\n      var tmp11 = tmp1 + tmp2;\n      var tmp12 = tmp1 - tmp2;\n\n      data[dataOff] = tmp10 + tmp11; /* phase 3 */\n      data[dataOff + 4] = tmp10 - tmp11;\n\n      var z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n      data[dataOff + 2] = tmp13 + z1; /* phase 5 */\n      data[dataOff + 6] = tmp13 - z1;\n\n      /* Odd part */\n      tmp10 = tmp4 + tmp5; /* phase 2 */\n      tmp11 = tmp5 + tmp6;\n      tmp12 = tmp6 + tmp7;\n\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n      var z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n      var z2 = 0.5411961 * tmp10 + z5; /* c2-c6 */\n      var z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n      var z3 = tmp11 * 0.707106781; /* c4 */\n\n      var z11 = tmp7 + z3; /* phase 5 */\n      var z13 = tmp7 - z3;\n\n      data[dataOff + 5] = z13 + z2; /* phase 6 */\n      data[dataOff + 3] = z13 - z2;\n      data[dataOff + 1] = z11 + z4;\n      data[dataOff + 7] = z11 - z4;\n\n      dataOff += 8; /* advance pointer to next row */\n    }\n\n    /* Pass 2: process columns. */\n    dataOff = 0;\n    for (i = 0; i < I8; ++i) {\n      d0 = data[dataOff];\n      d1 = data[dataOff + 8];\n      d2 = data[dataOff + 16];\n      d3 = data[dataOff + 24];\n      d4 = data[dataOff + 32];\n      d5 = data[dataOff + 40];\n      d6 = data[dataOff + 48];\n      d7 = data[dataOff + 56];\n\n      var tmp0p2 = d0 + d7;\n      var tmp7p2 = d0 - d7;\n      var tmp1p2 = d1 + d6;\n      var tmp6p2 = d1 - d6;\n      var tmp2p2 = d2 + d5;\n      var tmp5p2 = d2 - d5;\n      var tmp3p2 = d3 + d4;\n      var tmp4p2 = d3 - d4;\n\n      /* Even part */\n      var tmp10p2 = tmp0p2 + tmp3p2; /* phase 2 */\n      var tmp13p2 = tmp0p2 - tmp3p2;\n      var tmp11p2 = tmp1p2 + tmp2p2;\n      var tmp12p2 = tmp1p2 - tmp2p2;\n\n      data[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n      data[dataOff + 32] = tmp10p2 - tmp11p2;\n\n      var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n      data[dataOff + 16] = tmp13p2 + z1p2; /* phase 5 */\n      data[dataOff + 48] = tmp13p2 - z1p2;\n\n      /* Odd part */\n      tmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n      tmp11p2 = tmp5p2 + tmp6p2;\n      tmp12p2 = tmp6p2 + tmp7p2;\n\n      /* The rotator is modified from fig 4-8 to avoid extra negations. */\n      var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n      var z2p2 = 0.5411961 * tmp10p2 + z5p2; /* c2-c6 */\n      var z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n      var z3p2 = tmp11p2 * 0.707106781; /* c4 */\n\n      var z11p2 = tmp7p2 + z3p2; /* phase 5 */\n      var z13p2 = tmp7p2 - z3p2;\n\n      data[dataOff + 40] = z13p2 + z2p2; /* phase 6 */\n      data[dataOff + 24] = z13p2 - z2p2;\n      data[dataOff + 8] = z11p2 + z4p2;\n      data[dataOff + 56] = z11p2 - z4p2;\n\n      dataOff++; /* advance pointer to next column */\n    }\n\n    // Quantize/descale the coefficients\n    var fDCTQuant;\n    for (i = 0; i < I64; ++i) {\n      // Apply the quantization and scaling factor & Round to nearest integer\n      fDCTQuant = data[i] * fdtbl[i];\n      outputfDCTQuant[i] =\n        fDCTQuant > 0.0 ? (fDCTQuant + 0.5) | 0 : (fDCTQuant - 0.5) | 0;\n      //outputfDCTQuant[i] = fround(fDCTQuant);\n    }\n    return outputfDCTQuant;\n  }\n\n  function writeAPP0() {\n    writeWord(0xffe0); // marker\n    writeWord(16); // length\n    writeByte(0x4a); // J\n    writeByte(0x46); // F\n    writeByte(0x49); // I\n    writeByte(0x46); // F\n    writeByte(0); // = \"JFIF\",'\\0'\n    writeByte(1); // versionhi\n    writeByte(1); // versionlo\n    writeByte(0); // xyunits\n    writeWord(1); // xdensity\n    writeWord(1); // ydensity\n    writeByte(0); // thumbnwidth\n    writeByte(0); // thumbnheight\n  }\n\n  function writeSOF0(width, height) {\n    writeWord(0xffc0); // marker\n    writeWord(17); // length, truecolor YUV JPG\n    writeByte(8); // precision\n    writeWord(height);\n    writeWord(width);\n    writeByte(3); // nrofcomponents\n    writeByte(1); // IdY\n    writeByte(0x11); // HVY\n    writeByte(0); // QTY\n    writeByte(2); // IdU\n    writeByte(0x11); // HVU\n    writeByte(1); // QTU\n    writeByte(3); // IdV\n    writeByte(0x11); // HVV\n    writeByte(1); // QTV\n  }\n\n  function writeDQT() {\n    writeWord(0xffdb); // marker\n    writeWord(132); // length\n    writeByte(0);\n    for (var i = 0; i < 64; i++) {\n      writeByte(YTable[i]);\n    }\n    writeByte(1);\n    for (var j = 0; j < 64; j++) {\n      writeByte(UVTable[j]);\n    }\n  }\n\n  function writeDHT() {\n    writeWord(0xffc4); // marker\n    writeWord(0x01a2); // length\n\n    writeByte(0); // HTYDCinfo\n    for (var i = 0; i < 16; i++) {\n      writeByte(std_dc_luminance_nrcodes[i + 1]);\n    }\n    for (var j = 0; j <= 11; j++) {\n      writeByte(std_dc_luminance_values[j]);\n    }\n\n    writeByte(0x10); // HTYACinfo\n    for (var k = 0; k < 16; k++) {\n      writeByte(std_ac_luminance_nrcodes[k + 1]);\n    }\n    for (var l = 0; l <= 161; l++) {\n      writeByte(std_ac_luminance_values[l]);\n    }\n\n    writeByte(1); // HTUDCinfo\n    for (var m = 0; m < 16; m++) {\n      writeByte(std_dc_chrominance_nrcodes[m + 1]);\n    }\n    for (var n = 0; n <= 11; n++) {\n      writeByte(std_dc_chrominance_values[n]);\n    }\n\n    writeByte(0x11); // HTUACinfo\n    for (var o = 0; o < 16; o++) {\n      writeByte(std_ac_chrominance_nrcodes[o + 1]);\n    }\n    for (var p = 0; p <= 161; p++) {\n      writeByte(std_ac_chrominance_values[p]);\n    }\n  }\n\n  function writeSOS() {\n    writeWord(0xffda); // marker\n    writeWord(12); // length\n    writeByte(3); // nrofcomponents\n    writeByte(1); // IdY\n    writeByte(0); // HTY\n    writeByte(2); // IdU\n    writeByte(0x11); // HTU\n    writeByte(3); // IdV\n    writeByte(0x11); // HTV\n    writeByte(0); // Ss\n    writeByte(0x3f); // Se\n    writeByte(0); // Bf\n  }\n\n  function processDU(CDU, fdtbl, DC, HTDC, HTAC) {\n    var EOB = HTAC[0x00];\n    var M16zeroes = HTAC[0xf0];\n    var pos;\n    var I16 = 16;\n    var I63 = 63;\n    var I64 = 64;\n    var DU_DCT = fDCTQuant(CDU, fdtbl);\n    //ZigZag reorder\n    for (var j = 0; j < I64; ++j) {\n      DU[ZigZag[j]] = DU_DCT[j];\n    }\n    var Diff = DU[0] - DC;\n    DC = DU[0];\n    //Encode DC\n    if (Diff == 0) {\n      writeBits(HTDC[0]); // Diff might be 0\n    } else {\n      pos = 32767 + Diff;\n      writeBits(HTDC[category[pos]]);\n      writeBits(bitcode[pos]);\n    }\n    //Encode ACs\n    var end0pos = 63; // was const... which is crazy\n    while (end0pos > 0 && DU[end0pos] == 0) {\n      end0pos--;\n    }\n    //end0pos = first element in reverse order !=0\n    if (end0pos == 0) {\n      writeBits(EOB);\n      return DC;\n    }\n    var i = 1;\n    var lng;\n    while (i <= end0pos) {\n      var startpos = i;\n      while (DU[i] == 0 && i <= end0pos) {\n        ++i;\n      }\n      var nrzeroes = i - startpos;\n      if (nrzeroes >= I16) {\n        lng = nrzeroes >> 4;\n        for (var nrmarker = 1; nrmarker <= lng; ++nrmarker)\n          writeBits(M16zeroes);\n        nrzeroes = nrzeroes & 0xf;\n      }\n      pos = 32767 + DU[i];\n      writeBits(HTAC[(nrzeroes << 4) + category[pos]]);\n      writeBits(bitcode[pos]);\n      i++;\n    }\n    if (end0pos != I63) {\n      writeBits(EOB);\n    }\n    return DC;\n  }\n\n  function initCharLookupTable() {\n    var sfcc = String.fromCharCode;\n    for (var i = 0; i < 256; i++) {\n      ///// ACHTUNG // 255\n      clt[i] = sfcc(i);\n    }\n  }\n\n  this.encode = function(\n    image,\n    quality // image data object\n  ) {\n    if (quality) setQuality(quality);\n\n    // Initialize bit writer\n    byteout = new Array();\n    bytenew = 0;\n    bytepos = 7;\n\n    // Add JPEG headers\n    writeWord(0xffd8); // SOI\n    writeAPP0();\n    writeDQT();\n    writeSOF0(image.width, image.height);\n    writeDHT();\n    writeSOS();\n\n    // Encode 8x8 macroblocks\n    var DCY = 0;\n    var DCU = 0;\n    var DCV = 0;\n\n    bytenew = 0;\n    bytepos = 7;\n\n    this.encode.displayName = \"_encode_\";\n\n    var imageData = image.data;\n    var width = image.width;\n    var height = image.height;\n\n    var quadWidth = width * 4;\n\n    var x,\n      y = 0;\n    var r, g, b;\n    var start, p, col, row, pos;\n    while (y < height) {\n      x = 0;\n      while (x < quadWidth) {\n        start = quadWidth * y + x;\n        col = -1;\n        row = 0;\n\n        for (pos = 0; pos < 64; pos++) {\n          row = pos >> 3; // /8\n          col = (pos & 7) * 4; // %8\n          p = start + row * quadWidth + col;\n\n          if (y + row >= height) {\n            // padding bottom\n            p -= quadWidth * (y + 1 + row - height);\n          }\n\n          if (x + col >= quadWidth) {\n            // padding right\n            p -= x + col - quadWidth + 4;\n          }\n\n          r = imageData[p++];\n          g = imageData[p++];\n          b = imageData[p++];\n\n          /* // calculate YUV values dynamically\n\t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n\t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n\t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n\t\t\t\t\t*/\n\n          // use lookup table (slightly faster)\n          YDU[pos] =\n            ((RGB_YUV_TABLE[r] +\n              RGB_YUV_TABLE[(g + 256) >> 0] +\n              RGB_YUV_TABLE[(b + 512) >> 0]) >>\n              16) -\n            128;\n          UDU[pos] =\n            ((RGB_YUV_TABLE[(r + 768) >> 0] +\n              RGB_YUV_TABLE[(g + 1024) >> 0] +\n              RGB_YUV_TABLE[(b + 1280) >> 0]) >>\n              16) -\n            128;\n          VDU[pos] =\n            ((RGB_YUV_TABLE[(r + 1280) >> 0] +\n              RGB_YUV_TABLE[(g + 1536) >> 0] +\n              RGB_YUV_TABLE[(b + 1792) >> 0]) >>\n              16) -\n            128;\n        }\n\n        DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n        DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n        DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n        x += 32;\n      }\n      y += 8;\n    }\n\n    ////////////////////////////////////////////////////////////////\n\n    // Do the bit alignment of the EOI marker\n    if (bytepos >= 0) {\n      var fillbits = [];\n      fillbits[1] = bytepos + 1;\n      fillbits[0] = (1 << (bytepos + 1)) - 1;\n      writeBits(fillbits);\n    }\n\n    writeWord(0xffd9); //EOI\n\n    return new Uint8Array(byteout);\n  };\n\n  function setQuality(quality) {\n    quality = Math.min(Math.max(quality, 1), 100);\n\n    if (currentQuality == quality) return; // don't recalc if unchanged\n\n    var sf =\n      quality < 50 ? Math.floor(5000 / quality) : Math.floor(200 - quality * 2);\n\n    initQuantTables(sf);\n    currentQuality = quality;\n    //console.log('Quality set to: '+quality +'%');\n  }\n\n  function init() {\n    quality = quality || 50;\n    // Create tables\n    initCharLookupTable();\n    initHuffmanTbl();\n    initCategoryNumber();\n    initRGBYUVTable();\n\n    setQuality(quality);\n  }\n  init();\n}\n\nexport { JPEGEncoder };\n","/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\n\nimport { console } from \"./console.js\";\n\nfunction BmpDecoder(buffer, is_with_alpha) {\n  this.pos = 0;\n  this.buffer = buffer;\n  this.datav = new DataView(buffer.buffer);\n  this.is_with_alpha = !!is_with_alpha;\n  this.bottom_up = true;\n  this.flag =\n    String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1]);\n  this.pos += 2;\n  if ([\"BM\", \"BA\", \"CI\", \"CP\", \"IC\", \"PT\"].indexOf(this.flag) === -1)\n    throw new Error(\"Invalid BMP File\");\n  this.parseHeader();\n  this.parseBGR();\n}\n\nBmpDecoder.prototype.parseHeader = function() {\n  this.fileSize = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.reserved = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.offset = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.headerSize = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.width = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.height = this.datav.getInt32(this.pos, true);\n  this.pos += 4;\n  this.planes = this.datav.getUint16(this.pos, true);\n  this.pos += 2;\n  this.bitPP = this.datav.getUint16(this.pos, true);\n  this.pos += 2;\n  this.compress = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.rawSize = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.hr = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.vr = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.colors = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n  this.importantColors = this.datav.getUint32(this.pos, true);\n  this.pos += 4;\n\n  if (this.bitPP === 16 && this.is_with_alpha) {\n    this.bitPP = 15;\n  }\n  if (this.bitPP < 15) {\n    var len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n    this.palette = new Array(len);\n    for (var i = 0; i < len; i++) {\n      var blue = this.datav.getUint8(this.pos++, true);\n      var green = this.datav.getUint8(this.pos++, true);\n      var red = this.datav.getUint8(this.pos++, true);\n      var quad = this.datav.getUint8(this.pos++, true);\n      this.palette[i] = {\n        red: red,\n        green: green,\n        blue: blue,\n        quad: quad\n      };\n    }\n  }\n  if (this.height < 0) {\n    this.height *= -1;\n    this.bottom_up = false;\n  }\n};\n\nBmpDecoder.prototype.parseBGR = function() {\n  this.pos = this.offset;\n  try {\n    var bitn = \"bit\" + this.bitPP;\n    var len = this.width * this.height * 4;\n    this.data = new Uint8Array(len);\n\n    this[bitn]();\n  } catch (e) {\n    console.log(\"bit decode error:\" + e);\n  }\n};\n\nBmpDecoder.prototype.bit1 = function() {\n  var xlen = Math.ceil(this.width / 8);\n  var mode = xlen % 4;\n  var y;\n  for (y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < xlen; x++) {\n      var b = this.datav.getUint8(this.pos++, true);\n      var location = line * this.width * 4 + x * 8 * 4;\n      for (var i = 0; i < 8; i++) {\n        if (x * 8 + i < this.width) {\n          var rgb = this.palette[(b >> (7 - i)) & 0x1];\n          this.data[location + i * 4] = rgb.blue;\n          this.data[location + i * 4 + 1] = rgb.green;\n          this.data[location + i * 4 + 2] = rgb.red;\n          this.data[location + i * 4 + 3] = 0xff;\n        } else {\n          break;\n        }\n      }\n    }\n\n    if (mode !== 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit4 = function() {\n  var xlen = Math.ceil(this.width / 2);\n  var mode = xlen % 4;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < xlen; x++) {\n      var b = this.datav.getUint8(this.pos++, true);\n      var location = line * this.width * 4 + x * 2 * 4;\n\n      var before = b >> 4;\n      var after = b & 0x0f;\n\n      var rgb = this.palette[before];\n      this.data[location] = rgb.blue;\n      this.data[location + 1] = rgb.green;\n      this.data[location + 2] = rgb.red;\n      this.data[location + 3] = 0xff;\n\n      if (x * 2 + 1 >= this.width) break;\n\n      rgb = this.palette[after];\n      this.data[location + 4] = rgb.blue;\n      this.data[location + 4 + 1] = rgb.green;\n      this.data[location + 4 + 2] = rgb.red;\n      this.data[location + 4 + 3] = 0xff;\n    }\n\n    if (mode !== 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit8 = function() {\n  var mode = this.width % 4;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var b = this.datav.getUint8(this.pos++, true);\n      var location = line * this.width * 4 + x * 4;\n      if (b < this.palette.length) {\n        var rgb = this.palette[b];\n        this.data[location] = rgb.red;\n        this.data[location + 1] = rgb.green;\n        this.data[location + 2] = rgb.blue;\n        this.data[location + 3] = 0xff;\n      } else {\n        this.data[location] = 0xff;\n        this.data[location + 1] = 0xff;\n        this.data[location + 2] = 0xff;\n        this.data[location + 3] = 0xff;\n      }\n    }\n    if (mode !== 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit15 = function() {\n  var dif_w = this.width % 3;\n  var _11111 = parseInt(\"11111\", 2),\n    _1_5 = _11111;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.datav.getUint16(this.pos, true);\n      this.pos += 2;\n      var blue = (((B & _1_5) / _1_5) * 255) | 0;\n      var green = ((((B >> 5) & _1_5) / _1_5) * 255) | 0;\n      var red = ((((B >> 10) & _1_5) / _1_5) * 255) | 0;\n      var alpha = B >> 15 ? 0xff : 0x00;\n\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = red;\n      this.data[location + 1] = green;\n      this.data[location + 2] = blue;\n      this.data[location + 3] = alpha;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit16 = function() {\n  var dif_w = this.width % 3;\n  var _11111 = parseInt(\"11111\", 2),\n    _1_5 = _11111;\n  var _111111 = parseInt(\"111111\", 2),\n    _1_6 = _111111;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.datav.getUint16(this.pos, true);\n      this.pos += 2;\n      var alpha = 0xff;\n      var blue = (((B & _1_5) / _1_5) * 255) | 0;\n      var green = ((((B >> 5) & _1_6) / _1_6) * 255) | 0;\n      var red = (((B >> 11) / _1_5) * 255) | 0;\n\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = red;\n      this.data[location + 1] = green;\n      this.data[location + 2] = blue;\n      this.data[location + 3] = alpha;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit24 = function() {\n  //when height > 0\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var blue = this.datav.getUint8(this.pos++, true);\n      var green = this.datav.getUint8(this.pos++, true);\n      var red = this.datav.getUint8(this.pos++, true);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = red;\n      this.data[location + 1] = green;\n      this.data[location + 2] = blue;\n      this.data[location + 3] = 0xff;\n    }\n    //skip extra bytes\n    this.pos += this.width % 4;\n  }\n};\n\n/**\n * add 32bit decode func\n * @author soubok\n */\nBmpDecoder.prototype.bit32 = function() {\n  //when height > 0\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var blue = this.datav.getUint8(this.pos++, true);\n      var green = this.datav.getUint8(this.pos++, true);\n      var red = this.datav.getUint8(this.pos++, true);\n      var alpha = this.datav.getUint8(this.pos++, true);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = red;\n      this.data[location + 1] = green;\n      this.data[location + 2] = blue;\n      this.data[location + 3] = alpha;\n    }\n    //skip extra bytes\n    //this.pos += (this.width % 4);\n  }\n};\n\nBmpDecoder.prototype.getData = function() {\n  return this.data;\n};\n\nexport { BmpDecoder };\n","function WebPDecoder(imageData) {\n  /** @license\n   * Copyright 2011 Google Inc.\n   *\n   * This code is licensed under the same terms as WebM:\n   *  Software License Agreement:  http://www.webmproject.org/license/software/\n   *  Additional IP Rights Grant:  http://www.webmproject.org/license/additional/\n   * -----------------------------------------------------------------------------\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n   * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n   * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n   * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n   * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n   * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * -----------------------------------------------------------------------------\n   *\n   * Copyright 2011-2017 Dominik Homberger\n   * Libwebp Javascript / libwebpjs - the libwebp implementation in javascript (v0.6.0)\n   *\n   * Author: Dominik Homberger (dominik.homberger@gmail.com)\n   */\n\n  var self = this;\n  var UpsampleRgbLinePair,\n    UpsampleBgrLinePair,\n    UpsampleRgbaLinePair,\n    UpsampleBgraLinePair,\n    UpsampleArgbLinePair,\n    UpsampleArgbLinePair,\n    UpsampleRgba4444LinePair,\n    UpsampleRgb565LinePair;\n\n  function x(F) {\n    if (!F) throw Error(\"assert :P\");\n  }\n  function fa(F, L, J) {\n    for (var H = 0; 4 > H; H++) if (F[L + H] != J.charCodeAt(H)) return !0;\n    return !1;\n  }\n  function I(F, L, J, H, Z) {\n    for (var O = 0; O < Z; O++) F[L + O] = J[H + O];\n  }\n  function M(F, L, J, H) {\n    for (var Z = 0; Z < H; Z++) F[L + Z] = J;\n  }\n  function V(F) {\n    return new Int32Array(F);\n  }\n  function wa(F, L) {\n    for (var J = [], H = 0; H < F; H++) J.push(new L());\n    return J;\n  }\n  function wb() {\n    function F(J, H, Z) {\n      for (var O = Z[H], L = 0; L < O; L++) {\n        J.push(Z.length > H + 1 ? [] : 0);\n        if (Z.length < H + 1) break;\n        F(J[L], H + 1, Z);\n      }\n    }\n    var L = [];\n    F(L, 0, [3, 11]);\n    return L;\n  }\n  function Ed(F, L) {\n    function J(H, O, F) {\n      for (var Z = F[O], ma = 0; ma < Z; ma++) {\n        H.push(F.length > O + 1 ? [] : new L());\n        if (F.length < O + 1) break;\n        J(H[ma], O + 1, F);\n      }\n    }\n    var H = [];\n    J(H, 0, F);\n    return H;\n  }\n  var _WebPDecoder = function() {\n    var self = this;\n    function F() {\n      V(55);\n    }\n    function L(a, b) {\n      for (var c = (1 << (b - 1)) >>> 0; a & c; ) c >>>= 1;\n      return c ? (a & (c - 1)) + c : a;\n    }\n    function J(a, b, c, d, e) {\n      x(!(d % c));\n      do (d -= c), (a[b + d] = e);\n      while (0 < d);\n    }\n    function H(a, b, c, d, e, f) {\n      var g = b,\n        h = 1 << c,\n        k,\n        l,\n        m = V(16),\n        n = V(16);\n      x(0 != e);\n      x(null != d);\n      x(null != a);\n      x(0 < c);\n      for (l = 0; l < e; ++l) {\n        if (15 < d[l]) return 0;\n        ++m[d[l]];\n      }\n      if (m[0] == e) return 0;\n      n[1] = 0;\n      for (k = 1; 15 > k; ++k) {\n        if (m[k] > 1 << k) return 0;\n        n[k + 1] = n[k] + m[k];\n      }\n      for (l = 0; l < e; ++l) (k = d[l]), 0 < d[l] && (f[n[k]++] = l);\n      if (1 == n[15])\n        return (d = new O()), (d.g = 0), (d.value = f[0]), J(a, g, 1, h, d), h;\n      var r = -1,\n        q = h - 1,\n        t = 0,\n        v = 1,\n        p = 1,\n        u,\n        w = 1 << c;\n      l = 0;\n      k = 1;\n      for (e = 2; k <= c; ++k, e <<= 1) {\n        p <<= 1;\n        v += p;\n        p -= m[k];\n        if (0 > p) return 0;\n        for (; 0 < m[k]; --m[k])\n          (d = new O()),\n            (d.g = k),\n            (d.value = f[l++]),\n            J(a, g + t, e, w, d),\n            (t = L(t, k));\n      }\n      k = c + 1;\n      for (e = 2; 15 >= k; ++k, e <<= 1) {\n        p <<= 1;\n        v += p;\n        p -= m[k];\n        if (0 > p) return 0;\n        for (; 0 < m[k]; --m[k]) {\n          d = new O();\n          if ((t & q) != r) {\n            g += w;\n            r = k;\n            for (u = 1 << (r - c); 15 > r; ) {\n              u -= m[r];\n              if (0 >= u) break;\n              ++r;\n              u <<= 1;\n            }\n            u = r - c;\n            w = 1 << u;\n            h += w;\n            r = t & q;\n            a[b + r].g = u + c;\n            a[b + r].value = g - b - r;\n          }\n          d.g = k - c;\n          d.value = f[l++];\n          J(a, g + (t >> c), e, w, d);\n          t = L(t, k);\n        }\n      }\n      return v != 2 * n[15] - 1 ? 0 : h;\n    }\n    function Z(a, b, c, d, e) {\n      x(2328 >= e);\n      if (512 >= e) var f = V(512);\n      else if (((f = V(e)), null == f)) return 0;\n      return H(a, b, c, d, e, f);\n    }\n    function O() {\n      this.value = this.g = 0;\n    }\n    function Fd() {\n      this.value = this.g = 0;\n    }\n    function Ub() {\n      this.G = wa(5, O);\n      this.H = V(5);\n      this.jc = this.Qb = this.qb = this.nd = 0;\n      this.pd = wa(xb, Fd);\n    }\n    function ma(a, b, c, d) {\n      x(null != a);\n      x(null != b);\n      x(2147483648 > d);\n      a.Ca = 254;\n      a.I = 0;\n      a.b = -8;\n      a.Ka = 0;\n      a.oa = b;\n      a.pa = c;\n      a.Jd = b;\n      a.Yc = c + d;\n      a.Zc = 4 <= d ? c + d - 4 + 1 : c;\n      Qa(a);\n    }\n    function na(a, b) {\n      for (var c = 0; 0 < b--; ) c |= K(a, 128) << b;\n      return c;\n    }\n    function ca(a, b) {\n      var c = na(a, b);\n      return G(a) ? -c : c;\n    }\n    function cb(a, b, c, d) {\n      var e,\n        f = 0;\n      x(null != a);\n      x(null != b);\n      x(4294967288 > d);\n      a.Sb = d;\n      a.Ra = 0;\n      a.u = 0;\n      a.h = 0;\n      4 < d && (d = 4);\n      for (e = 0; e < d; ++e) f += b[c + e] << (8 * e);\n      a.Ra = f;\n      a.bb = d;\n      a.oa = b;\n      a.pa = c;\n    }\n    function Vb(a) {\n      for (; 8 <= a.u && a.bb < a.Sb; )\n        (a.Ra >>>= 8),\n          (a.Ra += (a.oa[a.pa + a.bb] << (ob - 8)) >>> 0),\n          ++a.bb,\n          (a.u -= 8);\n      db(a) && ((a.h = 1), (a.u = 0));\n    }\n    function D(a, b) {\n      x(0 <= b);\n      if (!a.h && b <= Gd) {\n        var c = pb(a) & Hd[b];\n        a.u += b;\n        Vb(a);\n        return c;\n      }\n      a.h = 1;\n      return (a.u = 0);\n    }\n    function Wb() {\n      this.b = this.Ca = this.I = 0;\n      this.oa = [];\n      this.pa = 0;\n      this.Jd = [];\n      this.Yc = 0;\n      this.Zc = [];\n      this.Ka = 0;\n    }\n    function Ra() {\n      this.Ra = 0;\n      this.oa = [];\n      this.h = this.u = this.bb = this.Sb = this.pa = 0;\n    }\n    function pb(a) {\n      return (a.Ra >>> (a.u & (ob - 1))) >>> 0;\n    }\n    function db(a) {\n      x(a.bb <= a.Sb);\n      return a.h || (a.bb == a.Sb && a.u > ob);\n    }\n    function qb(a, b) {\n      a.u = b;\n      a.h = db(a);\n    }\n    function Sa(a) {\n      a.u >= Xb && (x(a.u >= Xb), Vb(a));\n    }\n    function Qa(a) {\n      x(null != a && null != a.oa);\n      a.pa < a.Zc\n        ? ((a.I = (a.oa[a.pa++] | (a.I << 8)) >>> 0), (a.b += 8))\n        : (x(null != a && null != a.oa),\n          a.pa < a.Yc\n            ? ((a.b += 8), (a.I = a.oa[a.pa++] | (a.I << 8)))\n            : a.Ka\n            ? (a.b = 0)\n            : ((a.I <<= 8), (a.b += 8), (a.Ka = 1)));\n    }\n    function G(a) {\n      return na(a, 1);\n    }\n    function K(a, b) {\n      var c = a.Ca;\n      0 > a.b && Qa(a);\n      var d = a.b,\n        e = (c * b) >>> 8,\n        f = (a.I >>> d > e) + 0;\n      f ? ((c -= e), (a.I -= ((e + 1) << d) >>> 0)) : (c = e + 1);\n      d = c;\n      for (e = 0; 256 <= d; ) (e += 8), (d >>= 8);\n      d = 7 ^ (e + Id[d]);\n      a.b -= d;\n      a.Ca = (c << d) - 1;\n      return f;\n    }\n    function ra(a, b, c) {\n      a[b + 0] = (c >> 24) & 255;\n      a[b + 1] = (c >> 16) & 255;\n      a[b + 2] = (c >> 8) & 255;\n      a[b + 3] = (c >> 0) & 255;\n    }\n    function Ta(a, b) {\n      return (a[b + 0] << 0) | (a[b + 1] << 8);\n    }\n    function Yb(a, b) {\n      return Ta(a, b) | (a[b + 2] << 16);\n    }\n    function Ha(a, b) {\n      return Ta(a, b) | (Ta(a, b + 2) << 16);\n    }\n    function Zb(a, b) {\n      var c = 1 << b;\n      x(null != a);\n      x(0 < b);\n      a.X = V(c);\n      if (null == a.X) return 0;\n      a.Mb = 32 - b;\n      a.Xa = b;\n      return 1;\n    }\n    function $b(a, b) {\n      x(null != a);\n      x(null != b);\n      x(a.Xa == b.Xa);\n      I(b.X, 0, a.X, 0, 1 << b.Xa);\n    }\n    function ac() {\n      this.X = [];\n      this.Xa = this.Mb = 0;\n    }\n    function bc(a, b, c, d) {\n      x(null != c);\n      x(null != d);\n      var e = c[0],\n        f = d[0];\n      0 == e && (e = (a * f + b / 2) / b);\n      0 == f && (f = (b * e + a / 2) / a);\n      if (0 >= e || 0 >= f) return 0;\n      c[0] = e;\n      d[0] = f;\n      return 1;\n    }\n    function xa(a, b) {\n      return (a + (1 << b) - 1) >>> b;\n    }\n    function yb(a, b) {\n      return (\n        (((((a & 4278255360) + (b & 4278255360)) >>> 0) & 4278255360) +\n          ((((a & 16711935) + (b & 16711935)) >>> 0) & 16711935)) >>>\n        0\n      );\n    }\n    function X(a, b) {\n      self[b] = function(b, d, e, f, g, h, k) {\n        var c;\n        for (c = 0; c < g; ++c) {\n          var m = self[a](h[k + c - 1], e, f + c);\n          h[k + c] = yb(b[d + c], m);\n        }\n      };\n    }\n    function Jd() {\n      this.ud = this.hd = this.jd = 0;\n    }\n    function aa(a, b) {\n      return ((((a ^ b) & 4278124286) >>> 1) + (a & b)) >>> 0;\n    }\n    function sa(a) {\n      if (0 <= a && 256 > a) return a;\n      if (0 > a) return 0;\n      if (255 < a) return 255;\n    }\n    function eb(a, b) {\n      return sa(a + ((a - b + 0.5) >> 1));\n    }\n    function Ia(a, b, c) {\n      return Math.abs(b - c) - Math.abs(a - c);\n    }\n    function cc(a, b, c, d, e, f, g) {\n      d = f[g - 1];\n      for (c = 0; c < e; ++c) f[g + c] = d = yb(a[b + c], d);\n    }\n    function Kd(a, b, c, d, e) {\n      var f;\n      for (f = 0; f < c; ++f) {\n        var g = a[b + f],\n          h = (g >> 8) & 255,\n          k = g & 16711935,\n          k = k + ((h << 16) + h),\n          k = k & 16711935;\n        d[e + f] = ((g & 4278255360) + k) >>> 0;\n      }\n    }\n    function dc(a, b) {\n      b.jd = (a >> 0) & 255;\n      b.hd = (a >> 8) & 255;\n      b.ud = (a >> 16) & 255;\n    }\n    function Ld(a, b, c, d, e, f) {\n      var g;\n      for (g = 0; g < d; ++g) {\n        var h = b[c + g],\n          k = h >>> 8,\n          l = h >>> 16,\n          m = h,\n          l = l + ((((a.jd << 24) >> 24) * ((k << 24) >> 24)) >>> 5),\n          l = l & 255,\n          m = m + ((((a.hd << 24) >> 24) * ((k << 24) >> 24)) >>> 5),\n          m = m + ((((a.ud << 24) >> 24) * ((l << 24) >> 24)) >>> 5),\n          m = m & 255;\n        e[f + g] = (h & 4278255360) + (l << 16) + m;\n      }\n    }\n    function ec(a, b, c, d, e) {\n      self[b] = function(a, b, c, k, l, m, n, r, q) {\n        for (k = n; k < r; ++k)\n          for (n = 0; n < q; ++n) l[m++] = e(c[d(a[b++])]);\n      };\n      self[a] = function(a, b, h, k, l, m, n) {\n        var f = 8 >> a.b,\n          g = a.Ea,\n          t = a.K[0],\n          v = a.w;\n        if (8 > f)\n          for (a = (1 << a.b) - 1, v = (1 << f) - 1; b < h; ++b) {\n            var p = 0,\n              u;\n            for (u = 0; u < g; ++u)\n              u & a || (p = d(k[l++])), (m[n++] = e(t[p & v])), (p >>= f);\n          }\n        else self[\"VP8LMapColor\" + c](k, l, t, v, m, n, b, h, g);\n      };\n    }\n    function Md(a, b, c, d, e) {\n      for (c = b + c; b < c; ) {\n        var f = a[b++];\n        d[e++] = (f >> 16) & 255;\n        d[e++] = (f >> 8) & 255;\n        d[e++] = (f >> 0) & 255;\n      }\n    }\n    function Nd(a, b, c, d, e) {\n      for (c = b + c; b < c; ) {\n        var f = a[b++];\n        d[e++] = (f >> 16) & 255;\n        d[e++] = (f >> 8) & 255;\n        d[e++] = (f >> 0) & 255;\n        d[e++] = (f >> 24) & 255;\n      }\n    }\n    function Od(a, b, c, d, e) {\n      for (c = b + c; b < c; ) {\n        var f = a[b++],\n          g = ((f >> 16) & 240) | ((f >> 12) & 15),\n          f = ((f >> 0) & 240) | ((f >> 28) & 15);\n        d[e++] = g;\n        d[e++] = f;\n      }\n    }\n    function Pd(a, b, c, d, e) {\n      for (c = b + c; b < c; ) {\n        var f = a[b++],\n          g = ((f >> 16) & 248) | ((f >> 13) & 7),\n          f = ((f >> 5) & 224) | ((f >> 3) & 31);\n        d[e++] = g;\n        d[e++] = f;\n      }\n    }\n    function Qd(a, b, c, d, e) {\n      for (c = b + c; b < c; ) {\n        var f = a[b++];\n        d[e++] = (f >> 0) & 255;\n        d[e++] = (f >> 8) & 255;\n        d[e++] = (f >> 16) & 255;\n      }\n    }\n    function fb(a, b, c, d, e, f) {\n      if (0 == f)\n        for (c = b + c; b < c; )\n          (f = a[b++]),\n            ra(\n              d,\n              ((f[0] >> 24) |\n                ((f[1] >> 8) & 65280) |\n                ((f[2] << 8) & 16711680) |\n                (f[3] << 24)) >>>\n                0\n            ),\n            (e += 32);\n      else I(d, e, a, b, c);\n    }\n    function gb(a, b) {\n      self[b][0] = self[a + \"0\"];\n      self[b][1] = self[a + \"1\"];\n      self[b][2] = self[a + \"2\"];\n      self[b][3] = self[a + \"3\"];\n      self[b][4] = self[a + \"4\"];\n      self[b][5] = self[a + \"5\"];\n      self[b][6] = self[a + \"6\"];\n      self[b][7] = self[a + \"7\"];\n      self[b][8] = self[a + \"8\"];\n      self[b][9] = self[a + \"9\"];\n      self[b][10] = self[a + \"10\"];\n      self[b][11] = self[a + \"11\"];\n      self[b][12] = self[a + \"12\"];\n      self[b][13] = self[a + \"13\"];\n      self[b][14] = self[a + \"0\"];\n      self[b][15] = self[a + \"0\"];\n    }\n    function hb(a) {\n      return a == zb || a == Ab || a == Ja || a == Bb;\n    }\n    function Rd() {\n      this.eb = [];\n      this.size = this.A = this.fb = 0;\n    }\n    function Sd() {\n      this.y = [];\n      this.f = [];\n      this.ea = [];\n      this.F = [];\n      this.Tc = this.Ed = this.Cd = this.Fd = this.lb = this.Db = this.Ab = this.fa = this.J = this.W = this.N = this.O = 0;\n    }\n    function Cb() {\n      this.Rd = this.height = this.width = this.S = 0;\n      this.f = {};\n      this.f.RGBA = new Rd();\n      this.f.kb = new Sd();\n      this.sd = null;\n    }\n    function Td() {\n      this.width = [0];\n      this.height = [0];\n      this.Pd = [0];\n      this.Qd = [0];\n      this.format = [0];\n    }\n    function Ud() {\n      this.Id = this.fd = this.Md = this.hb = this.ib = this.da = this.bd = this.cd = this.j = this.v = this.Da = this.Sd = this.ob = 0;\n    }\n    function Vd(a) {\n      alert(\"todo:WebPSamplerProcessPlane\");\n      return a.T;\n    }\n    function Wd(a, b) {\n      var c = a.T,\n        d = b.ba.f.RGBA,\n        e = d.eb,\n        f = d.fb + a.ka * d.A,\n        g = P[b.ba.S],\n        h = a.y,\n        k = a.O,\n        l = a.f,\n        m = a.N,\n        n = a.ea,\n        r = a.W,\n        q = b.cc,\n        t = b.dc,\n        v = b.Mc,\n        p = b.Nc,\n        u = a.ka,\n        w = a.ka + a.T,\n        y = a.U,\n        A = (y + 1) >> 1;\n      0 == u\n        ? g(h, k, null, null, l, m, n, r, l, m, n, r, e, f, null, null, y)\n        : (g(b.ec, b.fc, h, k, q, t, v, p, l, m, n, r, e, f - d.A, e, f, y),\n          ++c);\n      for (; u + 2 < w; u += 2)\n        (q = l),\n          (t = m),\n          (v = n),\n          (p = r),\n          (m += a.Rc),\n          (r += a.Rc),\n          (f += 2 * d.A),\n          (k += 2 * a.fa),\n          g(h, k - a.fa, h, k, q, t, v, p, l, m, n, r, e, f - d.A, e, f, y);\n      k += a.fa;\n      a.j + w < a.o\n        ? (I(b.ec, b.fc, h, k, y),\n          I(b.cc, b.dc, l, m, A),\n          I(b.Mc, b.Nc, n, r, A),\n          c--)\n        : w & 1 ||\n          g(\n            h,\n            k,\n            null,\n            null,\n            l,\n            m,\n            n,\n            r,\n            l,\n            m,\n            n,\n            r,\n            e,\n            f + d.A,\n            null,\n            null,\n            y\n          );\n      return c;\n    }\n    function Xd(a, b, c) {\n      var d = a.F,\n        e = [a.J];\n      if (null != d) {\n        var f = a.U,\n          g = b.ba.S,\n          h = g == ya || g == Ja;\n        b = b.ba.f.RGBA;\n        var k = [0],\n          l = a.ka;\n        k[0] = a.T;\n        a.Kb &&\n          (0 == l ? --k[0] : (--l, (e[0] -= a.width)),\n          a.j + a.ka + a.T == a.o && (k[0] = a.o - a.j - l));\n        var m = b.eb,\n          l = b.fb + l * b.A;\n        a = fc(d, e[0], a.width, f, k, m, l + (h ? 0 : 3), b.A);\n        x(c == k);\n        a && hb(g) && za(m, l, h, f, k, b.A);\n      }\n      return 0;\n    }\n    function gc(a) {\n      var b = a.ma,\n        c = b.ba.S,\n        d = 11 > c,\n        e = c == Ua || c == Va || c == ya || c == Db || 12 == c || hb(c);\n      b.memory = null;\n      b.Ib = null;\n      b.Jb = null;\n      b.Nd = null;\n      if (!hc(b.Oa, a, e ? 11 : 12)) return 0;\n      e && hb(c) && ic();\n      if (a.da) alert(\"todo:use_scaling\");\n      else {\n        if (d) {\n          if (((b.Ib = Vd), a.Kb)) {\n            c = (a.U + 1) >> 1;\n            b.memory = V(a.U + 2 * c);\n            if (null == b.memory) return 0;\n            b.ec = b.memory;\n            b.fc = 0;\n            b.cc = b.ec;\n            b.dc = b.fc + a.U;\n            b.Mc = b.cc;\n            b.Nc = b.dc + c;\n            b.Ib = Wd;\n            ic();\n          }\n        } else alert(\"todo:EmitYUV\");\n        e && ((b.Jb = Xd), d && Aa());\n      }\n      if (d && !jc) {\n        for (a = 0; 256 > a; ++a)\n          (Yd[a] = (89858 * (a - 128) + Ba) >> Wa),\n            (Zd[a] = -22014 * (a - 128) + Ba),\n            ($d[a] = -45773 * (a - 128)),\n            (ae[a] = (113618 * (a - 128) + Ba) >> Wa);\n        for (a = ta; a < Eb; ++a)\n          (b = (76283 * (a - 16) + Ba) >> Wa),\n            (be[a - ta] = ga(b, 255)),\n            (ce[a - ta] = ga((b + 8) >> 4, 15));\n        jc = 1;\n      }\n      return 1;\n    }\n    function kc(a) {\n      var b = a.ma,\n        c = a.U,\n        d = a.T;\n      x(!(a.ka & 1));\n      if (0 >= c || 0 >= d) return 0;\n      c = b.Ib(a, b);\n      null != b.Jb && b.Jb(a, b, c);\n      b.Dc += c;\n      return 1;\n    }\n    function lc(a) {\n      a.ma.memory = null;\n    }\n    function mc(a, b, c, d) {\n      if (47 != D(a, 8)) return 0;\n      b[0] = D(a, 14) + 1;\n      c[0] = D(a, 14) + 1;\n      d[0] = D(a, 1);\n      return 0 != D(a, 3) ? 0 : !a.h;\n    }\n    function ib(a, b) {\n      if (4 > a) return a + 1;\n      var c = (a - 2) >> 1;\n      return ((2 + (a & 1)) << c) + D(b, c) + 1;\n    }\n    function nc(a, b) {\n      if (120 < b) return b - 120;\n      var c = de[b - 1],\n        c = (c >> 4) * a + (8 - (c & 15));\n      return 1 <= c ? c : 1;\n    }\n    function ua(a, b, c) {\n      var d = pb(c);\n      b += d & 255;\n      var e = a[b].g - 8;\n      0 < e &&\n        (qb(c, c.u + 8),\n        (d = pb(c)),\n        (b += a[b].value),\n        (b += d & ((1 << e) - 1)));\n      qb(c, c.u + a[b].g);\n      return a[b].value;\n    }\n    function ub(a, b, c) {\n      c.g += a.g;\n      c.value += (a.value << b) >>> 0;\n      x(8 >= c.g);\n      return a.g;\n    }\n    function ha(a, b, c) {\n      var d = a.xc;\n      b = 0 == d ? 0 : a.vc[a.md * (c >> d) + (b >> d)];\n      x(b < a.Wb);\n      return a.Ya[b];\n    }\n    function oc(a, b, c, d) {\n      var e = a.ab,\n        f = a.c * b,\n        g = a.C;\n      b = g + b;\n      var h = c,\n        k = d;\n      d = a.Ta;\n      for (c = a.Ua; 0 < e--; ) {\n        var l = a.gc[e],\n          m = g,\n          n = b,\n          r = h,\n          q = k,\n          k = d,\n          h = c,\n          t = l.Ea;\n        x(m < n);\n        x(n <= l.nc);\n        switch (l.hc) {\n          case 2:\n            pc(r, q, (n - m) * t, k, h);\n            break;\n          case 0:\n            var v = l,\n              p = m,\n              u = n,\n              w = k,\n              y = h,\n              A = v.Ea;\n            0 == p &&\n              (ee(r, q, null, null, 1, w, y),\n              cc(r, q + 1, 0, 0, A - 1, w, y + 1),\n              (q += A),\n              (y += A),\n              ++p);\n            for (\n              var E = 1 << v.b,\n                B = E - 1,\n                C = xa(A, v.b),\n                N = v.K,\n                v = v.w + (p >> v.b) * C;\n              p < u;\n\n            ) {\n              var z = N,\n                Q = v,\n                S = 1;\n              for (fe(r, q, w, y - A, 1, w, y); S < A; ) {\n                var K = qc[(z[Q++] >> 8) & 15],\n                  D = (S & ~B) + E;\n                D > A && (D = A);\n                K(r, q + +S, w, y + S - A, D - S, w, y + S);\n                S = D;\n              }\n              q += A;\n              y += A;\n              ++p;\n              p & B || (v += C);\n            }\n            n != l.nc && I(k, h - t, k, h + (n - m - 1) * t, t);\n            break;\n          case 1:\n            t = r;\n            u = q;\n            r = l.Ea;\n            q = 1 << l.b;\n            w = q - 1;\n            y = r & ~w;\n            A = r - y;\n            p = xa(r, l.b);\n            E = l.K;\n            for (l = l.w + (m >> l.b) * p; m < n; ) {\n              B = E;\n              C = l;\n              N = new Jd();\n              v = u + y;\n              for (z = u + r; u < v; )\n                dc(B[C++], N), Fb(N, t, u, q, k, h), (u += q), (h += q);\n              u < z &&\n                (dc(B[C++], N), Fb(N, t, u, A, k, h), (u += A), (h += A));\n              ++m;\n              m & w || (l += p);\n            }\n            break;\n          case 3:\n            if (r == k && q == h && 0 < l.b) {\n              y = (n - m) * xa(l.Ea, l.b);\n              t = h + (n - m) * t - y;\n              u = k;\n              r = t;\n              q = k;\n              w = h;\n              A = y;\n              p = [];\n              for (y = A - 1; 0 <= y; --y) p[y] = q[w + y];\n              for (y = A - 1; 0 <= y; --y) u[r + y] = p[y];\n              rc(l, m, n, k, t, k, h);\n            } else rc(l, m, n, r, q, k, h);\n        }\n        h = d;\n        k = c;\n      }\n      k != c && I(d, c, h, k, f);\n    }\n    function ge(a, b) {\n      var c = a.V,\n        d = a.Ba + a.c * a.C,\n        e = b - a.C;\n      x(b <= a.l.o);\n      x(16 >= e);\n      if (0 < e) {\n        var f = a.l,\n          g = a.Ta,\n          h = a.Ua,\n          k = f.width;\n        oc(a, e, c, d);\n        h = [h];\n        c = a.C;\n        d = b;\n        e = h;\n        x(c < d);\n        x(f.v < f.va);\n        d > f.o && (d = f.o);\n        if (c < f.j) {\n          var l = f.j - c,\n            c = f.j;\n          e[0] += l * k;\n        }\n        c >= d\n          ? (c = 0)\n          : ((e[0] += 4 * f.v),\n            (f.ka = c - f.j),\n            (f.U = f.va - f.v),\n            (f.T = d - c),\n            (c = 1));\n        if (c) {\n          h = h[0];\n          c = a.ca;\n          if (11 > c.S) {\n            for (\n              var m = c.f.RGBA,\n                d = c.S,\n                e = f.U,\n                f = f.T,\n                l = m.eb,\n                n = m.A,\n                r = f,\n                m = m.fb + a.Ma * m.A;\n              0 < r--;\n\n            ) {\n              var q = g,\n                t = h,\n                v = e,\n                p = l,\n                u = m;\n              switch (d) {\n                case Ca:\n                  sc(q, t, v, p, u);\n                  break;\n                case Ua:\n                  Gb(q, t, v, p, u);\n                  break;\n                case zb:\n                  Gb(q, t, v, p, u);\n                  za(p, u, 0, v, 1, 0);\n                  break;\n                case tc:\n                  uc(q, t, v, p, u);\n                  break;\n                case Va:\n                  fb(q, t, v, p, u, 1);\n                  break;\n                case Ab:\n                  fb(q, t, v, p, u, 1);\n                  za(p, u, 0, v, 1, 0);\n                  break;\n                case ya:\n                  fb(q, t, v, p, u, 0);\n                  break;\n                case Ja:\n                  fb(q, t, v, p, u, 0);\n                  za(p, u, 1, v, 1, 0);\n                  break;\n                case Db:\n                  Hb(q, t, v, p, u);\n                  break;\n                case Bb:\n                  Hb(q, t, v, p, u);\n                  vc(p, u, v, 1, 0);\n                  break;\n                case wc:\n                  xc(q, t, v, p, u);\n                  break;\n                default:\n                  x(0);\n              }\n              h += k;\n              m += n;\n            }\n            a.Ma += f;\n          } else alert(\"todo:EmitRescaledRowsYUVA\");\n          x(a.Ma <= c.height);\n        }\n      }\n      a.C = b;\n      x(a.C <= a.i);\n    }\n    function yc(a) {\n      var b;\n      if (0 < a.ua) return 0;\n      for (b = 0; b < a.Wb; ++b) {\n        var c = a.Ya[b].G,\n          d = a.Ya[b].H;\n        if (\n          0 < c[1][d[1] + 0].g ||\n          0 < c[2][d[2] + 0].g ||\n          0 < c[3][d[3] + 0].g\n        )\n          return 0;\n      }\n      return 1;\n    }\n    function zc(a, b, c, d, e, f) {\n      if (0 != a.Z) {\n        var g = a.qd,\n          h = a.rd;\n        for (x(null != ia[a.Z]); b < c; ++b)\n          ia[a.Z](g, h, d, e, d, e, f), (g = d), (h = e), (e += f);\n        a.qd = g;\n        a.rd = h;\n      }\n    }\n    function Ib(a, b) {\n      var c = a.l.ma,\n        d = 0 == c.Z || 1 == c.Z ? a.l.j : a.C,\n        d = a.C < d ? d : a.C;\n      x(b <= a.l.o);\n      if (b > d) {\n        var e = a.l.width,\n          f = c.ca,\n          g = c.tb + e * d,\n          h = a.V,\n          k = a.Ba + a.c * d,\n          l = a.gc;\n        x(1 == a.ab);\n        x(3 == l[0].hc);\n        he(l[0], d, b, h, k, f, g);\n        zc(c, d, b, f, g, e);\n      }\n      a.C = a.Ma = b;\n    }\n    function Jb(a, b, c, d, e, f, g) {\n      var h = a.$ / d,\n        k = a.$ % d,\n        l = a.m,\n        m = a.s,\n        n = c + a.$,\n        r = n;\n      e = c + d * e;\n      var q = c + d * f,\n        t = 280 + m.ua,\n        v = a.Pb ? h : 16777216,\n        p = 0 < m.ua ? m.Wa : null,\n        u = m.wc,\n        w = n < q ? ha(m, k, h) : null;\n      x(a.C < f);\n      x(q <= e);\n      var y = !1;\n      a: for (;;) {\n        for (; y || n < q; ) {\n          var A = 0;\n          if (h >= v) {\n            var v = a,\n              E = n - c;\n            x(v.Pb);\n            v.wd = v.m;\n            v.xd = E;\n            0 < v.s.ua && $b(v.s.Wa, v.s.vb);\n            v = h + ie;\n          }\n          k & u || (w = ha(m, k, h));\n          x(null != w);\n          w.Qb && ((b[n] = w.qb), (y = !0));\n          if (!y)\n            if ((Sa(l), w.jc)) {\n              var A = l,\n                E = b,\n                B = n,\n                C = w.pd[pb(A) & (xb - 1)];\n              x(w.jc);\n              256 > C.g\n                ? (qb(A, A.u + C.g), (E[B] = C.value), (A = 0))\n                : (qb(A, A.u + C.g - 256), x(256 <= C.value), (A = C.value));\n              0 == A && (y = !0);\n            } else A = ua(w.G[0], w.H[0], l);\n          if (l.h) break;\n          if (y || 256 > A) {\n            if (!y)\n              if (w.nd) b[n] = (w.qb | (A << 8)) >>> 0;\n              else {\n                Sa(l);\n                y = ua(w.G[1], w.H[1], l);\n                Sa(l);\n                E = ua(w.G[2], w.H[2], l);\n                B = ua(w.G[3], w.H[3], l);\n                if (l.h) break;\n                b[n] = ((B << 24) | (y << 16) | (A << 8) | E) >>> 0;\n              }\n            y = !1;\n            ++n;\n            ++k;\n            if (\n              k >= d &&\n              ((k = 0),\n              ++h,\n              null != g && h <= f && !(h % 16) && g(a, h),\n              null != p)\n            )\n              for (; r < n; )\n                (A = b[r++]),\n                  (p.X[((506832829 * A) & 4294967295) >>> p.Mb] = A);\n          } else if (280 > A) {\n            A = ib(A - 256, l);\n            E = ua(w.G[4], w.H[4], l);\n            Sa(l);\n            E = ib(E, l);\n            E = nc(d, E);\n            if (l.h) break;\n            if (n - c < E || e - n < A) break a;\n            else for (B = 0; B < A; ++B) b[n + B] = b[n + B - E];\n            n += A;\n            for (k += A; k >= d; )\n              (k -= d), ++h, null != g && h <= f && !(h % 16) && g(a, h);\n            x(n <= e);\n            k & u && (w = ha(m, k, h));\n            if (null != p)\n              for (; r < n; )\n                (A = b[r++]),\n                  (p.X[((506832829 * A) & 4294967295) >>> p.Mb] = A);\n          } else if (A < t) {\n            y = A - 280;\n            for (x(null != p); r < n; )\n              (A = b[r++]), (p.X[((506832829 * A) & 4294967295) >>> p.Mb] = A);\n            A = n;\n            E = p;\n            x(!(y >>> E.Xa));\n            b[A] = E.X[y];\n            y = !0;\n          } else break a;\n          y || x(l.h == db(l));\n        }\n        if (a.Pb && l.h && n < e)\n          x(a.m.h),\n            (a.a = 5),\n            (a.m = a.wd),\n            (a.$ = a.xd),\n            0 < a.s.ua && $b(a.s.vb, a.s.Wa);\n        else if (l.h) break a;\n        else null != g && g(a, h > f ? f : h), (a.a = 0), (a.$ = n - c);\n        return 1;\n      }\n      a.a = 3;\n      return 0;\n    }\n    function Ac(a) {\n      x(null != a);\n      a.vc = null;\n      a.yc = null;\n      a.Ya = null;\n      var b = a.Wa;\n      null != b && (b.X = null);\n      a.vb = null;\n      x(null != a);\n    }\n    function Bc() {\n      var a = new je();\n      if (null == a) return null;\n      a.a = 0;\n      a.xb = Cc;\n      gb(\"Predictor\", \"VP8LPredictors\");\n      gb(\"Predictor\", \"VP8LPredictors_C\");\n      gb(\"PredictorAdd\", \"VP8LPredictorsAdd\");\n      gb(\"PredictorAdd\", \"VP8LPredictorsAdd_C\");\n      pc = Kd;\n      Fb = Ld;\n      sc = Md;\n      Gb = Nd;\n      Hb = Od;\n      xc = Pd;\n      uc = Qd;\n      self.VP8LMapColor32b = ke;\n      self.VP8LMapColor8b = le;\n      return a;\n    }\n    function rb(a, b, c, d, e) {\n      var f = 1,\n        g = [a],\n        h = [b],\n        k = d.m,\n        l = d.s,\n        m = null,\n        n = 0;\n      a: for (;;) {\n        if (c)\n          for (; f && D(k, 1); ) {\n            var r = g,\n              q = h,\n              t = d,\n              v = 1,\n              p = t.m,\n              u = t.gc[t.ab],\n              w = D(p, 2);\n            if (t.Oc & (1 << w)) f = 0;\n            else {\n              t.Oc |= 1 << w;\n              u.hc = w;\n              u.Ea = r[0];\n              u.nc = q[0];\n              u.K = [null];\n              ++t.ab;\n              x(4 >= t.ab);\n              switch (w) {\n                case 0:\n                case 1:\n                  u.b = D(p, 3) + 2;\n                  v = rb(xa(u.Ea, u.b), xa(u.nc, u.b), 0, t, u.K);\n                  u.K = u.K[0];\n                  break;\n                case 3:\n                  var y = D(p, 8) + 1,\n                    A = 16 < y ? 0 : 4 < y ? 1 : 2 < y ? 2 : 3;\n                  r[0] = xa(u.Ea, A);\n                  u.b = A;\n                  var v = rb(y, 1, 0, t, u.K),\n                    E;\n                  if ((E = v)) {\n                    var B,\n                      C = y,\n                      N = u,\n                      z = 1 << (8 >> N.b),\n                      Q = V(z);\n                    if (null == Q) E = 0;\n                    else {\n                      var S = N.K[0],\n                        K = N.w;\n                      Q[0] = N.K[0][0];\n                      for (B = 1; B < 1 * C; ++B) Q[B] = yb(S[K + B], Q[B - 1]);\n                      for (; B < 4 * z; ++B) Q[B] = 0;\n                      N.K[0] = null;\n                      N.K[0] = Q;\n                      E = 1;\n                    }\n                  }\n                  v = E;\n                  break;\n                case 2:\n                  break;\n                default:\n                  x(0);\n              }\n              f = v;\n            }\n          }\n        g = g[0];\n        h = h[0];\n        if (f && D(k, 1) && ((n = D(k, 4)), (f = 1 <= n && 11 >= n), !f)) {\n          d.a = 3;\n          break a;\n        }\n        var H;\n        if ((H = f))\n          b: {\n            var F = d,\n              G = g,\n              L = h,\n              J = n,\n              T = c,\n              Da,\n              ba,\n              X = F.m,\n              R = F.s,\n              P = [null],\n              U,\n              W = 1,\n              aa = 0,\n              na = me[J];\n            c: for (;;) {\n              if (T && D(X, 1)) {\n                var ca = D(X, 3) + 2,\n                  ga = xa(G, ca),\n                  ka = xa(L, ca),\n                  qa = ga * ka;\n                if (!rb(ga, ka, 0, F, P)) break c;\n                P = P[0];\n                R.xc = ca;\n                for (Da = 0; Da < qa; ++Da) {\n                  var ia = (P[Da] >> 8) & 65535;\n                  P[Da] = ia;\n                  ia >= W && (W = ia + 1);\n                }\n              }\n              if (X.h) break c;\n              for (ba = 0; 5 > ba; ++ba) {\n                var Y = Dc[ba];\n                !ba && 0 < J && (Y += 1 << J);\n                aa < Y && (aa = Y);\n              }\n              var ma = wa(W * na, O);\n              var ua = W,\n                va = wa(ua, Ub);\n              if (null == va) var la = null;\n              else x(65536 >= ua), (la = va);\n              var ha = V(aa);\n              if (null == la || null == ha || null == ma) {\n                F.a = 1;\n                break c;\n              }\n              var pa = ma;\n              for (Da = U = 0; Da < W; ++Da) {\n                var ja = la[Da],\n                  da = ja.G,\n                  ea = ja.H,\n                  Fa = 0,\n                  ra = 1,\n                  Ha = 0;\n                for (ba = 0; 5 > ba; ++ba) {\n                  Y = Dc[ba];\n                  da[ba] = pa;\n                  ea[ba] = U;\n                  !ba && 0 < J && (Y += 1 << J);\n                  d: {\n                    var sa,\n                      za = Y,\n                      ta = F,\n                      oa = ha,\n                      db = pa,\n                      eb = U,\n                      Ia = 0,\n                      Ka = ta.m,\n                      fb = D(Ka, 1);\n                    M(oa, 0, 0, za);\n                    if (fb) {\n                      var gb = D(Ka, 1) + 1,\n                        hb = D(Ka, 1),\n                        Ja = D(Ka, 0 == hb ? 1 : 8);\n                      oa[Ja] = 1;\n                      2 == gb && ((Ja = D(Ka, 8)), (oa[Ja] = 1));\n                      var ya = 1;\n                    } else {\n                      var Ua = V(19),\n                        Va = D(Ka, 4) + 4;\n                      if (19 < Va) {\n                        ta.a = 3;\n                        var Aa = 0;\n                        break d;\n                      }\n                      for (sa = 0; sa < Va; ++sa) Ua[ne[sa]] = D(Ka, 3);\n                      var Ba = void 0,\n                        sb = void 0,\n                        Wa = ta,\n                        ib = Ua,\n                        Ca = za,\n                        Xa = oa,\n                        Oa = 0,\n                        La = Wa.m,\n                        Ya = 8,\n                        Za = wa(128, O);\n                      e: for (;;) {\n                        if (!Z(Za, 0, 7, ib, 19)) break e;\n                        if (D(La, 1)) {\n                          var kb = 2 + 2 * D(La, 3),\n                            Ba = 2 + D(La, kb);\n                          if (Ba > Ca) break e;\n                        } else Ba = Ca;\n                        for (sb = 0; sb < Ca && Ba--; ) {\n                          Sa(La);\n                          var $a = Za[0 + (pb(La) & 127)];\n                          qb(La, La.u + $a.g);\n                          var jb = $a.value;\n                          if (16 > jb) (Xa[sb++] = jb), 0 != jb && (Ya = jb);\n                          else {\n                            var lb = 16 == jb,\n                              ab = jb - 16,\n                              mb = oe[ab],\n                              bb = D(La, pe[ab]) + mb;\n                            if (sb + bb > Ca) break e;\n                            else\n                              for (var nb = lb ? Ya : 0; 0 < bb--; )\n                                Xa[sb++] = nb;\n                          }\n                        }\n                        Oa = 1;\n                        break e;\n                      }\n                      Oa || (Wa.a = 3);\n                      ya = Oa;\n                    }\n                    (ya = ya && !Ka.h) && (Ia = Z(db, eb, 8, oa, za));\n                    ya && 0 != Ia ? (Aa = Ia) : ((ta.a = 3), (Aa = 0));\n                  }\n                  if (0 == Aa) break c;\n                  ra && 1 == qe[ba] && (ra = 0 == pa[U].g);\n                  Fa += pa[U].g;\n                  U += Aa;\n                  if (3 >= ba) {\n                    var Pa = ha[0],\n                      tb;\n                    for (tb = 1; tb < Y; ++tb) ha[tb] > Pa && (Pa = ha[tb]);\n                    Ha += Pa;\n                  }\n                }\n                ja.nd = ra;\n                ja.Qb = 0;\n                ra &&\n                  ((ja.qb =\n                    ((da[3][ea[3] + 0].value << 24) |\n                      (da[1][ea[1] + 0].value << 16) |\n                      da[2][ea[2] + 0].value) >>>\n                    0),\n                  0 == Fa &&\n                    256 > da[0][ea[0] + 0].value &&\n                    ((ja.Qb = 1), (ja.qb += da[0][ea[0] + 0].value << 8)));\n                ja.jc = !ja.Qb && 6 > Ha;\n                if (ja.jc) {\n                  var Ga,\n                    Ea = ja;\n                  for (Ga = 0; Ga < xb; ++Ga) {\n                    var Ma = Ga,\n                      Na = Ea.pd[Ma],\n                      vb = Ea.G[0][Ea.H[0] + Ma];\n                    256 <= vb.value\n                      ? ((Na.g = vb.g + 256), (Na.value = vb.value))\n                      : ((Na.g = 0),\n                        (Na.value = 0),\n                        (Ma >>= ub(vb, 8, Na)),\n                        (Ma >>= ub(Ea.G[1][Ea.H[1] + Ma], 16, Na)),\n                        (Ma >>= ub(Ea.G[2][Ea.H[2] + Ma], 0, Na)),\n                        ub(Ea.G[3][Ea.H[3] + Ma], 24, Na));\n                  }\n                }\n              }\n              R.vc = P;\n              R.Wb = W;\n              R.Ya = la;\n              R.yc = ma;\n              H = 1;\n              break b;\n            }\n            H = 0;\n          }\n        f = H;\n        if (!f) {\n          d.a = 3;\n          break a;\n        }\n        if (0 < n) {\n          if (((l.ua = 1 << n), !Zb(l.Wa, n))) {\n            d.a = 1;\n            f = 0;\n            break a;\n          }\n        } else l.ua = 0;\n        var Qa = d,\n          cb = g,\n          ob = h,\n          Ra = Qa.s,\n          Ta = Ra.xc;\n        Qa.c = cb;\n        Qa.i = ob;\n        Ra.md = xa(cb, Ta);\n        Ra.wc = 0 == Ta ? -1 : (1 << Ta) - 1;\n        if (c) {\n          d.xb = re;\n          break a;\n        }\n        m = V(g * h);\n        if (null == m) {\n          d.a = 1;\n          f = 0;\n          break a;\n        }\n        f = (f = Jb(d, m, 0, g, h, h, null)) && !k.h;\n        break a;\n      }\n      f\n        ? (null != e ? (e[0] = m) : (x(null == m), x(c)), (d.$ = 0), c || Ac(l))\n        : Ac(l);\n      return f;\n    }\n    function Ec(a, b) {\n      var c = a.c * a.i,\n        d = c + b + 16 * b;\n      x(a.c <= b);\n      a.V = V(d);\n      if (null == a.V) return (a.Ta = null), (a.Ua = 0), (a.a = 1), 0;\n      a.Ta = a.V;\n      a.Ua = a.Ba + c + b;\n      return 1;\n    }\n    function se(a, b) {\n      var c = a.C,\n        d = b - c,\n        e = a.V,\n        f = a.Ba + a.c * c;\n      for (x(b <= a.l.o); 0 < d; ) {\n        var g = 16 < d ? 16 : d,\n          h = a.l.ma,\n          k = a.l.width,\n          l = k * g,\n          m = h.ca,\n          n = h.tb + k * c,\n          r = a.Ta,\n          q = a.Ua;\n        oc(a, g, e, f);\n        Fc(r, q, m, n, l);\n        zc(h, c, c + g, m, n, k);\n        d -= g;\n        e += g * a.c;\n        c += g;\n      }\n      x(c == b);\n      a.C = a.Ma = b;\n    }\n    function te(a, b) {\n      var c = [0],\n        d = [0],\n        e = [0];\n      a: for (;;) {\n        if (null == a) return 0;\n        if (null == b) return (a.a = 2), 0;\n        a.l = b;\n        a.a = 0;\n        cb(a.m, b.data, b.w, b.ha);\n        if (!mc(a.m, c, d, e)) {\n          a.a = 3;\n          break a;\n        }\n        a.xb = Cc;\n        b.width = c[0];\n        b.height = d[0];\n        if (!rb(c[0], d[0], 1, a, null)) break a;\n        return 1;\n      }\n      x(0 != a.a);\n      return 0;\n    }\n    function ue() {\n      this.ub = this.yd = this.td = this.Rb = 0;\n    }\n    function ve() {\n      this.Kd = this.Ld = this.Ud = this.Td = this.i = this.c = 0;\n    }\n    function we() {\n      this.Fb = this.Bb = this.Cb = 0;\n      this.Zb = V(4);\n      this.Lb = V(4);\n    }\n    function Gc() {\n      this.Yb = wb();\n    }\n    function xe() {\n      this.jb = V(3);\n      this.Wc = Ed([4, 8], Gc);\n      this.Xc = Ed([4, 17], Gc);\n    }\n    function ye() {\n      this.Pc = this.wb = this.Tb = this.zd = 0;\n      this.vd = new V(4);\n      this.od = new V(4);\n    }\n    function Xa() {\n      this.ld = this.La = this.dd = this.tc = 0;\n    }\n    function Hc() {\n      this.Na = this.la = 0;\n    }\n    function ze() {\n      this.Sc = [0, 0];\n      this.Eb = [0, 0];\n      this.Qc = [0, 0];\n      this.ia = this.lc = 0;\n    }\n    function Kb() {\n      this.ad = V(384);\n      this.Za = 0;\n      this.Ob = V(16);\n      this.$b = this.Ad = this.ia = this.Gc = this.Hc = this.Dd = 0;\n    }\n    function Ae() {\n      this.uc = this.M = this.Nb = 0;\n      this.wa = Array(new Xa());\n      this.Y = 0;\n      this.ya = Array(new Kb());\n      this.aa = 0;\n      this.l = new Oa();\n    }\n    function Ic() {\n      this.y = V(16);\n      this.f = V(8);\n      this.ea = V(8);\n    }\n    function Be() {\n      this.cb = this.a = 0;\n      this.sc = \"\";\n      this.m = new Wb();\n      this.Od = new ue();\n      this.Kc = new ve();\n      this.ed = new ye();\n      this.Qa = new we();\n      this.Ic = this.$c = this.Aa = 0;\n      this.D = new Ae();\n      this.Xb = this.Va = this.Hb = this.zb = this.yb = this.Ub = this.za = 0;\n      this.Jc = wa(8, Wb);\n      this.ia = 0;\n      new F();\n      this.pb = wa(4, ze);\n      this.Pa = new xe();\n      this.Bd = this.kc = 0;\n      this.Ac = [];\n      this.Bc = 0;\n      this.zc = [0, 0, 0, 0];\n      this.Gd = Array(new Ic());\n      this.Hd = 0;\n      this.rb = Array(new Hc());\n      this.sb = 0;\n      this.wa = Array(new Xa());\n      this.Y = 0;\n      this.oc = [];\n      this.pc = 0;\n      this.sa = [];\n      this.ta = 0;\n      this.qa = [];\n      this.ra = 0;\n      this.Ha = [];\n      this.B = this.R = this.Ia = 0;\n      this.Ec = [];\n      this.M = this.ja = this.Vb = this.Fc = 0;\n      this.ya = Array(new Kb());\n      this.L = this.aa = 0;\n      this.gd = Ed([4, 2], Xa);\n      this.ga = null;\n      this.Fa = [];\n      this.Cc = this.qc = this.P = 0;\n      this.Gb = [];\n      this.Uc = 0;\n      this.mb = [];\n      this.nb = 0;\n      this.rc = [];\n      this.Ga = this.Vc = 0;\n    }\n    function ga(a, b) {\n      return 0 > a ? 0 : a > b ? b : a;\n    }\n    function Oa() {\n      this.T = this.U = this.ka = this.height = this.width = 0;\n      this.y = [];\n      this.f = [];\n      this.ea = [];\n      this.Rc = this.fa = this.W = this.N = this.O = 0;\n      this.ma = \"void\";\n      this.put = \"VP8IoPutHook\";\n      this.ac = \"VP8IoSetupHook\";\n      this.bc = \"VP8IoTeardownHook\";\n      this.ha = this.Kb = 0;\n      this.data = [];\n      this.hb = this.ib = this.da = this.o = this.j = this.va = this.v = this.Da = this.ob = this.w = 0;\n      this.F = [];\n      this.J = 0;\n    }\n    function Ce() {\n      var a = new Be();\n      null != a &&\n        ((a.a = 0), (a.sc = \"OK\"), (a.cb = 0), (a.Xb = 0), oa || (oa = De));\n      return a;\n    }\n    function T(a, b, c) {\n      0 == a.a && ((a.a = b), (a.sc = c), (a.cb = 0));\n      return 0;\n    }\n    function Jc(a, b, c) {\n      return 3 <= c && 157 == a[b + 0] && 1 == a[b + 1] && 42 == a[b + 2];\n    }\n    function Kc(a, b) {\n      if (null == a) return 0;\n      a.a = 0;\n      a.sc = \"OK\";\n      if (null == b) return T(a, 2, \"null VP8Io passed to VP8GetHeaders()\");\n      var c = b.data;\n      var d = b.w;\n      var e = b.ha;\n      if (4 > e) return T(a, 7, \"Truncated header.\");\n      var f = c[d + 0] | (c[d + 1] << 8) | (c[d + 2] << 16);\n      var g = a.Od;\n      g.Rb = !(f & 1);\n      g.td = (f >> 1) & 7;\n      g.yd = (f >> 4) & 1;\n      g.ub = f >> 5;\n      if (3 < g.td) return T(a, 3, \"Incorrect keyframe parameters.\");\n      if (!g.yd) return T(a, 4, \"Frame not displayable.\");\n      d += 3;\n      e -= 3;\n      var h = a.Kc;\n      if (g.Rb) {\n        if (7 > e) return T(a, 7, \"cannot parse picture header\");\n        if (!Jc(c, d, e)) return T(a, 3, \"Bad code word\");\n        h.c = ((c[d + 4] << 8) | c[d + 3]) & 16383;\n        h.Td = c[d + 4] >> 6;\n        h.i = ((c[d + 6] << 8) | c[d + 5]) & 16383;\n        h.Ud = c[d + 6] >> 6;\n        d += 7;\n        e -= 7;\n        a.za = (h.c + 15) >> 4;\n        a.Ub = (h.i + 15) >> 4;\n        b.width = h.c;\n        b.height = h.i;\n        b.Da = 0;\n        b.j = 0;\n        b.v = 0;\n        b.va = b.width;\n        b.o = b.height;\n        b.da = 0;\n        b.ib = b.width;\n        b.hb = b.height;\n        b.U = b.width;\n        b.T = b.height;\n        f = a.Pa;\n        M(f.jb, 0, 255, f.jb.length);\n        f = a.Qa;\n        x(null != f);\n        f.Cb = 0;\n        f.Bb = 0;\n        f.Fb = 1;\n        M(f.Zb, 0, 0, f.Zb.length);\n        M(f.Lb, 0, 0, f.Lb);\n      }\n      if (g.ub > e) return T(a, 7, \"bad partition length\");\n      f = a.m;\n      ma(f, c, d, g.ub);\n      d += g.ub;\n      e -= g.ub;\n      g.Rb && ((h.Ld = G(f)), (h.Kd = G(f)));\n      h = a.Qa;\n      var k = a.Pa,\n        l;\n      x(null != f);\n      x(null != h);\n      h.Cb = G(f);\n      if (h.Cb) {\n        h.Bb = G(f);\n        if (G(f)) {\n          h.Fb = G(f);\n          for (l = 0; 4 > l; ++l) h.Zb[l] = G(f) ? ca(f, 7) : 0;\n          for (l = 0; 4 > l; ++l) h.Lb[l] = G(f) ? ca(f, 6) : 0;\n        }\n        if (h.Bb) for (l = 0; 3 > l; ++l) k.jb[l] = G(f) ? na(f, 8) : 255;\n      } else h.Bb = 0;\n      if (f.Ka) return T(a, 3, \"cannot parse segment header\");\n      h = a.ed;\n      h.zd = G(f);\n      h.Tb = na(f, 6);\n      h.wb = na(f, 3);\n      h.Pc = G(f);\n      if (h.Pc && G(f)) {\n        for (k = 0; 4 > k; ++k) G(f) && (h.vd[k] = ca(f, 6));\n        for (k = 0; 4 > k; ++k) G(f) && (h.od[k] = ca(f, 6));\n      }\n      a.L = 0 == h.Tb ? 0 : h.zd ? 1 : 2;\n      if (f.Ka) return T(a, 3, \"cannot parse filter header\");\n      l = d;\n      var m = e;\n      e = l;\n      d = l + m;\n      h = m;\n      a.Xb = (1 << na(a.m, 2)) - 1;\n      k = a.Xb;\n      if (m < 3 * k) c = 7;\n      else {\n        l += 3 * k;\n        h -= 3 * k;\n        for (m = 0; m < k; ++m) {\n          var n = c[e + 0] | (c[e + 1] << 8) | (c[e + 2] << 16);\n          n > h && (n = h);\n          ma(a.Jc[+m], c, l, n);\n          l += n;\n          h -= n;\n          e += 3;\n        }\n        ma(a.Jc[+k], c, l, h);\n        c = l < d ? 0 : 5;\n      }\n      if (0 != c) return T(a, c, \"cannot parse partitions\");\n      l = a.m;\n      c = na(l, 7);\n      e = G(l) ? ca(l, 4) : 0;\n      d = G(l) ? ca(l, 4) : 0;\n      h = G(l) ? ca(l, 4) : 0;\n      k = G(l) ? ca(l, 4) : 0;\n      l = G(l) ? ca(l, 4) : 0;\n      m = a.Qa;\n      for (n = 0; 4 > n; ++n) {\n        if (m.Cb) {\n          var r = m.Zb[n];\n          m.Fb || (r += c);\n        } else if (0 < n) {\n          a.pb[n] = a.pb[0];\n          continue;\n        } else r = c;\n        var q = a.pb[n];\n        q.Sc[0] = Lb[ga(r + e, 127)];\n        q.Sc[1] = Mb[ga(r + 0, 127)];\n        q.Eb[0] = 2 * Lb[ga(r + d, 127)];\n        q.Eb[1] = (101581 * Mb[ga(r + h, 127)]) >> 16;\n        8 > q.Eb[1] && (q.Eb[1] = 8);\n        q.Qc[0] = Lb[ga(r + k, 117)];\n        q.Qc[1] = Mb[ga(r + l, 127)];\n        q.lc = r + l;\n      }\n      if (!g.Rb) return T(a, 4, \"Not a key frame.\");\n      G(f);\n      g = a.Pa;\n      for (c = 0; 4 > c; ++c) {\n        for (e = 0; 8 > e; ++e)\n          for (d = 0; 3 > d; ++d)\n            for (h = 0; 11 > h; ++h)\n              (k = K(f, Ee[c][e][d][h]) ? na(f, 8) : Fe[c][e][d][h]),\n                (g.Wc[c][e].Yb[d][h] = k);\n        for (e = 0; 17 > e; ++e) g.Xc[c][e] = g.Wc[c][Ge[e]];\n      }\n      a.kc = G(f);\n      a.kc && (a.Bd = na(f, 8));\n      return (a.cb = 1);\n    }\n    function De(a, b, c, d, e, f, g) {\n      var h = b[e].Yb[c];\n      for (c = 0; 16 > e; ++e) {\n        if (!K(a, h[c + 0])) return e;\n        for (; !K(a, h[c + 1]); )\n          if (((h = b[++e].Yb[0]), (c = 0), 16 == e)) return 16;\n        var k = b[e + 1].Yb;\n        if (K(a, h[c + 2])) {\n          var l = a,\n            m = h,\n            n = c;\n          var r = 0;\n          if (K(l, m[n + 3]))\n            if (K(l, m[n + 6])) {\n              h = 0;\n              r = K(l, m[n + 8]);\n              m = K(l, m[n + 9 + r]);\n              n = 2 * r + m;\n              r = 0;\n              for (m = He[n]; m[h]; ++h) r += r + K(l, m[h]);\n              r += 3 + (8 << n);\n            } else\n              K(l, m[n + 7])\n                ? ((r = 7 + 2 * K(l, 165)), (r += K(l, 145)))\n                : (r = 5 + K(l, 159));\n          else K(l, m[n + 4]) ? (r = 3 + K(l, m[n + 5])) : (r = 2);\n          h = k[2];\n        } else (r = 1), (h = k[1]);\n        k = g + Ie[e];\n        l = a;\n        0 > l.b && Qa(l);\n        var m = l.b,\n          n = l.Ca >> 1,\n          q = (n - (l.I >> m)) >> 31;\n        --l.b;\n        l.Ca += q;\n        l.Ca |= 1;\n        l.I -= ((n + 1) & q) << m;\n        f[k] = ((r ^ q) - q) * d[(0 < e) + 0];\n      }\n      return 16;\n    }\n    function Lc(a) {\n      var b = a.rb[a.sb - 1];\n      b.la = 0;\n      b.Na = 0;\n      M(a.zc, 0, 0, a.zc.length);\n      a.ja = 0;\n    }\n    function Je(a, b) {\n      for (a.M = 0; a.M < a.Va; ++a.M) {\n        var c = a.Jc[a.M & a.Xb],\n          d = a.m,\n          e = a,\n          f;\n        for (f = 0; f < e.za; ++f) {\n          var g = d;\n          var h = e;\n          var k = h.Ac,\n            l = h.Bc + 4 * f,\n            m = h.zc,\n            n = h.ya[h.aa + f];\n          h.Qa.Bb\n            ? (n.$b = K(g, h.Pa.jb[0])\n                ? 2 + K(g, h.Pa.jb[2])\n                : K(g, h.Pa.jb[1]))\n            : (n.$b = 0);\n          h.kc && (n.Ad = K(g, h.Bd));\n          n.Za = !K(g, 145) + 0;\n          if (n.Za) {\n            var r = n.Ob,\n              q = 0;\n            for (h = 0; 4 > h; ++h) {\n              var t = m[0 + h];\n              var v;\n              for (v = 0; 4 > v; ++v) {\n                t = Ke[k[l + v]][t];\n                for (var p = Mc[K(g, t[0])]; 0 < p; )\n                  p = Mc[2 * p + K(g, t[p])];\n                t = -p;\n                k[l + v] = t;\n              }\n              I(r, q, k, l, 4);\n              q += 4;\n              m[0 + h] = t;\n            }\n          } else\n            (t = K(g, 156) ? (K(g, 128) ? 1 : 3) : K(g, 163) ? 2 : 0),\n              (n.Ob[0] = t),\n              M(k, l, t, 4),\n              M(m, 0, t, 4);\n          n.Dd = K(g, 142) ? (K(g, 114) ? (K(g, 183) ? 1 : 3) : 2) : 0;\n        }\n        if (e.m.Ka) return T(a, 7, \"Premature end-of-partition0 encountered.\");\n        for (; a.ja < a.za; ++a.ja) {\n          d = a;\n          e = c;\n          g = d.rb[d.sb - 1];\n          k = d.rb[d.sb + d.ja];\n          f = d.ya[d.aa + d.ja];\n          if ((l = d.kc ? f.Ad : 0))\n            (g.la = k.la = 0),\n              f.Za || (g.Na = k.Na = 0),\n              (f.Hc = 0),\n              (f.Gc = 0),\n              (f.ia = 0);\n          else {\n            var u,\n              w,\n              g = k,\n              k = e,\n              l = d.Pa.Xc,\n              m = d.ya[d.aa + d.ja],\n              n = d.pb[m.$b];\n            h = m.ad;\n            r = 0;\n            q = d.rb[d.sb - 1];\n            t = v = 0;\n            M(h, r, 0, 384);\n            if (m.Za) {\n              var y = 0;\n              var A = l[3];\n            } else {\n              p = V(16);\n              var E = g.Na + q.Na;\n              E = oa(k, l[1], E, n.Eb, 0, p, 0);\n              g.Na = q.Na = (0 < E) + 0;\n              if (1 < E) Nc(p, 0, h, r);\n              else {\n                var B = (p[0] + 3) >> 3;\n                for (p = 0; 256 > p; p += 16) h[r + p] = B;\n              }\n              y = 1;\n              A = l[0];\n            }\n            var C = g.la & 15;\n            var N = q.la & 15;\n            for (p = 0; 4 > p; ++p) {\n              var z = N & 1;\n              for (B = w = 0; 4 > B; ++B)\n                (E = z + (C & 1)),\n                  (E = oa(k, A, E, n.Sc, y, h, r)),\n                  (z = E > y),\n                  (C = (C >> 1) | (z << 7)),\n                  (w = (w << 2) | (3 < E ? 3 : 1 < E ? 2 : 0 != h[r + 0])),\n                  (r += 16);\n              C >>= 4;\n              N = (N >> 1) | (z << 7);\n              v = ((v << 8) | w) >>> 0;\n            }\n            A = C;\n            y = N >> 4;\n            for (u = 0; 4 > u; u += 2) {\n              w = 0;\n              C = g.la >> (4 + u);\n              N = q.la >> (4 + u);\n              for (p = 0; 2 > p; ++p) {\n                z = N & 1;\n                for (B = 0; 2 > B; ++B)\n                  (E = z + (C & 1)),\n                    (E = oa(k, l[2], E, n.Qc, 0, h, r)),\n                    (z = 0 < E),\n                    (C = (C >> 1) | (z << 3)),\n                    (w = (w << 2) | (3 < E ? 3 : 1 < E ? 2 : 0 != h[r + 0])),\n                    (r += 16);\n                C >>= 2;\n                N = (N >> 1) | (z << 5);\n              }\n              t |= w << (4 * u);\n              A |= (C << 4) << u;\n              y |= (N & 240) << u;\n            }\n            g.la = A;\n            q.la = y;\n            m.Hc = v;\n            m.Gc = t;\n            m.ia = t & 43690 ? 0 : n.ia;\n            l = !(v | t);\n          }\n          0 < d.L &&\n            ((d.wa[d.Y + d.ja] = d.gd[f.$b][f.Za]),\n            (d.wa[d.Y + d.ja].La |= !l));\n          if (e.Ka) return T(a, 7, \"Premature end-of-file encountered.\");\n        }\n        Lc(a);\n        c = a;\n        d = b;\n        e = 1;\n        f = c.D;\n        g = 0 < c.L && c.M >= c.zb && c.M <= c.Va;\n        if (0 == c.Aa)\n          a: {\n            (f.M = c.M), (f.uc = g), Oc(c, f), (e = 1);\n            w = c.D;\n            f = w.Nb;\n            t = Ya[c.L];\n            g = t * c.R;\n            k = (t / 2) * c.B;\n            p = 16 * f * c.R;\n            B = 8 * f * c.B;\n            l = c.sa;\n            m = c.ta - g + p;\n            n = c.qa;\n            h = c.ra - k + B;\n            r = c.Ha;\n            q = c.Ia - k + B;\n            C = w.M;\n            N = 0 == C;\n            v = C >= c.Va - 1;\n            2 == c.Aa && Oc(c, w);\n            if (w.uc)\n              for (E = c, z = E.D.M, x(E.D.uc), w = E.yb; w < E.Hb; ++w) {\n                var Q = E;\n                y = w;\n                A = z;\n                var S = Q.D,\n                  D = S.Nb;\n                u = Q.R;\n                var S = S.wa[S.Y + y],\n                  F = Q.sa,\n                  H = Q.ta + 16 * D * u + 16 * y,\n                  J = S.dd,\n                  G = S.tc;\n                if (0 != G)\n                  if ((x(3 <= G), 1 == Q.L))\n                    0 < y && Pc(F, H, u, G + 4),\n                      S.La && Qc(F, H, u, G),\n                      0 < A && Rc(F, H, u, G + 4),\n                      S.La && Sc(F, H, u, G);\n                  else {\n                    var L = Q.B,\n                      O = Q.qa,\n                      P = Q.ra + 8 * D * L + 8 * y,\n                      R = Q.Ha,\n                      Q = Q.Ia + 8 * D * L + 8 * y,\n                      D = S.ld;\n                    0 < y &&\n                      (Tc(F, H, u, G + 4, J, D),\n                      Uc(O, P, R, Q, L, G + 4, J, D));\n                    S.La && (Vc(F, H, u, G, J, D), Wc(O, P, R, Q, L, G, J, D));\n                    0 < A &&\n                      (Xc(F, H, u, G + 4, J, D),\n                      Yc(O, P, R, Q, L, G + 4, J, D));\n                    S.La && (Zc(F, H, u, G, J, D), $c(O, P, R, Q, L, G, J, D));\n                  }\n              }\n            c.ia && alert(\"todo:DitherRow\");\n            if (null != d.put) {\n              w = 16 * C;\n              C = 16 * (C + 1);\n              N\n                ? ((d.y = c.sa),\n                  (d.O = c.ta + p),\n                  (d.f = c.qa),\n                  (d.N = c.ra + B),\n                  (d.ea = c.Ha),\n                  (d.W = c.Ia + B))\n                : ((w -= t),\n                  (d.y = l),\n                  (d.O = m),\n                  (d.f = n),\n                  (d.N = h),\n                  (d.ea = r),\n                  (d.W = q));\n              v || (C -= t);\n              C > d.o && (C = d.o);\n              d.F = null;\n              d.J = null;\n              if (\n                null != c.Fa &&\n                0 < c.Fa.length &&\n                w < C &&\n                ((d.J = Le(c, d, w, C - w)),\n                (d.F = c.mb),\n                null == d.F && 0 == d.F.length)\n              ) {\n                e = T(c, 3, \"Could not decode alpha data.\");\n                break a;\n              }\n              w < d.j &&\n                ((t = d.j - w),\n                (w = d.j),\n                x(!(t & 1)),\n                (d.O += c.R * t),\n                (d.N += c.B * (t >> 1)),\n                (d.W += c.B * (t >> 1)),\n                null != d.F && (d.J += d.width * t));\n              w < C &&\n                ((d.O += d.v),\n                (d.N += d.v >> 1),\n                (d.W += d.v >> 1),\n                null != d.F && (d.J += d.v),\n                (d.ka = w - d.j),\n                (d.U = d.va - d.v),\n                (d.T = C - w),\n                (e = d.put(d)));\n            }\n            f + 1 != c.Ic ||\n              v ||\n              (I(c.sa, c.ta - g, l, m + 16 * c.R, g),\n              I(c.qa, c.ra - k, n, h + 8 * c.B, k),\n              I(c.Ha, c.Ia - k, r, q + 8 * c.B, k));\n          }\n        if (!e) return T(a, 6, \"Output aborted.\");\n      }\n      return 1;\n    }\n    function Me(a, b) {\n      if (null == a) return 0;\n      if (null == b) return T(a, 2, \"NULL VP8Io parameter in VP8Decode().\");\n      if (!a.cb && !Kc(a, b)) return 0;\n      x(a.cb);\n      if (null == b.ac || b.ac(b)) {\n        b.ob && (a.L = 0);\n        var c = Ya[a.L];\n        2 == a.L\n          ? ((a.yb = 0), (a.zb = 0))\n          : ((a.yb = (b.v - c) >> 4),\n            (a.zb = (b.j - c) >> 4),\n            0 > a.yb && (a.yb = 0),\n            0 > a.zb && (a.zb = 0));\n        a.Va = (b.o + 15 + c) >> 4;\n        a.Hb = (b.va + 15 + c) >> 4;\n        a.Hb > a.za && (a.Hb = a.za);\n        a.Va > a.Ub && (a.Va = a.Ub);\n        if (0 < a.L) {\n          var d = a.ed;\n          for (c = 0; 4 > c; ++c) {\n            var e;\n            if (a.Qa.Cb) {\n              var f = a.Qa.Lb[c];\n              a.Qa.Fb || (f += d.Tb);\n            } else f = d.Tb;\n            for (e = 0; 1 >= e; ++e) {\n              var g = a.gd[c][e],\n                h = f;\n              d.Pc && ((h += d.vd[0]), e && (h += d.od[0]));\n              h = 0 > h ? 0 : 63 < h ? 63 : h;\n              if (0 < h) {\n                var k = h;\n                0 < d.wb &&\n                  ((k = 4 < d.wb ? k >> 2 : k >> 1),\n                  k > 9 - d.wb && (k = 9 - d.wb));\n                1 > k && (k = 1);\n                g.dd = k;\n                g.tc = 2 * h + k;\n                g.ld = 40 <= h ? 2 : 15 <= h ? 1 : 0;\n              } else g.tc = 0;\n              g.La = e;\n            }\n          }\n        }\n        c = 0;\n      } else T(a, 6, \"Frame setup failed\"), (c = a.a);\n      if ((c = 0 == c)) {\n        if (c) {\n          a.$c = 0;\n          0 < a.Aa || (a.Ic = Ne);\n          b: {\n            c = a.Ic;\n            var k = a.za,\n              d = 4 * k,\n              l = 32 * k,\n              m = k + 1,\n              n = 0 < a.L ? k * (0 < a.Aa ? 2 : 1) : 0,\n              r = (2 == a.Aa ? 2 : 1) * k;\n            e = ((3 * (16 * c + Ya[a.L])) / 2) * l;\n            f = null != a.Fa && 0 < a.Fa.length ? a.Kc.c * a.Kc.i : 0;\n            g = d + 832 + e + f;\n            if (g != g) c = 0;\n            else {\n              if (g > a.Vb) {\n                a.Vb = 0;\n                a.Ec = V(g);\n                a.Fc = 0;\n                if (null == a.Ec) {\n                  c = T(a, 1, \"no memory during frame initialization.\");\n                  break b;\n                }\n                a.Vb = g;\n              }\n              g = a.Ec;\n              h = a.Fc;\n              a.Ac = g;\n              a.Bc = h;\n              h += d;\n              a.Gd = wa(l, Ic);\n              a.Hd = 0;\n              a.rb = wa(m + 1, Hc);\n              a.sb = 1;\n              a.wa = n ? wa(n, Xa) : null;\n              a.Y = 0;\n              a.D.Nb = 0;\n              a.D.wa = a.wa;\n              a.D.Y = a.Y;\n              0 < a.Aa && (a.D.Y += k);\n              x(!0);\n              a.oc = g;\n              a.pc = h;\n              h += 832;\n              a.ya = wa(r, Kb);\n              a.aa = 0;\n              a.D.ya = a.ya;\n              a.D.aa = a.aa;\n              2 == a.Aa && (a.D.aa += k);\n              a.R = 16 * k;\n              a.B = 8 * k;\n              l = Ya[a.L];\n              k = l * a.R;\n              l = (l / 2) * a.B;\n              a.sa = g;\n              a.ta = h + k;\n              a.qa = a.sa;\n              a.ra = a.ta + 16 * c * a.R + l;\n              a.Ha = a.qa;\n              a.Ia = a.ra + 8 * c * a.B + l;\n              a.$c = 0;\n              h += e;\n              a.mb = f ? g : null;\n              a.nb = f ? h : null;\n              x(h + f <= a.Fc + a.Vb);\n              Lc(a);\n              M(a.Ac, a.Bc, 0, d);\n              c = 1;\n            }\n          }\n          if (c) {\n            b.ka = 0;\n            b.y = a.sa;\n            b.O = a.ta;\n            b.f = a.qa;\n            b.N = a.ra;\n            b.ea = a.Ha;\n            b.Vd = a.Ia;\n            b.fa = a.R;\n            b.Rc = a.B;\n            b.F = null;\n            b.J = 0;\n            if (!ad) {\n              for (c = -255; 255 >= c; ++c) bd[255 + c] = 0 > c ? -c : c;\n              for (c = -1020; 1020 >= c; ++c)\n                cd[1020 + c] = -128 > c ? -128 : 127 < c ? 127 : c;\n              for (c = -112; 112 >= c; ++c)\n                dd[112 + c] = -16 > c ? -16 : 15 < c ? 15 : c;\n              for (c = -255; 510 >= c; ++c)\n                ed[255 + c] = 0 > c ? 0 : 255 < c ? 255 : c;\n              ad = 1;\n            }\n            Nc = Oe;\n            Za = Pe;\n            Nb = Qe;\n            pa = Re;\n            Ob = Se;\n            fd = Te;\n            Xc = Ue;\n            Tc = Ve;\n            Yc = We;\n            Uc = Xe;\n            Zc = Ye;\n            Vc = Ze;\n            $c = $e;\n            Wc = af;\n            Rc = gd;\n            Pc = hd;\n            Sc = bf;\n            Qc = cf;\n            W[0] = df;\n            W[1] = ef;\n            W[2] = ff;\n            W[3] = gf;\n            W[4] = hf;\n            W[5] = jf;\n            W[6] = kf;\n            W[7] = lf;\n            W[8] = mf;\n            W[9] = nf;\n            Y[0] = of;\n            Y[1] = pf;\n            Y[2] = qf;\n            Y[3] = rf;\n            Y[4] = sf;\n            Y[5] = tf;\n            Y[6] = uf;\n            ka[0] = vf;\n            ka[1] = wf;\n            ka[2] = xf;\n            ka[3] = yf;\n            ka[4] = zf;\n            ka[5] = Af;\n            ka[6] = Bf;\n            c = 1;\n          } else c = 0;\n        }\n        c && (c = Je(a, b));\n        null != b.bc && b.bc(b);\n        c &= 1;\n      }\n      if (!c) return 0;\n      a.cb = 0;\n      return c;\n    }\n    function qa(a, b, c, d, e) {\n      e = a[b + c + 32 * d] + (e >> 3);\n      a[b + c + 32 * d] = e & -256 ? (0 > e ? 0 : 255) : e;\n    }\n    function kb(a, b, c, d, e, f) {\n      qa(a, b, 0, c, d + e);\n      qa(a, b, 1, c, d + f);\n      qa(a, b, 2, c, d - f);\n      qa(a, b, 3, c, d - e);\n    }\n    function da(a) {\n      return ((20091 * a) >> 16) + a;\n    }\n    function id(a, b, c, d) {\n      var e = 0,\n        f;\n      var g = V(16);\n      for (f = 0; 4 > f; ++f) {\n        var h = a[b + 0] + a[b + 8];\n        var k = a[b + 0] - a[b + 8];\n        var l = ((35468 * a[b + 4]) >> 16) - da(a[b + 12]);\n        var m = da(a[b + 4]) + ((35468 * a[b + 12]) >> 16);\n        g[e + 0] = h + m;\n        g[e + 1] = k + l;\n        g[e + 2] = k - l;\n        g[e + 3] = h - m;\n        e += 4;\n        b++;\n      }\n      for (f = e = 0; 4 > f; ++f)\n        (a = g[e + 0] + 4),\n          (h = a + g[e + 8]),\n          (k = a - g[e + 8]),\n          (l = ((35468 * g[e + 4]) >> 16) - da(g[e + 12])),\n          (m = da(g[e + 4]) + ((35468 * g[e + 12]) >> 16)),\n          qa(c, d, 0, 0, h + m),\n          qa(c, d, 1, 0, k + l),\n          qa(c, d, 2, 0, k - l),\n          qa(c, d, 3, 0, h - m),\n          e++,\n          (d += 32);\n    }\n    function Te(a, b, c, d) {\n      var e = a[b + 0] + 4,\n        f = (35468 * a[b + 4]) >> 16,\n        g = da(a[b + 4]),\n        h = (35468 * a[b + 1]) >> 16;\n      a = da(a[b + 1]);\n      kb(c, d, 0, e + g, a, h);\n      kb(c, d, 1, e + f, a, h);\n      kb(c, d, 2, e - f, a, h);\n      kb(c, d, 3, e - g, a, h);\n    }\n    function Pe(a, b, c, d, e) {\n      id(a, b, c, d);\n      e && id(a, b + 16, c, d + 4);\n    }\n    function Qe(a, b, c, d) {\n      Za(a, b + 0, c, d, 1);\n      Za(a, b + 32, c, d + 128, 1);\n    }\n    function Re(a, b, c, d) {\n      a = a[b + 0] + 4;\n      var e;\n      for (e = 0; 4 > e; ++e) for (b = 0; 4 > b; ++b) qa(c, d, b, e, a);\n    }\n    function Se(a, b, c, d) {\n      a[b + 0] && pa(a, b + 0, c, d);\n      a[b + 16] && pa(a, b + 16, c, d + 4);\n      a[b + 32] && pa(a, b + 32, c, d + 128);\n      a[b + 48] && pa(a, b + 48, c, d + 128 + 4);\n    }\n    function Oe(a, b, c, d) {\n      var e = V(16),\n        f;\n      for (f = 0; 4 > f; ++f) {\n        var g = a[b + 0 + f] + a[b + 12 + f];\n        var h = a[b + 4 + f] + a[b + 8 + f];\n        var k = a[b + 4 + f] - a[b + 8 + f];\n        var l = a[b + 0 + f] - a[b + 12 + f];\n        e[0 + f] = g + h;\n        e[8 + f] = g - h;\n        e[4 + f] = l + k;\n        e[12 + f] = l - k;\n      }\n      for (f = 0; 4 > f; ++f)\n        (a = e[0 + 4 * f] + 3),\n          (g = a + e[3 + 4 * f]),\n          (h = e[1 + 4 * f] + e[2 + 4 * f]),\n          (k = e[1 + 4 * f] - e[2 + 4 * f]),\n          (l = a - e[3 + 4 * f]),\n          (c[d + 0] = (g + h) >> 3),\n          (c[d + 16] = (l + k) >> 3),\n          (c[d + 32] = (g - h) >> 3),\n          (c[d + 48] = (l - k) >> 3),\n          (d += 64);\n    }\n    function Pb(a, b, c) {\n      var d = b - 32,\n        e = R,\n        f = 255 - a[d - 1],\n        g;\n      for (g = 0; g < c; ++g) {\n        var h = e,\n          k = f + a[b - 1],\n          l;\n        for (l = 0; l < c; ++l) a[b + l] = h[k + a[d + l]];\n        b += 32;\n      }\n    }\n    function ef(a, b) {\n      Pb(a, b, 4);\n    }\n    function wf(a, b) {\n      Pb(a, b, 8);\n    }\n    function pf(a, b) {\n      Pb(a, b, 16);\n    }\n    function qf(a, b) {\n      var c;\n      for (c = 0; 16 > c; ++c) I(a, b + 32 * c, a, b - 32, 16);\n    }\n    function rf(a, b) {\n      var c;\n      for (c = 16; 0 < c; --c) M(a, b, a[b - 1], 16), (b += 32);\n    }\n    function $a(a, b, c) {\n      var d;\n      for (d = 0; 16 > d; ++d) M(b, c + 32 * d, a, 16);\n    }\n    function of(a, b) {\n      var c = 16,\n        d;\n      for (d = 0; 16 > d; ++d) c += a[b - 1 + 32 * d] + a[b + d - 32];\n      $a(c >> 5, a, b);\n    }\n    function sf(a, b) {\n      var c = 8,\n        d;\n      for (d = 0; 16 > d; ++d) c += a[b - 1 + 32 * d];\n      $a(c >> 4, a, b);\n    }\n    function tf(a, b) {\n      var c = 8,\n        d;\n      for (d = 0; 16 > d; ++d) c += a[b + d - 32];\n      $a(c >> 4, a, b);\n    }\n    function uf(a, b) {\n      $a(128, a, b);\n    }\n    function z(a, b, c) {\n      return (a + 2 * b + c + 2) >> 2;\n    }\n    function ff(a, b) {\n      var c = b - 32,\n        c = new Uint8Array([\n          z(a[c - 1], a[c + 0], a[c + 1]),\n          z(a[c + 0], a[c + 1], a[c + 2]),\n          z(a[c + 1], a[c + 2], a[c + 3]),\n          z(a[c + 2], a[c + 3], a[c + 4])\n        ]),\n        d;\n      for (d = 0; 4 > d; ++d) I(a, b + 32 * d, c, 0, c.length);\n    }\n    function gf(a, b) {\n      var c = a[b - 1],\n        d = a[b - 1 + 32],\n        e = a[b - 1 + 64],\n        f = a[b - 1 + 96];\n      ra(a, b + 0, 16843009 * z(a[b - 1 - 32], c, d));\n      ra(a, b + 32, 16843009 * z(c, d, e));\n      ra(a, b + 64, 16843009 * z(d, e, f));\n      ra(a, b + 96, 16843009 * z(e, f, f));\n    }\n    function df(a, b) {\n      var c = 4,\n        d;\n      for (d = 0; 4 > d; ++d) c += a[b + d - 32] + a[b - 1 + 32 * d];\n      c >>= 3;\n      for (d = 0; 4 > d; ++d) M(a, b + 32 * d, c, 4);\n    }\n    function hf(a, b) {\n      var c = a[b - 1 + 0],\n        d = a[b - 1 + 32],\n        e = a[b - 1 + 64],\n        f = a[b - 1 - 32],\n        g = a[b + 0 - 32],\n        h = a[b + 1 - 32],\n        k = a[b + 2 - 32],\n        l = a[b + 3 - 32];\n      a[b + 0 + 96] = z(d, e, a[b - 1 + 96]);\n      a[b + 1 + 96] = a[b + 0 + 64] = z(c, d, e);\n      a[b + 2 + 96] = a[b + 1 + 64] = a[b + 0 + 32] = z(f, c, d);\n      a[b + 3 + 96] = a[b + 2 + 64] = a[b + 1 + 32] = a[b + 0 + 0] = z(g, f, c);\n      a[b + 3 + 64] = a[b + 2 + 32] = a[b + 1 + 0] = z(h, g, f);\n      a[b + 3 + 32] = a[b + 2 + 0] = z(k, h, g);\n      a[b + 3 + 0] = z(l, k, h);\n    }\n    function kf(a, b) {\n      var c = a[b + 1 - 32],\n        d = a[b + 2 - 32],\n        e = a[b + 3 - 32],\n        f = a[b + 4 - 32],\n        g = a[b + 5 - 32],\n        h = a[b + 6 - 32],\n        k = a[b + 7 - 32];\n      a[b + 0 + 0] = z(a[b + 0 - 32], c, d);\n      a[b + 1 + 0] = a[b + 0 + 32] = z(c, d, e);\n      a[b + 2 + 0] = a[b + 1 + 32] = a[b + 0 + 64] = z(d, e, f);\n      a[b + 3 + 0] = a[b + 2 + 32] = a[b + 1 + 64] = a[b + 0 + 96] = z(e, f, g);\n      a[b + 3 + 32] = a[b + 2 + 64] = a[b + 1 + 96] = z(f, g, h);\n      a[b + 3 + 64] = a[b + 2 + 96] = z(g, h, k);\n      a[b + 3 + 96] = z(h, k, k);\n    }\n    function jf(a, b) {\n      var c = a[b - 1 + 0],\n        d = a[b - 1 + 32],\n        e = a[b - 1 + 64],\n        f = a[b - 1 - 32],\n        g = a[b + 0 - 32],\n        h = a[b + 1 - 32],\n        k = a[b + 2 - 32],\n        l = a[b + 3 - 32];\n      a[b + 0 + 0] = a[b + 1 + 64] = (f + g + 1) >> 1;\n      a[b + 1 + 0] = a[b + 2 + 64] = (g + h + 1) >> 1;\n      a[b + 2 + 0] = a[b + 3 + 64] = (h + k + 1) >> 1;\n      a[b + 3 + 0] = (k + l + 1) >> 1;\n      a[b + 0 + 96] = z(e, d, c);\n      a[b + 0 + 64] = z(d, c, f);\n      a[b + 0 + 32] = a[b + 1 + 96] = z(c, f, g);\n      a[b + 1 + 32] = a[b + 2 + 96] = z(f, g, h);\n      a[b + 2 + 32] = a[b + 3 + 96] = z(g, h, k);\n      a[b + 3 + 32] = z(h, k, l);\n    }\n    function lf(a, b) {\n      var c = a[b + 0 - 32],\n        d = a[b + 1 - 32],\n        e = a[b + 2 - 32],\n        f = a[b + 3 - 32],\n        g = a[b + 4 - 32],\n        h = a[b + 5 - 32],\n        k = a[b + 6 - 32],\n        l = a[b + 7 - 32];\n      a[b + 0 + 0] = (c + d + 1) >> 1;\n      a[b + 1 + 0] = a[b + 0 + 64] = (d + e + 1) >> 1;\n      a[b + 2 + 0] = a[b + 1 + 64] = (e + f + 1) >> 1;\n      a[b + 3 + 0] = a[b + 2 + 64] = (f + g + 1) >> 1;\n      a[b + 0 + 32] = z(c, d, e);\n      a[b + 1 + 32] = a[b + 0 + 96] = z(d, e, f);\n      a[b + 2 + 32] = a[b + 1 + 96] = z(e, f, g);\n      a[b + 3 + 32] = a[b + 2 + 96] = z(f, g, h);\n      a[b + 3 + 64] = z(g, h, k);\n      a[b + 3 + 96] = z(h, k, l);\n    }\n    function nf(a, b) {\n      var c = a[b - 1 + 0],\n        d = a[b - 1 + 32],\n        e = a[b - 1 + 64],\n        f = a[b - 1 + 96];\n      a[b + 0 + 0] = (c + d + 1) >> 1;\n      a[b + 2 + 0] = a[b + 0 + 32] = (d + e + 1) >> 1;\n      a[b + 2 + 32] = a[b + 0 + 64] = (e + f + 1) >> 1;\n      a[b + 1 + 0] = z(c, d, e);\n      a[b + 3 + 0] = a[b + 1 + 32] = z(d, e, f);\n      a[b + 3 + 32] = a[b + 1 + 64] = z(e, f, f);\n      a[b + 3 + 64] = a[b + 2 + 64] = a[b + 0 + 96] = a[b + 1 + 96] = a[\n        b + 2 + 96\n      ] = a[b + 3 + 96] = f;\n    }\n    function mf(a, b) {\n      var c = a[b - 1 + 0],\n        d = a[b - 1 + 32],\n        e = a[b - 1 + 64],\n        f = a[b - 1 + 96],\n        g = a[b - 1 - 32],\n        h = a[b + 0 - 32],\n        k = a[b + 1 - 32],\n        l = a[b + 2 - 32];\n      a[b + 0 + 0] = a[b + 2 + 32] = (c + g + 1) >> 1;\n      a[b + 0 + 32] = a[b + 2 + 64] = (d + c + 1) >> 1;\n      a[b + 0 + 64] = a[b + 2 + 96] = (e + d + 1) >> 1;\n      a[b + 0 + 96] = (f + e + 1) >> 1;\n      a[b + 3 + 0] = z(h, k, l);\n      a[b + 2 + 0] = z(g, h, k);\n      a[b + 1 + 0] = a[b + 3 + 32] = z(c, g, h);\n      a[b + 1 + 32] = a[b + 3 + 64] = z(d, c, g);\n      a[b + 1 + 64] = a[b + 3 + 96] = z(e, d, c);\n      a[b + 1 + 96] = z(f, e, d);\n    }\n    function xf(a, b) {\n      var c;\n      for (c = 0; 8 > c; ++c) I(a, b + 32 * c, a, b - 32, 8);\n    }\n    function yf(a, b) {\n      var c;\n      for (c = 0; 8 > c; ++c) M(a, b, a[b - 1], 8), (b += 32);\n    }\n    function lb(a, b, c) {\n      var d;\n      for (d = 0; 8 > d; ++d) M(b, c + 32 * d, a, 8);\n    }\n    function vf(a, b) {\n      var c = 8,\n        d;\n      for (d = 0; 8 > d; ++d) c += a[b + d - 32] + a[b - 1 + 32 * d];\n      lb(c >> 4, a, b);\n    }\n    function Af(a, b) {\n      var c = 4,\n        d;\n      for (d = 0; 8 > d; ++d) c += a[b + d - 32];\n      lb(c >> 3, a, b);\n    }\n    function zf(a, b) {\n      var c = 4,\n        d;\n      for (d = 0; 8 > d; ++d) c += a[b - 1 + 32 * d];\n      lb(c >> 3, a, b);\n    }\n    function Bf(a, b) {\n      lb(128, a, b);\n    }\n    function ab(a, b, c) {\n      var d = a[b - c],\n        e = a[b + 0],\n        f = 3 * (e - d) + Qb[1020 + a[b - 2 * c] - a[b + c]],\n        g = mb[112 + ((f + 4) >> 3)];\n      a[b - c] = R[255 + d + mb[112 + ((f + 3) >> 3)]];\n      a[b + 0] = R[255 + e - g];\n    }\n    function jd(a, b, c, d) {\n      var e = a[b + 0],\n        f = a[b + c];\n      return U[255 + a[b - 2 * c] - a[b - c]] > d || U[255 + f - e] > d;\n    }\n    function kd(a, b, c, d) {\n      return (\n        4 * U[255 + a[b - c] - a[b + 0]] + U[255 + a[b - 2 * c] - a[b + c]] <= d\n      );\n    }\n    function ld(a, b, c, d, e) {\n      var f = a[b - 3 * c],\n        g = a[b - 2 * c],\n        h = a[b - c],\n        k = a[b + 0],\n        l = a[b + c],\n        m = a[b + 2 * c],\n        n = a[b + 3 * c];\n      return 4 * U[255 + h - k] + U[255 + g - l] > d\n        ? 0\n        : U[255 + a[b - 4 * c] - f] <= e &&\n            U[255 + f - g] <= e &&\n            U[255 + g - h] <= e &&\n            U[255 + n - m] <= e &&\n            U[255 + m - l] <= e &&\n            U[255 + l - k] <= e;\n    }\n    function gd(a, b, c, d) {\n      var e = 2 * d + 1;\n      for (d = 0; 16 > d; ++d) kd(a, b + d, c, e) && ab(a, b + d, c);\n    }\n    function hd(a, b, c, d) {\n      var e = 2 * d + 1;\n      for (d = 0; 16 > d; ++d) kd(a, b + d * c, 1, e) && ab(a, b + d * c, 1);\n    }\n    function bf(a, b, c, d) {\n      var e;\n      for (e = 3; 0 < e; --e) (b += 4 * c), gd(a, b, c, d);\n    }\n    function cf(a, b, c, d) {\n      var e;\n      for (e = 3; 0 < e; --e) (b += 4), hd(a, b, c, d);\n    }\n    function ea(a, b, c, d, e, f, g, h) {\n      for (f = 2 * f + 1; 0 < e--; ) {\n        if (ld(a, b, c, f, g))\n          if (jd(a, b, c, h)) ab(a, b, c);\n          else {\n            var k = a,\n              l = b,\n              m = c,\n              n = k[l - 2 * m],\n              r = k[l - m],\n              q = k[l + 0],\n              t = k[l + m],\n              v = k[l + 2 * m],\n              p = Qb[1020 + 3 * (q - r) + Qb[1020 + n - t]],\n              u = (27 * p + 63) >> 7,\n              w = (18 * p + 63) >> 7,\n              p = (9 * p + 63) >> 7;\n            k[l - 3 * m] = R[255 + k[l - 3 * m] + p];\n            k[l - 2 * m] = R[255 + n + w];\n            k[l - m] = R[255 + r + u];\n            k[l + 0] = R[255 + q - u];\n            k[l + m] = R[255 + t - w];\n            k[l + 2 * m] = R[255 + v - p];\n          }\n        b += d;\n      }\n    }\n    function Fa(a, b, c, d, e, f, g, h) {\n      for (f = 2 * f + 1; 0 < e--; ) {\n        if (ld(a, b, c, f, g))\n          if (jd(a, b, c, h)) ab(a, b, c);\n          else {\n            var k = a,\n              l = b,\n              m = c,\n              n = k[l - m],\n              r = k[l + 0],\n              q = k[l + m],\n              t = 3 * (r - n),\n              v = mb[112 + ((t + 4) >> 3)],\n              t = mb[112 + ((t + 3) >> 3)],\n              p = (v + 1) >> 1;\n            k[l - 2 * m] = R[255 + k[l - 2 * m] + p];\n            k[l - m] = R[255 + n + t];\n            k[l + 0] = R[255 + r - v];\n            k[l + m] = R[255 + q - p];\n          }\n        b += d;\n      }\n    }\n    function Ue(a, b, c, d, e, f) {\n      ea(a, b, c, 1, 16, d, e, f);\n    }\n    function Ve(a, b, c, d, e, f) {\n      ea(a, b, 1, c, 16, d, e, f);\n    }\n    function Ye(a, b, c, d, e, f) {\n      var g;\n      for (g = 3; 0 < g; --g) (b += 4 * c), Fa(a, b, c, 1, 16, d, e, f);\n    }\n    function Ze(a, b, c, d, e, f) {\n      var g;\n      for (g = 3; 0 < g; --g) (b += 4), Fa(a, b, 1, c, 16, d, e, f);\n    }\n    function We(a, b, c, d, e, f, g, h) {\n      ea(a, b, e, 1, 8, f, g, h);\n      ea(c, d, e, 1, 8, f, g, h);\n    }\n    function Xe(a, b, c, d, e, f, g, h) {\n      ea(a, b, 1, e, 8, f, g, h);\n      ea(c, d, 1, e, 8, f, g, h);\n    }\n    function $e(a, b, c, d, e, f, g, h) {\n      Fa(a, b + 4 * e, e, 1, 8, f, g, h);\n      Fa(c, d + 4 * e, e, 1, 8, f, g, h);\n    }\n    function af(a, b, c, d, e, f, g, h) {\n      Fa(a, b + 4, 1, e, 8, f, g, h);\n      Fa(c, d + 4, 1, e, 8, f, g, h);\n    }\n    function Cf() {\n      this.ba = new Cb();\n      this.ec = [];\n      this.cc = [];\n      this.Mc = [];\n      this.Dc = this.Nc = this.dc = this.fc = 0;\n      this.Oa = new Ud();\n      this.memory = 0;\n      this.Ib = \"OutputFunc\";\n      this.Jb = \"OutputAlphaFunc\";\n      this.Nd = \"OutputRowFunc\";\n    }\n    function md() {\n      this.data = [];\n      this.offset = this.kd = this.ha = this.w = 0;\n      this.na = [];\n      this.xa = this.gb = this.Ja = this.Sa = this.P = 0;\n    }\n    function Df() {\n      this.nc = this.Ea = this.b = this.hc = 0;\n      this.K = [];\n      this.w = 0;\n    }\n    function Ef() {\n      this.ua = 0;\n      this.Wa = new ac();\n      this.vb = new ac();\n      this.md = this.xc = this.wc = 0;\n      this.vc = [];\n      this.Wb = 0;\n      this.Ya = new Ub();\n      this.yc = new O();\n    }\n    function je() {\n      this.xb = this.a = 0;\n      this.l = new Oa();\n      this.ca = new Cb();\n      this.V = [];\n      this.Ba = 0;\n      this.Ta = [];\n      this.Ua = 0;\n      this.m = new Ra();\n      this.Pb = 0;\n      this.wd = new Ra();\n      this.Ma = this.$ = this.C = this.i = this.c = this.xd = 0;\n      this.s = new Ef();\n      this.ab = 0;\n      this.gc = wa(4, Df);\n      this.Oc = 0;\n    }\n    function Ff() {\n      this.Lc = this.Z = this.$a = this.i = this.c = 0;\n      this.l = new Oa();\n      this.ic = 0;\n      this.ca = [];\n      this.tb = 0;\n      this.qd = null;\n      this.rd = 0;\n    }\n    function Rb(a, b, c, d, e, f, g) {\n      a = null == a ? 0 : a[b + 0];\n      for (b = 0; b < g; ++b) (e[f + b] = (a + c[d + b]) & 255), (a = e[f + b]);\n    }\n    function Gf(a, b, c, d, e, f, g) {\n      if (null == a) Rb(null, null, c, d, e, f, g);\n      else {\n        var h;\n        for (h = 0; h < g; ++h) e[f + h] = (a[b + h] + c[d + h]) & 255;\n      }\n    }\n    function Hf(a, b, c, d, e, f, g) {\n      if (null == a) Rb(null, null, c, d, e, f, g);\n      else {\n        var h = a[b + 0],\n          k = h,\n          l = h,\n          m;\n        for (m = 0; m < g; ++m)\n          (h = a[b + m]),\n            (k = l + h - k),\n            (l = (c[d + m] + (k & -256 ? (0 > k ? 0 : 255) : k)) & 255),\n            (k = h),\n            (e[f + m] = l);\n      }\n    }\n    function Le(a, b, c, d) {\n      var e = b.width,\n        f = b.o;\n      x(null != a && null != b);\n      if (0 > c || 0 >= d || c + d > f) return null;\n      if (!a.Cc) {\n        if (null == a.ga) {\n          a.ga = new Ff();\n          var g;\n          (g = null == a.ga) ||\n            ((g = b.width * b.o),\n            x(0 == a.Gb.length),\n            (a.Gb = V(g)),\n            (a.Uc = 0),\n            null == a.Gb\n              ? (g = 0)\n              : ((a.mb = a.Gb), (a.nb = a.Uc), (a.rc = null), (g = 1)),\n            (g = !g));\n          if (!g) {\n            g = a.ga;\n            var h = a.Fa,\n              k = a.P,\n              l = a.qc,\n              m = a.mb,\n              n = a.nb,\n              r = k + 1,\n              q = l - 1,\n              t = g.l;\n            x(null != h && null != m && null != b);\n            ia[0] = null;\n            ia[1] = Rb;\n            ia[2] = Gf;\n            ia[3] = Hf;\n            g.ca = m;\n            g.tb = n;\n            g.c = b.width;\n            g.i = b.height;\n            x(0 < g.c && 0 < g.i);\n            if (1 >= l) b = 0;\n            else if (\n              ((g.$a = (h[k + 0] >> 0) & 3),\n              (g.Z = (h[k + 0] >> 2) & 3),\n              (g.Lc = (h[k + 0] >> 4) & 3),\n              (k = (h[k + 0] >> 6) & 3),\n              0 > g.$a || 1 < g.$a || 4 <= g.Z || 1 < g.Lc || k)\n            )\n              b = 0;\n            else if (\n              ((t.put = kc),\n              (t.ac = gc),\n              (t.bc = lc),\n              (t.ma = g),\n              (t.width = b.width),\n              (t.height = b.height),\n              (t.Da = b.Da),\n              (t.v = b.v),\n              (t.va = b.va),\n              (t.j = b.j),\n              (t.o = b.o),\n              g.$a)\n            )\n              b: {\n                x(1 == g.$a), (b = Bc());\n                c: for (;;) {\n                  if (null == b) {\n                    b = 0;\n                    break b;\n                  }\n                  x(null != g);\n                  g.mc = b;\n                  b.c = g.c;\n                  b.i = g.i;\n                  b.l = g.l;\n                  b.l.ma = g;\n                  b.l.width = g.c;\n                  b.l.height = g.i;\n                  b.a = 0;\n                  cb(b.m, h, r, q);\n                  if (!rb(g.c, g.i, 1, b, null)) break c;\n                  1 == b.ab && 3 == b.gc[0].hc && yc(b.s)\n                    ? ((g.ic = 1),\n                      (h = b.c * b.i),\n                      (b.Ta = null),\n                      (b.Ua = 0),\n                      (b.V = V(h)),\n                      (b.Ba = 0),\n                      null == b.V ? ((b.a = 1), (b = 0)) : (b = 1))\n                    : ((g.ic = 0), (b = Ec(b, g.c)));\n                  if (!b) break c;\n                  b = 1;\n                  break b;\n                }\n                g.mc = null;\n                b = 0;\n              }\n            else b = q >= g.c * g.i;\n            g = !b;\n          }\n          if (g) return null;\n          1 != a.ga.Lc ? (a.Ga = 0) : (d = f - c);\n        }\n        x(null != a.ga);\n        x(c + d <= f);\n        a: {\n          h = a.ga;\n          b = h.c;\n          f = h.l.o;\n          if (0 == h.$a) {\n            r = a.rc;\n            q = a.Vc;\n            t = a.Fa;\n            k = a.P + 1 + c * b;\n            l = a.mb;\n            m = a.nb + c * b;\n            x(k <= a.P + a.qc);\n            if (0 != h.Z)\n              for (x(null != ia[h.Z]), g = 0; g < d; ++g)\n                ia[h.Z](r, q, t, k, l, m, b),\n                  (r = l),\n                  (q = m),\n                  (m += b),\n                  (k += b);\n            else\n              for (g = 0; g < d; ++g)\n                I(l, m, t, k, b), (r = l), (q = m), (m += b), (k += b);\n            a.rc = r;\n            a.Vc = q;\n          } else {\n            x(null != h.mc);\n            b = c + d;\n            g = h.mc;\n            x(null != g);\n            x(b <= g.i);\n            if (g.C >= b) b = 1;\n            else if ((h.ic || Aa(), h.ic)) {\n              var h = g.V,\n                r = g.Ba,\n                q = g.c,\n                v = g.i,\n                t = 1,\n                k = g.$ / q,\n                l = g.$ % q,\n                m = g.m,\n                n = g.s,\n                p = g.$,\n                u = q * v,\n                w = q * b,\n                y = n.wc,\n                A = p < w ? ha(n, l, k) : null;\n              x(p <= u);\n              x(b <= v);\n              x(yc(n));\n              c: for (;;) {\n                for (; !m.h && p < w; ) {\n                  l & y || (A = ha(n, l, k));\n                  x(null != A);\n                  Sa(m);\n                  v = ua(A.G[0], A.H[0], m);\n                  if (256 > v)\n                    (h[r + p] = v),\n                      ++p,\n                      ++l,\n                      l >= q && ((l = 0), ++k, k <= b && !(k % 16) && Ib(g, k));\n                  else if (280 > v) {\n                    var v = ib(v - 256, m);\n                    var E = ua(A.G[4], A.H[4], m);\n                    Sa(m);\n                    E = ib(E, m);\n                    E = nc(q, E);\n                    if (p >= E && u - p >= v) {\n                      var B;\n                      for (B = 0; B < v; ++B) h[r + p + B] = h[r + p + B - E];\n                    } else {\n                      t = 0;\n                      break c;\n                    }\n                    p += v;\n                    for (l += v; l >= q; )\n                      (l -= q), ++k, k <= b && !(k % 16) && Ib(g, k);\n                    p < w && l & y && (A = ha(n, l, k));\n                  } else {\n                    t = 0;\n                    break c;\n                  }\n                  x(m.h == db(m));\n                }\n                Ib(g, k > b ? b : k);\n                break c;\n              }\n              !t || (m.h && p < u) ? ((t = 0), (g.a = m.h ? 5 : 3)) : (g.$ = p);\n              b = t;\n            } else b = Jb(g, g.V, g.Ba, g.c, g.i, b, se);\n            if (!b) {\n              d = 0;\n              break a;\n            }\n          }\n          c + d >= f && (a.Cc = 1);\n          d = 1;\n        }\n        if (!d) return null;\n        if (\n          a.Cc &&\n          ((d = a.ga), null != d && (d.mc = null), (a.ga = null), 0 < a.Ga)\n        )\n          return alert(\"todo:WebPDequantizeLevels\"), null;\n      }\n      return a.nb + c * e;\n    }\n    function If(a, b, c, d, e, f) {\n      for (; 0 < e--; ) {\n        var g = a,\n          h = b + (c ? 1 : 0),\n          k = a,\n          l = b + (c ? 0 : 3),\n          m;\n        for (m = 0; m < d; ++m) {\n          var n = k[l + 4 * m];\n          255 != n &&\n            ((n *= 32897),\n            (g[h + 4 * m + 0] = (g[h + 4 * m + 0] * n) >> 23),\n            (g[h + 4 * m + 1] = (g[h + 4 * m + 1] * n) >> 23),\n            (g[h + 4 * m + 2] = (g[h + 4 * m + 2] * n) >> 23));\n        }\n        b += f;\n      }\n    }\n    function Jf(a, b, c, d, e) {\n      for (; 0 < d--; ) {\n        var f;\n        for (f = 0; f < c; ++f) {\n          var g = a[b + 2 * f + 0],\n            h = a[b + 2 * f + 1],\n            k = h & 15,\n            l = 4369 * k,\n            h = (((h & 240) | (h >> 4)) * l) >> 16;\n          a[b + 2 * f + 0] =\n            (((((g & 240) | (g >> 4)) * l) >> 16) & 240) |\n            ((((((g & 15) | (g << 4)) * l) >> 16) >> 4) & 15);\n          a[b + 2 * f + 1] = (h & 240) | k;\n        }\n        b += e;\n      }\n    }\n    function Kf(a, b, c, d, e, f, g, h) {\n      var k = 255,\n        l,\n        m;\n      for (m = 0; m < e; ++m) {\n        for (l = 0; l < d; ++l) {\n          var n = a[b + l];\n          f[g + 4 * l] = n;\n          k &= n;\n        }\n        b += c;\n        g += h;\n      }\n      return 255 != k;\n    }\n    function Lf(a, b, c, d, e) {\n      var f;\n      for (f = 0; f < e; ++f) c[d + f] = a[b + f] >> 8;\n    }\n    function Aa() {\n      za = If;\n      vc = Jf;\n      fc = Kf;\n      Fc = Lf;\n    }\n    function va(a, b, c) {\n      self[a] = function(a, e, f, g, h, k, l, m, n, r, q, t, v, p, u, w, y) {\n        var d,\n          E = (y - 1) >> 1;\n        var B = h[k + 0] | (l[m + 0] << 16);\n        var C = n[r + 0] | (q[t + 0] << 16);\n        x(null != a);\n        var z = (3 * B + C + 131074) >> 2;\n        b(a[e + 0], z & 255, z >> 16, v, p);\n        null != f &&\n          ((z = (3 * C + B + 131074) >> 2),\n          b(f[g + 0], z & 255, z >> 16, u, w));\n        for (d = 1; d <= E; ++d) {\n          var D = h[k + d] | (l[m + d] << 16);\n          var G = n[r + d] | (q[t + d] << 16);\n          var F = B + D + C + G + 524296;\n          var H = (F + 2 * (D + C)) >> 3;\n          F = (F + 2 * (B + G)) >> 3;\n          z = (H + B) >> 1;\n          B = (F + D) >> 1;\n          b(a[e + 2 * d - 1], z & 255, z >> 16, v, p + (2 * d - 1) * c);\n          b(a[e + 2 * d - 0], B & 255, B >> 16, v, p + (2 * d - 0) * c);\n          null != f &&\n            ((z = (F + C) >> 1),\n            (B = (H + G) >> 1),\n            b(f[g + 2 * d - 1], z & 255, z >> 16, u, w + (2 * d - 1) * c),\n            b(f[g + 2 * d + 0], B & 255, B >> 16, u, w + (2 * d + 0) * c));\n          B = D;\n          C = G;\n        }\n        y & 1 ||\n          ((z = (3 * B + C + 131074) >> 2),\n          b(a[e + y - 1], z & 255, z >> 16, v, p + (y - 1) * c),\n          null != f &&\n            ((z = (3 * C + B + 131074) >> 2),\n            b(f[g + y - 1], z & 255, z >> 16, u, w + (y - 1) * c)));\n      };\n    }\n    function ic() {\n      P[Ca] = Mf;\n      P[Ua] = nd;\n      P[tc] = Nf;\n      P[Va] = od;\n      P[ya] = pd;\n      P[Db] = qd;\n      P[wc] = Of;\n      P[zb] = nd;\n      P[Ab] = od;\n      P[Ja] = pd;\n      P[Bb] = qd;\n    }\n    function Sb(a) {\n      return a & ~Pf ? (0 > a ? 0 : 255) : a >> rd;\n    }\n    function bb(a, b) {\n      return Sb(((19077 * a) >> 8) + ((26149 * b) >> 8) - 14234);\n    }\n    function nb(a, b, c) {\n      return Sb(\n        ((19077 * a) >> 8) - ((6419 * b) >> 8) - ((13320 * c) >> 8) + 8708\n      );\n    }\n    function Pa(a, b) {\n      return Sb(((19077 * a) >> 8) + ((33050 * b) >> 8) - 17685);\n    }\n    function Ga(a, b, c, d, e) {\n      d[e + 0] = bb(a, c);\n      d[e + 1] = nb(a, b, c);\n      d[e + 2] = Pa(a, b);\n    }\n    function Tb(a, b, c, d, e) {\n      d[e + 0] = Pa(a, b);\n      d[e + 1] = nb(a, b, c);\n      d[e + 2] = bb(a, c);\n    }\n    function sd(a, b, c, d, e) {\n      var f = nb(a, b, c);\n      b = ((f << 3) & 224) | (Pa(a, b) >> 3);\n      d[e + 0] = (bb(a, c) & 248) | (f >> 5);\n      d[e + 1] = b;\n    }\n    function td(a, b, c, d, e) {\n      var f = (Pa(a, b) & 240) | 15;\n      d[e + 0] = (bb(a, c) & 240) | (nb(a, b, c) >> 4);\n      d[e + 1] = f;\n    }\n    function ud(a, b, c, d, e) {\n      d[e + 0] = 255;\n      Ga(a, b, c, d, e + 1);\n    }\n    function vd(a, b, c, d, e) {\n      Tb(a, b, c, d, e);\n      d[e + 3] = 255;\n    }\n    function wd(a, b, c, d, e) {\n      Ga(a, b, c, d, e);\n      d[e + 3] = 255;\n    }\n    function ga(a, b) {\n      return 0 > a ? 0 : a > b ? b : a;\n    }\n    function la(a, b, c) {\n      self[a] = function(a, e, f, g, h, k, l, m, n) {\n        for (var d = m + (n & -2) * c; m != d; )\n          b(a[e + 0], f[g + 0], h[k + 0], l, m),\n            b(a[e + 1], f[g + 0], h[k + 0], l, m + c),\n            (e += 2),\n            ++g,\n            ++k,\n            (m += 2 * c);\n        n & 1 && b(a[e + 0], f[g + 0], h[k + 0], l, m);\n      };\n    }\n    function xd(a, b, c) {\n      return 0 == c ? (0 == a ? (0 == b ? 6 : 5) : 0 == b ? 4 : 0) : c;\n    }\n    function yd(a, b, c, d, e) {\n      switch (a >>> 30) {\n        case 3:\n          Za(b, c, d, e, 0);\n          break;\n        case 2:\n          fd(b, c, d, e);\n          break;\n        case 1:\n          pa(b, c, d, e);\n      }\n    }\n    function Oc(a, b) {\n      var c,\n        d,\n        e = b.M,\n        f = b.Nb,\n        g = a.oc,\n        h = a.pc + 40,\n        k = a.oc,\n        l = a.pc + 584,\n        m = a.oc,\n        n = a.pc + 600;\n      for (c = 0; 16 > c; ++c) g[h + 32 * c - 1] = 129;\n      for (c = 0; 8 > c; ++c)\n        (k[l + 32 * c - 1] = 129), (m[n + 32 * c - 1] = 129);\n      0 < e\n        ? (g[h - 1 - 32] = k[l - 1 - 32] = m[n - 1 - 32] = 129)\n        : (M(g, h - 32 - 1, 127, 21),\n          M(k, l - 32 - 1, 127, 9),\n          M(m, n - 32 - 1, 127, 9));\n      for (d = 0; d < a.za; ++d) {\n        var r = b.ya[b.aa + d];\n        if (0 < d) {\n          for (c = -1; 16 > c; ++c) I(g, h + 32 * c - 4, g, h + 32 * c + 12, 4);\n          for (c = -1; 8 > c; ++c)\n            I(k, l + 32 * c - 4, k, l + 32 * c + 4, 4),\n              I(m, n + 32 * c - 4, m, n + 32 * c + 4, 4);\n        }\n        var q = a.Gd,\n          t = a.Hd + d,\n          v = r.ad,\n          p = r.Hc;\n        0 < e &&\n          (I(g, h - 32, q[t].y, 0, 16),\n          I(k, l - 32, q[t].f, 0, 8),\n          I(m, n - 32, q[t].ea, 0, 8));\n        if (r.Za) {\n          var u = g;\n          var w = h - 32 + 16;\n          0 < e &&\n            (d >= a.za - 1\n              ? M(u, w, q[t].y[15], 4)\n              : I(u, w, q[t + 1].y, 0, 4));\n          for (c = 0; 4 > c; c++)\n            u[w + 128 + c] = u[w + 256 + c] = u[w + 384 + c] = u[w + 0 + c];\n          for (c = 0; 16 > c; ++c, p <<= 2)\n            (u = g), (w = h + zd[c]), W[r.Ob[c]](u, w), yd(p, v, 16 * +c, u, w);\n        } else if (((u = xd(d, e, r.Ob[0])), Y[u](g, h), 0 != p))\n          for (c = 0; 16 > c; ++c, p <<= 2) yd(p, v, 16 * +c, g, h + zd[c]);\n        c = r.Gc;\n        u = xd(d, e, r.Dd);\n        ka[u](k, l);\n        ka[u](m, n);\n        r = c >> 0;\n        p = v;\n        u = k;\n        w = l;\n        r & 255 && (r & 170 ? Nb(p, 256, u, w) : Ob(p, 256, u, w));\n        c >>= 8;\n        r = m;\n        p = n;\n        c & 255 && (c & 170 ? Nb(v, 320, r, p) : Ob(v, 320, r, p));\n        e < a.Ub - 1 &&\n          (I(q[t].y, 0, g, h + 480, 16),\n          I(q[t].f, 0, k, l + 224, 8),\n          I(q[t].ea, 0, m, n + 224, 8));\n        c = 8 * f * a.B;\n        q = a.sa;\n        t = a.ta + 16 * d + 16 * f * a.R;\n        v = a.qa;\n        r = a.ra + 8 * d + c;\n        p = a.Ha;\n        u = a.Ia + 8 * d + c;\n        for (c = 0; 16 > c; ++c) I(q, t + c * a.R, g, h + 32 * c, 16);\n        for (c = 0; 8 > c; ++c)\n          I(v, r + c * a.B, k, l + 32 * c, 8),\n            I(p, u + c * a.B, m, n + 32 * c, 8);\n      }\n    }\n    function Ad(a, b, c, d, e, f, g, h, k) {\n      var l = [0],\n        m = [0],\n        n = 0,\n        r = null != k ? k.kd : 0,\n        q = null != k ? k : new md();\n      if (null == a || 12 > c) return 7;\n      q.data = a;\n      q.w = b;\n      q.ha = c;\n      b = [b];\n      c = [c];\n      q.gb = [q.gb];\n      a: {\n        var t = b;\n        var v = c;\n        var p = q.gb;\n        x(null != a);\n        x(null != v);\n        x(null != p);\n        p[0] = 0;\n        if (12 <= v[0] && !fa(a, t[0], \"RIFF\")) {\n          if (fa(a, t[0] + 8, \"WEBP\")) {\n            p = 3;\n            break a;\n          }\n          var u = Ha(a, t[0] + 4);\n          if (12 > u || 4294967286 < u) {\n            p = 3;\n            break a;\n          }\n          if (r && u > v[0] - 8) {\n            p = 7;\n            break a;\n          }\n          p[0] = u;\n          t[0] += 12;\n          v[0] -= 12;\n        }\n        p = 0;\n      }\n      if (0 != p) return p;\n      u = 0 < q.gb[0];\n      for (c = c[0]; ; ) {\n        t = [0];\n        n = [n];\n        a: {\n          var w = a;\n          v = b;\n          p = c;\n          var y = n,\n            A = l,\n            z = m,\n            B = t;\n          y[0] = 0;\n          if (8 > p[0]) p = 7;\n          else {\n            if (!fa(w, v[0], \"VP8X\")) {\n              if (10 != Ha(w, v[0] + 4)) {\n                p = 3;\n                break a;\n              }\n              if (18 > p[0]) {\n                p = 7;\n                break a;\n              }\n              var C = Ha(w, v[0] + 8);\n              var D = 1 + Yb(w, v[0] + 12);\n              w = 1 + Yb(w, v[0] + 15);\n              if (2147483648 <= D * w) {\n                p = 3;\n                break a;\n              }\n              null != B && (B[0] = C);\n              null != A && (A[0] = D);\n              null != z && (z[0] = w);\n              v[0] += 18;\n              p[0] -= 18;\n              y[0] = 1;\n            }\n            p = 0;\n          }\n        }\n        n = n[0];\n        t = t[0];\n        if (0 != p) return p;\n        v = !!(t & 2);\n        if (!u && n) return 3;\n        null != f && (f[0] = !!(t & 16));\n        null != g && (g[0] = v);\n        null != h && (h[0] = 0);\n        g = l[0];\n        t = m[0];\n        if (n && v && null == k) {\n          p = 0;\n          break;\n        }\n        if (4 > c) {\n          p = 7;\n          break;\n        }\n        if ((u && n) || (!u && !n && !fa(a, b[0], \"ALPH\"))) {\n          c = [c];\n          q.na = [q.na];\n          q.P = [q.P];\n          q.Sa = [q.Sa];\n          a: {\n            C = a;\n            p = b;\n            u = c;\n            var y = q.gb,\n              A = q.na,\n              z = q.P,\n              B = q.Sa;\n            D = 22;\n            x(null != C);\n            x(null != u);\n            w = p[0];\n            var F = u[0];\n            x(null != A);\n            x(null != B);\n            A[0] = null;\n            z[0] = null;\n            for (B[0] = 0; ; ) {\n              p[0] = w;\n              u[0] = F;\n              if (8 > F) {\n                p = 7;\n                break a;\n              }\n              var G = Ha(C, w + 4);\n              if (4294967286 < G) {\n                p = 3;\n                break a;\n              }\n              var H = (8 + G + 1) & -2;\n              D += H;\n              if (0 < y && D > y) {\n                p = 3;\n                break a;\n              }\n              if (!fa(C, w, \"VP8 \") || !fa(C, w, \"VP8L\")) {\n                p = 0;\n                break a;\n              }\n              if (F[0] < H) {\n                p = 7;\n                break a;\n              }\n              fa(C, w, \"ALPH\") || ((A[0] = C), (z[0] = w + 8), (B[0] = G));\n              w += H;\n              F -= H;\n            }\n          }\n          c = c[0];\n          q.na = q.na[0];\n          q.P = q.P[0];\n          q.Sa = q.Sa[0];\n          if (0 != p) break;\n        }\n        c = [c];\n        q.Ja = [q.Ja];\n        q.xa = [q.xa];\n        a: if (\n          ((y = a),\n          (p = b),\n          (u = c),\n          (A = q.gb[0]),\n          (z = q.Ja),\n          (B = q.xa),\n          (C = p[0]),\n          (w = !fa(y, C, \"VP8 \")),\n          (D = !fa(y, C, \"VP8L\")),\n          x(null != y),\n          x(null != u),\n          x(null != z),\n          x(null != B),\n          8 > u[0])\n        )\n          p = 7;\n        else {\n          if (w || D) {\n            y = Ha(y, C + 4);\n            if (12 <= A && y > A - 12) {\n              p = 3;\n              break a;\n            }\n            if (r && y > u[0] - 8) {\n              p = 7;\n              break a;\n            }\n            z[0] = y;\n            p[0] += 8;\n            u[0] -= 8;\n            B[0] = D;\n          } else\n            (B[0] = 5 <= u[0] && 47 == y[C + 0] && !(y[C + 4] >> 5)),\n              (z[0] = u[0]);\n          p = 0;\n        }\n        c = c[0];\n        q.Ja = q.Ja[0];\n        q.xa = q.xa[0];\n        b = b[0];\n        if (0 != p) break;\n        if (4294967286 < q.Ja) return 3;\n        null == h || v || (h[0] = q.xa ? 2 : 1);\n        g = [g];\n        t = [t];\n        if (q.xa) {\n          if (5 > c) {\n            p = 7;\n            break;\n          }\n          h = g;\n          r = t;\n          v = f;\n          null == a || 5 > c\n            ? (a = 0)\n            : 5 <= c && 47 == a[b + 0] && !(a[b + 4] >> 5)\n            ? ((u = [0]),\n              (y = [0]),\n              (A = [0]),\n              (z = new Ra()),\n              cb(z, a, b, c),\n              mc(z, u, y, A)\n                ? (null != h && (h[0] = u[0]),\n                  null != r && (r[0] = y[0]),\n                  null != v && (v[0] = A[0]),\n                  (a = 1))\n                : (a = 0))\n            : (a = 0);\n        } else {\n          if (10 > c) {\n            p = 7;\n            break;\n          }\n          h = t;\n          null == a || 10 > c || !Jc(a, b + 3, c - 3)\n            ? (a = 0)\n            : ((r = a[b + 0] | (a[b + 1] << 8) | (a[b + 2] << 16)),\n              (v = ((a[b + 7] << 8) | a[b + 6]) & 16383),\n              (a = ((a[b + 9] << 8) | a[b + 8]) & 16383),\n              r & 1 ||\n              3 < ((r >> 1) & 7) ||\n              !((r >> 4) & 1) ||\n              r >> 5 >= q.Ja ||\n              !v ||\n              !a\n                ? (a = 0)\n                : (g && (g[0] = v), h && (h[0] = a), (a = 1)));\n        }\n        if (!a) return 3;\n        g = g[0];\n        t = t[0];\n        if (n && (l[0] != g || m[0] != t)) return 3;\n        null != k &&\n          ((k[0] = q),\n          (k.offset = b - k.w),\n          x(4294967286 > b - k.w),\n          x(k.offset == k.ha - c));\n        break;\n      }\n      return 0 == p || (7 == p && n && null == k)\n        ? (null != f && (f[0] |= null != q.na && 0 < q.na.length),\n          null != d && (d[0] = g),\n          null != e && (e[0] = t),\n          0)\n        : p;\n    }\n    function hc(a, b, c) {\n      var d = b.width,\n        e = b.height,\n        f = 0,\n        g = 0,\n        h = d,\n        k = e;\n      b.Da = null != a && 0 < a.Da;\n      if (\n        b.Da &&\n        ((h = a.cd),\n        (k = a.bd),\n        (f = a.v),\n        (g = a.j),\n        11 > c || ((f &= -2), (g &= -2)),\n        0 > f || 0 > g || 0 >= h || 0 >= k || f + h > d || g + k > e)\n      )\n        return 0;\n      b.v = f;\n      b.j = g;\n      b.va = f + h;\n      b.o = g + k;\n      b.U = h;\n      b.T = k;\n      b.da = null != a && 0 < a.da;\n      if (b.da) {\n        c = [a.ib];\n        f = [a.hb];\n        if (!bc(h, k, c, f)) return 0;\n        b.ib = c[0];\n        b.hb = f[0];\n      }\n      b.ob = null != a && a.ob;\n      b.Kb = null == a || !a.Sd;\n      b.da && ((b.ob = b.ib < (3 * d) / 4 && b.hb < (3 * e) / 4), (b.Kb = 0));\n      return 1;\n    }\n    function Bd(a) {\n      if (null == a) return 2;\n      if (11 > a.S) {\n        var b = a.f.RGBA;\n        b.fb += (a.height - 1) * b.A;\n        b.A = -b.A;\n      } else\n        (b = a.f.kb),\n          (a = a.height),\n          (b.O += (a - 1) * b.fa),\n          (b.fa = -b.fa),\n          (b.N += ((a - 1) >> 1) * b.Ab),\n          (b.Ab = -b.Ab),\n          (b.W += ((a - 1) >> 1) * b.Db),\n          (b.Db = -b.Db),\n          null != b.F && ((b.J += (a - 1) * b.lb), (b.lb = -b.lb));\n      return 0;\n    }\n    function Cd(a, b, c, d) {\n      if (null == d || 0 >= a || 0 >= b) return 2;\n      if (null != c) {\n        if (c.Da) {\n          var e = c.cd,\n            f = c.bd,\n            g = c.v & -2,\n            h = c.j & -2;\n          if (0 > g || 0 > h || 0 >= e || 0 >= f || g + e > a || h + f > b)\n            return 2;\n          a = e;\n          b = f;\n        }\n        if (c.da) {\n          e = [c.ib];\n          f = [c.hb];\n          if (!bc(a, b, e, f)) return 2;\n          a = e[0];\n          b = f[0];\n        }\n      }\n      d.width = a;\n      d.height = b;\n      a: {\n        var k = d.width;\n        var l = d.height;\n        a = d.S;\n        if (0 >= k || 0 >= l || !(a >= Ca && 13 > a)) a = 2;\n        else {\n          if (0 >= d.Rd && null == d.sd) {\n            var g = (f = e = b = 0),\n              h = k * Dd[a],\n              m = h * l;\n            11 > a ||\n              ((b = (k + 1) / 2),\n              (f = ((l + 1) / 2) * b),\n              12 == a && ((e = k), (g = e * l)));\n            l = V(m + 2 * f + g);\n            if (null == l) {\n              a = 1;\n              break a;\n            }\n            d.sd = l;\n            11 > a\n              ? ((k = d.f.RGBA),\n                (k.eb = l),\n                (k.fb = 0),\n                (k.A = h),\n                (k.size = m))\n              : ((k = d.f.kb),\n                (k.y = l),\n                (k.O = 0),\n                (k.fa = h),\n                (k.Fd = m),\n                (k.f = l),\n                (k.N = 0 + m),\n                (k.Ab = b),\n                (k.Cd = f),\n                (k.ea = l),\n                (k.W = 0 + m + f),\n                (k.Db = b),\n                (k.Ed = f),\n                12 == a && ((k.F = l), (k.J = 0 + m + 2 * f)),\n                (k.Tc = g),\n                (k.lb = e));\n          }\n          b = 1;\n          e = d.S;\n          f = d.width;\n          g = d.height;\n          if (e >= Ca && 13 > e)\n            if (11 > e)\n              (a = d.f.RGBA),\n                (h = Math.abs(a.A)),\n                (b &= h * (g - 1) + f <= a.size),\n                (b &= h >= f * Dd[e]),\n                (b &= null != a.eb);\n            else {\n              a = d.f.kb;\n              h = (f + 1) / 2;\n              m = (g + 1) / 2;\n              k = Math.abs(a.fa);\n              var l = Math.abs(a.Ab),\n                n = Math.abs(a.Db),\n                r = Math.abs(a.lb),\n                q = r * (g - 1) + f;\n              b &= k * (g - 1) + f <= a.Fd;\n              b &= l * (m - 1) + h <= a.Cd;\n              b &= n * (m - 1) + h <= a.Ed;\n              b = b & (k >= f) & (l >= h) & (n >= h);\n              b &= null != a.y;\n              b &= null != a.f;\n              b &= null != a.ea;\n              12 == e && ((b &= r >= f), (b &= q <= a.Tc), (b &= null != a.F));\n            }\n          else b = 0;\n          a = b ? 0 : 2;\n        }\n      }\n      if (0 != a) return a;\n      null != c && c.fd && (a = Bd(d));\n      return a;\n    }\n    var xb = 64,\n      Hd = [\n        0,\n        1,\n        3,\n        7,\n        15,\n        31,\n        63,\n        127,\n        255,\n        511,\n        1023,\n        2047,\n        4095,\n        8191,\n        16383,\n        32767,\n        65535,\n        131071,\n        262143,\n        524287,\n        1048575,\n        2097151,\n        4194303,\n        8388607,\n        16777215\n      ],\n      Gd = 24,\n      ob = 32,\n      Xb = 8,\n      Id = [\n        0,\n        0,\n        1,\n        1,\n        2,\n        2,\n        2,\n        2,\n        3,\n        3,\n        3,\n        3,\n        3,\n        3,\n        3,\n        3,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7\n      ];\n    X(\"Predictor0\", \"PredictorAdd0\");\n    self.Predictor0 = function() {\n      return 4278190080;\n    };\n    self.Predictor1 = function(a) {\n      return a;\n    };\n    self.Predictor2 = function(a, b, c) {\n      return b[c + 0];\n    };\n    self.Predictor3 = function(a, b, c) {\n      return b[c + 1];\n    };\n    self.Predictor4 = function(a, b, c) {\n      return b[c - 1];\n    };\n    self.Predictor5 = function(a, b, c) {\n      return aa(aa(a, b[c + 1]), b[c + 0]);\n    };\n    self.Predictor6 = function(a, b, c) {\n      return aa(a, b[c - 1]);\n    };\n    self.Predictor7 = function(a, b, c) {\n      return aa(a, b[c + 0]);\n    };\n    self.Predictor8 = function(a, b, c) {\n      return aa(b[c - 1], b[c + 0]);\n    };\n    self.Predictor9 = function(a, b, c) {\n      return aa(b[c + 0], b[c + 1]);\n    };\n    self.Predictor10 = function(a, b, c) {\n      return aa(aa(a, b[c - 1]), aa(b[c + 0], b[c + 1]));\n    };\n    self.Predictor11 = function(a, b, c) {\n      var d = b[c + 0];\n      b = b[c - 1];\n      return 0 >=\n        Ia((d >> 24) & 255, (a >> 24) & 255, (b >> 24) & 255) +\n          Ia((d >> 16) & 255, (a >> 16) & 255, (b >> 16) & 255) +\n          Ia((d >> 8) & 255, (a >> 8) & 255, (b >> 8) & 255) +\n          Ia(d & 255, a & 255, b & 255)\n        ? d\n        : a;\n    };\n    self.Predictor12 = function(a, b, c) {\n      var d = b[c + 0];\n      b = b[c - 1];\n      return (\n        ((sa(((a >> 24) & 255) + ((d >> 24) & 255) - ((b >> 24) & 255)) << 24) |\n          (sa(((a >> 16) & 255) + ((d >> 16) & 255) - ((b >> 16) & 255)) <<\n            16) |\n          (sa(((a >> 8) & 255) + ((d >> 8) & 255) - ((b >> 8) & 255)) << 8) |\n          sa((a & 255) + (d & 255) - (b & 255))) >>>\n        0\n      );\n    };\n    self.Predictor13 = function(a, b, c) {\n      var d = b[c - 1];\n      a = aa(a, b[c + 0]);\n      return (\n        ((eb((a >> 24) & 255, (d >> 24) & 255) << 24) |\n          (eb((a >> 16) & 255, (d >> 16) & 255) << 16) |\n          (eb((a >> 8) & 255, (d >> 8) & 255) << 8) |\n          eb((a >> 0) & 255, (d >> 0) & 255)) >>>\n        0\n      );\n    };\n    var ee = self.PredictorAdd0;\n    self.PredictorAdd1 = cc;\n    X(\"Predictor2\", \"PredictorAdd2\");\n    X(\"Predictor3\", \"PredictorAdd3\");\n    X(\"Predictor4\", \"PredictorAdd4\");\n    X(\"Predictor5\", \"PredictorAdd5\");\n    X(\"Predictor6\", \"PredictorAdd6\");\n    X(\"Predictor7\", \"PredictorAdd7\");\n    X(\"Predictor8\", \"PredictorAdd8\");\n    X(\"Predictor9\", \"PredictorAdd9\");\n    X(\"Predictor10\", \"PredictorAdd10\");\n    X(\"Predictor11\", \"PredictorAdd11\");\n    X(\"Predictor12\", \"PredictorAdd12\");\n    X(\"Predictor13\", \"PredictorAdd13\");\n    var fe = self.PredictorAdd2;\n    ec(\n      \"ColorIndexInverseTransform\",\n      \"MapARGB\",\n      \"32b\",\n      function(a) {\n        return (a >> 8) & 255;\n      },\n      function(a) {\n        return a;\n      }\n    );\n    ec(\n      \"VP8LColorIndexInverseTransformAlpha\",\n      \"MapAlpha\",\n      \"8b\",\n      function(a) {\n        return a;\n      },\n      function(a) {\n        return (a >> 8) & 255;\n      }\n    );\n    var rc = self.ColorIndexInverseTransform,\n      ke = self.MapARGB,\n      he = self.VP8LColorIndexInverseTransformAlpha,\n      le = self.MapAlpha,\n      pc,\n      qc = (self.VP8LPredictorsAdd = []);\n    qc.length = 16;\n    (self.VP8LPredictors = []).length = 16;\n    (self.VP8LPredictorsAdd_C = []).length = 16;\n    (self.VP8LPredictors_C = []).length = 16;\n    var Fb,\n      sc,\n      Gb,\n      Hb,\n      xc,\n      uc,\n      bd = V(511),\n      cd = V(2041),\n      dd = V(225),\n      ed = V(767),\n      ad = 0,\n      Qb = cd,\n      mb = dd,\n      R = ed,\n      U = bd,\n      Ca = 0,\n      Ua = 1,\n      tc = 2,\n      Va = 3,\n      ya = 4,\n      Db = 5,\n      wc = 6,\n      zb = 7,\n      Ab = 8,\n      Ja = 9,\n      Bb = 10,\n      pe = [2, 3, 7],\n      oe = [3, 3, 11],\n      Dc = [280, 256, 256, 256, 40],\n      qe = [0, 1, 1, 1, 0],\n      ne = [17, 18, 0, 1, 2, 3, 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      de = [\n        24,\n        7,\n        23,\n        25,\n        40,\n        6,\n        39,\n        41,\n        22,\n        26,\n        38,\n        42,\n        56,\n        5,\n        55,\n        57,\n        21,\n        27,\n        54,\n        58,\n        37,\n        43,\n        72,\n        4,\n        71,\n        73,\n        20,\n        28,\n        53,\n        59,\n        70,\n        74,\n        36,\n        44,\n        88,\n        69,\n        75,\n        52,\n        60,\n        3,\n        87,\n        89,\n        19,\n        29,\n        86,\n        90,\n        35,\n        45,\n        68,\n        76,\n        85,\n        91,\n        51,\n        61,\n        104,\n        2,\n        103,\n        105,\n        18,\n        30,\n        102,\n        106,\n        34,\n        46,\n        84,\n        92,\n        67,\n        77,\n        101,\n        107,\n        50,\n        62,\n        120,\n        1,\n        119,\n        121,\n        83,\n        93,\n        17,\n        31,\n        100,\n        108,\n        66,\n        78,\n        118,\n        122,\n        33,\n        47,\n        117,\n        123,\n        49,\n        63,\n        99,\n        109,\n        82,\n        94,\n        0,\n        116,\n        124,\n        65,\n        79,\n        16,\n        32,\n        98,\n        110,\n        48,\n        115,\n        125,\n        81,\n        95,\n        64,\n        114,\n        126,\n        97,\n        111,\n        80,\n        113,\n        127,\n        96,\n        112\n      ],\n      me = [\n        2954,\n        2956,\n        2958,\n        2962,\n        2970,\n        2986,\n        3018,\n        3082,\n        3212,\n        3468,\n        3980,\n        5004\n      ],\n      ie = 8,\n      Lb = [\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        17,\n        18,\n        19,\n        20,\n        20,\n        21,\n        21,\n        22,\n        22,\n        23,\n        23,\n        24,\n        25,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32,\n        33,\n        34,\n        35,\n        36,\n        37,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        43,\n        44,\n        45,\n        46,\n        46,\n        47,\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        59,\n        60,\n        61,\n        62,\n        63,\n        64,\n        65,\n        66,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        75,\n        76,\n        76,\n        77,\n        78,\n        79,\n        80,\n        81,\n        82,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        91,\n        93,\n        95,\n        96,\n        98,\n        100,\n        101,\n        102,\n        104,\n        106,\n        108,\n        110,\n        112,\n        114,\n        116,\n        118,\n        122,\n        124,\n        126,\n        128,\n        130,\n        132,\n        134,\n        136,\n        138,\n        140,\n        143,\n        145,\n        148,\n        151,\n        154,\n        157\n      ],\n      Mb = [\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28,\n        29,\n        30,\n        31,\n        32,\n        33,\n        34,\n        35,\n        36,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        43,\n        44,\n        45,\n        46,\n        47,\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        60,\n        62,\n        64,\n        66,\n        68,\n        70,\n        72,\n        74,\n        76,\n        78,\n        80,\n        82,\n        84,\n        86,\n        88,\n        90,\n        92,\n        94,\n        96,\n        98,\n        100,\n        102,\n        104,\n        106,\n        108,\n        110,\n        112,\n        114,\n        116,\n        119,\n        122,\n        125,\n        128,\n        131,\n        134,\n        137,\n        140,\n        143,\n        146,\n        149,\n        152,\n        155,\n        158,\n        161,\n        164,\n        167,\n        170,\n        173,\n        177,\n        181,\n        185,\n        189,\n        193,\n        197,\n        201,\n        205,\n        209,\n        213,\n        217,\n        221,\n        225,\n        229,\n        234,\n        239,\n        245,\n        249,\n        254,\n        259,\n        264,\n        269,\n        274,\n        279,\n        284\n      ],\n      oa = null,\n      He = [\n        [173, 148, 140, 0],\n        [176, 155, 140, 135, 0],\n        [180, 157, 141, 134, 130, 0],\n        [254, 254, 243, 230, 196, 177, 153, 140, 133, 130, 129, 0]\n      ],\n      Ie = [0, 1, 4, 8, 5, 2, 3, 6, 9, 12, 13, 10, 7, 11, 14, 15],\n      Mc = [-0, 1, -1, 2, -2, 3, 4, 6, -3, 5, -4, -5, -6, 7, -7, 8, -8, -9],\n      Fe = [\n        [\n          [\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128],\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128],\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]\n          ],\n          [\n            [253, 136, 254, 255, 228, 219, 128, 128, 128, 128, 128],\n            [189, 129, 242, 255, 227, 213, 255, 219, 128, 128, 128],\n            [106, 126, 227, 252, 214, 209, 255, 255, 128, 128, 128]\n          ],\n          [\n            [1, 98, 248, 255, 236, 226, 255, 255, 128, 128, 128],\n            [181, 133, 238, 254, 221, 234, 255, 154, 128, 128, 128],\n            [78, 134, 202, 247, 198, 180, 255, 219, 128, 128, 128]\n          ],\n          [\n            [1, 185, 249, 255, 243, 255, 128, 128, 128, 128, 128],\n            [184, 150, 247, 255, 236, 224, 128, 128, 128, 128, 128],\n            [77, 110, 216, 255, 236, 230, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 101, 251, 255, 241, 255, 128, 128, 128, 128, 128],\n            [170, 139, 241, 252, 236, 209, 255, 255, 128, 128, 128],\n            [37, 116, 196, 243, 228, 255, 255, 255, 128, 128, 128]\n          ],\n          [\n            [1, 204, 254, 255, 245, 255, 128, 128, 128, 128, 128],\n            [207, 160, 250, 255, 238, 128, 128, 128, 128, 128, 128],\n            [102, 103, 231, 255, 211, 171, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 152, 252, 255, 240, 255, 128, 128, 128, 128, 128],\n            [177, 135, 243, 255, 234, 225, 128, 128, 128, 128, 128],\n            [80, 129, 211, 255, 194, 224, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [246, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [255, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]\n          ]\n        ],\n        [\n          [\n            [198, 35, 237, 223, 193, 187, 162, 160, 145, 155, 62],\n            [131, 45, 198, 221, 172, 176, 220, 157, 252, 221, 1],\n            [68, 47, 146, 208, 149, 167, 221, 162, 255, 223, 128]\n          ],\n          [\n            [1, 149, 241, 255, 221, 224, 255, 255, 128, 128, 128],\n            [184, 141, 234, 253, 222, 220, 255, 199, 128, 128, 128],\n            [81, 99, 181, 242, 176, 190, 249, 202, 255, 255, 128]\n          ],\n          [\n            [1, 129, 232, 253, 214, 197, 242, 196, 255, 255, 128],\n            [99, 121, 210, 250, 201, 198, 255, 202, 128, 128, 128],\n            [23, 91, 163, 242, 170, 187, 247, 210, 255, 255, 128]\n          ],\n          [\n            [1, 200, 246, 255, 234, 255, 128, 128, 128, 128, 128],\n            [109, 178, 241, 255, 231, 245, 255, 255, 128, 128, 128],\n            [44, 130, 201, 253, 205, 192, 255, 255, 128, 128, 128]\n          ],\n          [\n            [1, 132, 239, 251, 219, 209, 255, 165, 128, 128, 128],\n            [94, 136, 225, 251, 218, 190, 255, 255, 128, 128, 128],\n            [22, 100, 174, 245, 186, 161, 255, 199, 128, 128, 128]\n          ],\n          [\n            [1, 182, 249, 255, 232, 235, 128, 128, 128, 128, 128],\n            [124, 143, 241, 255, 227, 234, 128, 128, 128, 128, 128],\n            [35, 77, 181, 251, 193, 211, 255, 205, 128, 128, 128]\n          ],\n          [\n            [1, 157, 247, 255, 236, 231, 255, 255, 128, 128, 128],\n            [121, 141, 235, 255, 225, 227, 255, 255, 128, 128, 128],\n            [45, 99, 188, 251, 195, 217, 255, 224, 128, 128, 128]\n          ],\n          [\n            [1, 1, 251, 255, 213, 255, 128, 128, 128, 128, 128],\n            [203, 1, 248, 255, 255, 128, 128, 128, 128, 128, 128],\n            [137, 1, 177, 255, 224, 255, 128, 128, 128, 128, 128]\n          ]\n        ],\n        [\n          [\n            [253, 9, 248, 251, 207, 208, 255, 192, 128, 128, 128],\n            [175, 13, 224, 243, 193, 185, 249, 198, 255, 255, 128],\n            [73, 17, 171, 221, 161, 179, 236, 167, 255, 234, 128]\n          ],\n          [\n            [1, 95, 247, 253, 212, 183, 255, 255, 128, 128, 128],\n            [239, 90, 244, 250, 211, 209, 255, 255, 128, 128, 128],\n            [155, 77, 195, 248, 188, 195, 255, 255, 128, 128, 128]\n          ],\n          [\n            [1, 24, 239, 251, 218, 219, 255, 205, 128, 128, 128],\n            [201, 51, 219, 255, 196, 186, 128, 128, 128, 128, 128],\n            [69, 46, 190, 239, 201, 218, 255, 228, 128, 128, 128]\n          ],\n          [\n            [1, 191, 251, 255, 255, 128, 128, 128, 128, 128, 128],\n            [223, 165, 249, 255, 213, 255, 128, 128, 128, 128, 128],\n            [141, 124, 248, 255, 255, 128, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 16, 248, 255, 255, 128, 128, 128, 128, 128, 128],\n            [190, 36, 230, 255, 236, 255, 128, 128, 128, 128, 128],\n            [149, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 226, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [247, 192, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [240, 128, 255, 128, 128, 128, 128, 128, 128, 128, 128]\n          ],\n          [\n            [1, 134, 252, 255, 255, 128, 128, 128, 128, 128, 128],\n            [213, 62, 250, 255, 255, 128, 128, 128, 128, 128, 128],\n            [55, 93, 255, 128, 128, 128, 128, 128, 128, 128, 128]\n          ],\n          [\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128],\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128],\n            [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]\n          ]\n        ],\n        [\n          [\n            [202, 24, 213, 235, 186, 191, 220, 160, 240, 175, 255],\n            [126, 38, 182, 232, 169, 184, 228, 174, 255, 187, 128],\n            [61, 46, 138, 219, 151, 178, 240, 170, 255, 216, 128]\n          ],\n          [\n            [1, 112, 230, 250, 199, 191, 247, 159, 255, 255, 128],\n            [166, 109, 228, 252, 211, 215, 255, 174, 128, 128, 128],\n            [39, 77, 162, 232, 172, 180, 245, 178, 255, 255, 128]\n          ],\n          [\n            [1, 52, 220, 246, 198, 199, 249, 220, 255, 255, 128],\n            [124, 74, 191, 243, 183, 193, 250, 221, 255, 255, 128],\n            [24, 71, 130, 219, 154, 170, 243, 182, 255, 255, 128]\n          ],\n          [\n            [1, 182, 225, 249, 219, 240, 255, 224, 128, 128, 128],\n            [149, 150, 226, 252, 216, 205, 255, 171, 128, 128, 128],\n            [28, 108, 170, 242, 183, 194, 254, 223, 255, 255, 128]\n          ],\n          [\n            [1, 81, 230, 252, 204, 203, 255, 192, 128, 128, 128],\n            [123, 102, 209, 247, 188, 196, 255, 233, 128, 128, 128],\n            [20, 95, 153, 243, 164, 173, 255, 203, 128, 128, 128]\n          ],\n          [\n            [1, 222, 248, 255, 216, 213, 128, 128, 128, 128, 128],\n            [168, 175, 246, 252, 235, 205, 255, 255, 128, 128, 128],\n            [47, 116, 215, 255, 211, 212, 255, 255, 128, 128, 128]\n          ],\n          [\n            [1, 121, 236, 253, 212, 214, 255, 255, 128, 128, 128],\n            [141, 84, 213, 252, 201, 202, 255, 219, 128, 128, 128],\n            [42, 80, 160, 240, 162, 185, 255, 205, 128, 128, 128]\n          ],\n          [\n            [1, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [244, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128],\n            [238, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128]\n          ]\n        ]\n      ],\n      Ke = [\n        [\n          [231, 120, 48, 89, 115, 113, 120, 152, 112],\n          [152, 179, 64, 126, 170, 118, 46, 70, 95],\n          [175, 69, 143, 80, 85, 82, 72, 155, 103],\n          [56, 58, 10, 171, 218, 189, 17, 13, 152],\n          [114, 26, 17, 163, 44, 195, 21, 10, 173],\n          [121, 24, 80, 195, 26, 62, 44, 64, 85],\n          [144, 71, 10, 38, 171, 213, 144, 34, 26],\n          [170, 46, 55, 19, 136, 160, 33, 206, 71],\n          [63, 20, 8, 114, 114, 208, 12, 9, 226],\n          [81, 40, 11, 96, 182, 84, 29, 16, 36]\n        ],\n        [\n          [134, 183, 89, 137, 98, 101, 106, 165, 148],\n          [72, 187, 100, 130, 157, 111, 32, 75, 80],\n          [66, 102, 167, 99, 74, 62, 40, 234, 128],\n          [41, 53, 9, 178, 241, 141, 26, 8, 107],\n          [74, 43, 26, 146, 73, 166, 49, 23, 157],\n          [65, 38, 105, 160, 51, 52, 31, 115, 128],\n          [104, 79, 12, 27, 217, 255, 87, 17, 7],\n          [87, 68, 71, 44, 114, 51, 15, 186, 23],\n          [47, 41, 14, 110, 182, 183, 21, 17, 194],\n          [66, 45, 25, 102, 197, 189, 23, 18, 22]\n        ],\n        [\n          [88, 88, 147, 150, 42, 46, 45, 196, 205],\n          [43, 97, 183, 117, 85, 38, 35, 179, 61],\n          [39, 53, 200, 87, 26, 21, 43, 232, 171],\n          [56, 34, 51, 104, 114, 102, 29, 93, 77],\n          [39, 28, 85, 171, 58, 165, 90, 98, 64],\n          [34, 22, 116, 206, 23, 34, 43, 166, 73],\n          [107, 54, 32, 26, 51, 1, 81, 43, 31],\n          [68, 25, 106, 22, 64, 171, 36, 225, 114],\n          [34, 19, 21, 102, 132, 188, 16, 76, 124],\n          [62, 18, 78, 95, 85, 57, 50, 48, 51]\n        ],\n        [\n          [193, 101, 35, 159, 215, 111, 89, 46, 111],\n          [60, 148, 31, 172, 219, 228, 21, 18, 111],\n          [112, 113, 77, 85, 179, 255, 38, 120, 114],\n          [40, 42, 1, 196, 245, 209, 10, 25, 109],\n          [88, 43, 29, 140, 166, 213, 37, 43, 154],\n          [61, 63, 30, 155, 67, 45, 68, 1, 209],\n          [100, 80, 8, 43, 154, 1, 51, 26, 71],\n          [142, 78, 78, 16, 255, 128, 34, 197, 171],\n          [41, 40, 5, 102, 211, 183, 4, 1, 221],\n          [51, 50, 17, 168, 209, 192, 23, 25, 82]\n        ],\n        [\n          [138, 31, 36, 171, 27, 166, 38, 44, 229],\n          [67, 87, 58, 169, 82, 115, 26, 59, 179],\n          [63, 59, 90, 180, 59, 166, 93, 73, 154],\n          [40, 40, 21, 116, 143, 209, 34, 39, 175],\n          [47, 15, 16, 183, 34, 223, 49, 45, 183],\n          [46, 17, 33, 183, 6, 98, 15, 32, 183],\n          [57, 46, 22, 24, 128, 1, 54, 17, 37],\n          [65, 32, 73, 115, 28, 128, 23, 128, 205],\n          [40, 3, 9, 115, 51, 192, 18, 6, 223],\n          [87, 37, 9, 115, 59, 77, 64, 21, 47]\n        ],\n        [\n          [104, 55, 44, 218, 9, 54, 53, 130, 226],\n          [64, 90, 70, 205, 40, 41, 23, 26, 57],\n          [54, 57, 112, 184, 5, 41, 38, 166, 213],\n          [30, 34, 26, 133, 152, 116, 10, 32, 134],\n          [39, 19, 53, 221, 26, 114, 32, 73, 255],\n          [31, 9, 65, 234, 2, 15, 1, 118, 73],\n          [75, 32, 12, 51, 192, 255, 160, 43, 51],\n          [88, 31, 35, 67, 102, 85, 55, 186, 85],\n          [56, 21, 23, 111, 59, 205, 45, 37, 192],\n          [55, 38, 70, 124, 73, 102, 1, 34, 98]\n        ],\n        [\n          [125, 98, 42, 88, 104, 85, 117, 175, 82],\n          [95, 84, 53, 89, 128, 100, 113, 101, 45],\n          [75, 79, 123, 47, 51, 128, 81, 171, 1],\n          [57, 17, 5, 71, 102, 57, 53, 41, 49],\n          [38, 33, 13, 121, 57, 73, 26, 1, 85],\n          [41, 10, 67, 138, 77, 110, 90, 47, 114],\n          [115, 21, 2, 10, 102, 255, 166, 23, 6],\n          [101, 29, 16, 10, 85, 128, 101, 196, 26],\n          [57, 18, 10, 102, 102, 213, 34, 20, 43],\n          [117, 20, 15, 36, 163, 128, 68, 1, 26]\n        ],\n        [\n          [102, 61, 71, 37, 34, 53, 31, 243, 192],\n          [69, 60, 71, 38, 73, 119, 28, 222, 37],\n          [68, 45, 128, 34, 1, 47, 11, 245, 171],\n          [62, 17, 19, 70, 146, 85, 55, 62, 70],\n          [37, 43, 37, 154, 100, 163, 85, 160, 1],\n          [63, 9, 92, 136, 28, 64, 32, 201, 85],\n          [75, 15, 9, 9, 64, 255, 184, 119, 16],\n          [86, 6, 28, 5, 64, 255, 25, 248, 1],\n          [56, 8, 17, 132, 137, 255, 55, 116, 128],\n          [58, 15, 20, 82, 135, 57, 26, 121, 40]\n        ],\n        [\n          [164, 50, 31, 137, 154, 133, 25, 35, 218],\n          [51, 103, 44, 131, 131, 123, 31, 6, 158],\n          [86, 40, 64, 135, 148, 224, 45, 183, 128],\n          [22, 26, 17, 131, 240, 154, 14, 1, 209],\n          [45, 16, 21, 91, 64, 222, 7, 1, 197],\n          [56, 21, 39, 155, 60, 138, 23, 102, 213],\n          [83, 12, 13, 54, 192, 255, 68, 47, 28],\n          [85, 26, 85, 85, 128, 128, 32, 146, 171],\n          [18, 11, 7, 63, 144, 171, 4, 4, 246],\n          [35, 27, 10, 146, 174, 171, 12, 26, 128]\n        ],\n        [\n          [190, 80, 35, 99, 180, 80, 126, 54, 45],\n          [85, 126, 47, 87, 176, 51, 41, 20, 32],\n          [101, 75, 128, 139, 118, 146, 116, 128, 85],\n          [56, 41, 15, 176, 236, 85, 37, 9, 62],\n          [71, 30, 17, 119, 118, 255, 17, 18, 138],\n          [101, 38, 60, 138, 55, 70, 43, 26, 142],\n          [146, 36, 19, 30, 171, 255, 97, 27, 20],\n          [138, 45, 61, 62, 219, 1, 81, 188, 64],\n          [32, 41, 20, 117, 151, 142, 20, 21, 163],\n          [112, 19, 12, 61, 195, 128, 48, 4, 24]\n        ]\n      ],\n      Ee = [\n        [\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [176, 246, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [223, 241, 252, 255, 255, 255, 255, 255, 255, 255, 255],\n            [249, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 244, 252, 255, 255, 255, 255, 255, 255, 255, 255],\n            [234, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 246, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [239, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 248, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [251, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [251, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 253, 255, 254, 255, 255, 255, 255, 255, 255],\n            [250, 255, 254, 255, 254, 255, 255, 255, 255, 255, 255],\n            [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ]\n        ],\n        [\n          [\n            [217, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [225, 252, 241, 253, 255, 255, 254, 255, 255, 255, 255],\n            [234, 250, 241, 250, 253, 255, 253, 254, 255, 255, 255]\n          ],\n          [\n            [255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [223, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [238, 253, 254, 254, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 248, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [249, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [247, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ]\n        ],\n        [\n          [\n            [186, 251, 250, 255, 255, 255, 255, 255, 255, 255, 255],\n            [234, 251, 244, 254, 255, 255, 255, 255, 255, 255, 255],\n            [251, 251, 243, 253, 254, 255, 254, 255, 255, 255, 255]\n          ],\n          [\n            [255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [236, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [251, 253, 253, 254, 254, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ]\n        ],\n        [\n          [\n            [248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [250, 254, 252, 254, 255, 255, 255, 255, 255, 255, 255],\n            [248, 254, 249, 253, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [246, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [252, 254, 251, 254, 254, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 254, 252, 255, 255, 255, 255, 255, 255, 255, 255],\n            [248, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [253, 255, 254, 254, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [245, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [253, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [252, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [249, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 253, 255, 255, 255, 255, 255, 255, 255, 255],\n            [250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ],\n          [\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n            [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n          ]\n        ]\n      ],\n      Ge = [0, 1, 2, 3, 6, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0],\n      Nc,\n      Y = [],\n      W = [],\n      ka = [],\n      Za,\n      fd,\n      Nb,\n      pa,\n      Ob,\n      Xc,\n      Tc,\n      Yc,\n      Uc,\n      Zc,\n      Vc,\n      $c,\n      Wc,\n      Rc,\n      Pc,\n      Sc,\n      Qc,\n      re = 1,\n      Cc = 2,\n      ia = [],\n      za,\n      vc,\n      fc,\n      Fc,\n      P = [];\n    va(\"UpsampleRgbLinePair\", Ga, 3);\n    va(\"UpsampleBgrLinePair\", Tb, 3);\n    va(\"UpsampleRgbaLinePair\", wd, 4);\n    va(\"UpsampleBgraLinePair\", vd, 4);\n    va(\"UpsampleArgbLinePair\", ud, 4);\n    va(\"UpsampleRgba4444LinePair\", td, 2);\n    va(\"UpsampleRgb565LinePair\", sd, 2);\n    var Mf = self.UpsampleRgbLinePair,\n      Nf = self.UpsampleBgrLinePair,\n      nd = self.UpsampleRgbaLinePair,\n      od = self.UpsampleBgraLinePair,\n      pd = self.UpsampleArgbLinePair,\n      qd = self.UpsampleRgba4444LinePair,\n      Of = self.UpsampleRgb565LinePair,\n      Wa = 16,\n      Ba = 1 << (Wa - 1),\n      ta = -227,\n      Eb = 482,\n      rd = 6,\n      Pf = (256 << rd) - 1,\n      jc = 0,\n      Yd = V(256),\n      ae = V(256),\n      $d = V(256),\n      Zd = V(256),\n      be = V(Eb - ta),\n      ce = V(Eb - ta);\n    la(\"YuvToRgbRow\", Ga, 3);\n    la(\"YuvToBgrRow\", Tb, 3);\n    la(\"YuvToRgbaRow\", wd, 4);\n    la(\"YuvToBgraRow\", vd, 4);\n    la(\"YuvToArgbRow\", ud, 4);\n    la(\"YuvToRgba4444Row\", td, 2);\n    la(\"YuvToRgb565Row\", sd, 2);\n    var zd = [\n        0,\n        4,\n        8,\n        12,\n        128,\n        132,\n        136,\n        140,\n        256,\n        260,\n        264,\n        268,\n        384,\n        388,\n        392,\n        396\n      ],\n      Ya = [0, 2, 8],\n      Qf = [8, 7, 6, 4, 4, 2, 2, 2, 1, 1, 1, 1],\n      Ne = 1;\n    this.WebPDecodeRGBA = function(a, b, c, d, e) {\n      var f = Ua;\n      var g = new Cf(),\n        h = new Cb();\n      g.ba = h;\n      h.S = f;\n      h.width = [h.width];\n      h.height = [h.height];\n      var k = h.width;\n      var l = h.height,\n        m = new Td();\n      if (null == m || null == a) var n = 2;\n      else\n        x(null != m),\n          (n = Ad(a, b, c, m.width, m.height, m.Pd, m.Qd, m.format, null));\n      0 != n\n        ? (k = 0)\n        : (null != k && (k[0] = m.width[0]),\n          null != l && (l[0] = m.height[0]),\n          (k = 1));\n      if (k) {\n        h.width = h.width[0];\n        h.height = h.height[0];\n        null != d && (d[0] = h.width);\n        null != e && (e[0] = h.height);\n        b: {\n          d = new Oa();\n          e = new md();\n          e.data = a;\n          e.w = b;\n          e.ha = c;\n          e.kd = 1;\n          b = [0];\n          x(null != e);\n          a = Ad(e.data, e.w, e.ha, null, null, null, b, null, e);\n          (0 == a || 7 == a) && b[0] && (a = 4);\n          b = a;\n          if (0 == b) {\n            x(null != g);\n            d.data = e.data;\n            d.w = e.w + e.offset;\n            d.ha = e.ha - e.offset;\n            d.put = kc;\n            d.ac = gc;\n            d.bc = lc;\n            d.ma = g;\n            if (e.xa) {\n              a = Bc();\n              if (null == a) {\n                g = 1;\n                break b;\n              }\n              if (te(a, d)) {\n                b = Cd(d.width, d.height, g.Oa, g.ba);\n                if ((d = 0 == b)) {\n                  c: {\n                    d = a;\n                    d: for (;;) {\n                      if (null == d) {\n                        d = 0;\n                        break c;\n                      }\n                      x(null != d.s.yc);\n                      x(null != d.s.Ya);\n                      x(0 < d.s.Wb);\n                      c = d.l;\n                      x(null != c);\n                      e = c.ma;\n                      x(null != e);\n                      if (0 != d.xb) {\n                        d.ca = e.ba;\n                        d.tb = e.tb;\n                        x(null != d.ca);\n                        if (!hc(e.Oa, c, Va)) {\n                          d.a = 2;\n                          break d;\n                        }\n                        if (!Ec(d, c.width)) break d;\n                        if (c.da) break d;\n                        (c.da || hb(d.ca.S)) && Aa();\n                        11 > d.ca.S ||\n                          (alert(\"todo:WebPInitConvertARGBToYUV\"),\n                          null != d.ca.f.kb.F && Aa());\n                        if (\n                          d.Pb &&\n                          0 < d.s.ua &&\n                          null == d.s.vb.X &&\n                          !Zb(d.s.vb, d.s.Wa.Xa)\n                        ) {\n                          d.a = 1;\n                          break d;\n                        }\n                        d.xb = 0;\n                      }\n                      if (!Jb(d, d.V, d.Ba, d.c, d.i, c.o, ge)) break d;\n                      e.Dc = d.Ma;\n                      d = 1;\n                      break c;\n                    }\n                    x(0 != d.a);\n                    d = 0;\n                  }\n                  d = !d;\n                }\n                d && (b = a.a);\n              } else b = a.a;\n            } else {\n              a = new Ce();\n              if (null == a) {\n                g = 1;\n                break b;\n              }\n              a.Fa = e.na;\n              a.P = e.P;\n              a.qc = e.Sa;\n              if (Kc(a, d)) {\n                if (((b = Cd(d.width, d.height, g.Oa, g.ba)), 0 == b)) {\n                  a.Aa = 0;\n                  c = g.Oa;\n                  e = a;\n                  x(null != e);\n                  if (null != c) {\n                    k = c.Md;\n                    k = 0 > k ? 0 : 100 < k ? 255 : (255 * k) / 100;\n                    if (0 < k) {\n                      for (l = m = 0; 4 > l; ++l)\n                        (n = e.pb[l]),\n                          12 > n.lc &&\n                            (n.ia = (k * Qf[0 > n.lc ? 0 : n.lc]) >> 3),\n                          (m |= n.ia);\n                      m && (alert(\"todo:VP8InitRandom\"), (e.ia = 1));\n                    }\n                    e.Ga = c.Id;\n                    100 < e.Ga ? (e.Ga = 100) : 0 > e.Ga && (e.Ga = 0);\n                  }\n                  Me(a, d) || (b = a.a);\n                }\n              } else b = a.a;\n            }\n            0 == b && null != g.Oa && g.Oa.fd && (b = Bd(g.ba));\n          }\n          g = b;\n        }\n        f = 0 != g ? null : 11 > f ? h.f.RGBA.eb : h.f.kb.y;\n      } else f = null;\n      return f;\n    };\n    var Dd = [3, 4, 3, 4, 4, 2, 2, 4, 4, 4, 2, 1, 1];\n  };\n  new _WebPDecoder();\n\n  /** @license\n   * Copyright (c) 2017 Dominik Homberger\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nhttps://webpjs.appspot.com\nWebPRiffParser dominikhlbg@gmail.com\n*/\n\n  function memcmp(data, data_off, str, size) {\n    for (var i = 0; i < size; i++)\n      if (data[data_off + i] != str.charCodeAt(i)) return true;\n    return false;\n  }\n\n  function GetTag(data, data_off) {\n    var str = \"\";\n    for (var i = 0; i < 4; i++) str += String.fromCharCode(data[data_off++]);\n    return str;\n  }\n\n  function GetLE16(data, data_off) {\n    return (data[data_off + 0] << 0) | (data[data_off + 1] << 8);\n  }\n\n  function GetLE24(data, data_off) {\n    return (\n      ((data[data_off + 0] << 0) |\n        (data[data_off + 1] << 8) |\n        (data[data_off + 2] << 16)) >>>\n      0\n    );\n  }\n\n  function GetLE32(data, data_off) {\n    return (\n      ((data[data_off + 0] << 0) |\n        (data[data_off + 1] << 8) |\n        (data[data_off + 2] << 16) |\n        (data[data_off + 3] << 24)) >>>\n      0\n    );\n  }\n\n  function WebPRiffParser(src, src_off) {\n    var imagearray = {};\n    var i = 0;\n    var alpha_chunk = false;\n    var alpha_size = 0;\n    var alpha_offset = 0;\n    imagearray[\"frames\"] = [];\n    if (memcmp(src, src_off, \"RIFF\", 4)) return;\n    src_off += 4;\n    var riff_size = GetLE32(src, src_off) + 8;\n    src_off += 8;\n\n    while (src_off < src.length) {\n      var fourcc = GetTag(src, src_off);\n      src_off += 4;\n\n      var payload_size = GetLE32(src, src_off);\n      src_off += 4;\n      var payload_size_padded = payload_size + (payload_size & 1);\n\n      switch (fourcc) {\n        case \"VP8 \":\n        case \"VP8L\":\n          if (typeof imagearray[\"frames\"][i] === \"undefined\")\n            imagearray[\"frames\"][i] = {};\n          var obj = imagearray[\"frames\"][i];\n          var height = [0];\n          var width = [0];\n          obj[\"src_off\"] = alpha_chunk ? alpha_offset : src_off - 8;\n          obj[\"src_size\"] = alpha_size + payload_size + 8;\n          //var rgba = webpdecoder.WebPDecodeRGBA(src,(alpha_chunk?alpha_offset:src_off-8),alpha_size+payload_size+8,width,height);\n          //imagearray[i]={'rgba':rgba,'width':width[0],'height':height[0]};\n          i++;\n          if (alpha_chunk) {\n            alpha_chunk = false;\n            alpha_size = 0;\n            alpha_offset = 0;\n          }\n          break;\n        case \"VP8X\":\n          var obj = (imagearray[\"header\"] = {});\n          var feature_flags = (obj[\"feature_flags\"] = src[src_off]);\n          var src_off_ = src_off + 4;\n          var canvas_width = (obj[\"canvas_width\"] = 1 + GetLE24(src, src_off_));\n          src_off_ += 3;\n          var canvas_height = (obj[\"canvas_height\"] =\n            1 + GetLE24(src, src_off_));\n          src_off_ += 3;\n          break;\n        case \"ALPH\":\n          alpha_chunk = true;\n          alpha_size = payload_size_padded + 8;\n          alpha_offset = src_off - 8;\n          break;\n\n        case \"ANIM\":\n          var obj = imagearray[\"header\"];\n          var bgcolor = (obj[\"bgcolor\"] = GetLE32(src, src_off));\n          src_off_ = src_off + 4;\n\n          var loop_count = (obj[\"loop_count\"] = GetLE16(src, src_off_));\n          src_off_ += 2;\n          break;\n        case \"ANMF\":\n          var offset_x = 0,\n            offset_y = 0,\n            width = 0,\n            height = 0,\n            duration = 0,\n            blend = 0,\n            dispose = 0,\n            temp = 0;\n          var obj = (imagearray[\"frames\"][i] = {});\n          obj[\"offset_x\"] = offset_x = 2 * GetLE24(src, src_off);\n          src_off += 3;\n          obj[\"offset_y\"] = offset_y = 2 * GetLE24(src, src_off);\n          src_off += 3;\n          obj[\"width\"] = width = 1 + GetLE24(src, src_off);\n          src_off += 3;\n          obj[\"height\"] = height = 1 + GetLE24(src, src_off);\n          src_off += 3;\n          obj[\"duration\"] = duration = GetLE24(src, src_off);\n          src_off += 3;\n          temp = src[src_off++];\n          obj[\"dispose\"] = dispose = temp & 1;\n          obj[\"blend\"] = blend = (temp >> 1) & 1;\n          break;\n        default:\n      }\n      if (fourcc != \"ANMF\") src_off += payload_size_padded;\n    }\n    return imagearray;\n  }\n\n  var height = [0];\n  var width = [0];\n  var pixels = [];\n  var webpdecoder = new _WebPDecoder();\n\n  var response = imageData;\n  var imagearray = WebPRiffParser(response, 0);\n  imagearray[\"response\"] = response;\n  imagearray[\"rgbaoutput\"] = true;\n  imagearray[\"dataurl\"] = false;\n\n  var header = imagearray[\"header\"] ? imagearray[\"header\"] : null;\n  var frames = imagearray[\"frames\"] ? imagearray[\"frames\"] : null;\n\n  if (header) {\n    header[\"loop_counter\"] = header[\"loop_count\"];\n    height = [header[\"canvas_height\"]];\n    width = [header[\"canvas_width\"]];\n\n    var blend = false;\n    for (var f = 0; f < frames.length; f++)\n      if (frames[f][\"blend\"] == 0) {\n        blend = true;\n        break;\n      }\n  }\n\n  var frame = frames[0];\n  var rgba = webpdecoder.WebPDecodeRGBA(\n    response,\n    frame[\"src_off\"],\n    frame[\"src_size\"],\n    width,\n    height\n  );\n  frame[\"rgba\"] = rgba;\n  frame[\"imgwidth\"] = width[0];\n  frame[\"imgheight\"] = height[0];\n\n  for (var i = 0; i < width[0] * height[0] * 4; i++) {\n    pixels[i] = rgba[i];\n  }\n\n  this.width = width;\n  this.height = height;\n  this.data = pixels;\n  return this;\n}\n\nWebPDecoder.prototype.getData = function() {\n  return this.data;\n};\n\nexport { WebPDecoder };\n","/**\n * @license\n *\n * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { zlibSync } from \"../libs/fflate.js\";\nimport { PNG } from \"../libs/png.js\";\n\n/**\n * jsPDF PNG PlugIn\n * @name png_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /*\n   * @see http://www.w3.org/TR/PNG-Chunks.html\n   *\n   Color    Allowed      Interpretation\n   Type     Bit Depths\n\n     0       1,2,4,8,16  Each pixel is a grayscale sample.\n\n     2       8,16        Each pixel is an R,G,B triple.\n\n     3       1,2,4,8     Each pixel is a palette index;\n                         a PLTE chunk must appear.\n\n     4       8,16        Each pixel is a grayscale sample,\n                         followed by an alpha sample.\n\n     6       8,16        Each pixel is an R,G,B triple,\n                         followed by an alpha sample.\n  */\n\n  /*\n   * PNG filter method types\n   *\n   * @see http://www.w3.org/TR/PNG-Filters.html\n   * @see http://www.libpng.org/pub/png/book/chapter09.html\n   *\n   * This is what the value 'Predictor' in decode params relates to\n   *\n   * 15 is \"optimal prediction\", which means the prediction algorithm can change from line to line.\n   * In that case, you actually have to read the first byte off each line for the prediction algorthim (which should be 0-4, corresponding to PDF 10-14) and select the appropriate unprediction algorithm based on that byte.\n   *\n     0       None\n     1       Sub\n     2       Up\n     3       Average\n     4       Paeth\n   */\n\n  var canCompress = function(value) {\n    return value !== jsPDFAPI.image_compression.NONE && hasCompressionJS();\n  };\n\n  var hasCompressionJS = function() {\n    return typeof zlibSync === \"function\";\n  };\n  var compressBytes = function(bytes, lineLength, colorsPerPixel, compression) {\n    var level = 4;\n    var filter_method = filterUp;\n\n    switch (compression) {\n      case jsPDFAPI.image_compression.FAST:\n        level = 1;\n        filter_method = filterSub;\n        break;\n\n      case jsPDFAPI.image_compression.MEDIUM:\n        level = 6;\n        filter_method = filterAverage;\n        break;\n\n      case jsPDFAPI.image_compression.SLOW:\n        level = 9;\n        filter_method = filterPaeth;\n        break;\n    }\n\n    bytes = applyPngFilterMethod(\n      bytes,\n      lineLength,\n      colorsPerPixel,\n      filter_method\n    );\n    var dat = zlibSync(bytes, { level: level });\n    return jsPDFAPI.__addimage__.arrayBufferToBinaryString(dat);\n  };\n\n  var applyPngFilterMethod = function(\n    bytes,\n    lineLength,\n    colorsPerPixel,\n    filter_method\n  ) {\n    var lines = bytes.length / lineLength,\n      result = new Uint8Array(bytes.length + lines),\n      filter_methods = getFilterMethods(),\n      line,\n      prevLine,\n      offset;\n\n    for (var i = 0; i < lines; i += 1) {\n      offset = i * lineLength;\n      line = bytes.subarray(offset, offset + lineLength);\n\n      if (filter_method) {\n        result.set(filter_method(line, colorsPerPixel, prevLine), offset + i);\n      } else {\n        var len = filter_methods.length,\n          results = [];\n\n        for (var j; j < len; j += 1) {\n          results[j] = filter_methods[j](line, colorsPerPixel, prevLine);\n        }\n\n        var ind = getIndexOfSmallestSum(results.concat());\n\n        result.set(results[ind], offset + i);\n      }\n\n      prevLine = line;\n    }\n\n    return result;\n  };\n\n  var filterNone = function(line) {\n    /*var result = new Uint8Array(line.length + 1);\n    result[0] = 0;\n    result.set(line, 1);*/\n\n    var result = Array.apply([], line);\n    result.unshift(0);\n\n    return result;\n  };\n\n  var filterSub = function(line, colorsPerPixel) {\n    var result = [],\n      len = line.length,\n      left;\n\n    result[0] = 1;\n\n    for (var i = 0; i < len; i += 1) {\n      left = line[i - colorsPerPixel] || 0;\n      result[i + 1] = (line[i] - left + 0x0100) & 0xff;\n    }\n\n    return result;\n  };\n\n  var filterUp = function(line, colorsPerPixel, prevLine) {\n    var result = [],\n      len = line.length,\n      up;\n\n    result[0] = 2;\n\n    for (var i = 0; i < len; i += 1) {\n      up = (prevLine && prevLine[i]) || 0;\n      result[i + 1] = (line[i] - up + 0x0100) & 0xff;\n    }\n\n    return result;\n  };\n\n  var filterAverage = function(line, colorsPerPixel, prevLine) {\n    var result = [],\n      len = line.length,\n      left,\n      up;\n\n    result[0] = 3;\n\n    for (var i = 0; i < len; i += 1) {\n      left = line[i - colorsPerPixel] || 0;\n      up = (prevLine && prevLine[i]) || 0;\n      result[i + 1] = (line[i] + 0x0100 - ((left + up) >>> 1)) & 0xff;\n    }\n\n    return result;\n  };\n\n  var filterPaeth = function(line, colorsPerPixel, prevLine) {\n    var result = [],\n      len = line.length,\n      left,\n      up,\n      upLeft,\n      paeth;\n\n    result[0] = 4;\n\n    for (var i = 0; i < len; i += 1) {\n      left = line[i - colorsPerPixel] || 0;\n      up = (prevLine && prevLine[i]) || 0;\n      upLeft = (prevLine && prevLine[i - colorsPerPixel]) || 0;\n      paeth = paethPredictor(left, up, upLeft);\n      result[i + 1] = (line[i] - paeth + 0x0100) & 0xff;\n    }\n\n    return result;\n  };\n\n  var paethPredictor = function(left, up, upLeft) {\n    if (left === up && up === upLeft) {\n      return left;\n    }\n    var pLeft = Math.abs(up - upLeft),\n      pUp = Math.abs(left - upLeft),\n      pUpLeft = Math.abs(left + up - upLeft - upLeft);\n    return pLeft <= pUp && pLeft <= pUpLeft\n      ? left\n      : pUp <= pUpLeft\n      ? up\n      : upLeft;\n  };\n\n  var getFilterMethods = function() {\n    return [filterNone, filterSub, filterUp, filterAverage, filterPaeth];\n  };\n\n  var getIndexOfSmallestSum = function(arrays) {\n    var sum = arrays.map(function(value) {\n      return value.reduce(function(pv, cv) {\n        return pv + Math.abs(cv);\n      }, 0);\n    });\n    return sum.indexOf(Math.min.apply(null, sum));\n  };\n\n  var getPredictorFromCompression = function(compression) {\n    var predictor;\n    switch (compression) {\n      case jsPDFAPI.image_compression.FAST:\n        predictor = 11;\n        break;\n\n      case jsPDFAPI.image_compression.MEDIUM:\n        predictor = 13;\n        break;\n\n      case jsPDFAPI.image_compression.SLOW:\n        predictor = 14;\n        break;\n\n      default:\n        predictor = 12;\n        break;\n    }\n    return predictor;\n  };\n\n  /**\n   * @name processPNG\n   * @function\n   * @ignore\n   */\n  jsPDFAPI.processPNG = function(imageData, index, alias, compression) {\n    \"use strict\";\n\n    var colorSpace,\n      filter = this.decode.FLATE_DECODE,\n      bitsPerComponent,\n      image,\n      decodeParameters = \"\",\n      trns,\n      colors,\n      pal,\n      smask,\n      pixels,\n      len,\n      alphaData,\n      imgData,\n      hasColors,\n      pixel,\n      i,\n      n;\n\n    if (this.__addimage__.isArrayBuffer(imageData))\n      imageData = new Uint8Array(imageData);\n\n    if (this.__addimage__.isArrayBufferView(imageData)) {\n      image = new PNG(imageData);\n      imageData = image.imgData;\n      bitsPerComponent = image.bits;\n      colorSpace = image.colorSpace;\n      colors = image.colors;\n\n      /*\n       * colorType 6 - Each pixel is an R,G,B triple, followed by an alpha sample.\n       *\n       * colorType 4 - Each pixel is a grayscale sample, followed by an alpha sample.\n       *\n       * Extract alpha to create two separate images, using the alpha as a sMask\n       */\n      if ([4, 6].indexOf(image.colorType) !== -1) {\n        /*\n         * processes 8 bit RGBA and grayscale + alpha images\n         */\n        if (image.bits === 8) {\n          pixels =\n            image.pixelBitlength == 32\n              ? new Uint32Array(image.decodePixels().buffer)\n              : image.pixelBitlength == 16\n              ? new Uint16Array(image.decodePixels().buffer)\n              : new Uint8Array(image.decodePixels().buffer);\n          len = pixels.length;\n          imgData = new Uint8Array(len * image.colors);\n          alphaData = new Uint8Array(len);\n          var pDiff = image.pixelBitlength - image.bits;\n          i = 0;\n          n = 0;\n          var pbl;\n\n          for (; i < len; i++) {\n            pixel = pixels[i];\n            pbl = 0;\n\n            while (pbl < pDiff) {\n              imgData[n++] = (pixel >>> pbl) & 0xff;\n              pbl = pbl + image.bits;\n            }\n\n            alphaData[i] = (pixel >>> pbl) & 0xff;\n          }\n        }\n\n        /*\n         * processes 16 bit RGBA and grayscale + alpha images\n         */\n        if (image.bits === 16) {\n          pixels = new Uint32Array(image.decodePixels().buffer);\n          len = pixels.length;\n          imgData = new Uint8Array(\n            len * (32 / image.pixelBitlength) * image.colors\n          );\n          alphaData = new Uint8Array(len * (32 / image.pixelBitlength));\n          hasColors = image.colors > 1;\n          i = 0;\n          n = 0;\n          var a = 0;\n\n          while (i < len) {\n            pixel = pixels[i++];\n\n            imgData[n++] = (pixel >>> 0) & 0xff;\n\n            if (hasColors) {\n              imgData[n++] = (pixel >>> 16) & 0xff;\n\n              pixel = pixels[i++];\n              imgData[n++] = (pixel >>> 0) & 0xff;\n            }\n\n            alphaData[a++] = (pixel >>> 16) & 0xff;\n          }\n          bitsPerComponent = 8;\n        }\n\n        if (canCompress(compression)) {\n          imageData = compressBytes(\n            imgData,\n            image.width * image.colors,\n            image.colors,\n            compression\n          );\n          smask = compressBytes(alphaData, image.width, 1, compression);\n        } else {\n          imageData = imgData;\n          smask = alphaData;\n          filter = undefined;\n        }\n      }\n\n      /*\n       * Indexed png. Each pixel is a palette index.\n       */\n      if (image.colorType === 3) {\n        colorSpace = this.color_spaces.INDEXED;\n        pal = image.palette;\n\n        if (image.transparency.indexed) {\n          var trans = image.transparency.indexed;\n          var total = 0;\n          i = 0;\n          len = trans.length;\n\n          for (; i < len; ++i) {\n            total += trans[i];\n          }\n\n          total = total / 255;\n\n          /*\n           * a single color is specified as 100% transparent (0),\n           * so we set trns to use a /Mask with that index\n           */\n          if (total === len - 1 && trans.indexOf(0) !== -1) {\n            trns = [trans.indexOf(0)];\n\n            /*\n             * there's more than one colour within the palette that specifies\n             * a transparency value less than 255, so we unroll the pixels to create an image sMask\n             */\n          } else if (total !== len) {\n            pixels = image.decodePixels();\n            alphaData = new Uint8Array(pixels.length);\n            i = 0;\n            len = pixels.length;\n\n            for (; i < len; i++) {\n              alphaData[i] = trans[pixels[i]];\n            }\n\n            smask = compressBytes(alphaData, image.width, 1);\n          }\n        }\n      }\n\n      var predictor = getPredictorFromCompression(compression);\n\n      if (filter === this.decode.FLATE_DECODE) {\n        decodeParameters = \"/Predictor \" + predictor + \" \";\n      }\n      decodeParameters +=\n        \"/Colors \" +\n        colors +\n        \" /BitsPerComponent \" +\n        bitsPerComponent +\n        \" /Columns \" +\n        image.width;\n\n      if (\n        this.__addimage__.isArrayBuffer(imageData) ||\n        this.__addimage__.isArrayBufferView(imageData)\n      ) {\n        imageData = this.__addimage__.arrayBufferToBinaryString(imageData);\n      }\n\n      if (\n        (smask && this.__addimage__.isArrayBuffer(smask)) ||\n        this.__addimage__.isArrayBufferView(smask)\n      ) {\n        smask = this.__addimage__.arrayBufferToBinaryString(smask);\n      }\n\n      return {\n        alias: alias,\n        data: imageData,\n        index: index,\n        filter: filter,\n        decodeParameters: decodeParameters,\n        transparency: trns,\n        palette: pal,\n        sMask: smask,\n        predictor: predictor,\n        width: image.width,\n        height: image.height,\n        bitsPerComponent: bitsPerComponent,\n        colorSpace: colorSpace\n      };\n    }\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { GifReader } from \"../libs/omggif.js\";\nimport { JPEGEncoder } from \"../libs/JPEGEncoder.js\";\n\n/**\n * jsPDF Gif Support PlugIn\n *\n * @name gif_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  jsPDFAPI.processGIF89A = function(imageData, index, alias, compression) {\n    var reader = new GifReader(imageData);\n    var width = reader.width,\n      height = reader.height;\n    var qu = 100;\n    var pixels = [];\n\n    reader.decodeAndBlitFrameRGBA(0, pixels);\n    var rawImageData = {\n      data: pixels,\n      width: width,\n      height: height\n    };\n\n    var encoder = new JPEGEncoder(qu);\n    var data = encoder.encode(rawImageData, qu);\n    return jsPDFAPI.processJPEG.call(this, data, index, alias, compression);\n  };\n\n  jsPDFAPI.processGIF87A = jsPDFAPI.processGIF89A;\n})(jsPDF.API);\n","import { JPEGEncoder } from \"../libs/JPEGEncoder.js\";\nimport { BmpDecoder } from \"../libs/BMPDecoder.js\";\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * @license\n * Copyright (c) 2018 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\n/**\n * jsPDF bmp Support PlugIn\n * @name bmp_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  jsPDFAPI.processBMP = function(imageData, index, alias, compression) {\n    var reader = new BmpDecoder(imageData, false);\n    var width = reader.width,\n      height = reader.height;\n    var qu = 100;\n    var pixels = reader.getData();\n\n    var rawImageData = {\n      data: pixels,\n      width: width,\n      height: height\n    };\n\n    var encoder = new JPEGEncoder(qu);\n    var data = encoder.encode(rawImageData, qu);\n    return jsPDFAPI.processJPEG.call(this, data, index, alias, compression);\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Copyright (c) 2019 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { JPEGEncoder } from \"../libs/JPEGEncoder.js\";\nimport { WebPDecoder } from \"../libs/WebPDecoder.js\";\n\n/**\n * jsPDF webp Support PlugIn\n *\n * @name webp_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  jsPDFAPI.processWEBP = function(imageData, index, alias, compression) {\n    var reader = new WebPDecoder(imageData, false);\n    var width = reader.width,\n      height = reader.height;\n    var qu = 100;\n    var pixels = reader.getData();\n\n    var rawImageData = {\n      data: pixels,\n      width: width,\n      height: height\n    };\n\n    var encoder = new JPEGEncoder(qu);\n    var data = encoder.encode(rawImageData, qu);\n    return jsPDFAPI.processJPEG.call(this, data, index, alias, compression);\n  };\n})(jsPDF.API);\n","/**\n * @license\n *\n * Copyright (c) 2021 Antti Palola, https://github.com/Pantura\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF RGBA array PlugIn\n * @name rgba_support\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * @name processRGBA\n   * @function\n   *\n   * Process RGBA Array. This is a one-dimension array with pixel data [red, green, blue, alpha, red, green, ...].\n   * RGBA array data can be obtained from DOM canvas getImageData.\n   * @ignore\n   */\n  jsPDFAPI.processRGBA = function(imageData, index, alias) {\n    \"use strict\";\n\n    var imagePixels = imageData.data;\n    var length = imagePixels.length;\n    // jsPDF takes alpha data separately so extract that.\n    var rgbOut = new Uint8Array((length / 4) * 3);\n    var alphaOut = new Uint8Array(length / 4);\n    var outIndex = 0;\n    var alphaIndex = 0;\n\n    for (var i = 0; i < length; i += 4) {\n      var r = imagePixels[i];\n      var g = imagePixels[i + 1];\n      var b = imagePixels[i + 2];\n      var alpha = imagePixels[i + 3];\n      rgbOut[outIndex++] = r;\n      rgbOut[outIndex++] = g;\n      rgbOut[outIndex++] = b;\n      alphaOut[alphaIndex++] = alpha;\n    }\n\n    var rgbData = this.__addimage__.arrayBufferToBinaryString(rgbOut);\n    var alphaData = this.__addimage__.arrayBufferToBinaryString(alphaOut);\n\n    return {\n      alpha: alphaData,\n      data: rgbData,\n      index: index,\n      alias: alias,\n      colorSpace: \"DeviceRGB\",\n      bitsPerComponent: 8,\n      width: imageData.width,\n      height: imageData.height\n    };\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF setLanguage Plugin\n *\n * @name setLanguage\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  /**\n   * Add Language Tag to the generated PDF\n   *\n   * @name setLanguage\n   * @function\n   * @param {string} langCode The Language code as ISO-639-1 (e.g. 'en') or as country language code (e.g. 'en-GB').\n   * @returns {jsPDF}\n   * @example\n   * var doc = new jsPDF()\n   * doc.text(10, 10, 'This is a test')\n   * doc.setLanguage(\"en-US\")\n   * doc.save('english.pdf')\n   */\n  jsPDFAPI.setLanguage = function(langCode) {\n    \"use strict\";\n\n    var langCodes = {\n      af: \"Afrikaans\",\n      sq: \"Albanian\",\n      ar: \"Arabic (Standard)\",\n      \"ar-DZ\": \"Arabic (Algeria)\",\n      \"ar-BH\": \"Arabic (Bahrain)\",\n      \"ar-EG\": \"Arabic (Egypt)\",\n      \"ar-IQ\": \"Arabic (Iraq)\",\n      \"ar-JO\": \"Arabic (Jordan)\",\n      \"ar-KW\": \"Arabic (Kuwait)\",\n      \"ar-LB\": \"Arabic (Lebanon)\",\n      \"ar-LY\": \"Arabic (Libya)\",\n      \"ar-MA\": \"Arabic (Morocco)\",\n      \"ar-OM\": \"Arabic (Oman)\",\n      \"ar-QA\": \"Arabic (Qatar)\",\n      \"ar-SA\": \"Arabic (Saudi Arabia)\",\n      \"ar-SY\": \"Arabic (Syria)\",\n      \"ar-TN\": \"Arabic (Tunisia)\",\n      \"ar-AE\": \"Arabic (U.A.E.)\",\n      \"ar-YE\": \"Arabic (Yemen)\",\n      an: \"Aragonese\",\n      hy: \"Armenian\",\n      as: \"Assamese\",\n      ast: \"Asturian\",\n      az: \"Azerbaijani\",\n      eu: \"Basque\",\n      be: \"Belarusian\",\n      bn: \"Bengali\",\n      bs: \"Bosnian\",\n      br: \"Breton\",\n      bg: \"Bulgarian\",\n      my: \"Burmese\",\n      ca: \"Catalan\",\n      ch: \"Chamorro\",\n      ce: \"Chechen\",\n      zh: \"Chinese\",\n      \"zh-HK\": \"Chinese (Hong Kong)\",\n      \"zh-CN\": \"Chinese (PRC)\",\n      \"zh-SG\": \"Chinese (Singapore)\",\n      \"zh-TW\": \"Chinese (Taiwan)\",\n      cv: \"Chuvash\",\n      co: \"Corsican\",\n      cr: \"Cree\",\n      hr: \"Croatian\",\n      cs: \"Czech\",\n      da: \"Danish\",\n      nl: \"Dutch (Standard)\",\n      \"nl-BE\": \"Dutch (Belgian)\",\n      en: \"English\",\n      \"en-AU\": \"English (Australia)\",\n      \"en-BZ\": \"English (Belize)\",\n      \"en-CA\": \"English (Canada)\",\n      \"en-IE\": \"English (Ireland)\",\n      \"en-JM\": \"English (Jamaica)\",\n      \"en-NZ\": \"English (New Zealand)\",\n      \"en-PH\": \"English (Philippines)\",\n      \"en-ZA\": \"English (South Africa)\",\n      \"en-TT\": \"English (Trinidad & Tobago)\",\n      \"en-GB\": \"English (United Kingdom)\",\n      \"en-US\": \"English (United States)\",\n      \"en-ZW\": \"English (Zimbabwe)\",\n      eo: \"Esperanto\",\n      et: \"Estonian\",\n      fo: \"Faeroese\",\n      fj: \"Fijian\",\n      fi: \"Finnish\",\n      fr: \"French (Standard)\",\n      \"fr-BE\": \"French (Belgium)\",\n      \"fr-CA\": \"French (Canada)\",\n      \"fr-FR\": \"French (France)\",\n      \"fr-LU\": \"French (Luxembourg)\",\n      \"fr-MC\": \"French (Monaco)\",\n      \"fr-CH\": \"French (Switzerland)\",\n      fy: \"Frisian\",\n      fur: \"Friulian\",\n      gd: \"Gaelic (Scots)\",\n      \"gd-IE\": \"Gaelic (Irish)\",\n      gl: \"Galacian\",\n      ka: \"Georgian\",\n      de: \"German (Standard)\",\n      \"de-AT\": \"German (Austria)\",\n      \"de-DE\": \"German (Germany)\",\n      \"de-LI\": \"German (Liechtenstein)\",\n      \"de-LU\": \"German (Luxembourg)\",\n      \"de-CH\": \"German (Switzerland)\",\n      el: \"Greek\",\n      gu: \"Gujurati\",\n      ht: \"Haitian\",\n      he: \"Hebrew\",\n      hi: \"Hindi\",\n      hu: \"Hungarian\",\n      is: \"Icelandic\",\n      id: \"Indonesian\",\n      iu: \"Inuktitut\",\n      ga: \"Irish\",\n      it: \"Italian (Standard)\",\n      \"it-CH\": \"Italian (Switzerland)\",\n      ja: \"Japanese\",\n      kn: \"Kannada\",\n      ks: \"Kashmiri\",\n      kk: \"Kazakh\",\n      km: \"Khmer\",\n      ky: \"Kirghiz\",\n      tlh: \"Klingon\",\n      ko: \"Korean\",\n      \"ko-KP\": \"Korean (North Korea)\",\n      \"ko-KR\": \"Korean (South Korea)\",\n      la: \"Latin\",\n      lv: \"Latvian\",\n      lt: \"Lithuanian\",\n      lb: \"Luxembourgish\",\n      mk: \"North Macedonia\",\n      ms: \"Malay\",\n      ml: \"Malayalam\",\n      mt: \"Maltese\",\n      mi: \"Maori\",\n      mr: \"Marathi\",\n      mo: \"Moldavian\",\n      nv: \"Navajo\",\n      ng: \"Ndonga\",\n      ne: \"Nepali\",\n      no: \"Norwegian\",\n      nb: \"Norwegian (Bokmal)\",\n      nn: \"Norwegian (Nynorsk)\",\n      oc: \"Occitan\",\n      or: \"Oriya\",\n      om: \"Oromo\",\n      fa: \"Persian\",\n      \"fa-IR\": \"Persian/Iran\",\n      pl: \"Polish\",\n      pt: \"Portuguese\",\n      \"pt-BR\": \"Portuguese (Brazil)\",\n      pa: \"Punjabi\",\n      \"pa-IN\": \"Punjabi (India)\",\n      \"pa-PK\": \"Punjabi (Pakistan)\",\n      qu: \"Quechua\",\n      rm: \"Rhaeto-Romanic\",\n      ro: \"Romanian\",\n      \"ro-MO\": \"Romanian (Moldavia)\",\n      ru: \"Russian\",\n      \"ru-MO\": \"Russian (Moldavia)\",\n      sz: \"Sami (Lappish)\",\n      sg: \"Sango\",\n      sa: \"Sanskrit\",\n      sc: \"Sardinian\",\n      sd: \"Sindhi\",\n      si: \"Singhalese\",\n      sr: \"Serbian\",\n      sk: \"Slovak\",\n      sl: \"Slovenian\",\n      so: \"Somani\",\n      sb: \"Sorbian\",\n      es: \"Spanish\",\n      \"es-AR\": \"Spanish (Argentina)\",\n      \"es-BO\": \"Spanish (Bolivia)\",\n      \"es-CL\": \"Spanish (Chile)\",\n      \"es-CO\": \"Spanish (Colombia)\",\n      \"es-CR\": \"Spanish (Costa Rica)\",\n      \"es-DO\": \"Spanish (Dominican Republic)\",\n      \"es-EC\": \"Spanish (Ecuador)\",\n      \"es-SV\": \"Spanish (El Salvador)\",\n      \"es-GT\": \"Spanish (Guatemala)\",\n      \"es-HN\": \"Spanish (Honduras)\",\n      \"es-MX\": \"Spanish (Mexico)\",\n      \"es-NI\": \"Spanish (Nicaragua)\",\n      \"es-PA\": \"Spanish (Panama)\",\n      \"es-PY\": \"Spanish (Paraguay)\",\n      \"es-PE\": \"Spanish (Peru)\",\n      \"es-PR\": \"Spanish (Puerto Rico)\",\n      \"es-ES\": \"Spanish (Spain)\",\n      \"es-UY\": \"Spanish (Uruguay)\",\n      \"es-VE\": \"Spanish (Venezuela)\",\n      sx: \"Sutu\",\n      sw: \"Swahili\",\n      sv: \"Swedish\",\n      \"sv-FI\": \"Swedish (Finland)\",\n      \"sv-SV\": \"Swedish (Sweden)\",\n      ta: \"Tamil\",\n      tt: \"Tatar\",\n      te: \"Teluga\",\n      th: \"Thai\",\n      tig: \"Tigre\",\n      ts: \"Tsonga\",\n      tn: \"Tswana\",\n      tr: \"Turkish\",\n      tk: \"Turkmen\",\n      uk: \"Ukrainian\",\n      hsb: \"Upper Sorbian\",\n      ur: \"Urdu\",\n      ve: \"Venda\",\n      vi: \"Vietnamese\",\n      vo: \"Volapuk\",\n      wa: \"Walloon\",\n      cy: \"Welsh\",\n      xh: \"Xhosa\",\n      ji: \"Yiddish\",\n      zu: \"Zulu\"\n    };\n\n    if (this.internal.languageSettings === undefined) {\n      this.internal.languageSettings = {};\n      this.internal.languageSettings.isSubscribed = false;\n    }\n\n    if (langCodes[langCode] !== undefined) {\n      this.internal.languageSettings.languageCode = langCode;\n      if (this.internal.languageSettings.isSubscribed === false) {\n        this.internal.events.subscribe(\"putCatalog\", function() {\n          this.internal.write(\n            \"/Lang (\" + this.internal.languageSettings.languageCode + \")\"\n          );\n        });\n        this.internal.languageSettings.isSubscribed = true;\n      }\n    }\n    return this;\n  };\n})(jsPDF.API);\n","/** @license\n jsPDF standard_fonts_metrics plugin\n * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems\n * MIT license.\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n * \n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * This file adds the standard font metrics to jsPDF.\n *\n * Font metrics data is reprocessed derivative of contents of\n * \"Font Metrics for PDF Core 14 Fonts\" package, which exhibits the following copyright and license:\n *\n * Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated. All Rights Reserved.\n *\n * This file and the 14 PostScript(R) AFM files it accompanies may be used,\n * copied, and distributed for any purpose and without charge, with or without\n * modification, provided that all copyright notices are retained; that the AFM\n * files are not distributed without this file; that all modifications to this\n * file or any of the AFM files are prominently noted in the modified file(s);\n * and that this paragraph is not modified. Adobe Systems has no responsibility\n * or obligation to support the use of the AFM files.\n *\n * @name standard_fonts_metrics\n * @module\n */\n\n(function(API) {\n  \"use strict\";\n  API.__fontmetrics__ = API.__fontmetrics__ || {};\n\n  var decoded = \"0123456789abcdef\",\n    encoded = \"klmnopqrstuvwxyz\",\n    mappingUncompress = {},\n    mappingCompress = {};\n\n  for (var i = 0; i < encoded.length; i++) {\n    mappingUncompress[encoded[i]] = decoded[i];\n    mappingCompress[decoded[i]] = encoded[i];\n  }\n\n  var hex = function(value) {\n    return \"0x\" + parseInt(value, 10).toString(16);\n  };\n\n  var compress = (API.__fontmetrics__.compress = function(data) {\n    var vals = [\"{\"];\n    var value, keystring, valuestring, numberprefix;\n\n    for (var key in data) {\n      value = data[key];\n\n      if (!isNaN(parseInt(key, 10))) {\n        key = parseInt(key, 10);\n        keystring = hex(key).slice(2);\n        keystring =\n          keystring.slice(0, -1) + mappingCompress[keystring.slice(-1)];\n      } else {\n        keystring = \"'\" + key + \"'\";\n      }\n\n      if (typeof value == \"number\") {\n        if (value < 0) {\n          valuestring = hex(value).slice(3);\n          numberprefix = \"-\";\n        } else {\n          valuestring = hex(value).slice(2);\n          numberprefix = \"\";\n        }\n        valuestring =\n          numberprefix +\n          valuestring.slice(0, -1) +\n          mappingCompress[valuestring.slice(-1)];\n      } else {\n        if (typeof value === \"object\") {\n          valuestring = compress(value);\n        } else {\n          throw new Error(\n            \"Don't know what to do with value type \" + typeof value + \".\"\n          );\n        }\n      }\n      vals.push(keystring + valuestring);\n    }\n    vals.push(\"}\");\n    return vals.join(\"\");\n  });\n\n  /**\n   * Uncompresses data compressed into custom, base16-like format.\n   *\n   * @public\n   * @function\n   * @param\n   * @returns {Type}\n   */\n  var uncompress = (API.__fontmetrics__.uncompress = function(data) {\n    if (typeof data !== \"string\") {\n      throw new Error(\"Invalid argument passed to uncompress.\");\n    }\n\n    var output = {},\n      sign = 1,\n      stringparts, // undef. will be [] in string mode\n      activeobject = output,\n      parentchain = [],\n      parent_key_pair,\n      keyparts = \"\",\n      valueparts = \"\",\n      key, // undef. will be Truthy when Key is resolved.\n      datalen = data.length - 1, // stripping ending }\n      ch;\n\n    for (var i = 1; i < datalen; i += 1) {\n      // - { } ' are special.\n\n      ch = data[i];\n\n      if (ch == \"'\") {\n        if (stringparts) {\n          // end of string mode\n          key = stringparts.join(\"\");\n          stringparts = undefined;\n        } else {\n          // start of string mode\n          stringparts = [];\n        }\n      } else if (stringparts) {\n        stringparts.push(ch);\n      } else if (ch == \"{\") {\n        // start of object\n        parentchain.push([activeobject, key]);\n        activeobject = {};\n        key = undefined;\n      } else if (ch == \"}\") {\n        // end of object\n        parent_key_pair = parentchain.pop();\n        parent_key_pair[0][parent_key_pair[1]] = activeobject;\n        key = undefined;\n        activeobject = parent_key_pair[0];\n      } else if (ch == \"-\") {\n        sign = -1;\n      } else {\n        // must be number\n        if (key === undefined) {\n          if (mappingUncompress.hasOwnProperty(ch)) {\n            keyparts += mappingUncompress[ch];\n            key = parseInt(keyparts, 16) * sign;\n            sign = +1;\n            keyparts = \"\";\n          } else {\n            keyparts += ch;\n          }\n        } else {\n          if (mappingUncompress.hasOwnProperty(ch)) {\n            valueparts += mappingUncompress[ch];\n            activeobject[key] = parseInt(valueparts, 16) * sign;\n            sign = +1;\n            key = undefined;\n            valueparts = \"\";\n          } else {\n            valueparts += ch;\n          }\n        }\n      }\n    }\n    return output;\n  });\n\n  // encoding = 'Unicode'\n  // NOT UTF8, NOT UTF16BE/LE, NOT UCS2BE/LE. NO clever BOM behavior\n  // Actual 16bit char codes used.\n  // no multi-byte logic here\n\n  // Unicode characters to WinAnsiEncoding:\n  // {402: 131, 8211: 150, 8212: 151, 8216: 145, 8217: 146, 8218: 130, 8220: 147, 8221: 148, 8222: 132, 8224: 134, 8225: 135, 8226: 149, 8230: 133, 8364: 128, 8240:137, 8249: 139, 8250: 155, 710: 136, 8482: 153, 338: 140, 339: 156, 732: 152, 352: 138, 353: 154, 376: 159, 381: 142, 382: 158}\n  // as you can see, all Unicode chars are outside of 0-255 range. No char code conflicts.\n  // this means that you can give Win cp1252 encoded strings to jsPDF for rendering directly\n  // as well as give strings with some (supported by these fonts) Unicode characters and\n  // these will be mapped to win cp1252\n  // for example, you can send char code (cp1252) 0x80 or (unicode) 0x20AC, getting \"Euro\" glyph displayed in both cases.\n\n  var encodingBlock = {\n    codePages: [\"WinAnsiEncoding\"],\n    WinAnsiEncoding: uncompress(\n      \"{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}\"\n    )\n  };\n  var encodings = {\n    Unicode: {\n      Courier: encodingBlock,\n      \"Courier-Bold\": encodingBlock,\n      \"Courier-BoldOblique\": encodingBlock,\n      \"Courier-Oblique\": encodingBlock,\n      Helvetica: encodingBlock,\n      \"Helvetica-Bold\": encodingBlock,\n      \"Helvetica-BoldOblique\": encodingBlock,\n      \"Helvetica-Oblique\": encodingBlock,\n      \"Times-Roman\": encodingBlock,\n      \"Times-Bold\": encodingBlock,\n      \"Times-BoldItalic\": encodingBlock,\n      \"Times-Italic\": encodingBlock\n      //\t, 'Symbol'\n      //\t, 'ZapfDingbats'\n    }\n  };\n\n  var fontMetrics = {\n    Unicode: {\n      // all sizing numbers are n/fontMetricsFractionOf = one font size unit\n      // this means that if fontMetricsFractionOf = 1000, and letter A's width is 476, it's\n      // width is 476/1000 or 47.6% of its height (regardless of font size)\n      // At this time this value applies to \"widths\" and \"kerning\" numbers.\n\n      // char code 0 represents \"default\" (average) width - use it for chars missing in this table.\n      // key 'fof' represents the \"fontMetricsFractionOf\" value\n\n      \"Courier-Oblique\": uncompress(\n        \"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"\n      ),\n      \"Times-BoldItalic\": uncompress(\n        \"{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}\"\n      ),\n      \"Helvetica-Bold\": uncompress(\n        \"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"\n      ),\n      Courier: uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n      \"Courier-BoldOblique\": uncompress(\n        \"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"\n      ),\n      \"Times-Bold\": uncompress(\n        \"{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}\"\n      ),\n      Symbol: uncompress(\n        \"{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}\"\n      ),\n      Helvetica: uncompress(\n        \"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"\n      ),\n      \"Helvetica-BoldOblique\": uncompress(\n        \"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"\n      ),\n      ZapfDingbats: uncompress(\"{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}\"),\n      \"Courier-Bold\": uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n      \"Times-Italic\": uncompress(\n        \"{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}\"\n      ),\n      \"Times-Roman\": uncompress(\n        \"{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}\"\n      ),\n      \"Helvetica-Oblique\": uncompress(\n        \"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"\n      )\n    }\n  };\n\n  /*\n\tThis event handler is fired when a new jsPDF object is initialized\n\tThis event handler appends metrics data to standard fonts within\n\tthat jsPDF instance. The metrics are mapped over Unicode character\n\tcodes, NOT CIDs or other codes matching the StandardEncoding table of the\n\tstandard PDF fonts.\n\tFuture:\n\tAlso included is the encoding maping table, converting Unicode (UCS-2, UTF-16)\n\tchar codes to StandardEncoding character codes. The encoding table is to be used\n\tsomewhere around \"pdfEscape\" call.\n\t*/\n  API.events.push([\n    \"addFont\",\n    function(data) {\n      var font = data.font;\n\n      var metrics = fontMetrics[\"Unicode\"][font.postScriptName];\n      if (metrics) {\n        font.metadata[\"Unicode\"] = {};\n        font.metadata[\"Unicode\"].widths = metrics.widths;\n        font.metadata[\"Unicode\"].kerning = metrics.kerning;\n      }\n\n      var encodingBlock = encodings[\"Unicode\"][font.postScriptName];\n      if (encodingBlock) {\n        font.metadata[\"Unicode\"].encoding = encodingBlock;\n        font.encoding = encodingBlock.codePages[0];\n      }\n    }\n  ]); // end of adding event handler\n})(jsPDF.API);\n","/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { atob } from \"../libs/AtobBtoa.js\";\n\n/**\n * @name ttfsupport\n * @module\n */\n(function(jsPDF) {\n  \"use strict\";\n\n  var binaryStringToUint8Array = function(binary_string) {\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n  };\n\n  var addFont = function(font, file) {\n    // eslint-disable-next-line no-control-regex\n    if (/^\\x00\\x01\\x00\\x00/.test(file)) {\n      file = binaryStringToUint8Array(file);\n    } else {\n      file = binaryStringToUint8Array(atob(file));\n    }\n    font.metadata = jsPDF.API.TTFFont.open(file);\n    font.metadata.Unicode = font.metadata.Unicode || {\n      encoding: {},\n      kerning: {},\n      widths: []\n    };\n    font.metadata.glyIdsUsed = [0];\n  };\n\n  jsPDF.API.events.push([\n    \"addFont\",\n    function(data) {\n      var file = undefined;\n      var font = data.font;\n      var instance = data.instance;\n      if (font.isStandardFont) {\n        return;\n      }\n      if (typeof instance !== \"undefined\") {\n        if (instance.existsFileInVFS(font.postScriptName) === false) {\n          file = instance.loadFile(font.postScriptName);\n        } else {\n          file = instance.getFileFromVFS(font.postScriptName);\n        }\n        if (typeof file !== \"string\") {\n          throw new Error(\n            \"Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('\" +\n              font.postScriptName +\n              \"').\"\n          );\n        }\n        addFont(font, file);\n      } else {\n        throw new Error(\n          \"Font does not exist in vFS, import fonts or remove declaration doc.addFont('\" +\n            font.postScriptName +\n            \"').\"\n        );\n      }\n    }\n  ]); // end of adding event handler\n})(jsPDF);\n","/** @license\n * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\nimport { console } from \"../libs/console.js\";\nimport { globalObject } from \"../libs/globalObject.js\";\n\n/**\n * jsPDF SVG plugin\n *\n * @name svg\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  function loadCanvg() {\n    return (function() {\n      if (globalObject[\"canvg\"]) {\n        return Promise.resolve(globalObject[\"canvg\"]);\n      }\n\n      return import(\"canvg\");\n\n    })()\n      .catch(function(e) {\n        return Promise.reject(new Error(\"Could not load canvg: \" + e));\n      })\n      .then(function(canvg) {\n        return canvg.default ? canvg.default : canvg;\n      });\n  }\n\n  /**\n   * Parses SVG XML and saves it as image into the PDF.\n   *\n   * Depends on canvas-element and canvg\n   *\n   * @name addSvgAsImage\n   * @public\n   * @function\n   * @param {string} SVG-Data as Text\n   * @param {number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\n   * @param {number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\n   * @param {number} width of SVG-Image (in units declared at inception of PDF document)\n   * @param {number} height of SVG-Image (in units declared at inception of PDF document)\n   * @param {string} alias of SVG-Image (if used multiple times)\n   * @param {string} compression of the generated JPEG, can have the values 'NONE', 'FAST', 'MEDIUM' and 'SLOW'\n   * @param {number} rotation of the image in degrees (0-359)\n   *\n   * @returns jsPDF jsPDF-instance\n   */\n  jsPDFAPI.addSvgAsImage = function(\n    svg,\n    x,\n    y,\n    w,\n    h,\n    alias,\n    compression,\n    rotation\n  ) {\n    if (isNaN(x) || isNaN(y)) {\n      console.error(\"jsPDF.addSvgAsImage: Invalid coordinates\", arguments);\n      throw new Error(\"Invalid coordinates passed to jsPDF.addSvgAsImage\");\n    }\n\n    if (isNaN(w) || isNaN(h)) {\n      console.error(\"jsPDF.addSvgAsImage: Invalid measurements\", arguments);\n      throw new Error(\n        \"Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage\"\n      );\n    }\n\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = w;\n    canvas.height = h;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"#fff\"; /// set white fill style\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    var options = {\n      ignoreMouse: true,\n      ignoreAnimation: true,\n      ignoreDimensions: true\n    };\n    var doc = this;\n    return loadCanvg()\n      .then(\n        function(canvg) {\n          return canvg.fromString(ctx, svg, options);\n        },\n        function() {\n          return Promise.reject(new Error(\"Could not load canvg.\"));\n        }\n      )\n      .then(function(instance) {\n        return instance.render(options);\n      })\n      .then(function() {\n        doc.addImage(\n          canvas.toDataURL(\"image/jpeg\", 1.0),\n          x,\n          y,\n          w,\n          h,\n          compression,\n          rotation\n        );\n      });\n  };\n})(jsPDF.API);\n","/**\n * @license\n * ====================================================================\n * Copyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * jsPDF total_pages plugin\n * @name total_pages\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n  /**\n   * @name putTotalPages\n   * @function\n   * @param {string} pageExpression Regular Expression\n   * @returns {jsPDF} jsPDF-instance\n   */\n\n  jsPDFAPI.putTotalPages = function(pageExpression) {\n    \"use strict\";\n\n    var replaceExpression;\n    var totalNumberOfPages = 0;\n    if (parseInt(this.internal.getFont().id.substr(1), 10) < 15) {\n      replaceExpression = new RegExp(pageExpression, \"g\");\n      totalNumberOfPages = this.internal.getNumberOfPages();\n    } else {\n      replaceExpression = new RegExp(\n        this.pdfEscape16(pageExpression, this.internal.getFont()),\n        \"g\"\n      );\n      totalNumberOfPages = this.pdfEscape16(\n        this.internal.getNumberOfPages() + \"\",\n        this.internal.getFont()\n      );\n    }\n\n    for (var n = 1; n <= this.internal.getNumberOfPages(); n++) {\n      for (var i = 0; i < this.internal.pages[n].length; i++) {\n        this.internal.pages[n][i] = this.internal.pages[n][i].replace(\n          replaceExpression,\n          totalNumberOfPages\n        );\n      }\n    }\n\n    return this;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * jsPDF viewerPreferences Plugin\n * @author Aras Abbasi (github.com/arasabbasi)\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * Adds the ability to set ViewerPreferences and by thus\n * controlling the way the document is to be presented on the\n * screen or in print.\n * @name viewerpreferences\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n  /**\n   * Set the ViewerPreferences of the generated PDF\n   *\n   * @name viewerPreferences\n   * @function\n   * @public\n   * @param {Object} options Array with the ViewerPreferences<br />\n   * Example: doc.viewerPreferences({\"FitWindow\":true});<br />\n   * <br />\n   * You can set following preferences:<br />\n   * <br/>\n   * <b>HideToolbar</b> <i>(boolean)</i><br />\n   * Default value: false<br />\n   * <br />\n   * <b>HideMenubar</b> <i>(boolean)</i><br />\n   * Default value: false.<br />\n   * <br />\n   * <b>HideWindowUI</b> <i>(boolean)</i><br />\n   * Default value: false.<br />\n   * <br />\n   * <b>FitWindow</b> <i>(boolean)</i><br />\n   * Default value: false.<br />\n   * <br />\n   * <b>CenterWindow</b> <i>(boolean)</i><br />\n   * Default value: false<br />\n   * <br />\n   * <b>DisplayDocTitle</b> <i>(boolean)</i><br />\n   * Default value: false.<br />\n   * <br />\n   * <b>NonFullScreenPageMode</b> <i>(string)</i><br />\n   * Possible values: UseNone, UseOutlines, UseThumbs, UseOC<br />\n   * Default value: UseNone<br/>\n   * <br />\n   * <b>Direction</b> <i>(string)</i><br />\n   * Possible values: L2R, R2L<br />\n   * Default value: L2R.<br />\n   * <br />\n   * <b>ViewArea</b> <i>(string)</i><br />\n   * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />\n   * Default value: CropBox.<br />\n   * <br />\n   * <b>ViewClip</b> <i>(string)</i><br />\n   * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />\n   * Default value: CropBox<br />\n   * <br />\n   * <b>PrintArea</b> <i>(string)</i><br />\n   * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />\n   * Default value: CropBox<br />\n   * <br />\n   * <b>PrintClip</b> <i>(string)</i><br />\n   * Possible values: MediaBox, CropBox, TrimBox, BleedBox, ArtBox<br />\n   * Default value: CropBox.<br />\n   * <br />\n   * <b>PrintScaling</b> <i>(string)</i><br />\n   * Possible values: AppDefault, None<br />\n   * Default value: AppDefault.<br />\n   * <br />\n   * <b>Duplex</b> <i>(string)</i><br />\n   * Possible values: Simplex, DuplexFlipLongEdge, DuplexFlipShortEdge\n   * Default value: none<br />\n   * <br />\n   * <b>PickTrayByPDFSize</b> <i>(boolean)</i><br />\n   * Default value: false<br />\n   * <br />\n   * <b>PrintPageRange</b> <i>(Array)</i><br />\n   * Example: [[1,5], [7,9]]<br />\n   * Default value: as defined by PDF viewer application<br />\n   * <br />\n   * <b>NumCopies</b> <i>(Number)</i><br />\n   * Possible values: 1, 2, 3, 4, 5<br />\n   * Default value: 1<br />\n   * <br />\n   * For more information see the PDF Reference, sixth edition on Page 577\n   * @param {boolean} doReset True to reset the settings\n   * @function\n   * @returns jsPDF jsPDF-instance\n   * @example\n   * var doc = new jsPDF()\n   * doc.text('This is a test', 10, 10)\n   * doc.viewerPreferences({'FitWindow': true}, true)\n   * doc.save(\"viewerPreferences.pdf\")\n   *\n   * // Example printing 10 copies, using cropbox, and hiding UI.\n   * doc.viewerPreferences({\n   *   'HideWindowUI': true,\n   *   'PrintArea': 'CropBox',\n   *   'NumCopies': 10\n   * })\n   */\n  jsPDFAPI.viewerPreferences = function(options, doReset) {\n    options = options || {};\n    doReset = doReset || false;\n\n    var configuration;\n    var configurationTemplate = {\n      HideToolbar: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.3\n      },\n      HideMenubar: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.3\n      },\n      HideWindowUI: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.3\n      },\n      FitWindow: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.3\n      },\n      CenterWindow: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.3\n      },\n      DisplayDocTitle: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.4\n      },\n      NonFullScreenPageMode: {\n        defaultValue: \"UseNone\",\n        value: \"UseNone\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"UseNone\", \"UseOutlines\", \"UseThumbs\", \"UseOC\"],\n        pdfVersion: 1.3\n      },\n      Direction: {\n        defaultValue: \"L2R\",\n        value: \"L2R\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"L2R\", \"R2L\"],\n        pdfVersion: 1.3\n      },\n      ViewArea: {\n        defaultValue: \"CropBox\",\n        value: \"CropBox\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"MediaBox\", \"CropBox\", \"TrimBox\", \"BleedBox\", \"ArtBox\"],\n        pdfVersion: 1.4\n      },\n      ViewClip: {\n        defaultValue: \"CropBox\",\n        value: \"CropBox\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"MediaBox\", \"CropBox\", \"TrimBox\", \"BleedBox\", \"ArtBox\"],\n        pdfVersion: 1.4\n      },\n      PrintArea: {\n        defaultValue: \"CropBox\",\n        value: \"CropBox\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"MediaBox\", \"CropBox\", \"TrimBox\", \"BleedBox\", \"ArtBox\"],\n        pdfVersion: 1.4\n      },\n      PrintClip: {\n        defaultValue: \"CropBox\",\n        value: \"CropBox\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"MediaBox\", \"CropBox\", \"TrimBox\", \"BleedBox\", \"ArtBox\"],\n        pdfVersion: 1.4\n      },\n      PrintScaling: {\n        defaultValue: \"AppDefault\",\n        value: \"AppDefault\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\"AppDefault\", \"None\"],\n        pdfVersion: 1.6\n      },\n      Duplex: {\n        defaultValue: \"\",\n        value: \"none\",\n        type: \"name\",\n        explicitSet: false,\n        valueSet: [\n          \"Simplex\",\n          \"DuplexFlipShortEdge\",\n          \"DuplexFlipLongEdge\",\n          \"none\"\n        ],\n        pdfVersion: 1.7\n      },\n      PickTrayByPDFSize: {\n        defaultValue: false,\n        value: false,\n        type: \"boolean\",\n        explicitSet: false,\n        valueSet: [true, false],\n        pdfVersion: 1.7\n      },\n      PrintPageRange: {\n        defaultValue: \"\",\n        value: \"\",\n        type: \"array\",\n        explicitSet: false,\n        valueSet: null,\n        pdfVersion: 1.7\n      },\n      NumCopies: {\n        defaultValue: 1,\n        value: 1,\n        type: \"integer\",\n        explicitSet: false,\n        valueSet: null,\n        pdfVersion: 1.7\n      }\n    };\n\n    var configurationKeys = Object.keys(configurationTemplate);\n\n    var rangeArray = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var isValid;\n\n    var method;\n    var value;\n\n    function arrayContainsElement(array, element) {\n      var iterator;\n      var result = false;\n\n      for (iterator = 0; iterator < array.length; iterator += 1) {\n        if (array[iterator] === element) {\n          result = true;\n        }\n      }\n      return result;\n    }\n\n    if (this.internal.viewerpreferences === undefined) {\n      this.internal.viewerpreferences = {};\n      this.internal.viewerpreferences.configuration = JSON.parse(\n        JSON.stringify(configurationTemplate)\n      );\n      this.internal.viewerpreferences.isSubscribed = false;\n    }\n    configuration = this.internal.viewerpreferences.configuration;\n\n    if (options === \"reset\" || doReset === true) {\n      var len = configurationKeys.length;\n\n      for (k = 0; k < len; k += 1) {\n        configuration[configurationKeys[k]].value =\n          configuration[configurationKeys[k]].defaultValue;\n        configuration[configurationKeys[k]].explicitSet = false;\n      }\n    }\n\n    if (typeof options === \"object\") {\n      for (method in options) {\n        value = options[method];\n        if (\n          arrayContainsElement(configurationKeys, method) &&\n          value !== undefined\n        ) {\n          if (\n            configuration[method].type === \"boolean\" &&\n            typeof value === \"boolean\"\n          ) {\n            configuration[method].value = value;\n          } else if (\n            configuration[method].type === \"name\" &&\n            arrayContainsElement(configuration[method].valueSet, value)\n          ) {\n            configuration[method].value = value;\n          } else if (\n            configuration[method].type === \"integer\" &&\n            Number.isInteger(value)\n          ) {\n            configuration[method].value = value;\n          } else if (configuration[method].type === \"array\") {\n            for (i = 0; i < value.length; i += 1) {\n              isValid = true;\n              if (value[i].length === 1 && typeof value[i][0] === \"number\") {\n                rangeArray.push(String(value[i] - 1));\n              } else if (value[i].length > 1) {\n                for (j = 0; j < value[i].length; j += 1) {\n                  if (typeof value[i][j] !== \"number\") {\n                    isValid = false;\n                  }\n                }\n                if (isValid === true) {\n                  rangeArray.push([value[i][0] - 1, value[i][1] - 1].join(\" \"));\n                }\n              }\n            }\n            configuration[method].value = \"[\" + rangeArray.join(\" \") + \"]\";\n          } else {\n            configuration[method].value = configuration[method].defaultValue;\n          }\n\n          configuration[method].explicitSet = true;\n        }\n      }\n    }\n\n    if (this.internal.viewerpreferences.isSubscribed === false) {\n      this.internal.events.subscribe(\"putCatalog\", function() {\n        var pdfDict = [];\n        var vPref;\n        for (vPref in configuration) {\n          if (configuration[vPref].explicitSet === true) {\n            if (configuration[vPref].type === \"name\") {\n              pdfDict.push(\"/\" + vPref + \" /\" + configuration[vPref].value);\n            } else {\n              pdfDict.push(\"/\" + vPref + \" \" + configuration[vPref].value);\n            }\n          }\n        }\n        if (pdfDict.length !== 0) {\n          this.internal.write(\n            \"/ViewerPreferences\\n<<\\n\" + pdfDict.join(\"\\n\") + \"\\n>>\"\n          );\n        }\n      });\n      this.internal.viewerpreferences.isSubscribed = true;\n    }\n\n    this.internal.viewerpreferences.configuration = configuration;\n    return this;\n  };\n})(jsPDF.API);\n","/** ====================================================================\n * @license\n * jsPDF XMP metadata plugin\n * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * @name xmp_metadata\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var postPutResources = function() {\n    var xmpmeta_beginning = '<x:xmpmeta xmlns:x=\"adobe:ns:meta/\">';\n    var rdf_beginning =\n      '<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"><rdf:Description rdf:about=\"\" xmlns:jspdf=\"' +\n      this.internal.__metadata__.namespaceuri +\n      '\"><jspdf:metadata>';\n    var rdf_ending = \"</jspdf:metadata></rdf:Description></rdf:RDF>\";\n    var xmpmeta_ending = \"</x:xmpmeta>\";\n    var utf8_xmpmeta_beginning = unescape(\n      encodeURIComponent(xmpmeta_beginning)\n    );\n    var utf8_rdf_beginning = unescape(encodeURIComponent(rdf_beginning));\n    var utf8_metadata = unescape(\n      encodeURIComponent(this.internal.__metadata__.metadata)\n    );\n    var utf8_rdf_ending = unescape(encodeURIComponent(rdf_ending));\n    var utf8_xmpmeta_ending = unescape(encodeURIComponent(xmpmeta_ending));\n\n    var total_len =\n      utf8_rdf_beginning.length +\n      utf8_metadata.length +\n      utf8_rdf_ending.length +\n      utf8_xmpmeta_beginning.length +\n      utf8_xmpmeta_ending.length;\n\n    this.internal.__metadata__.metadata_object_number = this.internal.newObject();\n    this.internal.write(\n      \"<< /Type /Metadata /Subtype /XML /Length \" + total_len + \" >>\"\n    );\n    this.internal.write(\"stream\");\n    this.internal.write(\n      utf8_xmpmeta_beginning +\n        utf8_rdf_beginning +\n        utf8_metadata +\n        utf8_rdf_ending +\n        utf8_xmpmeta_ending\n    );\n    this.internal.write(\"endstream\");\n    this.internal.write(\"endobj\");\n  };\n\n  var putCatalog = function() {\n    if (this.internal.__metadata__.metadata_object_number) {\n      this.internal.write(\n        \"/Metadata \" +\n          this.internal.__metadata__.metadata_object_number +\n          \" 0 R\"\n      );\n    }\n  };\n\n  /**\n   * Adds XMP formatted metadata to PDF\n   *\n   * @name addMetadata\n   * @function\n   * @param {String} metadata The actual metadata to be added. The metadata shall be stored as XMP simple value. Note that if the metadata string contains XML markup characters \"<\", \">\" or \"&\", those characters should be written using XML entities.\n   * @param {String} namespaceuri Sets the namespace URI for the metadata. Last character should be slash or hash.\n   * @returns {jsPDF} jsPDF-instance\n   */\n  jsPDFAPI.addMetadata = function(metadata, namespaceuri) {\n    if (typeof this.internal.__metadata__ === \"undefined\") {\n      this.internal.__metadata__ = {\n        metadata: metadata,\n        namespaceuri: namespaceuri || \"http://jspdf.default.namespaceuri/\"\n      };\n      this.internal.events.subscribe(\"putCatalog\", putCatalog);\n\n      this.internal.events.subscribe(\"postPutResources\", postPutResources);\n    }\n    return this;\n  };\n})(jsPDF.API);\n","import { jsPDF } from \"../jspdf.js\";\nimport { toPDFName } from \"../libs/pdfname.js\";\n\n/**\n * @name utf8\n * @module\n */\n(function(jsPDF) {\n  \"use strict\";\n  var jsPDFAPI = jsPDF.API;\n\n  /***************************************************************************************************/\n  /* function : pdfEscape16                                                                          */\n  /* comment : The character id of a 2-byte string is converted to a hexadecimal number by obtaining */\n  /*   the corresponding glyph id and width, and then adding padding to the string.                  */\n  /***************************************************************************************************/\n  var pdfEscape16 = (jsPDFAPI.pdfEscape16 = function(text, font) {\n    var widths = font.metadata.Unicode.widths;\n    var padz = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n    var ar = [\"\"];\n    for (var i = 0, l = text.length, t; i < l; ++i) {\n      t = font.metadata.characterToGlyph(text.charCodeAt(i));\n      font.metadata.glyIdsUsed.push(t);\n      font.metadata.toUnicode[t] = text.charCodeAt(i);\n      if (widths.indexOf(t) == -1) {\n        widths.push(t);\n        widths.push([parseInt(font.metadata.widthOfGlyph(t), 10)]);\n      }\n      if (t == \"0\") {\n        //Spaces are not allowed in cmap.\n        return ar.join(\"\");\n      } else {\n        t = t.toString(16);\n        ar.push(padz[4 - t.length], t);\n      }\n    }\n    return ar.join(\"\");\n  });\n\n  var toUnicodeCmap = function(map) {\n    var code, codes, range, unicode, unicodeMap, _i, _len;\n    unicodeMap =\n      \"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\";\n    codes = Object.keys(map).sort(function(a, b) {\n      return a - b;\n    });\n\n    range = [];\n    for (_i = 0, _len = codes.length; _i < _len; _i++) {\n      code = codes[_i];\n      if (range.length >= 100) {\n        unicodeMap +=\n          \"\\n\" +\n          range.length +\n          \" beginbfchar\\n\" +\n          range.join(\"\\n\") +\n          \"\\nendbfchar\";\n        range = [];\n      }\n\n      if (\n        map[code] !== undefined &&\n        map[code] !== null &&\n        typeof map[code].toString === \"function\"\n      ) {\n        unicode = (\"0000\" + map[code].toString(16)).slice(-4);\n        code = (\"0000\" + (+code).toString(16)).slice(-4);\n        range.push(\"<\" + code + \"><\" + unicode + \">\");\n      }\n    }\n\n    if (range.length) {\n      unicodeMap +=\n        \"\\n\" +\n        range.length +\n        \" beginbfchar\\n\" +\n        range.join(\"\\n\") +\n        \"\\nendbfchar\\n\";\n    }\n    unicodeMap +=\n      \"endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\";\n    return unicodeMap;\n  };\n\n  var identityHFunction = function(options) {\n    var font = options.font;\n    var out = options.out;\n    var newObject = options.newObject;\n    var putStream = options.putStream;\n\n    if (\n      font.metadata instanceof jsPDF.API.TTFFont &&\n      font.encoding === \"Identity-H\"\n    ) {\n      //Tag with Identity-H\n      var widths = font.metadata.Unicode.widths;\n      var data = font.metadata.subset.encode(font.metadata.glyIdsUsed, 1);\n      var pdfOutput = data;\n      var pdfOutput2 = \"\";\n      for (var i = 0; i < pdfOutput.length; i++) {\n        pdfOutput2 += String.fromCharCode(pdfOutput[i]);\n      }\n      var fontTable = newObject();\n      putStream({ data: pdfOutput2, addLength1: true, objectId: fontTable });\n      out(\"endobj\");\n\n      var cmap = newObject();\n      var cmapData = toUnicodeCmap(font.metadata.toUnicode);\n      putStream({ data: cmapData, addLength1: true, objectId: cmap });\n      out(\"endobj\");\n\n      var fontDescriptor = newObject();\n      out(\"<<\");\n      out(\"/Type /FontDescriptor\");\n      out(\"/FontName /\" + toPDFName(font.fontName));\n      out(\"/FontFile2 \" + fontTable + \" 0 R\");\n      out(\"/FontBBox \" + jsPDF.API.PDFObject.convert(font.metadata.bbox));\n      out(\"/Flags \" + font.metadata.flags);\n      out(\"/StemV \" + font.metadata.stemV);\n      out(\"/ItalicAngle \" + font.metadata.italicAngle);\n      out(\"/Ascent \" + font.metadata.ascender);\n      out(\"/Descent \" + font.metadata.decender);\n      out(\"/CapHeight \" + font.metadata.capHeight);\n      out(\">>\");\n      out(\"endobj\");\n\n      var DescendantFont = newObject();\n      out(\"<<\");\n      out(\"/Type /Font\");\n      out(\"/BaseFont /\" + toPDFName(font.fontName));\n      out(\"/FontDescriptor \" + fontDescriptor + \" 0 R\");\n      out(\"/W \" + jsPDF.API.PDFObject.convert(widths));\n      out(\"/CIDToGIDMap /Identity\");\n      out(\"/DW 1000\");\n      out(\"/Subtype /CIDFontType2\");\n      out(\"/CIDSystemInfo\");\n      out(\"<<\");\n      out(\"/Supplement 0\");\n      out(\"/Registry (Adobe)\");\n      out(\"/Ordering (\" + font.encoding + \")\");\n      out(\">>\");\n      out(\">>\");\n      out(\"endobj\");\n\n      font.objectNumber = newObject();\n      out(\"<<\");\n      out(\"/Type /Font\");\n      out(\"/Subtype /Type0\");\n      out(\"/ToUnicode \" + cmap + \" 0 R\");\n      out(\"/BaseFont /\" + toPDFName(font.fontName));\n      out(\"/Encoding /\" + font.encoding);\n      out(\"/DescendantFonts [\" + DescendantFont + \" 0 R]\");\n      out(\">>\");\n      out(\"endobj\");\n\n      font.isAlreadyPutted = true;\n    }\n  };\n\n  jsPDFAPI.events.push([\n    \"putFont\",\n    function(args) {\n      identityHFunction(args);\n    }\n  ]);\n\n  var winAnsiEncodingFunction = function(options) {\n    var font = options.font;\n    var out = options.out;\n    var newObject = options.newObject;\n    var putStream = options.putStream;\n\n    if (\n      font.metadata instanceof jsPDF.API.TTFFont &&\n      font.encoding === \"WinAnsiEncoding\"\n    ) {\n      //Tag with WinAnsi encoding\n      var data = font.metadata.rawData;\n      var pdfOutput = data;\n      var pdfOutput2 = \"\";\n      for (var i = 0; i < pdfOutput.length; i++) {\n        pdfOutput2 += String.fromCharCode(pdfOutput[i]);\n      }\n      var fontTable = newObject();\n      putStream({ data: pdfOutput2, addLength1: true, objectId: fontTable });\n      out(\"endobj\");\n\n      var cmap = newObject();\n      var cmapData = toUnicodeCmap(font.metadata.toUnicode);\n      putStream({ data: cmapData, addLength1: true, objectId: cmap });\n      out(\"endobj\");\n\n      var fontDescriptor = newObject();\n      out(\"<<\");\n      out(\"/Descent \" + font.metadata.decender);\n      out(\"/CapHeight \" + font.metadata.capHeight);\n      out(\"/StemV \" + font.metadata.stemV);\n      out(\"/Type /FontDescriptor\");\n      out(\"/FontFile2 \" + fontTable + \" 0 R\");\n      out(\"/Flags 96\");\n      out(\"/FontBBox \" + jsPDF.API.PDFObject.convert(font.metadata.bbox));\n      out(\"/FontName /\" + toPDFName(font.fontName));\n      out(\"/ItalicAngle \" + font.metadata.italicAngle);\n      out(\"/Ascent \" + font.metadata.ascender);\n      out(\">>\");\n      out(\"endobj\");\n      font.objectNumber = newObject();\n      for (var j = 0; j < font.metadata.hmtx.widths.length; j++) {\n        font.metadata.hmtx.widths[j] = parseInt(\n          font.metadata.hmtx.widths[j] * (1000 / font.metadata.head.unitsPerEm)\n        ); //Change the width of Em units to Point units.\n      }\n      out(\n        \"<</Subtype/TrueType/Type/Font/ToUnicode \" +\n          cmap +\n          \" 0 R/BaseFont/\" +\n          toPDFName(font.fontName) +\n          \"/FontDescriptor \" +\n          fontDescriptor +\n          \" 0 R\" +\n          \"/Encoding/\" +\n          font.encoding +\n          \" /FirstChar 29 /LastChar 255 /Widths \" +\n          jsPDF.API.PDFObject.convert(font.metadata.hmtx.widths) +\n          \">>\"\n      );\n      out(\"endobj\");\n      font.isAlreadyPutted = true;\n    }\n  };\n\n  jsPDFAPI.events.push([\n    \"putFont\",\n    function(args) {\n      winAnsiEncodingFunction(args);\n    }\n  ]);\n\n  var utf8TextFunction = function(args) {\n    var text = args.text || \"\";\n    var x = args.x;\n    var y = args.y;\n    var options = args.options || {};\n    var mutex = args.mutex || {};\n\n    var pdfEscape = mutex.pdfEscape;\n    var activeFontKey = mutex.activeFontKey;\n    var fonts = mutex.fonts;\n    var key = activeFontKey;\n\n    var str = \"\",\n      s = 0,\n      cmapConfirm;\n    var strText = \"\";\n    var encoding = fonts[key].encoding;\n\n    if (fonts[key].encoding !== \"Identity-H\") {\n      return {\n        text: text,\n        x: x,\n        y: y,\n        options: options,\n        mutex: mutex\n      };\n    }\n    strText = text;\n\n    key = activeFontKey;\n    if (Array.isArray(text)) {\n      strText = text[0];\n    }\n    for (s = 0; s < strText.length; s += 1) {\n      if (fonts[key].metadata.hasOwnProperty(\"cmap\")) {\n        cmapConfirm =\n          fonts[key].metadata.cmap.unicode.codeMap[strText[s].charCodeAt(0)];\n        /*\n             if (Object.prototype.toString.call(text) === '[object Array]') {\n                var i = 0;\n               // for (i = 0; i < text.length; i += 1) {\n                    if (Object.prototype.toString.call(text[s]) === '[object Array]') {\n                        cmapConfirm = fonts[key].metadata.cmap.unicode.codeMap[strText[s][0].charCodeAt(0)]; //Make sure the cmap has the corresponding glyph id\n                    } else {\n\n                    }\n                //}\n\n            } else {\n                cmapConfirm = fonts[key].metadata.cmap.unicode.codeMap[strText[s].charCodeAt(0)]; //Make sure the cmap has the corresponding glyph id\n            }*/\n      }\n      if (!cmapConfirm) {\n        if (\n          strText[s].charCodeAt(0) < 256 &&\n          fonts[key].metadata.hasOwnProperty(\"Unicode\")\n        ) {\n          str += strText[s];\n        } else {\n          str += \"\";\n        }\n      } else {\n        str += strText[s];\n      }\n    }\n    var result = \"\";\n    if (parseInt(key.slice(1)) < 14 || encoding === \"WinAnsiEncoding\") {\n      //For the default 13 font\n      result = pdfEscape(str, key)\n        .split(\"\")\n        .map(function(cv) {\n          return cv.charCodeAt(0).toString(16);\n        })\n        .join(\"\");\n    } else if (encoding === \"Identity-H\") {\n      result = pdfEscape16(str, fonts[key]);\n    }\n    mutex.isHex = true;\n\n    return {\n      text: result,\n      x: x,\n      y: y,\n      options: options,\n      mutex: mutex\n    };\n  };\n\n  var utf8EscapeFunction = function(parms) {\n    var text = parms.text || \"\",\n      x = parms.x,\n      y = parms.y,\n      options = parms.options,\n      mutex = parms.mutex;\n    var tmpText = [];\n    var args = {\n      text: text,\n      x: x,\n      y: y,\n      options: options,\n      mutex: mutex\n    };\n\n    if (Array.isArray(text)) {\n      var i = 0;\n      for (i = 0; i < text.length; i += 1) {\n        if (Array.isArray(text[i])) {\n          if (text[i].length === 3) {\n            tmpText.push([\n              utf8TextFunction(Object.assign({}, args, { text: text[i][0] }))\n                .text,\n              text[i][1],\n              text[i][2]\n            ]);\n          } else {\n            tmpText.push(\n              utf8TextFunction(Object.assign({}, args, { text: text[i] })).text\n            );\n          }\n        } else {\n          tmpText.push(\n            utf8TextFunction(Object.assign({}, args, { text: text[i] })).text\n          );\n        }\n      }\n      parms.text = tmpText;\n    } else {\n      parms.text = utf8TextFunction(\n        Object.assign({}, args, { text: text })\n      ).text;\n    }\n  };\n\n  jsPDFAPI.events.push([\"postProcessText\", utf8EscapeFunction]);\n})(jsPDF);\n","/**\n * @license\n * jsPDF virtual FileSystem functionality\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n/**\n * Use the vFS to handle files\n *\n * @name vFS\n * @module\n */\n(function(jsPDFAPI) {\n  \"use strict\";\n\n  var _initializeVFS = function() {\n    if (typeof this.internal.vFS === \"undefined\") {\n      this.internal.vFS = {};\n    }\n    return true;\n  };\n\n  /**\n   * Check if the file exists in the vFS\n   *\n   * @name existsFileInVFS\n   * @function\n   * @param {string} Possible filename in the vFS.\n   * @returns {boolean}\n   * @example\n   * doc.existsFileInVFS(\"someFile.txt\");\n   */\n  jsPDFAPI.existsFileInVFS = function(filename) {\n    _initializeVFS.call(this);\n    return typeof this.internal.vFS[filename] !== \"undefined\";\n  };\n\n  /**\n   * Add a file to the vFS\n   *\n   * @name addFileToVFS\n   * @function\n   * @param {string} filename The name of the file which should be added.\n   * @param {string} filecontent The content of the file.\n   * @returns {jsPDF}\n   * @example\n   * doc.addFileToVFS(\"someFile.txt\", \"BADFACE1\");\n   */\n  jsPDFAPI.addFileToVFS = function(filename, filecontent) {\n    _initializeVFS.call(this);\n    this.internal.vFS[filename] = filecontent;\n    return this;\n  };\n\n  /**\n   * Get the file from the vFS\n   *\n   * @name getFileFromVFS\n   * @function\n   * @param {string} The name of the file which gets requested.\n   * @returns {string}\n   * @example\n   * doc.getFileFromVFS(\"someFile.txt\");\n   */\n  jsPDFAPI.getFileFromVFS = function(filename) {\n    _initializeVFS.call(this);\n\n    if (typeof this.internal.vFS[filename] !== \"undefined\") {\n      return this.internal.vFS[filename];\n    }\n    return null;\n  };\n})(jsPDF.API);\n","/**\n * @license\n * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)\n * MIT License\n */\n\nimport { jsPDF } from \"../jspdf.js\";\n\n(function(jsPDF) {\n  \"use strict\";\n  /**\n   * Table of Unicode types.\n   *\n   * Generated by:\n   *\n   * var bidi = require(\"./bidi/index\");\n   * var bidi_accumulate = bidi.slice(0, 256).concat(bidi.slice(0x0500, 0x0500 + 256 * 3)).\n   * concat(bidi.slice(0x2000, 0x2000 + 256)).concat(bidi.slice(0xFB00, 0xFB00 + 256)).\n   * concat(bidi.slice(0xFE00, 0xFE00 + 2 * 256));\n   *\n   * for( var i = 0; i < bidi_accumulate.length; i++) {\n   * \tif(bidi_accumulate[i] === undefined || bidi_accumulate[i] === 'ON')\n   * \t\tbidi_accumulate[i] = 'N'; //mark as neutral to conserve space and substitute undefined\n   * }\n   * var bidiAccumulateStr = 'return [ \"' + bidi_accumulate.toString().replace(/,/g, '\", \"') + '\" ];';\n   * require(\"fs\").writeFile('unicode-types.js', bidiAccumulateStr);\n   *\n   * Based on:\n   * https://github.com/mathiasbynens/unicode-8.0.0\n   */\n  var bidiUnicodeTypes = [\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"S\",\n    \"B\",\n    \"S\",\n    \"WS\",\n    \"B\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"B\",\n    \"B\",\n    \"B\",\n    \"S\",\n    \"WS\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ES\",\n    \"CS\",\n    \"ES\",\n    \"CS\",\n    \"CS\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"CS\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"B\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"CS\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"BN\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"EN\",\n    \"EN\",\n    \"N\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"EN\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"R\",\n    \"NSM\",\n    \"R\",\n    \"NSM\",\n    \"NSM\",\n    \"R\",\n    \"NSM\",\n    \"NSM\",\n    \"R\",\n    \"NSM\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"N\",\n    \"N\",\n    \"AL\",\n    \"ET\",\n    \"ET\",\n    \"AL\",\n    \"CS\",\n    \"AL\",\n    \"N\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AL\",\n    \"AL\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"AN\",\n    \"ET\",\n    \"AN\",\n    \"AN\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AN\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AL\",\n    \"AL\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"N\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"AL\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"R\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"WS\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"L\",\n    \"R\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"WS\",\n    \"B\",\n    \"LRE\",\n    \"RLE\",\n    \"PDF\",\n    \"LRO\",\n    \"RLO\",\n    \"CS\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"CS\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"WS\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"N\",\n    \"LRI\",\n    \"RLI\",\n    \"FSI\",\n    \"PDI\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"BN\",\n    \"EN\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"ES\",\n    \"ES\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"ES\",\n    \"ES\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"R\",\n    \"NSM\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"ES\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"R\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"N\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"R\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"NSM\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"CS\",\n    \"N\",\n    \"CS\",\n    \"N\",\n    \"N\",\n    \"CS\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"ES\",\n    \"ES\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"N\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"AL\",\n    \"N\",\n    \"N\",\n    \"BN\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ES\",\n    \"CS\",\n    \"ES\",\n    \"CS\",\n    \"CS\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"EN\",\n    \"CS\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"L\",\n    \"L\",\n    \"L\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"ET\",\n    \"ET\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\",\n    \"N\"\n  ];\n\n  /**\n   * Unicode Bidi algorithm compliant Bidi engine.\n   * For reference see http://unicode.org/reports/tr9/\n   */\n\n  /**\n   * constructor ( options )\n   *\n   * Initializes Bidi engine\n   *\n   * @param {Object} See 'setOptions' below for detailed description.\n   * options are cashed between invocation of 'doBidiReorder' method\n   *\n   * sample usage pattern of BidiEngine:\n   * var opt = {\n   * \tisInputVisual: true,\n   * \tisInputRtl: false,\n   * \tisOutputVisual: false,\n   * \tisOutputRtl: false,\n   * \tisSymmetricSwapping: true\n   * }\n   * var sourceToTarget = [], levels = [];\n   * var bidiEng = Globalize.bidiEngine(opt);\n   * var src = \"text string to be reordered\";\n   * var ret = bidiEng.doBidiReorder(src, sourceToTarget, levels);\n   */\n\n  jsPDF.__bidiEngine__ = jsPDF.prototype.__bidiEngine__ = function(options) {\n    var _UNICODE_TYPES = _bidiUnicodeTypes;\n\n    var _STATE_TABLE_LTR = [\n      [0, 3, 0, 1, 0, 0, 0],\n      [0, 3, 0, 1, 2, 2, 0],\n      [0, 3, 0, 0x11, 2, 0, 1],\n      [0, 3, 5, 5, 4, 1, 0],\n      [0, 3, 0x15, 0x15, 4, 0, 1],\n      [0, 3, 5, 5, 4, 2, 0]\n    ];\n\n    var _STATE_TABLE_RTL = [\n      [2, 0, 1, 1, 0, 1, 0],\n      [2, 0, 1, 1, 0, 2, 0],\n      [2, 0, 2, 1, 3, 2, 0],\n      [2, 0, 2, 0x21, 3, 1, 1]\n    ];\n\n    var _TYPE_NAMES_MAP = { L: 0, R: 1, EN: 2, AN: 3, N: 4, B: 5, S: 6 };\n\n    var _UNICODE_RANGES_MAP = {\n      0: 0,\n      5: 1,\n      6: 2,\n      7: 3,\n      0x20: 4,\n      0xfb: 5,\n      0xfe: 6,\n      0xff: 7\n    };\n\n    var _SWAP_TABLE = [\n      \"\\u0028\",\n      \"\\u0029\",\n      \"\\u0028\",\n      \"\\u003C\",\n      \"\\u003E\",\n      \"\\u003C\",\n      \"\\u005B\",\n      \"\\u005D\",\n      \"\\u005B\",\n      \"\\u007B\",\n      \"\\u007D\",\n      \"\\u007B\",\n      \"\\u00AB\",\n      \"\\u00BB\",\n      \"\\u00AB\",\n      \"\\u2039\",\n      \"\\u203A\",\n      \"\\u2039\",\n      \"\\u2045\",\n      \"\\u2046\",\n      \"\\u2045\",\n      \"\\u207D\",\n      \"\\u207E\",\n      \"\\u207D\",\n      \"\\u208D\",\n      \"\\u208E\",\n      \"\\u208D\",\n      \"\\u2264\",\n      \"\\u2265\",\n      \"\\u2264\",\n      \"\\u2329\",\n      \"\\u232A\",\n      \"\\u2329\",\n      \"\\uFE59\",\n      \"\\uFE5A\",\n      \"\\uFE59\",\n      \"\\uFE5B\",\n      \"\\uFE5C\",\n      \"\\uFE5B\",\n      \"\\uFE5D\",\n      \"\\uFE5E\",\n      \"\\uFE5D\",\n      \"\\uFE64\",\n      \"\\uFE65\",\n      \"\\uFE64\"\n    ];\n\n    var _LTR_RANGES_REG_EXPR = new RegExp(\n      /^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/\n    );\n\n    var _lastArabic = false,\n      _hasUbatAl,\n      _hasUbatB,\n      _hasUbatS,\n      DIR_LTR = 0,\n      DIR_RTL = 1,\n      _isInVisual,\n      _isInRtl,\n      _isOutVisual,\n      _isOutRtl,\n      _isSymmetricSwapping,\n      _dir = DIR_LTR;\n\n    this.__bidiEngine__ = {};\n\n    var _init = function(text, sourceToTargetMap) {\n      if (sourceToTargetMap) {\n        for (var i = 0; i < text.length; i++) {\n          sourceToTargetMap[i] = i;\n        }\n      }\n      if (_isInRtl === undefined) {\n        _isInRtl = _isContextualDirRtl(text);\n      }\n      if (_isOutRtl === undefined) {\n        _isOutRtl = _isContextualDirRtl(text);\n      }\n    };\n\n    // for reference see 3.2 in http://unicode.org/reports/tr9/\n    //\n    var _getCharType = function(ch) {\n      var charCode = ch.charCodeAt(),\n        range = charCode >> 8,\n        rangeIdx = _UNICODE_RANGES_MAP[range];\n\n      if (rangeIdx !== undefined) {\n        return _UNICODE_TYPES[rangeIdx * 256 + (charCode & 0xff)];\n      } else if (range === 0xfc || range === 0xfd) {\n        return \"AL\";\n      } else if (_LTR_RANGES_REG_EXPR.test(range)) {\n        //unlikely case\n        return \"L\";\n      } else if (range === 8) {\n        // even less likely\n        return \"R\";\n      }\n      return \"N\"; //undefined type, mark as neutral\n    };\n\n    var _isContextualDirRtl = function(text) {\n      for (var i = 0, charType; i < text.length; i++) {\n        charType = _getCharType(text.charAt(i));\n        if (charType === \"L\") {\n          return false;\n        } else if (charType === \"R\") {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    // for reference see 3.3.4 & 3.3.5 in http://unicode.org/reports/tr9/\n    //\n    var _resolveCharType = function(chars, types, resolvedTypes, index) {\n      var cType = types[index],\n        wType,\n        nType,\n        i,\n        len;\n      switch (cType) {\n        case \"L\":\n        case \"R\":\n          _lastArabic = false;\n          break;\n        case \"N\":\n        case \"AN\":\n          break;\n\n        case \"EN\":\n          if (_lastArabic) {\n            cType = \"AN\";\n          }\n          break;\n\n        case \"AL\":\n          _lastArabic = true;\n          _hasUbatAl = true;\n          cType = \"R\";\n          break;\n\n        case \"WS\":\n          cType = \"N\";\n          break;\n\n        case \"CS\":\n          if (\n            index < 1 ||\n            index + 1 >= types.length ||\n            ((wType = resolvedTypes[index - 1]) !== \"EN\" && wType !== \"AN\") ||\n            ((nType = types[index + 1]) !== \"EN\" && nType !== \"AN\")\n          ) {\n            cType = \"N\";\n          } else if (_lastArabic) {\n            nType = \"AN\";\n          }\n          cType = nType === wType ? nType : \"N\";\n          break;\n\n        case \"ES\":\n          wType = index > 0 ? resolvedTypes[index - 1] : \"B\";\n          cType =\n            wType === \"EN\" &&\n            index + 1 < types.length &&\n            types[index + 1] === \"EN\"\n              ? \"EN\"\n              : \"N\";\n          break;\n\n        case \"ET\":\n          if (index > 0 && resolvedTypes[index - 1] === \"EN\") {\n            cType = \"EN\";\n            break;\n          } else if (_lastArabic) {\n            cType = \"N\";\n            break;\n          }\n          i = index + 1;\n          len = types.length;\n          while (i < len && types[i] === \"ET\") {\n            i++;\n          }\n          if (i < len && types[i] === \"EN\") {\n            cType = \"EN\";\n          } else {\n            cType = \"N\";\n          }\n          break;\n\n        case \"NSM\":\n          if (_isInVisual && !_isInRtl) {\n            //V->L\n            len = types.length;\n            i = index + 1;\n            while (i < len && types[i] === \"NSM\") {\n              i++;\n            }\n            if (i < len) {\n              var c = chars[index];\n              var rtlCandidate = (c >= 0x0591 && c <= 0x08ff) || c === 0xfb1e;\n              wType = types[i];\n              if (rtlCandidate && (wType === \"R\" || wType === \"AL\")) {\n                cType = \"R\";\n                break;\n              }\n            }\n          }\n          if (index < 1 || (wType = types[index - 1]) === \"B\") {\n            cType = \"N\";\n          } else {\n            cType = resolvedTypes[index - 1];\n          }\n          break;\n\n        case \"B\":\n          _lastArabic = false;\n          _hasUbatB = true;\n          cType = _dir;\n          break;\n\n        case \"S\":\n          _hasUbatS = true;\n          cType = \"N\";\n          break;\n\n        case \"LRE\":\n        case \"RLE\":\n        case \"LRO\":\n        case \"RLO\":\n        case \"PDF\":\n          _lastArabic = false;\n          break;\n        case \"BN\":\n          cType = \"N\";\n          break;\n      }\n      return cType;\n    };\n\n    var _handleUbatS = function(types, levels, length) {\n      for (var i = 0; i < length; i++) {\n        if (types[i] === \"S\") {\n          levels[i] = _dir;\n          for (var j = i - 1; j >= 0; j--) {\n            if (types[j] === \"WS\") {\n              levels[j] = _dir;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    var _invertString = function(text, sourceToTargetMap, levels) {\n      var charArray = text.split(\"\");\n      if (levels) {\n        _computeLevels(charArray, levels, { hiLevel: _dir });\n      }\n      charArray.reverse();\n      sourceToTargetMap && sourceToTargetMap.reverse();\n      return charArray.join(\"\");\n    };\n\n    // For reference see 3.3 in http://unicode.org/reports/tr9/\n    //\n    var _computeLevels = function(chars, levels, params) {\n      var action,\n        condition,\n        i,\n        index,\n        newLevel,\n        prevState,\n        condPos = -1,\n        len = chars.length,\n        newState = 0,\n        resolvedTypes = [],\n        stateTable = _dir ? _STATE_TABLE_RTL : _STATE_TABLE_LTR,\n        types = [];\n\n      _lastArabic = false;\n      _hasUbatAl = false;\n      _hasUbatB = false;\n      _hasUbatS = false;\n      for (i = 0; i < len; i++) {\n        types[i] = _getCharType(chars[i]);\n      }\n      for (index = 0; index < len; index++) {\n        prevState = newState;\n        resolvedTypes[index] = _resolveCharType(\n          chars,\n          types,\n          resolvedTypes,\n          index\n        );\n        newState = stateTable[prevState][_TYPE_NAMES_MAP[resolvedTypes[index]]];\n        action = newState & 0xf0;\n        newState &= 0x0f;\n        levels[index] = newLevel = stateTable[newState][5];\n        if (action > 0) {\n          if (action === 0x10) {\n            for (i = condPos; i < index; i++) {\n              levels[i] = 1;\n            }\n            condPos = -1;\n          } else {\n            condPos = -1;\n          }\n        }\n        condition = stateTable[newState][6];\n        if (condition) {\n          if (condPos === -1) {\n            condPos = index;\n          }\n        } else {\n          if (condPos > -1) {\n            for (i = condPos; i < index; i++) {\n              levels[i] = newLevel;\n            }\n            condPos = -1;\n          }\n        }\n        if (types[index] === \"B\") {\n          levels[index] = 0;\n        }\n        params.hiLevel |= newLevel;\n      }\n      if (_hasUbatS) {\n        _handleUbatS(types, levels, len);\n      }\n    };\n\n    // for reference see 3.4 in http://unicode.org/reports/tr9/\n    //\n    var _invertByLevel = function(\n      level,\n      charArray,\n      sourceToTargetMap,\n      levels,\n      params\n    ) {\n      if (params.hiLevel < level) {\n        return;\n      }\n      if (level === 1 && _dir === DIR_RTL && !_hasUbatB) {\n        charArray.reverse();\n        sourceToTargetMap && sourceToTargetMap.reverse();\n        return;\n      }\n      var ch,\n        high,\n        end,\n        low,\n        len = charArray.length,\n        start = 0;\n\n      while (start < len) {\n        if (levels[start] >= level) {\n          end = start + 1;\n          while (end < len && levels[end] >= level) {\n            end++;\n          }\n          for (low = start, high = end - 1; low < high; low++, high--) {\n            ch = charArray[low];\n            charArray[low] = charArray[high];\n            charArray[high] = ch;\n            if (sourceToTargetMap) {\n              ch = sourceToTargetMap[low];\n              sourceToTargetMap[low] = sourceToTargetMap[high];\n              sourceToTargetMap[high] = ch;\n            }\n          }\n          start = end;\n        }\n        start++;\n      }\n    };\n\n    // for reference see 7 & BD16 in http://unicode.org/reports/tr9/\n    //\n    var _symmetricSwap = function(charArray, levels, params) {\n      if (params.hiLevel !== 0 && _isSymmetricSwapping) {\n        for (var i = 0, index; i < charArray.length; i++) {\n          if (levels[i] === 1) {\n            index = _SWAP_TABLE.indexOf(charArray[i]);\n            if (index >= 0) {\n              charArray[i] = _SWAP_TABLE[index + 1];\n            }\n          }\n        }\n      }\n    };\n\n    var _reorder = function(text, sourceToTargetMap, levels) {\n      var charArray = text.split(\"\"),\n        params = { hiLevel: _dir };\n\n      if (!levels) {\n        levels = [];\n      }\n      _computeLevels(charArray, levels, params);\n      _symmetricSwap(charArray, levels, params);\n      _invertByLevel(DIR_RTL + 1, charArray, sourceToTargetMap, levels, params);\n      _invertByLevel(DIR_RTL, charArray, sourceToTargetMap, levels, params);\n      return charArray.join(\"\");\n    };\n\n    // doBidiReorder( text, sourceToTargetMap, levels )\n    // Performs Bidi reordering by implementing Unicode Bidi algorithm.\n    // Returns reordered string\n    // @text [String]:\n    // - input string to be reordered, this is input parameter\n    // $sourceToTargetMap [Array] (optional)\n    // - resultant mapping between input and output strings, this is output parameter\n    // $levels [Array] (optional)\n    // - array of calculated Bidi levels, , this is output parameter\n    this.__bidiEngine__.doBidiReorder = function(\n      text,\n      sourceToTargetMap,\n      levels\n    ) {\n      _init(text, sourceToTargetMap);\n      if (!_isInVisual && _isOutVisual && !_isOutRtl) {\n        // LLTR->VLTR, LRTL->VLTR\n        _dir = _isInRtl ? DIR_RTL : DIR_LTR;\n        text = _reorder(text, sourceToTargetMap, levels);\n      } else if (_isInVisual && _isOutVisual && _isInRtl ^ _isOutRtl) {\n        // VRTL->VLTR, VLTR->VRTL\n        _dir = _isInRtl ? DIR_RTL : DIR_LTR;\n        text = _invertString(text, sourceToTargetMap, levels);\n      } else if (!_isInVisual && _isOutVisual && _isOutRtl) {\n        // LLTR->VRTL, LRTL->VRTL\n        _dir = _isInRtl ? DIR_RTL : DIR_LTR;\n        text = _reorder(text, sourceToTargetMap, levels);\n        text = _invertString(text, sourceToTargetMap);\n      } else if (_isInVisual && !_isInRtl && !_isOutVisual && !_isOutRtl) {\n        // VLTR->LLTR\n        _dir = DIR_LTR;\n        text = _reorder(text, sourceToTargetMap, levels);\n      } else if (_isInVisual && !_isOutVisual && _isInRtl ^ _isOutRtl) {\n        // VLTR->LRTL, VRTL->LLTR\n        text = _invertString(text, sourceToTargetMap);\n        if (_isInRtl) {\n          //LLTR -> VLTR\n          _dir = DIR_LTR;\n          text = _reorder(text, sourceToTargetMap, levels);\n        } else {\n          //LRTL -> VRTL\n          _dir = DIR_RTL;\n          text = _reorder(text, sourceToTargetMap, levels);\n          text = _invertString(text, sourceToTargetMap);\n        }\n      } else if (_isInVisual && _isInRtl && !_isOutVisual && _isOutRtl) {\n        //  VRTL->LRTL\n        _dir = DIR_RTL;\n        text = _reorder(text, sourceToTargetMap, levels);\n        text = _invertString(text, sourceToTargetMap);\n      } else if (!_isInVisual && !_isOutVisual && _isInRtl ^ _isOutRtl) {\n        // LRTL->LLTR, LLTR->LRTL\n        var isSymmetricSwappingOrig = _isSymmetricSwapping;\n        if (_isInRtl) {\n          //LRTL->LLTR\n          _dir = DIR_RTL;\n          text = _reorder(text, sourceToTargetMap, levels);\n          _dir = DIR_LTR;\n          _isSymmetricSwapping = false;\n          text = _reorder(text, sourceToTargetMap, levels);\n          _isSymmetricSwapping = isSymmetricSwappingOrig;\n        } else {\n          //LLTR->LRTL\n          _dir = DIR_LTR;\n          text = _reorder(text, sourceToTargetMap, levels);\n          text = _invertString(text, sourceToTargetMap);\n          _dir = DIR_RTL;\n          _isSymmetricSwapping = false;\n          text = _reorder(text, sourceToTargetMap, levels);\n          _isSymmetricSwapping = isSymmetricSwappingOrig;\n          text = _invertString(text, sourceToTargetMap);\n        }\n      }\n      return text;\n    };\n\n    /**\n     * @name setOptions( options )\n     * @function\n     * Sets options for Bidi conversion\n     * @param {Object}:\n     * - isInputVisual {boolean} (defaults to false): allowed values: true(Visual mode), false(Logical mode)\n     * - isInputRtl {boolean}: allowed values true(Right-to-left direction), false (Left-to-right directiion), undefined(Contectual direction, i.e.direction defined by first strong character of input string)\n     * - isOutputVisual {boolean} (defaults to false): allowed values: true(Visual mode), false(Logical mode)\n     * - isOutputRtl {boolean}: allowed values true(Right-to-left direction), false (Left-to-right directiion), undefined(Contectual direction, i.e.direction defined by first strong characterof input string)\n     * - isSymmetricSwapping {boolean} (defaults to false): allowed values true(needs symmetric swapping), false (no need in symmetric swapping),\n     */\n    this.__bidiEngine__.setOptions = function(options) {\n      if (options) {\n        _isInVisual = options.isInputVisual;\n        _isOutVisual = options.isOutputVisual;\n        _isInRtl = options.isInputRtl;\n        _isOutRtl = options.isOutputRtl;\n        _isSymmetricSwapping = options.isSymmetricSwapping;\n      }\n    };\n\n    this.__bidiEngine__.setOptions(options);\n    return this.__bidiEngine__;\n  };\n\n  var _bidiUnicodeTypes = bidiUnicodeTypes;\n\n  var bidiEngine = new jsPDF.__bidiEngine__({ isInputVisual: true });\n\n  var bidiEngineFunction = function(args) {\n    var text = args.text;\n    var x = args.x;\n    var y = args.y;\n    var options = args.options || {};\n    var mutex = args.mutex || {};\n    var lang = options.lang;\n    var tmpText = [];\n\n    options.isInputVisual =\n      typeof options.isInputVisual === \"boolean\" ? options.isInputVisual : true;\n    bidiEngine.setOptions(options);\n\n    if (Object.prototype.toString.call(text) === \"[object Array]\") {\n      var i = 0;\n      tmpText = [];\n      for (i = 0; i < text.length; i += 1) {\n        if (Object.prototype.toString.call(text[i]) === \"[object Array]\") {\n          tmpText.push([\n            bidiEngine.doBidiReorder(text[i][0]),\n            text[i][1],\n            text[i][2]\n          ]);\n        } else {\n          tmpText.push([bidiEngine.doBidiReorder(text[i])]);\n        }\n      }\n      args.text = tmpText;\n    } else {\n      args.text = bidiEngine.doBidiReorder(text);\n    }\n    bidiEngine.setOptions({ isInputVisual: true });\n  };\n\n  jsPDF.API.events.push([\"postProcessText\", bidiEngineFunction]);\n})(jsPDF);\n","/* eslint-disable no-control-regex */\n/************************************************\n * Title : custom font                          *\n * Start Data : 2017. 01. 22.                   *\n * Comment : TEXT API                           *\n ************************************************/\n\n/******************************\n * jsPDF extension API Design *\n * ****************************/\n\nimport { jsPDF } from \"../jspdf.js\";\n\njsPDF.API.TTFFont = (function() {\n  /************************************************************************/\n  /* function : open                                                       */\n  /* comment : Decode the encoded ttf content and create a TTFFont object. */\n  /************************************************************************/\n  TTFFont.open = function(file) {\n    return new TTFFont(file);\n  };\n  /***************************************************************/\n  /* function : TTFFont gernerator                               */\n  /* comment : Decode TTF contents are parsed, Data,             */\n  /* Subset object is created, and registerTTF function is called.*/\n  /***************************************************************/\n  function TTFFont(rawData) {\n    var data;\n    this.rawData = rawData;\n    data = this.contents = new Data(rawData);\n    this.contents.pos = 4;\n    if (data.readString(4) === \"ttcf\") {\n      throw new Error(\"TTCF not supported.\");\n    } else {\n      data.pos = 0;\n      this.parse();\n      this.subset = new Subset(this);\n      this.registerTTF();\n    }\n  }\n  /********************************************************/\n  /* function : parse                                     */\n  /* comment : TTF Parses the file contents by each table.*/\n  /********************************************************/\n  TTFFont.prototype.parse = function() {\n    this.directory = new Directory(this.contents);\n    this.head = new HeadTable(this);\n    this.name = new NameTable(this);\n    this.cmap = new CmapTable(this);\n    this.toUnicode = {};\n    this.hhea = new HheaTable(this);\n    this.maxp = new MaxpTable(this);\n    this.hmtx = new HmtxTable(this);\n    this.post = new PostTable(this);\n    this.os2 = new OS2Table(this);\n    this.loca = new LocaTable(this);\n    this.glyf = new GlyfTable(this);\n    this.ascender =\n      (this.os2.exists && this.os2.ascender) || this.hhea.ascender;\n    this.decender =\n      (this.os2.exists && this.os2.decender) || this.hhea.decender;\n    this.lineGap = (this.os2.exists && this.os2.lineGap) || this.hhea.lineGap;\n    return (this.bbox = [\n      this.head.xMin,\n      this.head.yMin,\n      this.head.xMax,\n      this.head.yMax\n    ]);\n  };\n  /***************************************************************/\n  /* function : registerTTF                                      */\n  /* comment : Get the value to assign pdf font descriptors.     */\n  /***************************************************************/\n  TTFFont.prototype.registerTTF = function() {\n    var e, hi, low, raw, _ref;\n    this.scaleFactor = 1000.0 / this.head.unitsPerEm;\n    this.bbox = function() {\n      var _i, _len, _ref, _results;\n      _ref = this.bbox;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        e = _ref[_i];\n        _results.push(Math.round(e * this.scaleFactor));\n      }\n      return _results;\n    }.call(this);\n    this.stemV = 0;\n    if (this.post.exists) {\n      raw = this.post.italic_angle;\n      hi = raw >> 16;\n      low = raw & 0xff;\n      if ((hi & 0x8000) !== 0) {\n        hi = -((hi ^ 0xffff) + 1);\n      }\n      this.italicAngle = +(\"\" + hi + \".\" + low);\n    } else {\n      this.italicAngle = 0;\n    }\n    this.ascender = Math.round(this.ascender * this.scaleFactor);\n    this.decender = Math.round(this.decender * this.scaleFactor);\n    this.lineGap = Math.round(this.lineGap * this.scaleFactor);\n    this.capHeight = (this.os2.exists && this.os2.capHeight) || this.ascender;\n    this.xHeight = (this.os2.exists && this.os2.xHeight) || 0;\n    this.familyClass = ((this.os2.exists && this.os2.familyClass) || 0) >> 8;\n    this.isSerif =\n      (_ref = this.familyClass) === 1 ||\n      _ref === 2 ||\n      _ref === 3 ||\n      _ref === 4 ||\n      _ref === 5 ||\n      _ref === 7;\n    this.isScript = this.familyClass === 10;\n    this.flags = 0;\n    if (this.post.isFixedPitch) {\n      this.flags |= 1 << 0;\n    }\n    if (this.isSerif) {\n      this.flags |= 1 << 1;\n    }\n    if (this.isScript) {\n      this.flags |= 1 << 3;\n    }\n    if (this.italicAngle !== 0) {\n      this.flags |= 1 << 6;\n    }\n    this.flags |= 1 << 5;\n    if (!this.cmap.unicode) {\n      throw new Error(\"No unicode cmap for font\");\n    }\n  };\n  TTFFont.prototype.characterToGlyph = function(character) {\n    var _ref;\n    return (\n      ((_ref = this.cmap.unicode) != null ? _ref.codeMap[character] : void 0) ||\n      0\n    );\n  };\n  TTFFont.prototype.widthOfGlyph = function(glyph) {\n    var scale;\n    scale = 1000.0 / this.head.unitsPerEm;\n    return this.hmtx.forGlyph(glyph).advance * scale;\n  };\n  TTFFont.prototype.widthOfString = function(string, size, charSpace) {\n    var charCode, i, scale, width, _ref;\n    string = \"\" + string;\n    width = 0;\n    for (\n      i = 0, _ref = string.length;\n      0 <= _ref ? i < _ref : i > _ref;\n      i = 0 <= _ref ? ++i : --i\n    ) {\n      charCode = string.charCodeAt(i);\n      width +=\n        this.widthOfGlyph(this.characterToGlyph(charCode)) +\n          charSpace * (1000 / size) || 0;\n    }\n    scale = size / 1000;\n    return width * scale;\n  };\n  TTFFont.prototype.lineHeight = function(size, includeGap) {\n    var gap;\n    if (includeGap == null) {\n      includeGap = false;\n    }\n    gap = includeGap ? this.lineGap : 0;\n    return ((this.ascender + gap - this.decender) / 1000) * size;\n  };\n  return TTFFont;\n})();\n\n/************************************************************************************************/\n/* function : Data                                                                              */\n/* comment : The ttf data decoded and stored in an array is read and written to the Data object.*/\n/************************************************************************************************/\nvar Data = (function() {\n  function Data(data) {\n    this.data = data != null ? data : [];\n    this.pos = 0;\n    this.length = this.data.length;\n  }\n  Data.prototype.readByte = function() {\n    return this.data[this.pos++];\n  };\n  Data.prototype.writeByte = function(byte) {\n    return (this.data[this.pos++] = byte);\n  };\n  Data.prototype.readUInt32 = function() {\n    var b1, b2, b3, b4;\n    b1 = this.readByte() * 0x1000000;\n    b2 = this.readByte() << 16;\n    b3 = this.readByte() << 8;\n    b4 = this.readByte();\n    return b1 + b2 + b3 + b4;\n  };\n  Data.prototype.writeUInt32 = function(val) {\n    this.writeByte((val >>> 24) & 0xff);\n    this.writeByte((val >> 16) & 0xff);\n    this.writeByte((val >> 8) & 0xff);\n    return this.writeByte(val & 0xff);\n  };\n  Data.prototype.readInt32 = function() {\n    var int;\n    int = this.readUInt32();\n    if (int >= 0x80000000) {\n      return int - 0x100000000;\n    } else {\n      return int;\n    }\n  };\n  Data.prototype.writeInt32 = function(val) {\n    if (val < 0) {\n      val += 0x100000000;\n    }\n    return this.writeUInt32(val);\n  };\n  Data.prototype.readUInt16 = function() {\n    var b1, b2;\n    b1 = this.readByte() << 8;\n    b2 = this.readByte();\n    return b1 | b2;\n  };\n  Data.prototype.writeUInt16 = function(val) {\n    this.writeByte((val >> 8) & 0xff);\n    return this.writeByte(val & 0xff);\n  };\n  Data.prototype.readInt16 = function() {\n    var int;\n    int = this.readUInt16();\n    if (int >= 0x8000) {\n      return int - 0x10000;\n    } else {\n      return int;\n    }\n  };\n  Data.prototype.writeInt16 = function(val) {\n    if (val < 0) {\n      val += 0x10000;\n    }\n    return this.writeUInt16(val);\n  };\n  Data.prototype.readString = function(length) {\n    var i, ret;\n    ret = [];\n    for (\n      i = 0;\n      0 <= length ? i < length : i > length;\n      i = 0 <= length ? ++i : --i\n    ) {\n      ret[i] = String.fromCharCode(this.readByte());\n    }\n    return ret.join(\"\");\n  };\n  Data.prototype.writeString = function(val) {\n    var i, _ref, _results;\n    _results = [];\n    for (\n      i = 0, _ref = val.length;\n      0 <= _ref ? i < _ref : i > _ref;\n      i = 0 <= _ref ? ++i : --i\n    ) {\n      _results.push(this.writeByte(val.charCodeAt(i)));\n    }\n    return _results;\n  };\n  /*Data.prototype.stringAt = function (pos, length) {\n            this.pos = pos;\n            return this.readString(length);\n        };*/\n  Data.prototype.readShort = function() {\n    return this.readInt16();\n  };\n  Data.prototype.writeShort = function(val) {\n    return this.writeInt16(val);\n  };\n  Data.prototype.readLongLong = function() {\n    var b1, b2, b3, b4, b5, b6, b7, b8;\n    b1 = this.readByte();\n    b2 = this.readByte();\n    b3 = this.readByte();\n    b4 = this.readByte();\n    b5 = this.readByte();\n    b6 = this.readByte();\n    b7 = this.readByte();\n    b8 = this.readByte();\n    if (b1 & 0x80) {\n      return (\n        ((b1 ^ 0xff) * 0x100000000000000 +\n          (b2 ^ 0xff) * 0x1000000000000 +\n          (b3 ^ 0xff) * 0x10000000000 +\n          (b4 ^ 0xff) * 0x100000000 +\n          (b5 ^ 0xff) * 0x1000000 +\n          (b6 ^ 0xff) * 0x10000 +\n          (b7 ^ 0xff) * 0x100 +\n          (b8 ^ 0xff) +\n          1) *\n        -1\n      );\n    }\n    return (\n      b1 * 0x100000000000000 +\n      b2 * 0x1000000000000 +\n      b3 * 0x10000000000 +\n      b4 * 0x100000000 +\n      b5 * 0x1000000 +\n      b6 * 0x10000 +\n      b7 * 0x100 +\n      b8\n    );\n  };\n  Data.prototype.writeLongLong = function(val) {\n    var high, low;\n    high = Math.floor(val / 0x100000000);\n    low = val & 0xffffffff;\n    this.writeByte((high >> 24) & 0xff);\n    this.writeByte((high >> 16) & 0xff);\n    this.writeByte((high >> 8) & 0xff);\n    this.writeByte(high & 0xff);\n    this.writeByte((low >> 24) & 0xff);\n    this.writeByte((low >> 16) & 0xff);\n    this.writeByte((low >> 8) & 0xff);\n    return this.writeByte(low & 0xff);\n  };\n  Data.prototype.readInt = function() {\n    return this.readInt32();\n  };\n  Data.prototype.writeInt = function(val) {\n    return this.writeInt32(val);\n  };\n  /*Data.prototype.slice = function (start, end) {\n            return this.data.slice(start, end);\n        };*/\n  Data.prototype.read = function(bytes) {\n    var buf, i;\n    buf = [];\n    for (\n      i = 0;\n      0 <= bytes ? i < bytes : i > bytes;\n      i = 0 <= bytes ? ++i : --i\n    ) {\n      buf.push(this.readByte());\n    }\n    return buf;\n  };\n  Data.prototype.write = function(bytes) {\n    var byte, i, _len, _results;\n    _results = [];\n    for (i = 0, _len = bytes.length; i < _len; i++) {\n      byte = bytes[i];\n      _results.push(this.writeByte(byte));\n    }\n    return _results;\n  };\n  return Data;\n})();\n\nvar Directory = (function() {\n  var checksum;\n\n  /*****************************************************************************************************/\n  /* function : Directory generator                                                                    */\n  /* comment : Initialize the offset, tag, length, and checksum for each table for the font to be used.*/\n  /*****************************************************************************************************/\n  function Directory(data) {\n    var entry, i, _ref;\n    this.scalarType = data.readInt();\n    this.tableCount = data.readShort();\n    this.searchRange = data.readShort();\n    this.entrySelector = data.readShort();\n    this.rangeShift = data.readShort();\n    this.tables = {};\n    for (\n      i = 0, _ref = this.tableCount;\n      0 <= _ref ? i < _ref : i > _ref;\n      i = 0 <= _ref ? ++i : --i\n    ) {\n      entry = {\n        tag: data.readString(4),\n        checksum: data.readInt(),\n        offset: data.readInt(),\n        length: data.readInt()\n      };\n      this.tables[entry.tag] = entry;\n    }\n  }\n  /********************************************************************************************************/\n  /* function : encode                                                                                    */\n  /* comment : It encodes and stores the font table object and information used for the directory object. */\n  /********************************************************************************************************/\n  Directory.prototype.encode = function(tables) {\n    var adjustment,\n      directory,\n      directoryLength,\n      entrySelector,\n      headOffset,\n      log2,\n      offset,\n      rangeShift,\n      searchRange,\n      sum,\n      table,\n      tableCount,\n      tableData,\n      tag;\n    tableCount = Object.keys(tables).length;\n    log2 = Math.log(2);\n    searchRange = Math.floor(Math.log(tableCount) / log2) * 16;\n    entrySelector = Math.floor(searchRange / log2);\n    rangeShift = tableCount * 16 - searchRange;\n    directory = new Data();\n    directory.writeInt(this.scalarType);\n    directory.writeShort(tableCount);\n    directory.writeShort(searchRange);\n    directory.writeShort(entrySelector);\n    directory.writeShort(rangeShift);\n    directoryLength = tableCount * 16;\n    offset = directory.pos + directoryLength;\n    headOffset = null;\n    tableData = [];\n    for (tag in tables) {\n      table = tables[tag];\n      directory.writeString(tag);\n      directory.writeInt(checksum(table));\n      directory.writeInt(offset);\n      directory.writeInt(table.length);\n      tableData = tableData.concat(table);\n      if (tag === \"head\") {\n        headOffset = offset;\n      }\n      offset += table.length;\n      while (offset % 4) {\n        tableData.push(0);\n        offset++;\n      }\n    }\n    directory.write(tableData);\n    sum = checksum(directory.data);\n    adjustment = 0xb1b0afba - sum;\n    directory.pos = headOffset + 8;\n    directory.writeUInt32(adjustment);\n    return directory.data;\n  };\n  /***************************************************************/\n  /* function : checksum                                         */\n  /* comment : Duplicate the table for the tag.                  */\n  /***************************************************************/\n  checksum = function(data) {\n    var i, sum, tmp, _ref;\n    data = __slice.call(data);\n    while (data.length % 4) {\n      data.push(0);\n    }\n    tmp = new Data(data);\n    sum = 0;\n    for (i = 0, _ref = data.length; i < _ref; i = i += 4) {\n      sum += tmp.readUInt32();\n    }\n    return sum & 0xffffffff;\n  };\n  return Directory;\n})();\n\nvar Table,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n/***************************************************************/\n/* function : Table                                            */\n/* comment : Save info for each table, and parse the table.    */\n/***************************************************************/\nTable = (function() {\n  function Table(file) {\n    var info;\n    this.file = file;\n    info = this.file.directory.tables[this.tag];\n    this.exists = !!info;\n    if (info) {\n      (this.offset = info.offset), (this.length = info.length);\n      this.parse(this.file.contents);\n    }\n  }\n  Table.prototype.parse = function() {};\n  Table.prototype.encode = function() {};\n  Table.prototype.raw = function() {\n    if (!this.exists) {\n      return null;\n    }\n    this.file.contents.pos = this.offset;\n    return this.file.contents.read(this.length);\n  };\n  return Table;\n})();\n\nvar HeadTable = (function(_super) {\n  __extends(HeadTable, _super);\n\n  function HeadTable() {\n    return HeadTable.__super__.constructor.apply(this, arguments);\n  }\n  HeadTable.prototype.tag = \"head\";\n  HeadTable.prototype.parse = function(data) {\n    data.pos = this.offset;\n    this.version = data.readInt();\n    this.revision = data.readInt();\n    this.checkSumAdjustment = data.readInt();\n    this.magicNumber = data.readInt();\n    this.flags = data.readShort();\n    this.unitsPerEm = data.readShort();\n    this.created = data.readLongLong();\n    this.modified = data.readLongLong();\n    this.xMin = data.readShort();\n    this.yMin = data.readShort();\n    this.xMax = data.readShort();\n    this.yMax = data.readShort();\n    this.macStyle = data.readShort();\n    this.lowestRecPPEM = data.readShort();\n    this.fontDirectionHint = data.readShort();\n    this.indexToLocFormat = data.readShort();\n    return (this.glyphDataFormat = data.readShort());\n  };\n  HeadTable.prototype.encode = function(indexToLocFormat) {\n    var table;\n    table = new Data();\n    table.writeInt(this.version);\n    table.writeInt(this.revision);\n    table.writeInt(this.checkSumAdjustment);\n    table.writeInt(this.magicNumber);\n    table.writeShort(this.flags);\n    table.writeShort(this.unitsPerEm);\n    table.writeLongLong(this.created);\n    table.writeLongLong(this.modified);\n    table.writeShort(this.xMin);\n    table.writeShort(this.yMin);\n    table.writeShort(this.xMax);\n    table.writeShort(this.yMax);\n    table.writeShort(this.macStyle);\n    table.writeShort(this.lowestRecPPEM);\n    table.writeShort(this.fontDirectionHint);\n    table.writeShort(indexToLocFormat);\n    table.writeShort(this.glyphDataFormat);\n    return table.data;\n  };\n  return HeadTable;\n})(Table);\n\n/************************************************************************************/\n/* function : CmapEntry                                                             */\n/* comment : Cmap Initializes and encodes object information (required by pdf spec).*/\n/************************************************************************************/\nvar CmapEntry = (function() {\n  function CmapEntry(data, offset) {\n    var code,\n      count,\n      endCode,\n      glyphId,\n      glyphIds,\n      i,\n      idDelta,\n      idRangeOffset,\n      index,\n      saveOffset,\n      segCount,\n      segCountX2,\n      start,\n      startCode,\n      tail,\n      _j,\n      _k,\n      _len;\n    this.platformID = data.readUInt16();\n    this.encodingID = data.readShort();\n    this.offset = offset + data.readInt();\n    saveOffset = data.pos;\n    data.pos = this.offset;\n    this.format = data.readUInt16();\n    this.length = data.readUInt16();\n    this.language = data.readUInt16();\n    this.isUnicode =\n      (this.platformID === 3 && this.encodingID === 1 && this.format === 4) ||\n      (this.platformID === 0 && this.format === 4);\n    this.codeMap = {};\n    switch (this.format) {\n      case 0:\n        for (i = 0; i < 256; ++i) {\n          this.codeMap[i] = data.readByte();\n        }\n        break;\n      case 4:\n        segCountX2 = data.readUInt16();\n        segCount = segCountX2 / 2;\n        data.pos += 6;\n        endCode = (function() {\n          var _j, _results;\n          _results = [];\n          for (\n            i = _j = 0;\n            0 <= segCount ? _j < segCount : _j > segCount;\n            i = 0 <= segCount ? ++_j : --_j\n          ) {\n            _results.push(data.readUInt16());\n          }\n          return _results;\n        })();\n        data.pos += 2;\n        startCode = (function() {\n          var _j, _results;\n          _results = [];\n          for (\n            i = _j = 0;\n            0 <= segCount ? _j < segCount : _j > segCount;\n            i = 0 <= segCount ? ++_j : --_j\n          ) {\n            _results.push(data.readUInt16());\n          }\n          return _results;\n        })();\n        idDelta = (function() {\n          var _j, _results;\n          _results = [];\n          for (\n            i = _j = 0;\n            0 <= segCount ? _j < segCount : _j > segCount;\n            i = 0 <= segCount ? ++_j : --_j\n          ) {\n            _results.push(data.readUInt16());\n          }\n          return _results;\n        })();\n        idRangeOffset = (function() {\n          var _j, _results;\n          _results = [];\n          for (\n            i = _j = 0;\n            0 <= segCount ? _j < segCount : _j > segCount;\n            i = 0 <= segCount ? ++_j : --_j\n          ) {\n            _results.push(data.readUInt16());\n          }\n          return _results;\n        })();\n        count = (this.length - data.pos + this.offset) / 2;\n        glyphIds = (function() {\n          var _j, _results;\n          _results = [];\n          for (\n            i = _j = 0;\n            0 <= count ? _j < count : _j > count;\n            i = 0 <= count ? ++_j : --_j\n          ) {\n            _results.push(data.readUInt16());\n          }\n          return _results;\n        })();\n        for (i = _j = 0, _len = endCode.length; _j < _len; i = ++_j) {\n          tail = endCode[i];\n          start = startCode[i];\n          for (\n            code = _k = start;\n            start <= tail ? _k <= tail : _k >= tail;\n            code = start <= tail ? ++_k : --_k\n          ) {\n            if (idRangeOffset[i] === 0) {\n              glyphId = code + idDelta[i];\n            } else {\n              index = idRangeOffset[i] / 2 + (code - start) - (segCount - i);\n              glyphId = glyphIds[index] || 0;\n              if (glyphId !== 0) {\n                glyphId += idDelta[i];\n              }\n            }\n            this.codeMap[code] = glyphId & 0xffff;\n          }\n        }\n    }\n    data.pos = saveOffset;\n  }\n  CmapEntry.encode = function(charmap, encoding) {\n    var charMap,\n      code,\n      codeMap,\n      codes,\n      delta,\n      deltas,\n      diff,\n      endCode,\n      endCodes,\n      entrySelector,\n      glyphIDs,\n      i,\n      id,\n      indexes,\n      last,\n      map,\n      nextID,\n      offset,\n      old,\n      rangeOffsets,\n      rangeShift,\n      searchRange,\n      segCount,\n      segCountX2,\n      startCode,\n      startCodes,\n      startGlyph,\n      subtable,\n      _i,\n      _j,\n      _k,\n      _l,\n      _len,\n      _len1,\n      _len2,\n      _len3,\n      _len4,\n      _len5,\n      _len6,\n      _len7,\n      _m,\n      _n,\n      _name,\n      _o,\n      _p,\n      _q;\n    subtable = new Data();\n    codes = Object.keys(charmap).sort(function(a, b) {\n      return a - b;\n    });\n    switch (encoding) {\n      case \"macroman\":\n        id = 0;\n        indexes = (function() {\n          var _results = [];\n          for (i = 0; i < 256; ++i) {\n            _results.push(0);\n          }\n          return _results;\n        })();\n        map = {\n          0: 0\n        };\n        codeMap = {};\n        for (_i = 0, _len = codes.length; _i < _len; _i++) {\n          code = codes[_i];\n          if (map[(_name = charmap[code])] == null) {\n            map[_name] = ++id;\n          }\n          codeMap[code] = {\n            old: charmap[code],\n            new: map[charmap[code]]\n          };\n          indexes[code] = map[charmap[code]];\n        }\n        subtable.writeUInt16(1);\n        subtable.writeUInt16(0);\n        subtable.writeUInt32(12);\n        subtable.writeUInt16(0);\n        subtable.writeUInt16(262);\n        subtable.writeUInt16(0);\n        subtable.write(indexes);\n        return {\n          charMap: codeMap,\n          subtable: subtable.data,\n          maxGlyphID: id + 1\n        };\n      case \"unicode\":\n        startCodes = [];\n        endCodes = [];\n        nextID = 0;\n        map = {};\n        charMap = {};\n        last = diff = null;\n        for (_j = 0, _len1 = codes.length; _j < _len1; _j++) {\n          code = codes[_j];\n          old = charmap[code];\n          if (map[old] == null) {\n            map[old] = ++nextID;\n          }\n          charMap[code] = {\n            old: old,\n            new: map[old]\n          };\n          delta = map[old] - code;\n          if (last == null || delta !== diff) {\n            if (last) {\n              endCodes.push(last);\n            }\n            startCodes.push(code);\n            diff = delta;\n          }\n          last = code;\n        }\n        if (last) {\n          endCodes.push(last);\n        }\n        endCodes.push(0xffff);\n        startCodes.push(0xffff);\n        segCount = startCodes.length;\n        segCountX2 = segCount * 2;\n        searchRange = 2 * Math.pow(Math.log(segCount) / Math.LN2, 2);\n        entrySelector = Math.log(searchRange / 2) / Math.LN2;\n        rangeShift = 2 * segCount - searchRange;\n        deltas = [];\n        rangeOffsets = [];\n        glyphIDs = [];\n        for (i = _k = 0, _len2 = startCodes.length; _k < _len2; i = ++_k) {\n          startCode = startCodes[i];\n          endCode = endCodes[i];\n          if (startCode === 0xffff) {\n            deltas.push(0);\n            rangeOffsets.push(0);\n            break;\n          }\n          startGlyph = charMap[startCode][\"new\"];\n          if (startCode - startGlyph >= 0x8000) {\n            deltas.push(0);\n            rangeOffsets.push(2 * (glyphIDs.length + segCount - i));\n            for (\n              code = _l = startCode;\n              startCode <= endCode ? _l <= endCode : _l >= endCode;\n              code = startCode <= endCode ? ++_l : --_l\n            ) {\n              glyphIDs.push(charMap[code][\"new\"]);\n            }\n          } else {\n            deltas.push(startGlyph - startCode);\n            rangeOffsets.push(0);\n          }\n        }\n        subtable.writeUInt16(3);\n        subtable.writeUInt16(1);\n        subtable.writeUInt32(12);\n        subtable.writeUInt16(4);\n        subtable.writeUInt16(16 + segCount * 8 + glyphIDs.length * 2);\n        subtable.writeUInt16(0);\n        subtable.writeUInt16(segCountX2);\n        subtable.writeUInt16(searchRange);\n        subtable.writeUInt16(entrySelector);\n        subtable.writeUInt16(rangeShift);\n        for (_m = 0, _len3 = endCodes.length; _m < _len3; _m++) {\n          code = endCodes[_m];\n          subtable.writeUInt16(code);\n        }\n        subtable.writeUInt16(0);\n        for (_n = 0, _len4 = startCodes.length; _n < _len4; _n++) {\n          code = startCodes[_n];\n          subtable.writeUInt16(code);\n        }\n        for (_o = 0, _len5 = deltas.length; _o < _len5; _o++) {\n          delta = deltas[_o];\n          subtable.writeUInt16(delta);\n        }\n        for (_p = 0, _len6 = rangeOffsets.length; _p < _len6; _p++) {\n          offset = rangeOffsets[_p];\n          subtable.writeUInt16(offset);\n        }\n        for (_q = 0, _len7 = glyphIDs.length; _q < _len7; _q++) {\n          id = glyphIDs[_q];\n          subtable.writeUInt16(id);\n        }\n        return {\n          charMap: charMap,\n          subtable: subtable.data,\n          maxGlyphID: nextID + 1\n        };\n    }\n  };\n  return CmapEntry;\n})();\n\nvar CmapTable = (function(_super) {\n  __extends(CmapTable, _super);\n\n  function CmapTable() {\n    return CmapTable.__super__.constructor.apply(this, arguments);\n  }\n  CmapTable.prototype.tag = \"cmap\";\n  CmapTable.prototype.parse = function(data) {\n    var entry, i, tableCount;\n    data.pos = this.offset;\n    this.version = data.readUInt16();\n    tableCount = data.readUInt16();\n    this.tables = [];\n    this.unicode = null;\n    for (\n      i = 0;\n      0 <= tableCount ? i < tableCount : i > tableCount;\n      i = 0 <= tableCount ? ++i : --i\n    ) {\n      entry = new CmapEntry(data, this.offset);\n      this.tables.push(entry);\n      if (entry.isUnicode) {\n        if (this.unicode == null) {\n          this.unicode = entry;\n        }\n      }\n    }\n    return true;\n  };\n  /*************************************************************************/\n  /* function : encode                                                     */\n  /* comment : Encode the cmap table corresponding to the input character. */\n  /*************************************************************************/\n  CmapTable.encode = function(charmap, encoding) {\n    var result, table;\n    if (encoding == null) {\n      encoding = \"macroman\";\n    }\n    result = CmapEntry.encode(charmap, encoding);\n    table = new Data();\n    table.writeUInt16(0);\n    table.writeUInt16(1);\n    result.table = table.data.concat(result.subtable);\n    return result;\n  };\n  return CmapTable;\n})(Table);\n\nvar HheaTable = (function(_super) {\n  __extends(HheaTable, _super);\n\n  function HheaTable() {\n    return HheaTable.__super__.constructor.apply(this, arguments);\n  }\n  HheaTable.prototype.tag = \"hhea\";\n  HheaTable.prototype.parse = function(data) {\n    data.pos = this.offset;\n    this.version = data.readInt();\n    this.ascender = data.readShort();\n    this.decender = data.readShort();\n    this.lineGap = data.readShort();\n    this.advanceWidthMax = data.readShort();\n    this.minLeftSideBearing = data.readShort();\n    this.minRightSideBearing = data.readShort();\n    this.xMaxExtent = data.readShort();\n    this.caretSlopeRise = data.readShort();\n    this.caretSlopeRun = data.readShort();\n    this.caretOffset = data.readShort();\n    data.pos += 4 * 2;\n    this.metricDataFormat = data.readShort();\n    return (this.numberOfMetrics = data.readUInt16());\n  };\n  /*HheaTable.prototype.encode = function (ids) {\n            var i, table, _i, _ref;\n            table = new Data;\n            table.writeInt(this.version);\n            table.writeShort(this.ascender);\n            table.writeShort(this.decender);\n            table.writeShort(this.lineGap);\n            table.writeShort(this.advanceWidthMax);\n            table.writeShort(this.minLeftSideBearing);\n            table.writeShort(this.minRightSideBearing);\n            table.writeShort(this.xMaxExtent);\n            table.writeShort(this.caretSlopeRise);\n            table.writeShort(this.caretSlopeRun);\n            table.writeShort(this.caretOffset);\n            for (i = _i = 0, _ref = 4 * 2; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n                table.writeByte(0);\n            }\n            table.writeShort(this.metricDataFormat);\n            table.writeUInt16(ids.length);\n            return table.data;\n        };*/\n  return HheaTable;\n})(Table);\n\nvar OS2Table = (function(_super) {\n  __extends(OS2Table, _super);\n\n  function OS2Table() {\n    return OS2Table.__super__.constructor.apply(this, arguments);\n  }\n  OS2Table.prototype.tag = \"OS/2\";\n  OS2Table.prototype.parse = function(data) {\n    data.pos = this.offset;\n    this.version = data.readUInt16();\n    this.averageCharWidth = data.readShort();\n    this.weightClass = data.readUInt16();\n    this.widthClass = data.readUInt16();\n    this.type = data.readShort();\n    this.ySubscriptXSize = data.readShort();\n    this.ySubscriptYSize = data.readShort();\n    this.ySubscriptXOffset = data.readShort();\n    this.ySubscriptYOffset = data.readShort();\n    this.ySuperscriptXSize = data.readShort();\n    this.ySuperscriptYSize = data.readShort();\n    this.ySuperscriptXOffset = data.readShort();\n    this.ySuperscriptYOffset = data.readShort();\n    this.yStrikeoutSize = data.readShort();\n    this.yStrikeoutPosition = data.readShort();\n    this.familyClass = data.readShort();\n    this.panose = (function() {\n      var i, _results;\n      _results = [];\n      for (i = 0; i < 10; ++i) {\n        _results.push(data.readByte());\n      }\n      return _results;\n    })();\n    this.charRange = (function() {\n      var i, _results;\n      _results = [];\n      for (i = 0; i < 4; ++i) {\n        _results.push(data.readInt());\n      }\n      return _results;\n    })();\n    this.vendorID = data.readString(4);\n    this.selection = data.readShort();\n    this.firstCharIndex = data.readShort();\n    this.lastCharIndex = data.readShort();\n    if (this.version > 0) {\n      this.ascent = data.readShort();\n      this.descent = data.readShort();\n      this.lineGap = data.readShort();\n      this.winAscent = data.readShort();\n      this.winDescent = data.readShort();\n      this.codePageRange = (function() {\n        var i, _results;\n        _results = [];\n        for (i = 0; i < 2; i = ++i) {\n          _results.push(data.readInt());\n        }\n        return _results;\n      })();\n      if (this.version > 1) {\n        this.xHeight = data.readShort();\n        this.capHeight = data.readShort();\n        this.defaultChar = data.readShort();\n        this.breakChar = data.readShort();\n        return (this.maxContext = data.readShort());\n      }\n    }\n  };\n  /*OS2Table.prototype.encode = function () {\n            return this.raw();\n        };*/\n  return OS2Table;\n})(Table);\n\nvar PostTable = (function(_super) {\n  var POSTSCRIPT_GLYPHS;\n  __extends(PostTable, _super);\n\n  function PostTable() {\n    return PostTable.__super__.constructor.apply(this, arguments);\n  }\n  PostTable.prototype.tag = \"post\";\n  PostTable.prototype.parse = function(data) {\n    var length, numberOfGlyphs, _results;\n    data.pos = this.offset;\n    this.format = data.readInt();\n    this.italicAngle = data.readInt();\n    this.underlinePosition = data.readShort();\n    this.underlineThickness = data.readShort();\n    this.isFixedPitch = data.readInt();\n    this.minMemType42 = data.readInt();\n    this.maxMemType42 = data.readInt();\n    this.minMemType1 = data.readInt();\n    this.maxMemType1 = data.readInt();\n    switch (this.format) {\n      case 0x00010000:\n        break;\n      case 0x00020000:\n        numberOfGlyphs = data.readUInt16();\n        this.glyphNameIndex = [];\n        var i;\n        for (\n          i = 0;\n          0 <= numberOfGlyphs ? i < numberOfGlyphs : i > numberOfGlyphs;\n          i = 0 <= numberOfGlyphs ? ++i : --i\n        ) {\n          this.glyphNameIndex.push(data.readUInt16());\n        }\n        this.names = [];\n        _results = [];\n        while (data.pos < this.offset + this.length) {\n          length = data.readByte();\n          _results.push(this.names.push(data.readString(length)));\n        }\n        return _results;\n      case 0x00025000:\n        numberOfGlyphs = data.readUInt16();\n        return (this.offsets = data.read(numberOfGlyphs));\n      case 0x00030000:\n        break;\n      case 0x00040000:\n        return (this.map = function() {\n          var _j, _ref, _results1;\n          _results1 = [];\n          for (\n            i = _j = 0, _ref = this.file.maxp.numGlyphs;\n            0 <= _ref ? _j < _ref : _j > _ref;\n            i = 0 <= _ref ? ++_j : --_j\n          ) {\n            _results1.push(data.readUInt32());\n          }\n          return _results1;\n        }.call(this));\n    }\n  };\n  /*PostTable.prototype.glyphFor = function (code) {\n            var index;\n            switch (this.format) {\n            case 0x00010000:\n                return POSTSCRIPT_GLYPHS[code] || '.notdef';\n            case 0x00020000:\n                index = this.glyphNameIndex[code];\n                if (index <= 257) {\n                    return POSTSCRIPT_GLYPHS[index];\n                }\n                else {\n                    return this.names[index - 258] || '.notdef';\n                }\n                break;\n            case 0x00025000:\n                return POSTSCRIPT_GLYPHS[code + this.offsets[code]] || '.notdef';\n            case 0x00030000:\n                return '.notdef';\n            case 0x00040000:\n                return this.map[code] || 0xFFFF;\n            }\n        };*/\n  /*PostTable.prototype.encode = function (mapping) {\n            var id, index, indexes, position, post, raw, string, strings, table, _i, _j, _k, _len, _len1, _len2;\n            if (!this.exists) {\n                return null;\n            }\n            raw = this.raw();\n            if (this.format === 0x00030000) {\n                return raw;\n            }\n            table = new Data(raw.slice(0, 32));\n            table.writeUInt32(0x00020000);\n            table.pos = 32;\n            indexes = [];\n            strings = [];\n            for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n                id = mapping[_i];\n                post = this.glyphFor(id);\n                position = POSTSCRIPT_GLYPHS.indexOf(post);\n                if (position !== -1) {\n                    indexes.push(position);\n                }\n                else {\n                    indexes.push(257 + strings.length);\n                    strings.push(post);\n                }\n            }\n            table.writeUInt16(Object.keys(mapping).length);\n            for (_j = 0, _len1 = indexes.length; _j < _len1; _j++) {\n                index = indexes[_j];\n                table.writeUInt16(index);\n            }\n            for (_k = 0, _len2 = strings.length; _k < _len2; _k++) {\n                string = strings[_k];\n                table.writeByte(string.length);\n                table.writeString(string);\n            }\n            return table.data;\n        };*/\n  POSTSCRIPT_GLYPHS = \".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent\\nampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash\\nzero one two three four five six seven eight nine colon semicolon less equal greater\\nquestion at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\nbracketleft backslash bracketright asciicircum underscore grave\\na b c d e f g h i j k l m n o p q r s t u v w x y z\\nbraceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis\\nUdieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave\\necircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve\\nocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent\\nsterling section bullet paragraph germandbls registered copyright trademark acute\\ndieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu\\npartialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash\\nquestiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft\\nguillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash\\nquotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis\\nfraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered\\nquotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis\\nEgrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute\\nUcircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla\\nhungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth\\neth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior\\nonehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla\\nCacute cacute Ccaron ccaron dcroat\".split(\n    /\\s+/g\n  );\n  return PostTable;\n})(Table);\n\n/*********************************************************************************************************/\n/* function : NameEntry                                                                                  */\n/* comment : Store copyright information, platformID, encodingID, and languageID in the NameEntry object.*/\n/*********************************************************************************************************/\nvar NameEntry = (function() {\n  function NameEntry(raw, entry) {\n    this.raw = raw;\n    this.length = raw.length;\n    this.platformID = entry.platformID;\n    this.encodingID = entry.encodingID;\n    this.languageID = entry.languageID;\n  }\n  return NameEntry;\n})();\n\nvar NameTable = (function(_super) {\n  var subsetTag;\n  __extends(NameTable, _super);\n\n  function NameTable() {\n    return NameTable.__super__.constructor.apply(this, arguments);\n  }\n  NameTable.prototype.tag = \"name\";\n  NameTable.prototype.parse = function(data) {\n    var count,\n      entries,\n      entry,\n      i,\n      name,\n      stringOffset,\n      strings,\n      text,\n      _j,\n      _len,\n      _name;\n    data.pos = this.offset;\n    data.readShort(); //format\n    count = data.readShort();\n    stringOffset = data.readShort();\n    entries = [];\n    for (\n      i = 0;\n      0 <= count ? i < count : i > count;\n      i = 0 <= count ? ++i : --i\n    ) {\n      entries.push({\n        platformID: data.readShort(),\n        encodingID: data.readShort(),\n        languageID: data.readShort(),\n        nameID: data.readShort(),\n        length: data.readShort(),\n        offset: this.offset + stringOffset + data.readShort()\n      });\n    }\n    strings = {};\n    for (i = _j = 0, _len = entries.length; _j < _len; i = ++_j) {\n      entry = entries[i];\n      data.pos = entry.offset;\n      text = data.readString(entry.length);\n      name = new NameEntry(text, entry);\n      if (strings[(_name = entry.nameID)] == null) {\n        strings[_name] = [];\n      }\n      strings[entry.nameID].push(name);\n    }\n    this.strings = strings;\n    this.copyright = strings[0];\n    this.fontFamily = strings[1];\n    this.fontSubfamily = strings[2];\n    this.uniqueSubfamily = strings[3];\n    this.fontName = strings[4];\n    this.version = strings[5];\n    try {\n      this.postscriptName = strings[6][0].raw.replace(\n        /[\\x00-\\x19\\x80-\\xff]/g,\n        \"\"\n      );\n    } catch (e) {\n      this.postscriptName = strings[4][0].raw.replace(\n        /[\\x00-\\x19\\x80-\\xff]/g,\n        \"\"\n      );\n    }\n    this.trademark = strings[7];\n    this.manufacturer = strings[8];\n    this.designer = strings[9];\n    this.description = strings[10];\n    this.vendorUrl = strings[11];\n    this.designerUrl = strings[12];\n    this.license = strings[13];\n    this.licenseUrl = strings[14];\n    this.preferredFamily = strings[15];\n    this.preferredSubfamily = strings[17];\n    this.compatibleFull = strings[18];\n    return (this.sampleText = strings[19]);\n  };\n  subsetTag = \"AAAAAA\";\n  /*NameTable.prototype.encode = function () {\n            var id, list, nameID, nameTable, postscriptName, strCount, strTable, string, strings, table, val, _i, _len, _ref;\n            strings = {};\n            _ref = this.strings;\n            for (id in _ref) {\n                val = _ref[id];\n                strings[id] = val;\n            }\n            postscriptName = new NameEntry(\"\" + subsetTag + \"+\" + this.postscriptName, {\n                platformID: 1\n                , encodingID: 0\n                , languageID: 0\n            });\n            strings[6] = [postscriptName];\n            subsetTag = successorOf(subsetTag);\n            strCount = 0;\n            for (id in strings) {\n                list = strings[id];\n                if (list != null) {\n                    strCount += list.length;\n                }\n            }\n            table = new Data;\n            strTable = new Data;\n            table.writeShort(0);\n            table.writeShort(strCount);\n            table.writeShort(6 + 12 * strCount);\n            for (nameID in strings) {\n                list = strings[nameID];\n                if (list != null) {\n                    for (_i = 0, _len = list.length; _i < _len; _i++) {\n                        string = list[_i];\n                        table.writeShort(string.platformID);\n                        table.writeShort(string.encodingID);\n                        table.writeShort(string.languageID);\n                        table.writeShort(nameID);\n                        table.writeShort(string.length);\n                        table.writeShort(strTable.pos);\n                        strTable.writeString(string.raw);\n                    }\n                }\n            }\n            return nameTable = {\n                postscriptName: postscriptName.raw\n                , table: table.data.concat(strTable.data)\n            };\n        };*/\n  return NameTable;\n})(Table);\n\nvar MaxpTable = (function(_super) {\n  __extends(MaxpTable, _super);\n\n  function MaxpTable() {\n    return MaxpTable.__super__.constructor.apply(this, arguments);\n  }\n  MaxpTable.prototype.tag = \"maxp\";\n  MaxpTable.prototype.parse = function(data) {\n    data.pos = this.offset;\n    this.version = data.readInt();\n    this.numGlyphs = data.readUInt16();\n    this.maxPoints = data.readUInt16();\n    this.maxContours = data.readUInt16();\n    this.maxCompositePoints = data.readUInt16();\n    this.maxComponentContours = data.readUInt16();\n    this.maxZones = data.readUInt16();\n    this.maxTwilightPoints = data.readUInt16();\n    this.maxStorage = data.readUInt16();\n    this.maxFunctionDefs = data.readUInt16();\n    this.maxInstructionDefs = data.readUInt16();\n    this.maxStackElements = data.readUInt16();\n    this.maxSizeOfInstructions = data.readUInt16();\n    this.maxComponentElements = data.readUInt16();\n    return (this.maxComponentDepth = data.readUInt16());\n  };\n  /*MaxpTable.prototype.encode = function (ids) {\n            var table;\n            table = new Data;\n            table.writeInt(this.version);\n            table.writeUInt16(ids.length);\n            table.writeUInt16(this.maxPoints);\n            table.writeUInt16(this.maxContours);\n            table.writeUInt16(this.maxCompositePoints);\n            table.writeUInt16(this.maxComponentContours);\n            table.writeUInt16(this.maxZones);\n            table.writeUInt16(this.maxTwilightPoints);\n            table.writeUInt16(this.maxStorage);\n            table.writeUInt16(this.maxFunctionDefs);\n            table.writeUInt16(this.maxInstructionDefs);\n            table.writeUInt16(this.maxStackElements);\n            table.writeUInt16(this.maxSizeOfInstructions);\n            table.writeUInt16(this.maxComponentElements);\n            table.writeUInt16(this.maxComponentDepth);\n            return table.data;\n        };*/\n  return MaxpTable;\n})(Table);\n\nvar HmtxTable = (function(_super) {\n  __extends(HmtxTable, _super);\n\n  function HmtxTable() {\n    return HmtxTable.__super__.constructor.apply(this, arguments);\n  }\n  HmtxTable.prototype.tag = \"hmtx\";\n  HmtxTable.prototype.parse = function(data) {\n    var i, last, lsbCount, m, _j, _ref, _results;\n    data.pos = this.offset;\n    this.metrics = [];\n    for (\n      i = 0, _ref = this.file.hhea.numberOfMetrics;\n      0 <= _ref ? i < _ref : i > _ref;\n      i = 0 <= _ref ? ++i : --i\n    ) {\n      this.metrics.push({\n        advance: data.readUInt16(),\n        lsb: data.readInt16()\n      });\n    }\n    lsbCount = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics;\n    this.leftSideBearings = (function() {\n      var _j, _results;\n      _results = [];\n      for (\n        i = _j = 0;\n        0 <= lsbCount ? _j < lsbCount : _j > lsbCount;\n        i = 0 <= lsbCount ? ++_j : --_j\n      ) {\n        _results.push(data.readInt16());\n      }\n      return _results;\n    })();\n    this.widths = function() {\n      var _j, _len, _ref1, _results;\n      _ref1 = this.metrics;\n      _results = [];\n      for (_j = 0, _len = _ref1.length; _j < _len; _j++) {\n        m = _ref1[_j];\n        _results.push(m.advance);\n      }\n      return _results;\n    }.call(this);\n    last = this.widths[this.widths.length - 1];\n    _results = [];\n    for (\n      i = _j = 0;\n      0 <= lsbCount ? _j < lsbCount : _j > lsbCount;\n      i = 0 <= lsbCount ? ++_j : --_j\n    ) {\n      _results.push(this.widths.push(last));\n    }\n    return _results;\n  };\n  /***************************************************************/\n  /* function : forGlyph                                         */\n  /* comment : Returns the advance width and lsb for this glyph. */\n  /***************************************************************/\n  HmtxTable.prototype.forGlyph = function(id) {\n    if (id in this.metrics) {\n      return this.metrics[id];\n    }\n    return {\n      advance: this.metrics[this.metrics.length - 1].advance,\n      lsb: this.leftSideBearings[id - this.metrics.length]\n    };\n  };\n  /*HmtxTable.prototype.encode = function (mapping) {\n            var id, metric, table, _i, _len;\n            table = new Data;\n            for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n                id = mapping[_i];\n                metric = this.forGlyph(id);\n                table.writeUInt16(metric.advance);\n                table.writeUInt16(metric.lsb);\n            }\n            return table.data;\n        };*/\n  return HmtxTable;\n})(Table);\n\nvar __slice = [].slice;\n\nvar GlyfTable = (function(_super) {\n  __extends(GlyfTable, _super);\n\n  function GlyfTable() {\n    return GlyfTable.__super__.constructor.apply(this, arguments);\n  }\n  GlyfTable.prototype.tag = \"glyf\";\n  GlyfTable.prototype.parse = function() {\n    return (this.cache = {});\n  };\n  GlyfTable.prototype.glyphFor = function(id) {\n    var data,\n      index,\n      length,\n      loca,\n      numberOfContours,\n      raw,\n      xMax,\n      xMin,\n      yMax,\n      yMin;\n    if (id in this.cache) {\n      return this.cache[id];\n    }\n    loca = this.file.loca;\n    data = this.file.contents;\n    index = loca.indexOf(id);\n    length = loca.lengthOf(id);\n    if (length === 0) {\n      return (this.cache[id] = null);\n    }\n    data.pos = this.offset + index;\n    raw = new Data(data.read(length));\n    numberOfContours = raw.readShort();\n    xMin = raw.readShort();\n    yMin = raw.readShort();\n    xMax = raw.readShort();\n    yMax = raw.readShort();\n    if (numberOfContours === -1) {\n      this.cache[id] = new CompoundGlyph(raw, xMin, yMin, xMax, yMax);\n    } else {\n      this.cache[id] = new SimpleGlyph(\n        raw,\n        numberOfContours,\n        xMin,\n        yMin,\n        xMax,\n        yMax\n      );\n    }\n    return this.cache[id];\n  };\n  GlyfTable.prototype.encode = function(glyphs, mapping, old2new) {\n    var glyph, id, offsets, table, _i, _len;\n    table = [];\n    offsets = [];\n    for (_i = 0, _len = mapping.length; _i < _len; _i++) {\n      id = mapping[_i];\n      glyph = glyphs[id];\n      offsets.push(table.length);\n      if (glyph) {\n        table = table.concat(glyph.encode(old2new));\n      }\n    }\n    offsets.push(table.length);\n    return {\n      table: table,\n      offsets: offsets\n    };\n  };\n  return GlyfTable;\n})(Table);\n\nvar SimpleGlyph = (function() {\n  /**************************************************************************/\n  /* function : SimpleGlyph                                                 */\n  /* comment : Stores raw, xMin, yMin, xMax, and yMax values for this glyph.*/\n  /**************************************************************************/\n  function SimpleGlyph(raw, numberOfContours, xMin, yMin, xMax, yMax) {\n    this.raw = raw;\n    this.numberOfContours = numberOfContours;\n    this.xMin = xMin;\n    this.yMin = yMin;\n    this.xMax = xMax;\n    this.yMax = yMax;\n    this.compound = false;\n  }\n  SimpleGlyph.prototype.encode = function() {\n    return this.raw.data;\n  };\n  return SimpleGlyph;\n})();\n\nvar CompoundGlyph = (function() {\n  var ARG_1_AND_2_ARE_WORDS,\n    MORE_COMPONENTS,\n    WE_HAVE_AN_X_AND_Y_SCALE,\n    WE_HAVE_A_SCALE,\n    WE_HAVE_A_TWO_BY_TWO,\n    WE_HAVE_INSTRUCTIONS;\n  ARG_1_AND_2_ARE_WORDS = 0x0001;\n  WE_HAVE_A_SCALE = 0x0008;\n  MORE_COMPONENTS = 0x0020;\n  WE_HAVE_AN_X_AND_Y_SCALE = 0x0040;\n  WE_HAVE_A_TWO_BY_TWO = 0x0080;\n  WE_HAVE_INSTRUCTIONS = 0x0100;\n\n  /********************************************************************************************************************/\n  /* function : CompoundGlypg generator                                                                               */\n  /* comment : It stores raw, xMin, yMin, xMax, yMax, glyph id, and glyph offset for the corresponding compound glyph.*/\n  /********************************************************************************************************************/\n  function CompoundGlyph(raw, xMin, yMin, xMax, yMax) {\n    var data, flags;\n    this.raw = raw;\n    this.xMin = xMin;\n    this.yMin = yMin;\n    this.xMax = xMax;\n    this.yMax = yMax;\n    this.compound = true;\n    this.glyphIDs = [];\n    this.glyphOffsets = [];\n    data = this.raw;\n    while (true) {\n      flags = data.readShort();\n      this.glyphOffsets.push(data.pos);\n      this.glyphIDs.push(data.readUInt16());\n      if (!(flags & MORE_COMPONENTS)) {\n        break;\n      }\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        data.pos += 4;\n      } else {\n        data.pos += 2;\n      }\n      if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        data.pos += 8;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        data.pos += 4;\n      } else if (flags & WE_HAVE_A_SCALE) {\n        data.pos += 2;\n      }\n    }\n  }\n  /****************************************************************************************************************/\n  /* function : CompoundGlypg encode                                                                              */\n  /* comment : After creating a table for the characters you typed, you call directory.encode to encode the table.*/\n  /****************************************************************************************************************/\n  CompoundGlyph.prototype.encode = function() {\n    var i, result, _len, _ref;\n    result = new Data(__slice.call(this.raw.data));\n    _ref = this.glyphIDs;\n    for (i = 0, _len = _ref.length; i < _len; ++i) {\n      result.pos = this.glyphOffsets[i];\n    }\n    return result.data;\n  };\n  return CompoundGlyph;\n})();\n\nvar LocaTable = (function(_super) {\n  __extends(LocaTable, _super);\n\n  function LocaTable() {\n    return LocaTable.__super__.constructor.apply(this, arguments);\n  }\n  LocaTable.prototype.tag = \"loca\";\n  LocaTable.prototype.parse = function(data) {\n    var format, i;\n    data.pos = this.offset;\n    format = this.file.head.indexToLocFormat;\n    if (format === 0) {\n      return (this.offsets = function() {\n        var _ref, _results;\n        _results = [];\n        for (i = 0, _ref = this.length; i < _ref; i += 2) {\n          _results.push(data.readUInt16() * 2);\n        }\n        return _results;\n      }.call(this));\n    } else {\n      return (this.offsets = function() {\n        var _ref, _results;\n        _results = [];\n        for (i = 0, _ref = this.length; i < _ref; i += 4) {\n          _results.push(data.readUInt32());\n        }\n        return _results;\n      }.call(this));\n    }\n  };\n  LocaTable.prototype.indexOf = function(id) {\n    return this.offsets[id];\n  };\n  LocaTable.prototype.lengthOf = function(id) {\n    return this.offsets[id + 1] - this.offsets[id];\n  };\n  LocaTable.prototype.encode = function(offsets, activeGlyphs) {\n    var LocaTable = new Uint32Array(this.offsets.length);\n    var glyfPtr = 0;\n    var listGlyf = 0;\n    for (var k = 0; k < LocaTable.length; ++k) {\n      LocaTable[k] = glyfPtr;\n      if (listGlyf < activeGlyphs.length && activeGlyphs[listGlyf] == k) {\n        ++listGlyf;\n        LocaTable[k] = glyfPtr;\n        var start = this.offsets[k];\n        var len = this.offsets[k + 1] - start;\n        if (len > 0) {\n          glyfPtr += len;\n        }\n      }\n    }\n    var newLocaTable = new Array(LocaTable.length * 4);\n    for (var j = 0; j < LocaTable.length; ++j) {\n      newLocaTable[4 * j + 3] = LocaTable[j] & 0x000000ff;\n      newLocaTable[4 * j + 2] = (LocaTable[j] & 0x0000ff00) >> 8;\n      newLocaTable[4 * j + 1] = (LocaTable[j] & 0x00ff0000) >> 16;\n      newLocaTable[4 * j] = (LocaTable[j] & 0xff000000) >> 24;\n    }\n    return newLocaTable;\n  };\n  return LocaTable;\n})(Table);\n\n/************************************************************************************/\n/* function : invert                                                                */\n/* comment : Change the object's (key: value) to create an object with (value: key).*/\n/************************************************************************************/\nvar invert = function(object) {\n  var key, ret, val;\n  ret = {};\n  for (key in object) {\n    val = object[key];\n    ret[val] = key;\n  }\n  return ret;\n};\n\n/*var successorOf = function (input) {\n        var added, alphabet, carry, i, index, isUpperCase, last, length, next, result;\n        alphabet = 'abcdefghijklmnopqrstuvwxyz';\n        length = alphabet.length;\n        result = input;\n        i = input.length;\n        while (i >= 0) {\n            last = input.charAt(--i);\n            if (isNaN(last)) {\n                index = alphabet.indexOf(last.toLowerCase());\n                if (index === -1) {\n                    next = last;\n                    carry = true;\n                }\n                else {\n                    next = alphabet.charAt((index + 1) % length);\n                    isUpperCase = last === last.toUpperCase();\n                    if (isUpperCase) {\n                        next = next.toUpperCase();\n                    }\n                    carry = index + 1 >= length;\n                    if (carry && i === 0) {\n                        added = isUpperCase ? 'A' : 'a';\n                        result = added + next + result.slice(1);\n                        break;\n                    }\n                }\n            }\n            else {\n                next = +last + 1;\n                carry = next > 9;\n                if (carry) {\n                    next = 0;\n                }\n                if (carry && i === 0) {\n                    result = '1' + next + result.slice(1);\n                    break;\n                }\n            }\n            result = result.slice(0, i) + next + result.slice(i + 1);\n            if (!carry) {\n                break;\n            }\n        }\n        return result;\n    };*/\n\nvar Subset = (function() {\n  function Subset(font) {\n    this.font = font;\n    this.subset = {};\n    this.unicodes = {};\n    this.next = 33;\n  }\n  /*Subset.prototype.use = function (character) {\n            var i, _i, _ref;\n            if (typeof character === 'string') {\n                for (i = _i = 0, _ref = character.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n                    this.use(character.charCodeAt(i));\n                }\n                return;\n            }\n            if (!this.unicodes[character]) {\n                this.subset[this.next] = character;\n                return this.unicodes[character] = this.next++;\n            }\n        };*/\n  /*Subset.prototype.encodeText = function (text) {\n            var char, i, string, _i, _ref;\n            string = '';\n            for (i = _i = 0, _ref = text.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n                char = this.unicodes[text.charCodeAt(i)];\n                string += String.fromCharCode(char);\n            }\n            return string;\n        };*/\n  /***************************************************************/\n  /* function : generateCmap                                     */\n  /* comment : Returns the unicode cmap for this font.         */\n  /***************************************************************/\n  Subset.prototype.generateCmap = function() {\n    var mapping, roman, unicode, unicodeCmap, _ref;\n    unicodeCmap = this.font.cmap.tables[0].codeMap;\n    mapping = {};\n    _ref = this.subset;\n    for (roman in _ref) {\n      unicode = _ref[roman];\n      mapping[roman] = unicodeCmap[unicode];\n    }\n    return mapping;\n  };\n  /*Subset.prototype.glyphIDs = function () {\n            var ret, roman, unicode, unicodeCmap, val, _ref;\n            unicodeCmap = this.font.cmap.tables[0].codeMap;\n            ret = [0];\n            _ref = this.subset;\n            for (roman in _ref) {\n                unicode = _ref[roman];\n                val = unicodeCmap[unicode];\n                if ((val != null) && __indexOf.call(ret, val) < 0) {\n                    ret.push(val);\n                }\n            }\n            return ret.sort();\n        };*/\n  /******************************************************************/\n  /* function : glyphsFor                                           */\n  /* comment : Returns simple glyph objects for the input character.*/\n  /******************************************************************/\n  Subset.prototype.glyphsFor = function(glyphIDs) {\n    var additionalIDs, glyph, glyphs, id, _i, _len, _ref;\n    glyphs = {};\n    for (_i = 0, _len = glyphIDs.length; _i < _len; _i++) {\n      id = glyphIDs[_i];\n      glyphs[id] = this.font.glyf.glyphFor(id);\n    }\n    additionalIDs = [];\n    for (id in glyphs) {\n      glyph = glyphs[id];\n      if (glyph != null ? glyph.compound : void 0) {\n        additionalIDs.push.apply(additionalIDs, glyph.glyphIDs);\n      }\n    }\n    if (additionalIDs.length > 0) {\n      _ref = this.glyphsFor(additionalIDs);\n      for (id in _ref) {\n        glyph = _ref[id];\n        glyphs[id] = glyph;\n      }\n    }\n    return glyphs;\n  };\n  /***************************************************************/\n  /* function : encode                                           */\n  /* comment : Encode various tables for the characters you use. */\n  /***************************************************************/\n  Subset.prototype.encode = function(glyID, indexToLocFormat) {\n    var cmap,\n      code,\n      glyf,\n      glyphs,\n      id,\n      ids,\n      loca,\n      new2old,\n      newIDs,\n      nextGlyphID,\n      old2new,\n      oldID,\n      oldIDs,\n      tables,\n      _ref;\n    cmap = CmapTable.encode(this.generateCmap(), \"unicode\");\n    glyphs = this.glyphsFor(glyID);\n    old2new = {\n      0: 0\n    };\n    _ref = cmap.charMap;\n    for (code in _ref) {\n      ids = _ref[code];\n      old2new[ids.old] = ids[\"new\"];\n    }\n    nextGlyphID = cmap.maxGlyphID;\n    for (oldID in glyphs) {\n      if (!(oldID in old2new)) {\n        old2new[oldID] = nextGlyphID++;\n      }\n    }\n    new2old = invert(old2new);\n    newIDs = Object.keys(new2old).sort(function(a, b) {\n      return a - b;\n    });\n    oldIDs = (function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = newIDs.length; _i < _len; _i++) {\n        id = newIDs[_i];\n        _results.push(new2old[id]);\n      }\n      return _results;\n    })();\n    glyf = this.font.glyf.encode(glyphs, oldIDs, old2new);\n    loca = this.font.loca.encode(glyf.offsets, oldIDs);\n    tables = {\n      cmap: this.font.cmap.raw(),\n      glyf: glyf.table,\n      loca: loca,\n      hmtx: this.font.hmtx.raw(),\n      hhea: this.font.hhea.raw(),\n      maxp: this.font.maxp.raw(),\n      post: this.font.post.raw(),\n      name: this.font.name.raw(),\n      head: this.font.head.encode(indexToLocFormat)\n    };\n    if (this.font.os2.exists) {\n      tables[\"OS/2\"] = this.font.os2.raw();\n    }\n    return this.font.directory.encode(tables);\n  };\n  return Subset;\n})();\n\njsPDF.API.PDFObject = (function() {\n  var pad;\n\n  function PDFObject() {}\n  pad = function(str, length) {\n    return (Array(length + 1).join(\"0\") + str).slice(-length);\n  };\n  /*****************************************************************************/\n  /* function : convert                                                        */\n  /* comment :Converts pdf tag's / FontBBox and array values in / W to strings */\n  /*****************************************************************************/\n  PDFObject.convert = function(object) {\n    var e, items, key, out, val;\n    if (Array.isArray(object)) {\n      items = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = object.length; _i < _len; _i++) {\n          e = object[_i];\n          _results.push(PDFObject.convert(e));\n        }\n        return _results;\n      })().join(\" \");\n      return \"[\" + items + \"]\";\n    } else if (typeof object === \"string\") {\n      return \"/\" + object;\n    } else if (object != null ? object.isString : void 0) {\n      return \"(\" + object + \")\";\n    } else if (object instanceof Date) {\n      return (\n        \"(D:\" +\n        pad(object.getUTCFullYear(), 4) +\n        pad(object.getUTCMonth(), 2) +\n        pad(object.getUTCDate(), 2) +\n        pad(object.getUTCHours(), 2) +\n        pad(object.getUTCMinutes(), 2) +\n        pad(object.getUTCSeconds(), 2) +\n        \"Z)\"\n      );\n    } else if ({}.toString.call(object) === \"[object Object]\") {\n      out = [\"<<\"];\n      for (key in object) {\n        val = object[key];\n        out.push(\"/\" + key + \" \" + PDFObject.convert(val));\n      }\n      out.push(\">>\");\n      return out.join(\"\\n\");\n    } else {\n      return \"\" + object;\n    }\n  };\n  return PDFObject;\n})();\n","import { jsPDF } from \"jspdf\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    var filetype = \"pdf\";\r\n    var button = document.getElementById(\"export\");\r\n    const doc = new jsPDF();\r\n\r\n    button.addEventListener(\"click\", (event) => main());\r\n\r\n    function main() {\r\n        console.log(\"Exporting as \" + filetype);\r\n        if(filetype === \"pdf\") {\r\n            genPdf();\r\n        }\r\n        else if(filetype === \"txt\") {\r\n            genTxt();\r\n        }\r\n    }\r\n\r\n    function genPdf() {\r\n        var content = document.getElementById(\"input\").value;\r\n        var maxWidth = 180;\r\n        var lineHeight = 10;\r\n        var xPosition = 10;\r\n        var yPosition = 10;\r\n        var pageHeight = 280;\r\n    \r\n        doc.setFont(\"helvetica\");\r\n        doc.setFontSize(12);\r\n    \r\n        var lines = doc.splitTextToSize(content, maxWidth);\r\n    \r\n        lines.forEach(function(line) {\r\n            if (yPosition > pageHeight) {\r\n                doc.addPage();\r\n                yPosition = 10;\r\n            }\r\n            doc.text(line, xPosition, yPosition);\r\n            yPosition += lineHeight;\r\n        });\r\n    \r\n        doc.save(\"download.pdf\");\r\n        console.log(\"PDF generated\");\r\n    }\r\n\r\n    function genTxt() {\r\n        var content = document.getElementById(\"input\").value;\r\n        var txtBlob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\r\n        var url = URL.createObjectURL(txtBlob);\r\n        var link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.download = \"download.txt\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n        console.log(\"TXT generated\");\r\n    }\r\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}